bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	59	None	replace
2	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math   "))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math   "))  {	  if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	40	None	replace
3	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Math   "))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Math   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Math   "))  {	  if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	40	None	replace
4	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	40	None	replace
5	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	40	None	replace
6	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Math "))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Math "))  {	  if(nameNode.getLastChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	14	None	replace
7	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	47	None	replace
8	[BUG]  [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	47	None	replace
9	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	47	None	replace
10	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.EMPTY)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.EMPTY)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.EMPTY)  {	  if(nameNode.getFirstChild().getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  	53	None	replace
11	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  &&  nameNode.getLastChild().getString().equals( "Math   "))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  &&  nameNode.getLastChild().getString().equals( "Math   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  &&  nameNode.getLastChild().getString().equals( "Math   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  	53	None	replace
12	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getLastChild().getString().equals( "Math   "))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getLastChild().getString().equals( "Math   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getLastChild().getString().equals( "Math   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  	53	None	replace
13	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  	53	None	replace
14	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {	  if(callNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))    {    	non-compiled	[CE]  	1	None	replace
15	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {	  if(callNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))    {    	non-compiled	[CE]  	1	None	replace
16	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	30	None	replace
17	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	30	None	replace
18	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	30	None	replace
19	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	30	None	replace
20	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    callNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	30	None	replace
21	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Object   "))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Object   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Object   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Object   "))    {    	non-compiled	[CE]  	16	None	replace
22	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Object "))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Object "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Object "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Object   "))    {    	non-compiled	[CE]  	16	None	replace
23	[BUG]  [BUGGY]  If(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  If(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	If(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if(callNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	34	None	replace
24	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))    {    	non-compiled	[CE]  	2	None	replace
25	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals(JSC_PROPERTY_NAME))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals(JSC_PROPERTY_NAME))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals(JSC_PROPERTY_NAME))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))    {    	non-compiled	[CE]  	2	None	replace
26	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {	  if(nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	41	None	replace
27	[BUG]  [BUGGY]  if(nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	41	None	replace
28	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getLastChild().getType()!=  Token.NAME)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getLastChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.hasChildren()  &&  nameNode.getLastChild().getType()!=  Token.NAME)  {	  if(nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	41	None	replace
29	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	41	None	replace
30	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	65	None	replace
31	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	65	None	replace
32	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	65	None	replace
33	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	65	None	replace
34	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()!=  Token.NAME)  {	  if(callNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	12	None	replace
35	[BUG]  [BUGGY]  String  namespaceName  =  nameNode.getFirstChild().getString();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  String  namespaceName  =  nameNode.getFirstChild().getString();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	String  namespaceName  =  nameNode.getFirstChild().getString();	  String    namespaceName    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  	7	None	replace
36	[BUG]  [BUGGY]  String  namespaceName  =  callNode.getLastChild().getString();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  String  namespaceName  =  callNode.getLastChild().getString();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	String  namespaceName  =  callNode.getLastChild().getString();	  String    namespaceName    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  	7	None	replace
37	[BUG]  [BUGGY]  String  namespaceName  =  callNode.getFirstChild().getString();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  String  namespaceName  =  callNode.getFirstChild().getString();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	String  namespaceName  =  callNode.getFirstChild().getString();	  String    namespaceName    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  	7	None	replace
38	[BUG]  [BUGGY]  String  namespaceName  =  JSC_PROPERTY_NAME_FN.getString();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  String  namespaceName  =  JSC_PROPERTY_NAME_FN.getString();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	String  namespaceName  =  JSC_PROPERTY_NAME_FN.getString();	  String    namespaceName    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  	7	None	replace
39	[BUG]  [BUGGY]  Namespace  namespaceName  =  nameNode.getFirstChild().getString();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Namespace  namespaceName  =  nameNode.getFirstChild().getString();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Namespace  namespaceName  =  nameNode.getFirstChild().getString();	  String    namespaceName    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  	7	None	replace
40	[BUG]  [BUGGY]  Name  nameNode  =  nameNode.getFirstChild();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Name  nameNode  =  nameNode.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  nameNode.getFirstChild();	  Name    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	8	None	replace
41	[BUG]  [BUGGY]  Name  nameNode  =  nameNode.getLastChild();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Name  nameNode  =  nameNode.getLastChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  nameNode.getLastChild();	  Name    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	8	None	replace
42	[BUG]  [BUGGY]  Name  nameNode  =  param.getFirstChild();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Name  nameNode  =  param.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  param.getFirstChild();	  Name    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	8	None	replace
43	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getFirstChild().getString();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Name  nameNode  =  callNode.getFirstChild().getString();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  callNode.getFirstChild().getString();	  Name    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	8	None	replace
44	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getNext();  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Name  nameNode  =  callNode.getNext();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  callNode.getNext();	  Name    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	8	None	replace
45	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object   "))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getLastChild().getString().equals(   "Object   "))    {    	non-compiled	[CE]  	23	None	replace
46	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	13	None	replace
47	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	13	None	replace
48	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	13	None	replace
49	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	13	None	replace
50	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	13	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME,  callNode.getFirstChild().getString());  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME,  callNode.getFirstChild().getString());  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.NAME,  callNode.getFirstChild().getString());	  Preconditions.checkState(nameNode.getType()    ==    Token.NAME);    	non-compiled	[CE]  	45	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.NAME);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.NAME);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(callNode.getType()  ==  Token.NAME);	  Preconditions.checkState(nameNode.getType()    ==    Token.NAME);    	non-compiled	[CE]  	45	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME,  callNode.getFirstChild());  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME,  callNode.getFirstChild());  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.NAME,  callNode.getFirstChild());	  Preconditions.checkState(nameNode.getType()    ==    Token.NAME);    	non-compiled	[CE]  	45	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION);	  Preconditions.checkState(nameNode.getType()    ==    Token.NAME);    	non-compiled	[CE]  	45	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "));  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "));  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "));	  Preconditions.checkState(nameNode.getType()    ==    Token.NAME);    	non-compiled	[CE]  	45	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION);  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION);	  Preconditions.checkState(nameNode.getType()    ==    Token.NAME);    	non-compiled	[CE]  	45	None	replace
57	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  namespaceName.equals( "Math "))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  namespaceName.equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  namespaceName.equals( "Math "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	15	None	replace
58	[BUG]  [BUGGY]  if  (callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall())  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    callNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	25	None	replace
59	[BUG]  [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall())  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    callNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	25	None	replace
60	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.isOnlyModifiesThisCall())  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    callNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	25	None	replace
61	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {	  if    (nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild().getString()))    {    	non-compiled	[CE]  	50	None	replace
62	[BUG]  [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {	  if    (nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild().getString()))    {    	non-compiled	[CE]  	50	None	replace
63	[BUG]  [BUGGY]  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild().getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild().getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild().getString()))  {	  if    (nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild().getString()))    {    	non-compiled	[CE]  	50	None	replace
64	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if(nameNode.getLastChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	11	None	replace
65	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.REGEXP)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.REGEXP)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.REGEXP)  {	  if(nameNode.getLastChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	11	None	replace
66	[BUG]  [BUGGY]  Node  rootNode  =  callNode.getLastChild();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  rootNode  =  callNode.getLastChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  rootNode  =  callNode.getLastChild();	  Node    rootNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	61	None	replace
67	[BUG]  [BUGGY]  Node  rootNode  =  nameNode.getLastChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  rootNode  =  nameNode.getLastChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  rootNode  =  nameNode.getLastChild();	  Node    rootNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	61	None	replace
68	[BUG]  [BUGGY]  Node  rootNode  =  nameNode.getFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  rootNode  =  nameNode.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  rootNode  =  nameNode.getFirstChild();	  Node    rootNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	61	None	replace
69	[BUG]  [BUGGY]  Node  rootNode  =  param.getFirstChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  rootNode  =  param.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  rootNode  =  param.getFirstChild();	  Node    rootNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	61	None	replace
70	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if    (nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	66	None	replace
71	[BUG]  [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if    (nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	66	None	replace
72	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object "))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object "))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Object   "))    {    	non-compiled	[CE]  	29	None	replace
73	[BUG]  [BUGGY]  NameNode  nameNode  =  param.getFirstChild();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  NameNode  nameNode  =  param.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	NameNode  nameNode  =  param.getFirstChild();	  NameNode    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	42	None	replace
74	[BUG]  [BUGGY]  NameNode  nameNode  =  this.callNode.getFirstChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  NameNode  nameNode  =  this.callNode.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	NameNode  nameNode  =  this.callNode.getFirstChild();	  NameNode    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	42	None	replace
75	[BUG]  [BUGGY]  NameNode  nameNode  =  callNode.getNext();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  NameNode  nameNode  =  callNode.getNext();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	NameNode  nameNode  =  callNode.getNext();	  NameNode    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	42	None	replace
76	[BUG]  [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.MAME)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.MAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getLastChild().getType()  ==  Token.MAME)  {	  if    (nameNode.getFirstChild().getType()    ==    Token.MAME)    {    	non-compiled	[CE]  	52	None	replace
77	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.getLastChild().getString().equals( "Math   "))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.getLastChild().getString().equals( "Math   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.getLastChild().getString().equals( "Math   "))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.MAME)    {    	non-compiled	[CE]  	52	None	replace
78	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.getLastChild().getString().equals( "Object "))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.getLastChild().getString().equals( "Object "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.getLastChild().getString().equals( "Object "))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.MAME)    {    	non-compiled	[CE]  	52	None	replace
79	[BUG]  [BUGGY]  if  (callNode.getFirstChild().getType()  ==  Token.MAME)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (callNode.getFirstChild().getType()  ==  Token.MAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (callNode.getFirstChild().getType()  ==  Token.MAME)  {	  if    (nameNode.getFirstChild().getType()    ==    Token.MAME)    {    	non-compiled	[CE]  	52	None	replace
80	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Object "))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Object "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Object "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getString().equals(   "Object   "))    {    	non-compiled	[CE]  	55	None	replace
81	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object   "))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getString().equals(   "Object   "))    {    	non-compiled	[CE]  	55	None	replace
82	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {	  if(callNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	60	None	replace
83	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  callNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.hasChildren()  &&  callNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.hasChildren()  &&  callNode.getFirstChild().getType()!=  Token.NAME)  {	  if(callNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	60	None	replace
84	[BUG]  [BUGGY]  if(!callNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(!callNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(!callNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(callNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	60	None	replace
85	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  callNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.hasChildren()  &&  callNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.hasChildren()  &&  callNode.getFirstChild().getType()  ==  Token.NAME)  {	  if(callNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	60	None	replace
86	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&  nameNode.getLastChild().getType()!=  Token.NAME)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.hasChildren()  &&  nameNode.getLastChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.hasChildren()  &&  nameNode.getLastChild().getType()!=  Token.NAME)  {	  if(callNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	60	None	replace
87	[BUG]  [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getLastChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    ||    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	33	None	replace
88	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals(JSC_PROPERTY_NAME_FLOAT))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals(JSC_PROPERTY_NAME_FLOAT))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals(JSC_PROPERTY_NAME_FLOAT))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    ||    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	33	None	replace
89	[BUG]  [BUGGY]  Node  nameNode  =  param.getLastChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  nameNode  =  param.getLastChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  nameNode  =  param.getLastChild();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	5	None	replace
90	[BUG]  [BUGGY]  Node  nameNode  =  param.getFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  nameNode  =  param.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  nameNode  =  param.getFirstChild();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	5	None	replace
91	[BUG]  [BUGGY]  Node  nameNode  =  node.getFirstChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  nameNode  =  node.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  nameNode  =  node.getFirstChild();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	5	None	replace
92	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getNext();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  nameNode  =  callNode.getNext();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  nameNode  =  callNode.getNext();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	5	None	replace
93	[BUG]  [BUGGY]  Node  nameNode  =  this.callNode.getFirstChild();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  nameNode  =  this.callNode.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  nameNode  =  this.callNode.getFirstChild();	  Node    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	4	None	replace
94	[BUG]  [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.FUNCTION);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.FUNCTION);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(callNode.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(nameNode.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	44	None	replace
95	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()!=  Token.FUNCTION);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()!=  Token.FUNCTION);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()!=  Token.FUNCTION);	  Preconditions.checkState(nameNode.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	44	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.NAME);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.NAME);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.NAME);	  Preconditions.checkState(nameNode.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	44	None	replace
97	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION);	  Preconditions.checkState(nameNode.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	44	None	replace
98	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.CALL);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.CALL);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.CALL);	  Preconditions.checkState(nameNode.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	44	None	replace
99	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.GETPROP);  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.GETPROP);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.GETPROP);	  Preconditions.checkState(nameNode.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	44	None	replace
100	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Name "))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Name "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Name "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Name   "))    {    	non-compiled	[CE]  	49	None	replace
101	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Name "))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Name "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Name "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Name   "))    {    	non-compiled	[CE]  	49	None	replace
102	[BUG]  [BUGGY]  Node  param  =  nameNode.getLastChild();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  param  =  nameNode.getLastChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  nameNode.getLastChild();	  Node    param    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
103	[BUG]  [BUGGY]  Node  param  =  callNode.getLastChild().getString();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  param  =  callNode.getLastChild().getString();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  callNode.getLastChild().getString();	  Node    param    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
104	[BUG]  [BUGGY]  Node  param  =  nameNode.getNext();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  param  =  nameNode.getNext();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  nameNode.getNext();	  Node    param    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
105	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String "))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "String   "))    {    	non-compiled	[CE]  	17	None	replace
106	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "String "))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "String "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "String "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "String   "))    {    	non-compiled	[CE]  	17	None	replace
107	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String ")||  nameNode.getLastChild().getString().equals( "Object "))  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String ")||  nameNode.getLastChild().getString().equals( "Object "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String ")||  nameNode.getLastChild().getString().equals( "Object "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "String   "))    {    	non-compiled	[CE]  	17	None	replace
108	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String ")||  nameNode.getLastChild().getString().equals( "Math "))  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String ")||  nameNode.getLastChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String ")||  nameNode.getLastChild().getString().equals( "Math "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "String   "))    {    	non-compiled	[CE]  	17	None	replace
109	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals( "Property "))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals( "Property "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals( "Property "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Property   "))    {    	non-compiled	[CE]  	54	None	replace
110	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Property "))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Property "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Property "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Property   "))    {    	non-compiled	[CE]  	54	None	replace
111	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property "))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Property   "))    {    	non-compiled	[CE]  	54	None	replace
112	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property "))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Property   "))    {    	non-compiled	[CE]  	54	None	replace
113	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property ")||  nameNode.getLastChild().getString().equals( "  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property ")||  nameNode.getLastChild().getString().equals( "  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property ")||  nameNode.getLastChild().getString().equals( "	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Property   "))    {    	non-compiled	[CE]  	54	None	replace
114	[BUG]  [BUGGY]  Name  nameNode  =  param.getLastChild();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Name  nameNode  =  param.getLastChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  param.getLastChild();	  Name    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	10	None	replace
115	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getLastChild().getString();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Name  nameNode  =  callNode.getLastChild().getString();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  callNode.getLastChild().getString();	  Name    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	10	None	replace
116	[BUG]  [BUGGY]  Name  nameNode  =  this.callNode.getLastChild();  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Name  nameNode  =  this.callNode.getLastChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  this.callNode.getLastChild();	  Name    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	10	None	replace
117	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))    {    	non-compiled	[CE]  	19	None	replace
118	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))    {    	non-compiled	[CE]  	19	None	replace
119	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))    {    	non-compiled	[CE]  	19	None	replace
120	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property "))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Property   "))    {    	non-compiled	[CE]  	18	None	replace
121	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Property "))  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Property "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Property "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Property   "))    {    	non-compiled	[CE]  	18	None	replace
122	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property ")||  nameNode.getLastChild().getString().equals( "  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property ")||  nameNode.getLastChild().getString().equals( "  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property ")||  nameNode.getLastChild().getString().equals( "	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Property   "))    {    	non-compiled	[CE]  	18	None	replace
123	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property "))  {  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Property   "))    {    	non-compiled	[CE]  	18	None	replace
124	[BUG]  [BUGGY]  NameNode  nameNode  =  param.getLastChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  NameNode  nameNode  =  param.getLastChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	NameNode  nameNode  =  param.getLastChild();	  NameNode    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	43	None	replace
125	[BUG]  [BUGGY]  NameNode  nameNode  =  node.getFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  NameNode  nameNode  =  node.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	NameNode  nameNode  =  node.getFirstChild();	  NameNode    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	43	None	replace
126	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	37	None	replace
127	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	37	None	replace
128	[BUG]  [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	37	None	replace
129	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Property   "))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Property   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Property   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getString().equals(   "Property   "))    {    	non-compiled	[CE]  	56	None	replace
130	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Property "))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Property "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Property "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getString().equals(   "Property   "))    {    	non-compiled	[CE]  	56	None	replace
131	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	38	None	replace
132	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	57	None	replace
133	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	57	None	replace
134	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	35	None	replace
135	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  &&  nameNode.getLastChild().getString().equals( "Math   "))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  &&  nameNode.getLastChild().getString().equals( "Math   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  &&  nameNode.getLastChild().getString().equals( "Math   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	35	None	replace
136	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getLastChild().getString().equals( "Math   "))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getLastChild().getString().equals( "Math   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getLastChild().getString().equals( "Math   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	35	None	replace
137	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  &&  nameNode.getFirstChild().getString().equals( "Math   "))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  &&  nameNode.getFirstChild().getString().equals( "Math   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  &&  nameNode.getFirstChild().getString().equals( "Math   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	35	None	replace
138	[BUG]  [BUGGY]  if  (callNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (callNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (callNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getLastChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	26	None	replace
139	[BUG]  [BUGGY]  Node  parent  =  nameNode.getParent();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  parent  =  nameNode.getParent();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  parent  =  nameNode.getParent();	  Node    parent    =    callNode.getParent();    	non-compiled	[CE]  	62	None	replace
140	[BUG]  [BUGGY]  Node  parent  =  callNode.getLastChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  parent  =  callNode.getLastChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  parent  =  callNode.getLastChild();	  Node    parent    =    callNode.getParent();    	non-compiled	[CE]  	62	None	replace
141	[BUG]  [BUGGY]  Node  parent  =  callNode.getFirstChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  parent  =  callNode.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  parent  =  callNode.getFirstChild();	  Node    parent    =    callNode.getParent();    	non-compiled	[CE]  	62	None	replace
142	[BUG]  [BUGGY]  Node  parent  =  callNode.getNext();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  parent  =  callNode.getNext();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  parent  =  callNode.getNext();	  Node    parent    =    callNode.getParent();    	non-compiled	[CE]  	62	None	replace
143	[BUG]  [BUGGY]  Node  parent  =  callNode.getAncestor(1);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  parent  =  callNode.getAncestor(1);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  parent  =  callNode.getAncestor(1);	  Node    parent    =    callNode.getParent();    	non-compiled	[CE]  	62	None	replace
144	[BUG]  [BUGGY]  if(callNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {	  if(nameNode.getLastChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))    {    	non-compiled	[CE]  	3	None	replace
145	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	64	None	replace
146	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	67	None	replace
147	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	67	None	replace
148	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	67	None	replace
149	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	67	None	replace
150	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	67	None	replace
151	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	67	None	replace
152	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	46	None	replace
153	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	46	None	replace
154	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	46	None	replace
155	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.FUNCTION  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	46	None	replace
156	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString())||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString())||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString())||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	46	None	replace
157	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Object "))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Object "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Object "))  {	  if(callNode.getFirstChild().getType()    ==    Token.NAME    &&    callNode.getLastChild().getString().equals(   "Object       "))    {    	non-compiled	[CE]  	48	None	replace
158	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object "))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object "))  {	  if(callNode.getFirstChild().getType()    ==    Token.NAME    &&    callNode.getLastChild().getString().equals(   "Object       "))    {    	non-compiled	[CE]  	48	None	replace
159	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getLastChild().getString().equals( "Object   "))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getLastChild().getString().equals( "Object   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getLastChild().getString().equals( "Object   "))  {	  if(callNode.getFirstChild().getType()    ==    Token.NAME    &&    callNode.getLastChild().getString().equals(   "Object       "))    {    	non-compiled	[CE]  	48	None	replace
160	[BUG]  [BUGGY]  if  (callNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (callNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.isOnlyModifiesThisCall())  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (callNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	27	None	replace
161	[BUG]  [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.isOnlyModifiesThisCall())  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	27	None	replace
162	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild().getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild().getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild().getString()))  {	  if    (nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild().getString()))    {    	non-compiled	[CE]  	51	None	replace
163	[BUG]  [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild().getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild().getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild().getString()))  {	  if    (nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild().getString()))    {    	non-compiled	[CE]  	51	None	replace
164	[BUG]  [BUGGY]  Node  param  =  callNode.getNext();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  param  =  callNode.getNext();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  callNode.getNext();	  Node    param    =    nameNode.getFirstChild();    	non-compiled	[CE]  	63	None	replace
165	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Math "))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Math "))  {	  if(callNode.getFirstChild().getType()    ==    Token.NAME    &&    callNode.getLastChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	39	None	replace
166	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  callNode.getFirstChild().getString().equals( "Math "))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  callNode.getFirstChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  callNode.getFirstChild().getString().equals( "Math "))  {	  if(callNode.getFirstChild().getType()    ==    Token.NAME    &&    callNode.getLastChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	39	None	replace
167	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {	  if(callNode.isOnlyModifiesThisCall()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	58	None	replace
168	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getLastChild().getType()!=  Token.NAME)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getLastChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getLastChild().getType()!=  Token.NAME)  {	  if(callNode.isOnlyModifiesThisCall()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	58	None	replace
169	[BUG]  [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(callNode.isOnlyModifiesThisCall()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	58	None	replace
170	[BUG]  [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  callNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  callNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.isOnlyModifiesThisCall()  &&  callNode.getFirstChild().getType()!=  Token.NAME)  {	  if(callNode.isOnlyModifiesThisCall()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	58	None	replace
171	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(!callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(callNode.isOnlyModifiesThisCall()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	58	None	replace
172	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.isOnlyModifiesThisCall()  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(callNode.isOnlyModifiesThisCall()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	58	None	replace
173	[BUG]  [BUGGY]  Node  param  =  callNode.getParent();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  param  =  callNode.getParent();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  callNode.getParent();	  Node    param    =    callNode.getFirstChild();    	non-compiled	[CE]  	6	None	replace
174	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild().getString()))    {    	non-compiled	[CE]  	36	None	replace
175	[BUG]  [BUGGY]  if(callNode.getLastChild().getType()!=  Token.NAME)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getLastChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getLastChild().getType()!=  Token.NAME)  {	  if(nameNode.getLastChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	11	None	replace
176	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {	  if(nameNode.getLastChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	14	None	replace
177	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Property "))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Property "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Property "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Property   "))    {    	non-compiled	[CE]  	54	None	replace
178	[BUG]  [BUGGY]  Node  parent  =  param.getParent();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  parent  =  param.getParent();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  parent  =  param.getParent();	  Node    parent    =    callNode.getParent();    	non-compiled	[CE]  	62	None	replace
179	[BUG]  [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {	  if(callNode.isOnlyModifiesThisCall()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	58	None	replace
180	[BUG]  [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  nameNode.getLastChild().getType()!=  Token.NAME)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  nameNode.getLastChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.isOnlyModifiesThisCall()  &&  nameNode.getLastChild().getType()!=  Token.NAME)  {	  if(callNode.isOnlyModifiesThisCall()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	58	None	replace
181	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property "))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Property   "))    {    	non-compiled	[CE]  	18	None	replace
182	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property ")||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property ")||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property ")||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Property   "))    {    	non-compiled	[CE]  	18	None	replace
183	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	67	None	replace
184	[BUG]  [BUGGY]  String  namespaceName  =  nameNode.getLastChild().getString()  +  1;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  String  namespaceName  =  nameNode.getLastChild().getString()  +  1;  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	String  namespaceName  =  nameNode.getLastChild().getString()  +  1;	  String    namespaceName    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  	7	None	replace
185	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild().getString()))    {    	non-compiled	[CE]  	36	None	replace
186	[BUG]  [BUGGY]  If(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  If(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	If(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))    {    	non-compiled	[CE]  	2	None	replace
187	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getFirstChild().getString().equals( "Math "))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getFirstChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getFirstChild().getString().equals( "Math "))  {	  if    (nameNode.getLastChild().getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	20	None	replace
188	[BUG]  [BUGGY]  if  (callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()  ==  Token.MAME)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()  ==  Token.MAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()  ==  Token.MAME)  {	  if    (nameNode.getFirstChild().getType()    ==    Token.MAME)    {    	non-compiled	[CE]  	52	None	replace
189	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.isOnlyModifiesThisCall())  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getFirstChild().getType()    ==    Token.MAME)    {    	non-compiled	[CE]  	52	None	replace
190	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.MAME)    {    	non-compiled	[CE]  	52	None	replace
191	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.MAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.MAME)    {    	non-compiled	[CE]  	52	None	replace
192	[BUG]  [BUGGY]  NameNode  nameNode  =  nameNode.getFirstChild();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  NameNode  nameNode  =  nameNode.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	NameNode  nameNode  =  nameNode.getFirstChild();	  NameNode    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	42	None	replace
193	[BUG]  [BUGGY]  NameNode  nameNode  =  nameNode.getLastChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  NameNode  nameNode  =  nameNode.getLastChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	NameNode  nameNode  =  nameNode.getLastChild();	  NameNode    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	42	None	replace
194	[BUG]  [BUGGY]  NameNode  nameNode  =  vars.getFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  NameNode  nameNode  =  vars.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	NameNode  nameNode  =  vars.getFirstChild();	  NameNode    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	42	None	replace
195	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if(callNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	34	None	replace
196	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	13	None	replace
197	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String "))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "String   "))    {    	non-compiled	[CE]  	17	None	replace
198	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	64	None	replace
199	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	64	None	replace
200	[BUG]  [BUGGY]  if(nameNode.getFirstChild()!=  null  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild()!=  null  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild()!=  null  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	41	None	replace
201	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	37	None	replace
202	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild()!=  null);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild()!=  null);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild()!=  null);	  Preconditions.checkState(nameNode.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	44	None	replace
203	[BUG]  [BUGGY]  Name  nameNode  =  node.getFirstChild();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Name  nameNode  =  node.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  node.getFirstChild();	  Name    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	10	None	replace
204	[BUG]  [BUGGY]  Name  nameNode  =  this.callNode.getFirstChild();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Name  nameNode  =  this.callNode.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  this.callNode.getFirstChild();	  Name    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	10	None	replace
205	[BUG]  [BUGGY]  Node  nameNode  =  callNode.removeFirstChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  nameNode  =  callNode.removeFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  nameNode  =  callNode.removeFirstChild();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	5	None	replace
206	[BUG]  [BUGGY]  Node  param  =  this.callNode.getFirstChild();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  param  =  this.callNode.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  this.callNode.getFirstChild();	  Node    param    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
207	[BUG]  [BUGGY]  Node  param  =  node.getFirstChild();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  param  =  node.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  node.getFirstChild();	  Node    param    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
208	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(callNode.getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(callNode.getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(callNode.getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	46	None	replace
209	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getFirstChild().getString().equals( "Math "))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getFirstChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getFirstChild().getString().equals( "Math "))  {	  if(nameNode.getLastChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	21	None	replace
210	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object   "))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object   "))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Object   "))    {    	non-compiled	[CE]  	29	None	replace
211	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Property   "))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Property   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Property   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getString().equals(   "Property   "))    {    	non-compiled	[CE]  	56	None	replace
212	[BUG]  [BUGGY]  If(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object   "))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  If(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	If(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getLastChild().getString().equals(   "Object   "))    {    	non-compiled	[CE]  	23	None	replace
213	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME,  callNode);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME,  callNode);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.NAME,  callNode);	  Preconditions.checkState(nameNode.getType()    ==    Token.NAME);    	non-compiled	[CE]  	45	None	replace
214	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME,  JSC_PROPERTY_NAME);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME,  JSC_PROPERTY_NAME);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.NAME,  JSC_PROPERTY_NAME);	  Preconditions.checkState(nameNode.getType()    ==    Token.NAME);    	non-compiled	[CE]  	45	None	replace
215	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()));  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()));  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()));	  Preconditions.checkState(nameNode.getType()    ==    Token.NAME);    	non-compiled	[CE]  	45	None	replace
216	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(callNode.getString()));  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(callNode.getString()));  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(callNode.getString()));	  Preconditions.checkState(nameNode.getType()    ==    Token.NAME);    	non-compiled	[CE]  	45	None	replace
217	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {	  if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	40	None	replace
218	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	40	None	replace
219	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getType()  ==  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getType()  ==  Token.NAME)  {	  if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	40	None	replace
220	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	40	None	replace
221	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getFirstChild().getNext();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  nameNode  =  callNode.getFirstChild().getNext();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  nameNode  =  callNode.getFirstChild().getNext();	  Node    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	4	None	replace
222	[BUG]  [BUGGY]  Node  nameNode  =  nameNode.getFirstChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  nameNode  =  nameNode.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  nameNode  =  nameNode.getFirstChild();	  Node    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	4	None	replace
223	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	35	None	replace
224	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	35	None	replace
225	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.EMPTY)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.EMPTY)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.EMPTY)  {	  if(nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	35	None	replace
226	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.NAME)  {	  if(nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	35	None	replace
227	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	35	None	replace
228	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Math "))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Math "))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	59	None	replace
229	[BUG]  [BUGGY]  if  (nameNode.getFirstChild()!=  null  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getFirstChild()!=  null  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild()!=  null  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	38	None	replace
230	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))    {    	non-compiled	[CE]  	19	None	replace
231	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object   "))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getString().equals(   "Object   "))    {    	non-compiled	[CE]  	55	None	replace
232	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.EMPTY)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.EMPTY)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.EMPTY)  {	  if(nameNode.getFirstChild().getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  	53	None	replace
233	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()  ==  Token.EMPTY)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()  ==  Token.EMPTY)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()  ==  Token.EMPTY)  {	  if(nameNode.getFirstChild().getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  	53	None	replace
234	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(nameNode.getFirstChild().getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  	53	None	replace
235	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getFirstChild().getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  	53	None	replace
236	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall())  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall())  {	  if    (callNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	24	None	replace
237	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Object   "))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Object   "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Object   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Object   "))    {    	non-compiled	[CE]  	16	None	replace
238	[BUG]  [BUGGY]  Node  param  =  nameNode.getParent();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  param  =  nameNode.getParent();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  nameNode.getParent();	  Node    param    =    callNode.getFirstChild();    	non-compiled	[CE]  	6	None	replace
239	[BUG]  [BUGGY]  if  (callNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (callNode.isOnlyModifiesThisCall())  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (callNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    callNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	25	None	replace
240	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    callNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	25	None	replace
241	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getString().equals( "Math "))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getString().equals( "Math "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	35	None	replace
242	[BUG]  [BUGGY]  Node  parent  =  callNode.removeFirstChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  parent  =  callNode.removeFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  parent  =  callNode.removeFirstChild();	  Node    parent    =    callNode.getParent();    	non-compiled	[CE]  	62	None	replace
243	[BUG]  [BUGGY]  Node  parent  =  this.callNode.getParent();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  parent  =  this.callNode.getParent();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  parent  =  this.callNode.getParent();	  Node    parent    =    callNode.getParent();    	non-compiled	[CE]  	62	None	replace
244	[BUG]  [BUGGY]  Node  parent  =  callNode.cloneTree();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  parent  =  callNode.cloneTree();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  parent  =  callNode.cloneTree();	  Node    parent    =    callNode.getParent();    	non-compiled	[CE]  	62	None	replace
245	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	22	None	replace
246	[BUG]  [BUGGY]  Node  nameNode  =  callNode.cloneTree();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  nameNode  =  callNode.cloneTree();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  nameNode  =  callNode.cloneTree();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	5	None	replace
247	[BUG]  [BUGGY]  if  (callNode.isOnlyModifiesThisCall()  &&  callNode.getFirstChild().getType()  ==  Token.MAME)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (callNode.isOnlyModifiesThisCall()  &&  callNode.getFirstChild().getType()  ==  Token.MAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (callNode.isOnlyModifiesThisCall()  &&  callNode.getFirstChild().getType()  ==  Token.MAME)  {	  if    (nameNode.getFirstChild().getType()    ==    Token.MAME)    {    	non-compiled	[CE]  	52	None	replace
248	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.MAME)    {    	non-compiled	[CE]  	52	None	replace
249	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.getFirstChild().getString().equals( "Object "))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.getFirstChild().getString().equals( "Object "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.MAME  &&  nameNode.getFirstChild().getString().equals( "Object "))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.MAME)    {    	non-compiled	[CE]  	52	None	replace
250	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.MAME)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.MAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.MAME)  {	  if    (nameNode.getFirstChild().getType()    ==    Token.MAME)    {    	non-compiled	[CE]  	52	None	replace
251	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.THIS);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.THIS);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.THIS);	  Preconditions.checkState(nameNode.getType()    ==    Token.NAME);    	non-compiled	[CE]  	45	None	replace
252	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.CALL);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.CALL);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.CALL);	  Preconditions.checkState(nameNode.getType()    ==    Token.NAME);    	non-compiled	[CE]  	45	None	replace
253	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property ")||  nameNode.getLastChild().getString().equals(  [CE]  [FE]            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property ")||  nameNode.getLastChild().getString().equals(  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property ")||  nameNode.getLastChild().getString().equals(	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Property   "))    {    	non-compiled	[CE]  	54	None	replace
254	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.isOnlyModifiesThisCall())  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.isOnlyModifiesThisCall())  {	  if    (callNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	24	None	replace
255	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.EMPTY)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.EMPTY)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.EMPTY)  {	  if(nameNode.getFirstChild().getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  	53	None	replace
256	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  &&  nameNode.getFirstChild().getString().equals( "Math "))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  &&  nameNode.getFirstChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  &&  nameNode.getFirstChild().getString().equals( "Math "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  	53	None	replace
257	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getFirstChild().getString().equals( "Math "))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getFirstChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.EMPTY  ||  nameNode.getFirstChild().getString().equals( "Math "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.EMPTY)    {    	non-compiled	[CE]  	53	None	replace
258	[BUG]  [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  callNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  callNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.isOnlyModifiesThisCall()  &&  callNode.getFirstChild().getType()  ==  Token.NAME)  {	  if(callNode.isOnlyModifiesThisCall()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	58	None	replace
259	[BUG]  [BUGGY]  Name  nameNode  =  nameNode.getNext();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Name  nameNode  =  nameNode.getNext();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  nameNode.getNext();	  Name    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	8	None	replace
260	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild().getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild().getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild().getString()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	46	None	replace
261	[BUG]  [BUGGY]  Name  nameNode  =  callNode.removeFirstChild();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Name  nameNode  =  callNode.removeFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  callNode.removeFirstChild();	  Name    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	10	None	replace
262	[BUG]  [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  callNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  callNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.isOnlyModifiesThisCall()  &&  callNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(callNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	60	None	replace
263	[BUG]  [BUGGY]  if(callNode.hasChildren()  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.hasChildren()  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.hasChildren()  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(callNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	60	None	replace
264	[BUG]  [BUGGY]  if(nameNode.getFirstChild()!=  null  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild()!=  null  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild()!=  null  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild().getString()))    {    	non-compiled	[CE]  	36	None	replace
265	[BUG]  [BUGGY]  Node  rootNode  =  nameNode.getNext();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  rootNode  =  nameNode.getNext();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  rootNode  =  nameNode.getNext();	  Node    rootNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	61	None	replace
266	[BUG]  [BUGGY]  NameNode  nameNode  =  callNode.removeFirstChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  NameNode  nameNode  =  callNode.removeFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	NameNode  nameNode  =  callNode.removeFirstChild();	  NameNode    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	43	None	replace
267	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Object "))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Object "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Object "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Object   "))    {    	non-compiled	[CE]  	16	None	replace
268	[BUG]  [BUGGY]  if(nameNode.isFirstChild()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.isFirstChild()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.isFirstChild()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	38	None	replace
269	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	38	None	replace
270	[BUG]  [BUGGY]  if  (nameNode.isFirstChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.isFirstChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.isFirstChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	38	None	replace
271	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))    {    	non-compiled	[CE]  	19	None	replace
272	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getLastChild().getString().equals( "Object "))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getLastChild().getString().equals( "Object "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getLastChild().getString().equals( "Object "))  {	  if(callNode.getFirstChild().getType()    ==    Token.NAME    &&    callNode.getLastChild().getString().equals(   "Object       "))    {    	non-compiled	[CE]  	48	None	replace
273	[BUG]  [BUGGY]  String  namespaceName  =  tagNode.getFirstChild().getString();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  String  namespaceName  =  tagNode.getFirstChild().getString();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	String  namespaceName  =  tagNode.getFirstChild().getString();	  String    namespaceName    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  	7	None	replace
274	[BUG]  [BUGGY]  Node  param  =  nameNode.removeFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  param  =  nameNode.removeFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  nameNode.removeFirstChild();	  Node    param    =    callNode.getFirstChild();    	non-compiled	[CE]  	6	None	replace
275	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getLastChild().getString().equals( "Math "))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getLastChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getLastChild().getString().equals( "Math "))  {	  if    (callNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Math       "))    {    	non-compiled	[CE]  	31	None	replace
276	[BUG]  [BUGGY]  if(nameNode.getFirstChild()!=  null  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild()!=  null  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild()!=  null  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	37	None	replace
277	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if    (callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	37	None	replace
278	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	67	None	replace
279	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	67	None	replace
280	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String "))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "String   "))    {    	non-compiled	[CE]  	17	None	replace
281	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	13	None	replace
282	[BUG]  [BUGGY]  if  (nameNode.getFirstChild()!=  null  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getFirstChild()!=  null  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild()!=  null  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if    (nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	66	None	replace
283	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getLastChild().getString().equals( "Math "))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getLastChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getLastChild().getString().equals( "Math "))  {	  if(callNode.getFirstChild().getType()    ==    Token.NAME    &&    callNode.getLastChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	39	None	replace
284	[BUG]  [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  ||  callNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  ||  callNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.isOnlyModifiesThisCall()  ||  callNode.getFirstChild().getType()!=  Token.NAME)  {	  if(callNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	12	None	replace
285	[BUG]  [BUGGY]  if(nameNode.isFirstChild()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.isFirstChild()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.isFirstChild()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {	  if(nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	41	None	replace
286	[BUG]  [BUGGY]  Node  nameNode  =  nameNode.getLastChild();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  nameNode  =  nameNode.getLastChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  nameNode  =  nameNode.getLastChild();	  Node    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	4	None	replace
287	[BUG]  [BUGGY]  Node  param  =  callNode.removeFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  param  =  callNode.removeFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  callNode.removeFirstChild();	  Node    param    =    nameNode.getFirstChild();    	non-compiled	[CE]  	63	None	replace
288	[BUG]  [BUGGY]  Node  param  =  nameNode.getFirstChild().getNext();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  param  =  nameNode.getFirstChild().getNext();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  nameNode.getFirstChild().getNext();	  Node    param    =    nameNode.getFirstChild();    	non-compiled	[CE]  	63	None	replace
289	[BUG]  [BUGGY]  Node  param  =  parent.getFirstChild();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Node  param  =  parent.getFirstChild();  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  parent.getFirstChild();	  Node    param    =    callNode.getLastChild();    	non-compiled	[CE]  	9	None	replace
290	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))    {    	non-compiled	[CE]  	2	None	replace
291	[BUG]  [BUGGY]  Preconditions.checkArgument(nameNode.getType()  ==  Token.FUNCTION);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkArgument(nameNode.getType()  ==  Token.FUNCTION);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkArgument(nameNode.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(nameNode.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	44	None	replace
292	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.SCRIPT);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.SCRIPT);  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.SCRIPT);	  Preconditions.checkState(nameNode.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	44	None	replace
293	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if  (nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	27	None	replace
294	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	64	None	replace
295	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	57	None	replace
296	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	57	None	replace
297	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Math "))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Math "))  {	  if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	40	None	replace
298	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Math "))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }        [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Math "))  {  [BUGGY]      String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Math "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	15	None	replace
