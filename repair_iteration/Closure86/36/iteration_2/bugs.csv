bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))    {    	non-compiled	[CE]  	8	None	replace
2	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))    {    	non-compiled	[CE]  	8	None	replace
3	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))    {    	non-compiled	[CE]  	8	None	replace
4	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getFirstChild();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  callNode.getFirstChild();  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  nameNode  =  callNode.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
5	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getLastChild();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  callNode.getLastChild();  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  nameNode  =  callNode.getLastChild();	      	non-compiled	[CE]  	6	None	replace
6	[BUG]  [BUGGY]  Node  param  =  callNode.getFirstChild();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  Node  param  =  callNode.getFirstChild();  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  callNode.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
7	[BUG]  [BUGGY]  String  namespaceName  =  nameNode.getLastChild().getString();  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  String  namespaceName  =  nameNode.getLastChild().getString();  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	String  namespaceName  =  nameNode.getLastChild().getString();	      	non-compiled	[CE]  	6	None	replace
8	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getFirstChild();  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  Name  nameNode  =  callNode.getFirstChild();  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  callNode.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
9	[BUG]  [BUGGY]  Node  param  =  callNode.getLastChild();  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  Node  param  =  callNode.getLastChild();  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  callNode.getLastChild();	      	non-compiled	[CE]  	6	None	replace
10	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getLastChild();  [CE]  [FE]                              AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  Name  nameNode  =  callNode.getLastChild();  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Name  nameNode  =  callNode.getLastChild();	      	non-compiled	[CE]  	6	None	replace
11	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()!=  Token.NAME)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getLastChild().getType()!=  Token.NAME)  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()!=  Token.NAME)  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	12	None	replace
12	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(callNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()!=  Token.NAME)  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	12	None	replace
13	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	12	None	replace
14	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	13	None	replace
15	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Math "))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Math "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals( "Math "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	13	None	replace
16	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Object "))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Object "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Object "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	13	None	replace
17	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String "))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "String "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	13	None	replace
18	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property "))  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Property "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	13	None	replace
19	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(JSC_PROPERTY_NAME))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	13	None	replace
20	[BUG]  [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	1	None	replace
21	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Math "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Math "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Math "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	11	None	replace
22	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Math "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	11	None	replace
23	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals( "Object "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals( "Object "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals( "Object "))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getLastChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	2	None	replace
24	[BUG]  [BUGGY]  if  (callNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (callNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (callNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	10	None	replace
25	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall())  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	10	None	replace
26	[BUG]  [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	10	None	replace
27	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.isOnlyModifiesThisCall())  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.isOnlyModifiesThisCall())  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	10	None	replace
28	[BUG]  [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object "))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getLastChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Object   "))    {    	non-compiled	[CE]  	5	None	replace
29	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object "))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Object "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Object   "))    {    	non-compiled	[CE]  	5	None	replace
30	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (callNode.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	7	None	replace
31	[BUG]  [BUGGY]  if  (callNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Math   "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (callNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Math   "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (callNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Math   "))  {	  if    (callNode.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	7	None	replace
32	[BUG]  [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getLastChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	9	None	replace
33	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.NAME  ||  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	9	None	replace
34	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	9	None	replace
35	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getLastChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	3	None	replace
36	[BUG]  [BUGGY]  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	10	None	replace
37	[BUG]  [BUGGY]  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	10	None	replace
38	[BUG]  [BUGGY]  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	10	None	replace
39	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Math "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Math "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Math "))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	1	None	replace
40	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.NAME)  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME)  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	12	None	replace
41	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	12	None	replace
42	[BUG]  [BUGGY]  NameNode  nameNode  =  callNode.getFirstChild();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  NameNode  nameNode  =  callNode.getFirstChild();  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	NameNode  nameNode  =  callNode.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
43	[BUG]  [BUGGY]  NameNode  nameNode  =  callNode.getLastChild();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  NameNode  nameNode  =  callNode.getLastChild();  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	NameNode  nameNode  =  callNode.getLastChild();	      	non-compiled	[CE]  	6	None	replace
44	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION);  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION);  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.FUNCTION);	      	non-compiled	[CE]  	6	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME);  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  Preconditions.checkState(nameNode.getType()  ==  Token.NAME);  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Preconditions.checkState(nameNode.getType()  ==  Token.NAME);	      	non-compiled	[CE]  	6	None	replace
46	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	9	None	replace
47	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getFirstChild()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getLastChild()))    {    	non-compiled	[CE]  	8	None	replace
48	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Object   "))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Object   "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.getFirstChild().getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "Object   "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Object   "))    {    	non-compiled	[CE]  	5	None	replace
49	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Name "))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Name "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Name "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	13	None	replace
50	[BUG]  [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild().getString()))  {	  if    (callNode.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	7	None	replace
51	[BUG]  [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild().getString()))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild().getString()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild().getString()))  {	  if    (callNode.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	7	None	replace
52	[BUG]  [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.MAME)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (nameNode.getFirstChild().getType()  ==  Token.MAME)  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.getFirstChild().getType()  ==  Token.MAME)  {	  if    (nameNode.getLastChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	3	None	replace
53	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.EMPTY)  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.EMPTY)  {	  if    (nameNode.getLastChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	3	None	replace
54	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Property "))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	1	None	replace
55	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Object "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Object "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Object "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	11	None	replace
56	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Property "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Property "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "Property "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	11	None	replace
57	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals(nameNode.getString()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(nameNode.getString()))    {    	non-compiled	[CE]  	9	None	replace
58	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.isOnlyModifiesThisCall()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	12	None	replace
59	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Math "))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Math "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getLastChild().getString().equals( "Math "))  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	12	None	replace
60	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(callNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(nameNode.getFirstChild().getType()!=    Token.NAME)    {    	non-compiled	[CE]  	12	None	replace
61	[BUG]  [BUGGY]  Node  rootNode  =  callNode.getFirstChild();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  Node  rootNode  =  callNode.getFirstChild();  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  rootNode  =  callNode.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
62	[BUG]  [BUGGY]  Node  parent  =  callNode.getParent();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  Node  parent  =  callNode.getParent();  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  parent  =  callNode.getParent();	      	non-compiled	[CE]  	6	None	replace
63	[BUG]  [BUGGY]  Node  param  =  nameNode.getFirstChild();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  Node  param  =  nameNode.getFirstChild();  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	Node  param  =  nameNode.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
64	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()!=  Token.NAME  &&  JSC_PROPERTY_NAME.equals( "Math "))  {	  if(nameNode.getFirstChild().getType()    ==    Token.NAME    &&    JSC_PROPERTY_NAME.equals(   "Math   "))    {    	non-compiled	[CE]  	13	None	replace
65	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (callNode.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	7	None	replace
66	[BUG]  [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if  (nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if  (nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if    (callNode.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	7	None	replace
67	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.isOnlyModifiesThisCall())    {    	non-compiled	[CE]  	10	None	replace
68	[BUG]  [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object "))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }      [BUGGY]  if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object "))  {  [BUGGY]    String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  if  (compiler  !=  null  &&  !compiler.hasRegExpGlobalReferences())  {  if  (nameNode.getFirstChild().getType()  ==  Token.REGEXP  &&  REGEXP_METHODS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	if(nameNode.getFirstChild().getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "Object "))  {	  if    (nameNode.getFirstChild().getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "Math   "))    {    	non-compiled	[CE]  	4	None	replace
