bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  true;  [CE]  [FE]    AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  return  true;  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	return  true;	return  false;  	non-compiled	[CE]  	43	None	replace
2	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals(callNode.getString()))  {  return  false;  }  [CE]  [FE]      AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  if(JSC_PROPERTY_NAME.equals(callNode.getString()))  {  return  false;  }  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	if(JSC_PROPERTY_NAME.equals(callNode.getString()))  {  return  false;  }	return  false;  	non-compiled	[CE]  	43	None	replace
3	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals(callNode.getType()))  {  return  false;  }  [CE]  [FE]        AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  if(JSC_PROPERTY_NAME.equals(callNode.getType()))  {  return  false;  }  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	if(JSC_PROPERTY_NAME.equals(callNode.getType()))  {  return  false;  }	return  false;  	non-compiled	[CE]  	43	None	replace
4	[BUG]  [BUGGY]  if(!callNode.isNoSideEffectsCall())  {  return  false;  }  [CE]  [FE]          AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  if(!callNode.isNoSideEffectsCall())  {  return  false;  }  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	if(!callNode.isNoSideEffectsCall())  {  return  false;  }	return  false;  	non-compiled	[CE]  	43	None	replace
5	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals(callNode.getPropertyName()))  {  return  false;  }  [CE]  [FE]            AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  if(JSC_PROPERTY_NAME.equals(callNode.getPropertyName()))  {  return  false;  }  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	if(JSC_PROPERTY_NAME.equals(callNode.getPropertyName()))  {  return  false;  }	return  false;  	non-compiled	[CE]  	43	None	replace
6	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals(callNode.getJSPropertyName()))  {  return  false;  }  [CE]  [FE]              AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  if(JSC_PROPERTY_NAME.equals(callNode.getJSPropertyName()))  {  return  false;  }  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	if(JSC_PROPERTY_NAME.equals(callNode.getJSPropertyName()))  {  return  false;  }	return  false;  	non-compiled	[CE]  	43	None	replace
7	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals(callNode.getString()))  {  return  true;  }  [CE]  [FE]                AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  if(JSC_PROPERTY_NAME.equals(callNode.getString()))  {  return  true;  }  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	if(JSC_PROPERTY_NAME.equals(callNode.getString()))  {  return  true;  }	return  false;  	non-compiled	[CE]  	43	None	replace
8	[BUG]  [BUGGY]    [CE]  [FE]                  AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]    [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	  	return  false;  	non-compiled	[CE]  	43	None	replace
9	[BUG]  [BUGGY]  if(NodeUtil.isNoSideEffectsCall(callNode))  {  return  false;  }  [CE]  [FE]    AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  if(NodeUtil.isNoSideEffectsCall(callNode))  {  return  false;  }  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	if(NodeUtil.isNoSideEffectsCall(callNode))  {  return  false;  }	return  false;  	non-compiled	[CE]  	43	None	replace
10	[BUG]  [BUGGY]  if(NodeUtil.isNoSideEffectsCall(callNode)||  NodeUtil.isFunctionDeclaration(callNode))  {  return  false;  }  [CE]  [FE]      AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  if(NodeUtil.isNoSideEffectsCall(callNode)||  NodeUtil.isFunctionDeclaration(callNode))  {  return  false;  }  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	if(NodeUtil.isNoSideEffectsCall(callNode)||  NodeUtil.isFunctionDeclaration(callNode))  {  return  false;  }	return  false;  	non-compiled	[CE]  	43	None	replace
11	[BUG]  [BUGGY]  if(NodeUtil.isNoSideEffectsCall(callNode)||  NodeUtil.isFunction(callNode))  {  return  false;  }  [CE]  [FE]        AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  if(NodeUtil.isNoSideEffectsCall(callNode)||  NodeUtil.isFunction(callNode))  {  return  false;  }  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	if(NodeUtil.isNoSideEffectsCall(callNode)||  NodeUtil.isFunction(callNode))  {  return  false;  }	return  false;  	non-compiled	[CE]  	43	None	replace
12	[BUG]  [BUGGY]  if(NodeUtil.isNoSideEffectsCall(callNode)||  NodeUtil.isName(callNode.getFirstChild()))  {  return  false;  }  [CE]  [FE]          AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  if(NodeUtil.isNoSideEffectsCall(callNode)||  NodeUtil.isName(callNode.getFirstChild()))  {  return  false;  }  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	if(NodeUtil.isNoSideEffectsCall(callNode)||  NodeUtil.isName(callNode.getFirstChild()))  {  return  false;  }	return  false;  	non-compiled	[CE]  	43	None	replace
13	[BUG]  [BUGGY]  if(NodeUtil.isNoSideEffectsCall(callNode)||  NodeUtil.isExpressionNode(callNode))  {  return  false;  }  [CE]  [FE]            AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  if(NodeUtil.isNoSideEffectsCall(callNode)||  NodeUtil.isExpressionNode(callNode))  {  return  false;  }  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	if(NodeUtil.isNoSideEffectsCall(callNode)||  NodeUtil.isExpressionNode(callNode))  {  return  false;  }	return  false;  	non-compiled	[CE]  	43	None	replace
14	[BUG]  [BUGGY]  if(NodeUtil.isNoSideEffectsCall(callNode)||  callNode.getType()  ==  Token.FUNCTION)  {  return  false;  }  [CE]  [FE]              AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  if(NodeUtil.isNoSideEffectsCall(callNode)||  callNode.getType()  ==  Token.FUNCTION)  {  return  false;  }  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	if(NodeUtil.isNoSideEffectsCall(callNode)||  callNode.getType()  ==  Token.FUNCTION)  {  return  false;  }	return  false;  	non-compiled	[CE]  	43	None	replace
15	[BUG]  [BUGGY]  return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString()  [CE]  [FE]    AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString()  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString()	return  false;  	non-compiled	[CE]  	43	None	replace
16	[BUG]  [BUGGY]  return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  JSC_PROPERTY_NAME_FN.contains(callNode.getString()));  [CE]  [FE]      AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  JSC_PROPERTY_NAME_FN.contains(callNode.getString()));  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  JSC_PROPERTY_NAME_FN.contains(callNode.getString()));	return  false;  	non-compiled	[CE]  	43	None	replace
17	[BUG]  [BUGGY]  return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())  [CE]  [FE]        AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())	return  false;  	non-compiled	[CE]  	43	None	replace
18	[BUG]  [BUGGY]  return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString());  [CE]  [FE]          AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString());  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString());	return  false;  	non-compiled	[CE]  	43	None	replace
19	[BUG]  [BUGGY]  return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString()));  [CE]  [FE]            AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString()));  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString()));	return  false;  	non-compiled	[CE]  	43	None	replace
20	[BUG]  [BUGGY]  return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  callNode.getFirstChild().getType()  ==  Token.FUNCTION;  [CE]  [FE]              AssertionFailedError  [CONTEXT]  static  boolean  constructorCallHasSideEffects(  Node  callNode,  AbstractCompiler  compiler)  {  if  (callNode.getType()  !=  Token.NEW)  {  throw  new  IllegalStateException(   "Expected  NEW  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  [BUGGY]  return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  callNode.getFirstChild().getType()  ==  Token.FUNCTION;  [BUGGY]  }  Node  nameNode  =  callNode.getFirstChild();  if  (nameNode.getType()  ==  Token.NAME  &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString()))  {  return  false;  }  return  true;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  constructorCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	return  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getString())||  callNode.getFirstChild().getType()  ==  Token.FUNCTION;	return  false;  	non-compiled	[CE]  	43	None	replace
