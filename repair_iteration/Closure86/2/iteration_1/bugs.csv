bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	add	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionFailedError  	3	7	replace
2	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionFailedError  	3	7	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	add	if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionFailedError  	3	7	replace
4	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	return  true;  	compilable	  [FE]  AssertionFailedError  	3	7	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	add	if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	return  true;  	compilable	  [FE]  AssertionFailedError  	3	7	replace
6	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	return  true;  	compilable	  [FE]  AssertionFailedError  	3	7	replace
7	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;  [CE]  ')'  expected  [FE]                AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;	return  true;  	non-compiled	[CE]  ')'  expected	3	None	replace
8	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(value))  return  false;  if(!NodeUtil.isName(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(!NodeUtil.isFunctionDeclaration(value))  return  false;  if(!NodeUtil.isName(value))  {  return  false;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(!NodeUtil.isFunctionDeclaration(value))  return  false;  if(!NodeUtil.isName(value))  {  return  false;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]    [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	  	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
14	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError  [CONTEXT]    return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:      [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [BUGGY]  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }	return  true;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
