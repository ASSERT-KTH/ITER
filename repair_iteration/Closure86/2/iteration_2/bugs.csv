bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(value)||!NodeUtil.isName(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(!NodeUtil.isFunctionDeclaration(value)||!NodeUtil.isName(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(!NodeUtil.isFunctionDeclaration(value)||!NodeUtil.isName(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isName(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isName(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isName(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value))return  false;  if(!NodeUtil.isName(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value))return  false;  if(!NodeUtil.isName(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value))return  false;  if(!NodeUtil.isName(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value))return  false;  if(NodeUtil.isName(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value))return  false;  if(NodeUtil.isName(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value))return  false;  if(NodeUtil.isName(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  ||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(value)&&!NodeUtil.isName(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(!NodeUtil.isFunctionDeclaration(value)&&!NodeUtil.isName(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(!NodeUtil.isFunctionDeclaration(value)&&!NodeUtil.isName(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(value))return  false;  if(!NodeUtil.isVar(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(!NodeUtil.isFunctionDeclaration(value))return  false;  if(!NodeUtil.isVar(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(!NodeUtil.isFunctionDeclaration(value))return  false;  if(!NodeUtil.isVar(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  ||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	||  NodeUtil.isFunctionDeclaration(value))  {  return  false;	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
10	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  AssertionFailedError  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  AssertionFailedError  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    AssertionFailedError  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
11	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
12	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  If(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  If(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    If(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
13	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locales.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locales.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locales.apply(value))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
14	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  areToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  areToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    if(NodeUtil.isFunctionDeclaration(value)||  areToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
15	[BUG]  [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
16	[BUG]  [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
17	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
18	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
19	[BUG]  [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
20	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
21	[BUG]  [BUGGY]  if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
22	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
23	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  AssertionFailedError  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  AssertionFailedError  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    AssertionFailedError  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
24	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  If(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  If(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    If(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
25	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  Node  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  Node  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    Node  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
26	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
27	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  if(NodeUtil.isCallDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  if(NodeUtil.isCallDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    if(NodeUtil.isCallDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
28	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  value,  locals);  break;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeTraversal.traverse(compiler,  value,  locals);  break;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeTraversal.traverse(compiler,  value,  locals);  break;	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
31	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  break;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  break;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  break;	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  return  true;  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  return  true;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  return  true;	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  value,  this);  break;  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeTraversal.traverse(compiler,  value,  this);  break;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeTraversal.traverse(compiler,  value,  this);  break;	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringNodeCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringNodeCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringNodeCall(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isExpressionNode(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isExpressionNode(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
40	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  &&  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	&&  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
41	[BUG]  [BUGGY]  Context.checkState(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  Context.checkState(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	Context.checkState(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
42	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isExpressionNode(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isExpressionNode(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isExpressionNode(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
43	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  ||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	||  NodeUtil.isExpressionNode(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
44	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExprNode(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExprNode(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExprNode(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	Node  value  =  NodeUtil.getFunctionDeclaration(value);	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  NodeUtil.isNew(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isNew(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isNew(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
49	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	Node  value  =  NodeUtil.getFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value);	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.mayHaveSideEffects(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  Context.checkState(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  Context.checkState(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	Context.checkState(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
56	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isExpressionNode(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isExpressionNode(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  ||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  ||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  Predicates.checkState(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  Predicates.checkState(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	Predicates.checkState(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
62	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
63	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isExpressionNode(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isExpressionNode(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
64	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodNumber(value)&&  locals.apply(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodNumber(value)&&  locals.apply(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodNumber(value)&&  locals.apply(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
65	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
66	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locales.apply(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locales.apply(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locales.apply(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.peek())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.peek())  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.peek())  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	Node  value  =  NodeUtil.getFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
69	[BUG]  [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
70	[BUG]  [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
71	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
72	[BUG]  [BUGGY]  if(NodeUtil.isFunctionAnonymous(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionAnonymous(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionAnonymous(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
73	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
74	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAnonymous(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAnonymous(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAnonymous(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
75	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  ||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
76	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
77	[BUG]  [BUGGY]  NodeUtil.isNew(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isNew(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isNew(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
78	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isGetProp(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isGetProp(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isGetProp(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
79	[BUG]  [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
80	[BUG]  [BUGGY]  if(NodeUtil.isFunctionAnonymous(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionAnonymous(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionAnonymous(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
81	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
82	[BUG]  [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
83	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
84	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isExpressionNode(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isExpressionNode(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
85	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  true;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  true;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  true;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  else  return  false;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  else  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  else  return  false;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
87	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
88	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
89	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringProp(value)||  locals.apply(value);  else  return  false;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringProp(value)||  locals.apply(value);  else  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringProp(value)||  locals.apply(value);  else  return  false;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
90	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locales.apply(value);  else  return  false;  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locales.apply(value);  else  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locales.apply(value);  else  return  false;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
91	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isExpressionNode(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isExpressionNode(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
92	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
93	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value)&&  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value)&&  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
94	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isVarDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isVarDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
95	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(!NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(!NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
96	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
97	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
98	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isStringMethodCall(value)||  locals.apply(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
99	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
100	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  AssertionFailedError  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  AssertionFailedError  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    AssertionFailedError  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
101	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  If(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  If(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    If(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
102	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  Node  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  Node  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    Node  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
103	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  if(NodeUtil.isConstructorDeclaration(value)||  NodeUtil.isConstructorDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  if(NodeUtil.isConstructorDeclaration(value)||  NodeUtil.isConstructorDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    if(NodeUtil.isConstructorDeclaration(value)||  NodeUtil.isConstructorDeclaration(value))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
104	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  if(NodeUtil.isCallDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  if(NodeUtil.isCallDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    if(NodeUtil.isCallDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
105	[BUG]  [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
106	[BUG]  [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
107	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
108	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
109	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isForIn(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isForIn(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isForIn(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
110	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
111	[BUG]  [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
112	[BUG]  [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
113	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
114	[BUG]  [BUGGY]  if(NodeUtil.isName(locals)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(locals)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(locals)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
115	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
116	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
117	[BUG]  [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
118	[BUG]  [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
119	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
120	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
121	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
122	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isExpressionNode(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isExpressionNode(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
123	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
124	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
125	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringNodeCall(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringNodeCall(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringNodeCall(value)||  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
126	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringNode(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringNode(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringNode(value)||  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
127	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringProp(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringProp(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringProp(value)||  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
128	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
129	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isExpressionNode(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isExpressionNode(value)||  isToStringMethodCall(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
130	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
131	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isVarDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isVarDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
132	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)&&  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)&&  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
133	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.peek().apply(value);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.peek().apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.peek().apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
134	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringProp(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringProp(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringProp(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
135	[BUG]  [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
136	[BUG]  [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
137	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
138	[BUG]  [BUGGY]  if(NodeUtil.isName(locals)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(locals)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(locals)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
139	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
140	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
141	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
142	[BUG]  [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
143	[BUG]  [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)&&  isToStringMethodCall(value)&&  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
144	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
145	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
146	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  locals.apply(value)||  locals.apply(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  locals.apply(value)||  locals.apply(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  locals.apply(value)||  locals.apply(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
147	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.put(value,  locals.apply(value)||  locals.apply(value));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.put(value,  locals.apply(value)||  locals.apply(value));  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.put(value,  locals.apply(value)||  locals.apply(value));	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
148	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.get(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.get(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.get(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
149	[BUG]  [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	Node  value  =  NodeUtil.getFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
150	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isGetProp(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isGetProp(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isGetProp(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
151	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
152	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isStringMethodCall(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
153	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringCall(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
154	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.add(value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.add(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.add(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
155	[BUG]  [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	return  callHasLocalResult(value)||  isToStringMethodCall(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
156	[BUG]  [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodNumber(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodNumber(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	return  callHasLocalResult(value)||  isToStringMethodNumber(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
157	[BUG]  [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodDeclaration(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodDeclaration(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	return  callHasLocalResult(value)||  isToStringMethodDeclaration(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
158	[BUG]  [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodFunction(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodFunction(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	return  callHasLocalResult(value)||  isToStringMethodFunction(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
159	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  value,  locals);  return  false;  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeTraversal.traverse(compiler,  value,  locals);  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeTraversal.traverse(compiler,  value,  locals);  return  false;	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
160	[BUG]  [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodNew(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodNew(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	return  callHasLocalResult(value)||  isToStringMethodNew(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
161	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  value,  locals);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeTraversal.traverse(compiler,  value,  locals);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeTraversal.traverse(compiler,  value,  locals);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
162	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
163	[BUG]  [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
164	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
165	[BUG]  [BUGGY]  Predicates.checkState(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  Predicates.checkState(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	Predicates.checkState(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
166	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.mayHaveSideEffects(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
167	[BUG]  [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	Node  value  =  NodeUtil.getFunctionDeclaration(value)||  NodeUtil.isExpressionNode(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
168	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
169	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
170	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
171	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.get(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.get(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.get(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
172	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.mayHaveSideEffects(value)||  isToStringMethodCall(value)||  locals.apply(value);	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
173	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.mayHaveSideEffects(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
174	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
175	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.isFunctionDeclaration(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.isFunctionDeclaration(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.isFunctionDeclaration(value)||  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
176	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.peek())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.peek())  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.peek())  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
177	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringNumber(value)||  locals.apply(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringNumber(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringNumber(value)||  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
178	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  nodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  nodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    if(NodeUtil.isFunctionDeclaration(value)||  nodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
179	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  while(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  while(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    while(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
180	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  if(NodeUtil.isFunctionDeclaration(value)||  nodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  if(NodeUtil.isFunctionDeclaration(value)||  nodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    if(NodeUtil.isFunctionDeclaration(value)||  nodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
181	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  else  return  false;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
182	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringCall(value)||  locals.apply(value);  else  return  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringCall(value)||  locals.apply(value);  else  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringCall(value)||  locals.apply(value);  else  return  false;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
183	[BUG]  [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	Node  value  =  NodeUtil.getFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
184	[BUG]  [BUGGY]  &&  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  &&  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	&&  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
185	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
186	[BUG]  [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
187	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
188	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.mayHaveSideEffects(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
189	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
190	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.mayHaveSideEffects(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
191	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.mayHaveSideEffects(value)&&  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
192	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.get(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.get(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.get(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
193	[BUG]  [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  Node  value  =  NodeUtil.getFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	Node  value  =  NodeUtil.getFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
194	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.get(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.get(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.get(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
195	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
196	[BUG]  [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
197	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
198	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(value))  {  if(!NodeUtil.isFunctionDeclaration(value))return  false;  if(!NodeUtil.isName(value))  {  return  false;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isGetProp(value))  {  if(!NodeUtil.isFunctionDeclaration(value))return  false;  if(!NodeUtil.isName(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isGetProp(value))  {  if(!NodeUtil.isFunctionDeclaration(value))return  false;  if(!NodeUtil.isName(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
199	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(value))  {  if(!NodeUtil.isFunctionDeclaration(value))return  false;  if(!NodeUtil.isName(value))  {  return  false;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isExpressionNode(value))  {  if(!NodeUtil.isFunctionDeclaration(value))return  false;  if(!NodeUtil.isName(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isExpressionNode(value))  {  if(!NodeUtil.isFunctionDeclaration(value))return  false;  if(!NodeUtil.isName(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
200	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
201	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isGetProp(value))  {  return  false;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isGetProp(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isGetProp(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
202	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(value))  {  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isExpressionNode(value))  {  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isExpressionNode(value))  {  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
203	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  ISToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  if(NodeUtil.isFunctionDeclaration(value)||  ISToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    if(NodeUtil.isFunctionDeclaration(value)||  ISToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }	  	non-compiled	[CE]  ')'  expected	1	None	add
204	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringDeclaration(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
205	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.get(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.get(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.get(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
206	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isGetProp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	16	None	replace
207	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.mayHaveSideEffects(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.mayHaveSideEffects(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	16	None	replace
208	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value))  {  return  false;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodCall(value)&&  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
209	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  &&  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	&&  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
210	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringNumber(value)||  locals.apply(value))  {  return  false;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringNumber(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringNumber(value)||  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
211	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringProp(value)||  locals.apply(value))  {  return  false;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringProp(value)||  locals.apply(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringProp(value)||  locals.apply(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
212	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringNumber(value)||  locals.apply(value);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringNumber(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringNumber(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  ')'  expected	12	None	replace
213	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.remove(value);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.remove(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.remove(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  ')'  expected	12	None	replace
214	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.get(value);  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.get(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.get(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  ')'  expected	12	None	replace
215	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.addChildToBack(value);  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.addChildToBack(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.addChildToBack(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  ')'  expected	12	None	replace
216	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  return  true;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  return  true;  }	  	non-compiled	[CE]  ')'  expected	5	None	add
217	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
218	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.mayHaveSideEffects(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
219	[BUG]  [BUGGY]  if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
220	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
221	[BUG]  [BUGGY]  if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
222	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
223	[BUG]  [BUGGY]  NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
224	[BUG]  [BUGGY]  if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
225	[BUG]  [BUGGY]  NodeUtil.isFunctionAnonymous(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionAnonymous(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionAnonymous(value)||  isToStringMethodCall(value)||  locals.apply(value);	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
226	[BUG]  [BUGGY]  return  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  return  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	return  isToStringMethodCall(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
227	[BUG]  [BUGGY]  return  isToStringNode(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  return  isToStringNode(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	return  isToStringNode(value)||  isToStringMethodCall(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
228	[BUG]  [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodCall(value)||  locals.get(value);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodCall(value)||  locals.get(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	return  callHasLocalResult(value)||  isToStringMethodCall(value)||  locals.get(value);	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
229	[BUG]  [BUGGY]  NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
230	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isAssignmentOp(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isAssignmentOp(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
231	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
232	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isVarDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isVarDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
233	[BUG]  [BUGGY]  NodeUtil.isVarDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isVarDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isVarDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
234	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isVarDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isVarDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
235	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
236	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isExpressionNode(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isExpressionNode(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)&&  NodeUtil.isExpressionNode(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
237	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionNode(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionNode(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isFunctionNode(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isExpressionNode(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
238	[BUG]  [BUGGY]  if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
239	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
240	[BUG]  [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.get(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.get(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isName(value)||  isToStringMethodCall(value)||  locals.get(value);  if(!NodeUtil.isFunctionAnonymous(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionAnonymous(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
241	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.put(value,  locals.apply(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.put(value,  locals.apply(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.put(value,  locals.apply(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
242	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.remove(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.remove(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.remove(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
243	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.add(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.add(value)||  locals.apply(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.add(value)||  locals.apply(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
244	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.get(value)||  locals.get(value);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.get(value)||  locals.get(value);  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.get(value)||  locals.get(value);	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
245	[BUG]  [BUGGY]  if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
246	[BUG]  [BUGGY]  NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	NodeUtil.isFunction(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
247	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.mayHaveSideEffects(value))  {  return  true;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.mayHaveSideEffects(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
248	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isVarDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isVarDeclaration(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
249	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isExpressionNode(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isExpressionNode(value)||  NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(value)||    NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
250	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||!NodeUtil.isName(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||!NodeUtil.isName(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||!NodeUtil.isName(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
251	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&!NodeUtil.isName(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&!NodeUtil.isName(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)&&!NodeUtil.isName(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
252	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isVar(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isVar(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isVar(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
253	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isStatementBlock(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isStatementBlock(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isStatementBlock(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
254	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isCall(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isCall(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  NodeUtil.isCall(value))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(value))    return    false;    if(!NodeUtil.isName(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
255	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  &&  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	&&  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
256	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodNumber(value)&&  locals.apply(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodNumber(value)&&  locals.apply(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)&&  isToStringMethodNumber(value)&&  locals.apply(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
257	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  ||  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	||  NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.apply(value))  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
258	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.peek())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.peek())  {  return  true;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodNumber(value)||  locals.peek())  {  return  true;  }	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodNumber(value)||    locals.apply(value))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
259	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringNumber(value)||  locals.apply(value);  else  return  false;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringNumber(value)||  locals.apply(value);  else  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringNumber(value)||  locals.apply(value);  else  return  false;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
260	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringValue(value)||  locals.apply(value);  else  return  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringValue(value)||  locals.apply(value);  else  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringValue(value)||  locals.apply(value);  else  return  false;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
261	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringConstant(value)||  locals.apply(value);  else  return  false;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringConstant(value)||  locals.apply(value);  else  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringConstant(value)||  locals.apply(value);  else  return  false;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
262	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringReference(value)||  locals.apply(value);  else  return  false;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringReference(value)||  locals.apply(value);  else  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringReference(value)||  locals.apply(value);  else  return  false;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
263	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.add(value);  else  return  false;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.add(value);  else  return  false;  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isFunctionDeclaration(value)||  isToStringMethodCall(value)||  locals.add(value);  else  return  false;	  if(NodeUtil.isFunctionDeclaration(value)||    isToStringMethodCall(value)||    locals.apply(value);    else    return    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
264	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isAssignmentOp(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
265	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      return  locals.apply(value);  case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:        [BUGGY]  if(NodeUtil.isVarDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }  [BUGGY]    case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  case  Token.OBJECTLIT:  return  true;  case  Token.IN:  return  true;  default:  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  value  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	if(NodeUtil.isVarDeclaration(value)||  isToStringMethodCall(value)||  locals.apply(value);  if(!NodeUtil.isFunctionDeclaration(value))  {  return  false;  }	  if(NodeUtil.isName(value)||    isToStringMethodCall(value)||    locals.apply(value);    if(!NodeUtil.isFunctionDeclaration(value))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
