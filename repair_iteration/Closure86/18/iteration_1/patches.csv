bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!traverseChildrenPred.apply(node)&&  pred.apply(node))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!traverseChildrenPred.apply(node)&&  pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!traverseChildrenPred.apply(node)&&  pred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||    pred.apply(node))    {    	non-compiled	[CE]  	15	None	replace
2	[BUG]  [BUGGY]  if(!traverseChildrenPred.apply(pred)||  traverseChildrenPred.apply(node))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!traverseChildrenPred.apply(pred)||  traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!traverseChildrenPred.apply(pred)||  traverseChildrenPred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||    pred.apply(node))    {    	non-compiled	[CE]  	15	None	replace
3	[BUG]  [BUGGY]  if(pred.apply(node)||!traverseChildrenPred.apply(node))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(pred.apply(node)||!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(pred.apply(node)||!traverseChildrenPred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||    pred.apply(node))    {    	non-compiled	[CE]  	15	None	replace
4	[BUG]  [BUGGY]  if(!pred.apply(node)||  traverseChildrenPred.apply(node))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!pred.apply(node)||  traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!pred.apply(node)||  traverseChildrenPred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||    pred.apply(node))    {    	non-compiled	[CE]  	15	None	replace
5	[BUG]  [BUGGY]  if(!traverseChildrenPred.apply(node,  pred)||  traverseChildrenPred.apply(node))  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!traverseChildrenPred.apply(node,  pred)||  traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!traverseChildrenPred.apply(node,  pred)||  traverseChildrenPred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||    pred.apply(node))    {    	non-compiled	[CE]  	15	None	replace
6	[BUG]  [BUGGY]  if(pred.getType()  ==  Token.NAME  &&!traverseChildrenPred.apply(node))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(pred.getType()  ==  Token.NAME  &&!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(pred.getType()  ==  Token.NAME  &&!traverseChildrenPred.apply(node))  {	  if(node.getType()    ==    Token.NAME    &&!traverseChildrenPred.apply(pred))    {    	non-compiled	[CE]  	10	None	replace
7	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  &&!traverseChildrenPred.apply(node))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME  &&!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME  &&!traverseChildrenPred.apply(node))  {	  if(node.getType()    ==    Token.NAME    &&!traverseChildrenPred.apply(pred))    {    	non-compiled	[CE]  	10	None	replace
8	[BUG]  [BUGGY]  if(node.getType()!=  Token.NAME  &&!traverseChildrenPred.apply(pred))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()!=  Token.NAME  &&!traverseChildrenPred.apply(pred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()!=  Token.NAME  &&!traverseChildrenPred.apply(pred))  {	  if(node.getType()    ==    Token.NAME    &&!traverseChildrenPred.apply(pred))    {    	non-compiled	[CE]  	10	None	replace
9	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  &&!traverseChildrenPred.apply(c))  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME  &&!traverseChildrenPred.apply(c))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME  &&!traverseChildrenPred.apply(c))  {	  if(node.getType()    ==    Token.NAME    &&!traverseChildrenPred.apply(pred))    {    	non-compiled	[CE]  	10	None	replace
10	[BUG]  [BUGGY]  Predicate  <  Node>  c  =  node.getFirstChild();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  Predicate  <  Node>  c  =  node.getFirstChild();  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	Predicate  <  Node>  c  =  node.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
11	[BUG]  [BUGGY]  Predicate  <  Node>  c  =  pred.getNext();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  Predicate  <  Node>  c  =  pred.getNext();  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	Predicate  <  Node>  c  =  pred.getNext();	      	non-compiled	[CE]  	6	None	replace
12	[BUG]  [BUGGY]  Predicate  <  Node>  c  =  pred.getFirstChild();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  Predicate  <  Node>  c  =  pred.getFirstChild();  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	Predicate  <  Node>  c  =  pred.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
13	[BUG]  [BUGGY]  Predicate  <  Node>  pred  =  node.getFirstChild();  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  Predicate  <  Node>  pred  =  node.getFirstChild();  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	Predicate  <  Node>  pred  =  node.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
14	[BUG]  [BUGGY]  Predicate  <  Node>  pred  =  pred.getFirstChild();  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  Predicate  <  Node>  pred  =  pred.getFirstChild();  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	Predicate  <  Node>  pred  =  pred.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
15	[BUG]  [BUGGY]  Predicate  <  Node>  pred  =  pred.getNext();  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  Predicate  <  Node>  pred  =  pred.getNext();  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	Predicate  <  Node>  pred  =  pred.getNext();	      	non-compiled	[CE]  	6	None	replace
16	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this);  [CE]  [FE]                              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  NodeTraversal.traverse(compiler,  node,  this);  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	NodeTraversal.traverse(compiler,  node,  this);	      	non-compiled	[CE]  	6	None	replace
17	[BUG]  [BUGGY]  if(pred.getType()  ==  Token.NAME  ||!traverseChildrenPred.apply(node))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(pred.getType()  ==  Token.NAME  ||!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(pred.getType()  ==  Token.NAME  ||!traverseChildrenPred.apply(node))  {	  if(node.getType()    ==    Token.NAME    ||!traverseChildrenPred.apply(pred))    {    	non-compiled	[CE]  	12	None	replace
18	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  ||  traverseChildrenPred.apply(node))  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME  ||  traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME  ||  traverseChildrenPred.apply(node))  {	  if(node.getType()    ==    Token.NAME    ||!traverseChildrenPred.apply(pred))    {    	non-compiled	[CE]  	12	None	replace
19	[BUG]  [BUGGY]  if(has(c,  pred,  traverseChildrenPred))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(c,  pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(c,  pred,  traverseChildrenPred))  {	  if    (has(node,    pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	4	None	replace
20	[BUG]  [BUGGY]  if(!has(node,  pred,  traverseChildrenPred))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!has(node,  pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!has(node,  pred,  traverseChildrenPred))  {	  if    (has(node,    pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	4	None	replace
21	[BUG]  [BUGGY]  if(has(pred,  node,  traverseChildrenPred))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(pred,  node,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(pred,  node,  traverseChildrenPred))  {	  if    (has(node,    pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	4	None	replace
22	[BUG]  [BUGGY]  if(has(node,  pred,  traverseChildrenPred)||  has(c,  pred,  traverseChildrenPred))  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred,  traverseChildrenPred)||  has(c,  pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred,  traverseChildrenPred)||  has(c,  pred,  traverseChildrenPred))  {	  if    (has(node,    pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	4	None	replace
23	[BUG]  [BUGGY]  if(has(node,  pred,  traverseChildrenPred)||  has(pred,  traverseChildrenPred))  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred,  traverseChildrenPred)||  has(pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred,  traverseChildrenPred)||  has(pred,  traverseChildrenPred))  {	  if    (has(node,    pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	4	None	replace
24	[BUG]  [BUGGY]  if(has(node,  pred,  traverseChildrenPred)&&  has(c,  pred,  traverseChildrenPred))  {  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred,  traverseChildrenPred)&&  has(c,  pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred,  traverseChildrenPred)&&  has(c,  pred,  traverseChildrenPred))  {	  if    (has(node,    pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	4	None	replace
25	[BUG]  [BUGGY]  if(!traverseChildrenPred.apply(node)&&!pred.apply(node))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!traverseChildrenPred.apply(node)&&!pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!traverseChildrenPred.apply(node)&&!pred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||!pred.apply(node))    {    	non-compiled	[CE]  	5	None	replace
26	[BUG]  [BUGGY]  if(!pred.apply(node)||!traverseChildrenPred.apply(node))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!pred.apply(node)||!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!pred.apply(node)||!traverseChildrenPred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||!pred.apply(node))    {    	non-compiled	[CE]  	5	None	replace
27	[BUG]  [BUGGY]  if(!traverseChildrenPred.apply(pred)||!pred.apply(node))  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!traverseChildrenPred.apply(pred)||!pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!traverseChildrenPred.apply(pred)||!pred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||!pred.apply(node))    {    	non-compiled	[CE]  	5	None	replace
28	[BUG]  [BUGGY]  if(!traverseChildrenPred.apply(node,  pred)||!pred.apply(node))  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!traverseChildrenPred.apply(node,  pred)||!pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!traverseChildrenPred.apply(node,  pred)||!pred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||!pred.apply(node))    {    	non-compiled	[CE]  	5	None	replace
29	[BUG]  [BUGGY]  if(traverseChildrenPred.apply(node)||!pred.apply(node))  {  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(traverseChildrenPred.apply(node)||!pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(traverseChildrenPred.apply(node)||!pred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||!pred.apply(node))    {    	non-compiled	[CE]  	5	None	replace
30	[BUG]  [BUGGY]  if(pred.getType()  ==  Token.FUNCTION  ||!traverseChildrenPred.apply(node))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(pred.getType()  ==  Token.FUNCTION  ||!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(pred.getType()  ==  Token.FUNCTION  ||!traverseChildrenPred.apply(node))  {	  if(node.getType()    ==    Token.FUNCTION    ||!traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	7	None	replace
31	[BUG]  [BUGGY]  if(node.getType()  ==  Token.FUNCTION  &&!traverseChildrenPred.apply(node))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.FUNCTION  &&!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.FUNCTION  &&!traverseChildrenPred.apply(node))  {	  if(node.getType()    ==    Token.FUNCTION    ||!traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	7	None	replace
32	[BUG]  [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||  traverseChildrenPred.apply(node))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||  traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.FUNCTION  ||  traverseChildrenPred.apply(node))  {	  if(node.getType()    ==    Token.FUNCTION    ||!traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	7	None	replace
33	[BUG]  [BUGGY]  if(node.getType()!=  Token.FUNCTION  &&!traverseChildrenPred.apply(node))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()!=  Token.FUNCTION  &&!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()!=  Token.FUNCTION  &&!traverseChildrenPred.apply(node))  {	  if(node.getType()    ==    Token.FUNCTION    ||!traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	7	None	replace
34	[BUG]  [BUGGY]  if(node.getType()!=  Token.NAME  &&!traverseChildrenPred.apply(node))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()!=  Token.NAME  &&!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()!=  Token.NAME  &&!traverseChildrenPred.apply(node))  {	  if(node.getType()    ==    Token.NAME    ||!traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	11	None	replace
35	[BUG]  [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||!pred.apply(node))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||!pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.FUNCTION  ||!pred.apply(node))  {	  if    (!pred.apply(node))    {    	non-compiled	[CE]  	8	None	replace
36	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  &&!pred.apply(node))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME  &&!pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME  &&!pred.apply(node))  {	  if    (!pred.apply(node))    {    	non-compiled	[CE]  	8	None	replace
37	[BUG]  [BUGGY]  if(!pred.apply(node)||  pred.apply(node))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!pred.apply(node)||  pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!pred.apply(node)||  pred.apply(node))  {	  if    (!pred.apply(node))    {    	non-compiled	[CE]  	8	None	replace
38	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  ||!pred.apply(node))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME  ||!pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME  ||!pred.apply(node))  {	  if    (!pred.apply(node))    {    	non-compiled	[CE]  	8	None	replace
39	[BUG]  [BUGGY]  if(has(node,  pred))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred))  {	  if    (!pred.apply(node))    {    	non-compiled	[CE]  	8	None	replace
40	[BUG]  [BUGGY]  if(has(c,  pred,  traverseChildrenPred)||  has(pred,  traverseChildrenPred))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(c,  pred,  traverseChildrenPred)||  has(pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(c,  pred,  traverseChildrenPred)||  has(pred,  traverseChildrenPred))  {	  if(has(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	14	None	replace
41	[BUG]  [BUGGY]  if(!traverseChildrenPred.apply(node)&&  traverseChildrenPred.apply(node))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!traverseChildrenPred.apply(node)&&  traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!traverseChildrenPred.apply(node)&&  traverseChildrenPred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||    traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	2	None	replace
42	[BUG]  [BUGGY]  if(pred.apply(node)||  traverseChildrenPred.apply(node))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(pred.apply(node)||  traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(pred.apply(node)||  traverseChildrenPred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||    traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	2	None	replace
43	[BUG]  [BUGGY]  if(traverseChildrenPred.apply(node)||  traverseChildrenPred.apply(node))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(traverseChildrenPred.apply(node)||  traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(traverseChildrenPred.apply(node)||  traverseChildrenPred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||    traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	2	None	replace
44	[BUG]  [BUGGY]  if(!traverseChildrenPred.apply(pred)&&  traverseChildrenPred.apply(node))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!traverseChildrenPred.apply(pred)&&  traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!traverseChildrenPred.apply(pred)&&  traverseChildrenPred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||    traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	2	None	replace
45	[BUG]  [BUGGY]  if(traverseChildrenPred.apply(node))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(traverseChildrenPred.apply(node))  {	  if(!traverseChildrenPred.apply(pred))    {    	non-compiled	[CE]  	1	None	replace
46	[BUG]  [BUGGY]  if(!traverseChildrenPred.apply(node,  traverseChildrenPred))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!traverseChildrenPred.apply(node,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!traverseChildrenPred.apply(node,  traverseChildrenPred))  {	  if(!traverseChildrenPred.apply(pred))    {    	non-compiled	[CE]  	1	None	replace
47	[BUG]  [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||  pred.apply(node))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||  pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.FUNCTION  ||  pred.apply(node))  {	  if    (pred.apply(node))    {    	non-compiled	[CE]  	9	None	replace
48	[BUG]  [BUGGY]  if(has(node,  pred)||  pred.apply(node))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred)||  pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred)||  pred.apply(node))  {	  if    (pred.apply(node))    {    	non-compiled	[CE]  	9	None	replace
49	[BUG]  [BUGGY]  if(pred.apply(node)||  pred.apply(node))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(pred.apply(node)||  pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(pred.apply(node)||  pred.apply(node))  {	  if    (pred.apply(node))    {    	non-compiled	[CE]  	9	None	replace
50	[BUG]  [BUGGY]  if(has(node,  pred)&&  pred.apply(node))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred)&&  pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred)&&  pred.apply(node))  {	  if    (pred.apply(node))    {    	non-compiled	[CE]  	9	None	replace
51	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  &&  pred.apply(node))  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME  &&  pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME  &&  pred.apply(node))  {	  if    (pred.apply(node))    {    	non-compiled	[CE]  	9	None	replace
52	[BUG]  [BUGGY]  if(!hasValues(c,  pred,  traverseChildrenPred))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!hasValues(c,  pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!hasValues(c,  pred,  traverseChildrenPred))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
53	[BUG]  [BUGGY]  if(hasValues(c,  pred,  traverseChildrenPred))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(hasValues(c,  pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(hasValues(c,  pred,  traverseChildrenPred))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
54	[BUG]  [BUGGY]  if(!hasValues(node,  pred))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!hasValues(node,  pred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!hasValues(node,  pred))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
55	[BUG]  [BUGGY]  if(!hasValues(node,  traverseChildrenPred))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!hasValues(node,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!hasValues(node,  traverseChildrenPred))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
56	[BUG]  [BUGGY]  if(hasValues(node,  pred))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(hasValues(node,  pred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(hasValues(node,  pred))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
57	[BUG]  [BUGGY]  if(hasValues(node,  pred,  traverseChildrenPred))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(hasValues(node,  pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(hasValues(node,  pred,  traverseChildrenPred))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
58	[BUG]  [BUGGY]  if(hasValues(pred,  traverseChildrenPred)||  hasValues(c,  pred,  traverseChildrenPred))  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(hasValues(pred,  traverseChildrenPred)||  hasValues(c,  pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(hasValues(pred,  traverseChildrenPred)||  hasValues(c,  pred,  traverseChildrenPred))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
59	[BUG]  [BUGGY]  if(!has(c,  pred,  traverseChildrenPred))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!has(c,  pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!has(c,  pred,  traverseChildrenPred))  {	  if    (!has(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	3	None	replace
60	[BUG]  [BUGGY]  if(!has(node,  pred))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!has(node,  pred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!has(node,  pred))  {	  if    (!has(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	3	None	replace
61	[BUG]  [BUGGY]  if(has(node,  pred)||  has(node.getFirstChild(),  traverseChildrenPred))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred)||  has(node.getFirstChild(),  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred)||  has(node.getFirstChild(),  traverseChildrenPred))  {	  if(has(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	14	None	replace
62	[BUG]  [BUGGY]  if(has(node,  pred)||  has(node,  traverseChildrenPred))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred)||  has(node,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred)||  has(node,  traverseChildrenPred))  {	  if(has(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	14	None	replace
63	[BUG]  [BUGGY]  if(has(pred,  node))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(pred,  node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(pred,  node))  {	  if(has(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	14	None	replace
64	[BUG]  [BUGGY]  if(has(node,  pred)||  has(pred,  traverseChildrenPred))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred)||  has(pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred)||  has(pred,  traverseChildrenPred))  {	  if(has(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	14	None	replace
65	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  ||  pred.apply(node.getType()))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME  ||  pred.apply(node.getType()))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME  ||  pred.apply(node.getType()))  {	  if    (pred.apply(node))    {    	non-compiled	[CE]  	9	None	replace
66	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  ||  pred.apply(node))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME  ||  pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME  ||  pred.apply(node))  {	  if    (pred.apply(node))    {    	non-compiled	[CE]  	9	None	replace
67	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME)  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME)  {	  if    (pred.apply(node))    {    	non-compiled	[CE]  	9	None	replace
68	[BUG]  [BUGGY]  if(hasValues(node,  pred)||!hasValues(node,  traverseChildrenPred))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(hasValues(node,  pred)||!hasValues(node,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(hasValues(node,  pred)||!hasValues(node,  traverseChildrenPred))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
69	[BUG]  [BUGGY]  if(hasValues(node,  pred)||!hasValues(traverseChildrenPred))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(hasValues(node,  pred)||!hasValues(traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(hasValues(node,  pred)||!hasValues(traverseChildrenPred))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
70	[BUG]  [BUGGY]  if(!hasValues(pred,  null))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!hasValues(pred,  null))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!hasValues(pred,  null))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
71	[BUG]  [BUGGY]  if(!hasValues(node,  pred)||!hasValues(node,  traverseChildrenPred))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!hasValues(node,  pred)||!hasValues(node,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!hasValues(node,  pred)||!hasValues(node,  traverseChildrenPred))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
72	[BUG]  [BUGGY]  if(has(node,  pred,  traverseChildrenPred)&&  has(pred,  traverseChildrenPred))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred,  traverseChildrenPred)&&  has(pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred,  traverseChildrenPred)&&  has(pred,  traverseChildrenPred))  {	  if    (has(node,    pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	4	None	replace
73	[BUG]  [BUGGY]  if(has(node,  pred,  traverseChildrenPred)&&  node.getType()!=  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred,  traverseChildrenPred)&&  node.getType()!=  Token.FUNCTION)  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred,  traverseChildrenPred)&&  node.getType()!=  Token.FUNCTION)  {	  if    (has(node,    pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	4	None	replace
74	[BUG]  [BUGGY]  if(has(node,  pred,  traverseChildrenPred)&&  node.getType()!=  Token.NAME)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred,  traverseChildrenPred)&&  node.getType()!=  Token.NAME)  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred,  traverseChildrenPred)&&  node.getType()!=  Token.NAME)  {	  if    (has(node,    pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	4	None	replace
75	[BUG]  [BUGGY]  if(has(node,  pred,  traverseChildrenPred)&&  node.getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred,  traverseChildrenPred)&&  node.getType()  ==  Token.FUNCTION)  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred,  traverseChildrenPred)&&  node.getType()  ==  Token.FUNCTION)  {	  if    (has(node,    pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	4	None	replace
76	[BUG]  [BUGGY]  if(has(node,  pred,  traverseChildrenPred)||  has(pred,  node))  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred,  traverseChildrenPred)||  has(pred,  node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred,  traverseChildrenPred)||  has(pred,  node))  {	  if    (has(node,    pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	4	None	replace
77	[BUG]  [BUGGY]  if(has(node,  pred,  traverseChildrenPred)&&  node.getFirstChild()!=  null)  {  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred,  traverseChildrenPred)&&  node.getFirstChild()!=  null)  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred,  traverseChildrenPred)&&  node.getFirstChild()!=  null)  {	  if    (has(node,    pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	4	None	replace
78	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  ||!pred.apply(node.getType()))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME  ||!pred.apply(node.getType()))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME  ||!pred.apply(node.getType()))  {	  if    (!pred.apply(node))    {    	non-compiled	[CE]  	8	None	replace
79	[BUG]  [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||!pred.apply(node.getType()))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||!pred.apply(node.getType()))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.FUNCTION  ||!pred.apply(node.getType()))  {	  if    (!pred.apply(node))    {    	non-compiled	[CE]  	8	None	replace
80	[BUG]  [BUGGY]  if(pred.getType()!=  Token.NAME  ||!traverseChildrenPred.apply(node))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(pred.getType()!=  Token.NAME  ||!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(pred.getType()!=  Token.NAME  ||!traverseChildrenPred.apply(node))  {	  if(node.getType()    ==    Token.NAME    ||!traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	11	None	replace
81	[BUG]  [BUGGY]  if(pred.getType()!=  Token.FUNCTION  ||!traverseChildrenPred.apply(node))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(pred.getType()!=  Token.FUNCTION  ||!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(pred.getType()!=  Token.FUNCTION  ||!traverseChildrenPred.apply(node))  {	  if(node.getType()    ==    Token.FUNCTION    ||!traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	7	None	replace
82	[BUG]  [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||!traverseChildrenPred.apply(pred))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||!traverseChildrenPred.apply(pred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.FUNCTION  ||!traverseChildrenPred.apply(pred))  {	  if(node.getType()    ==    Token.FUNCTION    ||!traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	7	None	replace
83	[BUG]  [BUGGY]  if(has(node,  pred,  traverseChildrenPred)||!traverseChildrenPred.apply(node))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred,  traverseChildrenPred)||!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred,  traverseChildrenPred)||!traverseChildrenPred.apply(node))  {	  if(!traverseChildrenPred.apply(pred))    {    	non-compiled	[CE]  	1	None	replace
84	[BUG]  [BUGGY]  if(has(pred,  pred)||!traverseChildrenPred.apply(node)||  traverseChildrenPred.apply(node))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(pred,  pred)||!traverseChildrenPred.apply(node)||  traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(pred,  pred)||!traverseChildrenPred.apply(node)||  traverseChildrenPred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||    traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	2	None	replace
85	[BUG]  [BUGGY]  if(has(node,  pred)||!traverseChildrenPred.apply(node))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred)||!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred)||!traverseChildrenPred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||!pred.apply(node))    {    	non-compiled	[CE]  	5	None	replace
86	[BUG]  [BUGGY]  if(has(node,  pred)||!pred.apply(node))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred)||!pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred)||!pred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||!pred.apply(node))    {    	non-compiled	[CE]  	5	None	replace
87	[BUG]  [BUGGY]  if(node.getType()!=  Token.NAME  ||!traverseChildrenPred.apply(node))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()!=  Token.NAME  ||!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()!=  Token.NAME  ||!traverseChildrenPred.apply(node))  {	  if(node.getType()    ==    Token.NAME    ||!traverseChildrenPred.apply(pred))    {    	non-compiled	[CE]  	12	None	replace
88	[BUG]  [BUGGY]  if(!traverseChildrenPred.apply(pred)||  pred.apply(node))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!traverseChildrenPred.apply(pred)||  pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!traverseChildrenPred.apply(pred)||  pred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||    pred.apply(node))    {    	non-compiled	[CE]  	15	None	replace
89	[BUG]  [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||!has(pred,  traverseChildrenPred))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||!has(pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.FUNCTION  ||!has(pred,  traverseChildrenPred))  {	  if    (!has(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	3	None	replace
90	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  ||!has(pred,  traverseChildrenPred))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME  ||!has(pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME  ||!has(pred,  traverseChildrenPred))  {	  if    (!has(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	3	None	replace
91	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  pred,  traverseChildrenPred);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  NodeTraversal.traverse(compiler,  node,  pred,  traverseChildrenPred);  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	NodeTraversal.traverse(compiler,  node,  pred,  traverseChildrenPred);	      	non-compiled	[CE]  	6	None	replace
92	[BUG]  [BUGGY]  Predicate  <  Node>  node  =  pred.getNext();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  Predicate  <  Node>  node  =  pred.getNext();  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	Predicate  <  Node>  node  =  pred.getNext();	      	non-compiled	[CE]  	6	None	replace
93	[BUG]  [BUGGY]  Predicate  <  Node>  node  =  pred.getFirstChild();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  Predicate  <  Node>  node  =  pred.getFirstChild();  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	Predicate  <  Node>  node  =  pred.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
94	[BUG]  [BUGGY]  if(!hasValues(node,  pred,  traverseChildrenPred))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!hasValues(node,  pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!hasValues(node,  pred,  traverseChildrenPred))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
95	[BUG]  [BUGGY]  if(hasValues(pred,  traverseChildrenPred)||  hasValues(node,  pred))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(hasValues(pred,  traverseChildrenPred)||  hasValues(node,  pred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(hasValues(pred,  traverseChildrenPred)||  hasValues(node,  pred))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
96	[BUG]  [BUGGY]  if(!hasValues(pred,  traverseChildrenPred)||  pred.apply(node))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!hasValues(pred,  traverseChildrenPred)||  pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!hasValues(pred,  traverseChildrenPred)||  pred.apply(node))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
97	[BUG]  [BUGGY]  if(!hasValues(pred,  traverseChildrenPred)||!hasValues(node,  pred))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!hasValues(pred,  traverseChildrenPred)||!hasValues(node,  pred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!hasValues(pred,  traverseChildrenPred)||!hasValues(node,  pred))  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
98	[BUG]  [BUGGY]  if(!hasValues(pred,  traverseChildrenPred)&&  node.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!hasValues(pred,  traverseChildrenPred)&&  node.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!hasValues(pred,  traverseChildrenPred)&&  node.getFirstChild().getType()!=  Token.FUNCTION)  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
99	[BUG]  [BUGGY]  if(!hasValues(pred,  traverseChildrenPred)&&  node.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!hasValues(pred,  traverseChildrenPred)&&  node.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!hasValues(pred,  traverseChildrenPred)&&  node.getFirstChild().getType()!=  Token.NAME)  {	  if(!hasValues(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	13	None	replace
100	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  traverseChildrenPred);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  NodeTraversal.traverse(compiler,  node,  traverseChildrenPred);  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	NodeTraversal.traverse(compiler,  node,  traverseChildrenPred);	      	non-compiled	[CE]  	6	None	replace
101	[BUG]  [BUGGY]  Predicate  <  Node>  vars  =  pred.getFirstChild();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  Predicate  <  Node>  vars  =  pred.getFirstChild();  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	Predicate  <  Node>  vars  =  pred.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
102	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  ||!pred.apply(node.getFirstChild()))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME  ||!pred.apply(node.getFirstChild()))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME  ||!pred.apply(node.getFirstChild()))  {	  if    (!pred.apply(node))    {    	non-compiled	[CE]  	8	None	replace
103	[BUG]  [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||!pred.apply(node.getFirstChild()))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||!pred.apply(node.getFirstChild()))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.FUNCTION  ||!pred.apply(node.getFirstChild()))  {	  if    (!pred.apply(node))    {    	non-compiled	[CE]  	8	None	replace
104	[BUG]  [BUGGY]  if(node.getType()  ==  Token.VAR  ||!pred.apply(node.getFirstChild()))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.VAR  ||!pred.apply(node.getFirstChild()))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.VAR  ||!pred.apply(node.getFirstChild()))  {	  if    (!pred.apply(node))    {    	non-compiled	[CE]  	8	None	replace
105	[BUG]  [BUGGY]  if(has(pred,  traverseChildrenPred)||  has(pred,  traverseChildrenPred))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(pred,  traverseChildrenPred)||  has(pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(pred,  traverseChildrenPred)||  has(pred,  traverseChildrenPred))  {	  if(has(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	14	None	replace
106	[BUG]  [BUGGY]  if(has(pred,  traverseChildrenPred)&&  has(node,  pred,  traverseChildrenPred))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(pred,  traverseChildrenPred)&&  has(node,  pred,  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(pred,  traverseChildrenPred)&&  has(node,  pred,  traverseChildrenPred))  {	  if(has(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	14	None	replace
107	[BUG]  [BUGGY]  if(has(pred,  traverseChildrenPred)||  has(node,  pred))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(pred,  traverseChildrenPred)||  has(node,  pred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(pred,  traverseChildrenPred)||  has(node,  pred))  {	  if(has(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	14	None	replace
108	[BUG]  [BUGGY]  if(!has(pred,  traverseChildrenPred)||  pred.apply(node))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!has(pred,  traverseChildrenPred)||  pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!has(pred,  traverseChildrenPred)||  pred.apply(node))  {	  if    (!has(pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	3	None	replace
109	[BUG]  [BUGGY]  if(node.getType()!=  Token.NAME  ||!traverseChildrenPred.apply(pred))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()!=  Token.NAME  ||!traverseChildrenPred.apply(pred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()!=  Token.NAME  ||!traverseChildrenPred.apply(pred))  {	  if(node.getType()    ==    Token.NAME    ||!traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	11	None	replace
110	[BUG]  [BUGGY]  if(node.getType()!=  Token.FUNCTION  ||!traverseChildrenPred.apply(pred))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()!=  Token.FUNCTION  ||!traverseChildrenPred.apply(pred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()!=  Token.FUNCTION  ||!traverseChildrenPred.apply(pred))  {	  if(node.getType()    ==    Token.FUNCTION    ||!traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	7	None	replace
111	[BUG]  [BUGGY]  if(node.getType()!=  Token.FUNCTION  ||!traverseChildrenPred.apply(node))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()!=  Token.FUNCTION  ||!traverseChildrenPred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()!=  Token.FUNCTION  ||!traverseChildrenPred.apply(node))  {	  if(node.getType()    ==    Token.FUNCTION    ||!traverseChildrenPred.apply(node))    {    	non-compiled	[CE]  	7	None	replace
112	[BUG]  [BUGGY]  if(has(node,  pred,  traverseChildrenPred)||  has(pred.getFirstChild(),  traverseChildrenPred))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(has(node,  pred,  traverseChildrenPred)||  has(pred.getFirstChild(),  traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(has(node,  pred,  traverseChildrenPred)||  has(pred.getFirstChild(),  traverseChildrenPred))  {	  if    (has(node,    pred,    traverseChildrenPred))    {    	non-compiled	[CE]  	4	None	replace
113	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  ||  pred.apply(traverseChildrenPred))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME  ||  pred.apply(traverseChildrenPred))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME  ||  pred.apply(traverseChildrenPred))  {	  if(node.getType()    ==    Token.NAME    ||!traverseChildrenPred.apply(pred))    {    	non-compiled	[CE]  	12	None	replace
114	[BUG]  [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||  pred.apply(node.getFirstChild()))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.FUNCTION  ||  pred.apply(node.getFirstChild()))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.FUNCTION  ||  pred.apply(node.getFirstChild()))  {	  if    (pred.apply(node))    {    	non-compiled	[CE]  	9	None	replace
115	[BUG]  [BUGGY]  if(node.getType()  ==  Token.NAME  ||  pred.apply(node.getFirstChild()))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.NAME  ||  pred.apply(node.getFirstChild()))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.NAME  ||  pred.apply(node.getFirstChild()))  {	  if    (pred.apply(node))    {    	non-compiled	[CE]  	9	None	replace
116	[BUG]  [BUGGY]  if(node.getType()  ==  Token.VAR  ||  pred.apply(node.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.VAR  ||  pred.apply(node.getFirstChild()))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.VAR  ||  pred.apply(node.getFirstChild()))  {	  if    (pred.apply(node))    {    	non-compiled	[CE]  	9	None	replace
117	[BUG]  [BUGGY]  if(node.getType()  ==  Token.VAR  &&  pred.apply(node.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(node.getType()  ==  Token.VAR  &&  pred.apply(node.getFirstChild()))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(node.getType()  ==  Token.VAR  &&  pred.apply(node.getFirstChild()))  {	  if    (pred.apply(node))    {    	non-compiled	[CE]  	9	None	replace
118	[BUG]  [BUGGY]  if(!traverseChildrenPred.apply(pred)&&  pred.apply(node))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    static  boolean  has(Node  node,  Predicate<Node>  pred,  Predicate<Node>  traverseChildrenPred)  {  if  (pred.apply(node))  {  return  true;  }    [BUGGY]  if(!traverseChildrenPred.apply(pred)&&  pred.apply(node))  {  [BUGGY]    return  false;  }  for  (Node  c  =  node.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  if  (has(c,  pred,  traverseChildrenPred))  {  return  true;  }  }  return  false;  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  has  [RETURN_TYPE]  boolean  Node  node  Node>  pred  Node>  traverseChildrenPred  [VARIABLES]  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  boolean  Node  c  node  String  JSC_PROPERTY_NAME_FN  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	if(!traverseChildrenPred.apply(pred)&&  pred.apply(node))  {	  if(!traverseChildrenPred.apply(node)||    pred.apply(node))    {    	non-compiled	[CE]  	15	None	replace
