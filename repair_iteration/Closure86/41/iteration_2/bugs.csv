bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()  ==  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	10	None	replace
2	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	10	None	replace
3	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  	11	None	replace
4	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.GETPROP)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.GETPROP)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.GETPROP)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  	11	None	replace
5	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.FUNCTION)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  	11	None	replace
6	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.EXPR_RESULT)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.EXPR_RESULT)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.EXPR_RESULT)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  	11	None	replace
7	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	1	None	replace
8	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	1	None	replace
9	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	1	None	replace
10	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
11	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
12	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
13	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()!=  Token.STRING)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()!=  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
14	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	3	None	replace
15	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	3	None	replace
16	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()!=  null)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	7	None	replace
17	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	7	None	replace
18	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild()!=  null)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	7	None	replace
19	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild()!=  null)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	7	None	replace
20	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getString()!=  null)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getString()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getString()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	7	None	replace
21	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  JSC_PROPERTY_NAME)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  JSC_PROPERTY_NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  JSC_PROPERTY_NAME)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	7	None	replace
22	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	5	None	replace
23	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	5	None	replace
24	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	5	None	replace
25	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasOneChild())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasOneChild())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasOneChild())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasOneChild())    {    	non-compiled	[CE]  	8	None	replace
26	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasOneChild())    {    	non-compiled	[CE]  	8	None	replace
27	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
28	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
29	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getLastChild();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  callNode.getLastChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	Node  nameNode  =  callNode.getLastChild();	      	non-compiled	[CE]  	6	None	replace
30	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getFirstChild();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  callNode.getFirstChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	Node  nameNode  =  callNode.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
31	[BUG]  [BUGGY]  Node  param  =  callNode.getFirstChild();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  param  =  callNode.getFirstChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	Node  param  =  callNode.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
32	[BUG]  [BUGGY]  Node  name  =  callNode.getLastChild();  [CE]  [FE]                        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  name  =  callNode.getLastChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	Node  name  =  callNode.getLastChild();	      	non-compiled	[CE]  	6	None	replace
33	[BUG]  [BUGGY]  Node  name  =  callNode.getFirstChild();  [CE]  [FE]                          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  name  =  callNode.getFirstChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	Node  name  =  callNode.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
34	[BUG]  [BUGGY]  Node  param  =  callNode.getLastChild();  [CE]  [FE]                            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  param  =  callNode.getLastChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	Node  param  =  callNode.getLastChild();	      	non-compiled	[CE]  	6	None	replace
35	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getFirstChild();  [CE]  [FE]                              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Name  nameNode  =  callNode.getFirstChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	Name  nameNode  =  callNode.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
36	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  	2	None	replace
37	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.hasChildren())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  	2	None	replace
38	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  	2	None	replace
39	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString());  [CE]  [FE]                  AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString());  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString());	      	non-compiled	[CE]  	6	None	replace
40	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild().getString());  [CE]  [FE]                    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild().getString());  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild().getString());	      	non-compiled	[CE]  	6	None	replace
41	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CE]  [FE]                      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()))  {  return  false;  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()))  {  return  false;	      	non-compiled	[CE]  	6	None	replace
42	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());  [CE]  [FE]                        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getString());	      	non-compiled	[CE]  	6	None	replace
43	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild());  [CE]  [FE]                          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild());  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild());	      	non-compiled	[CE]  	6	None	replace
44	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  	2	None	replace
45	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  ||  nameNode.hasChildren())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()!=  Token.NAME  ||  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()!=  Token.NAME  ||  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  	2	None	replace
46	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.hasChildren())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  	2	None	replace
47	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	3	None	replace
48	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype ")||  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype ")||  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype ")||  nameNode.getLastChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	5	None	replace
49	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  	11	None	replace
50	[BUG]  [BUGGY]  if(nameNode!=  null  &&  nameNode.getType()  ==  Token.NAME)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode!=  null  &&  nameNode.getType()  ==  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode!=  null  &&  nameNode.getType()  ==  Token.NAME)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  	11	None	replace
51	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getType()!=  Token.NAME)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getType()!=  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.hasChildren()  &&  nameNode.getType()!=  Token.NAME)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  	11	None	replace
52	[BUG]  [BUGGY]  if(nameNode!=  null  &&  nameNode.getType()!=  Token.NAME)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode!=  null  &&  nameNode.getType()!=  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode!=  null  &&  nameNode.getType()!=  Token.NAME)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  	11	None	replace
53	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	7	None	replace
54	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	3	None	replace
55	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
56	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.hasOneChild())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.hasOneChild())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()!=  Token.NAME  &&  nameNode.hasOneChild())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasOneChild())    {    	non-compiled	[CE]  	8	None	replace
57	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	1	None	replace
58	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	1	None	replace
59	[BUG]  [BUGGY]  Node  param  =  nameNode.getFirstChild();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  param  =  nameNode.getFirstChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	Node  param  =  nameNode.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
60	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  	11	None	replace
61	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  	11	None	replace
62	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( " "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( " "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( " "))  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	7	None	replace
63	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( "prototype "))  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  	7	None	replace
64	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  	5	None	replace
