bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.CALL)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (nameNode.getType()  ==  Token.CALL)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (nameNode.getType()  ==  Token.CALL)  {	  if    (nameNode.getType()!=    Token.CALL)    {    	non-compiled	[CE]  	4	None	replace
2	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.isNoSideEffectsCall())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.isNoSideEffectsCall())  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.isNoSideEffectsCall())  {	  if    (callNode.getType()!=    Token.CALL    &&    callNode.isNoSideEffectsCall())    {    	non-compiled	[CE]  	10	None	replace
3	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.CALL  ||  callNode.isNoSideEffectsCall())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.CALL  ||  callNode.isNoSideEffectsCall())  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.CALL  ||  callNode.isNoSideEffectsCall())  {	  if    (callNode.getType()!=    Token.CALL    &&    callNode.isNoSideEffectsCall())    {    	non-compiled	[CE]  	10	None	replace
4	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.CALL  &&  callNode.isNoSideEffectsCall())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(nameNode.getType()!=  Token.CALL  &&  callNode.isNoSideEffectsCall())  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(nameNode.getType()!=  Token.CALL  &&  callNode.isNoSideEffectsCall())  {	  if    (callNode.getType()!=    Token.CALL    &&    callNode.isNoSideEffectsCall())    {    	non-compiled	[CE]  	10	None	replace
5	[BUG]  [BUGGY]  if(callNode.getType()!=  Token.CALL  ||  callNode.isNoSideEffectsCall())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()!=  Token.CALL  ||  callNode.isNoSideEffectsCall())  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()!=  Token.CALL  ||  callNode.isNoSideEffectsCall())  {	  if    (callNode.getType()!=    Token.CALL    &&    callNode.isNoSideEffectsCall())    {    	non-compiled	[CE]  	10	None	replace
6	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (callNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	3	None	replace
7	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.FUNCTION  ||  callNode.getType()  ==  Token.NAME)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()  ==  Token.FUNCTION  ||  callNode.getType()  ==  Token.NAME)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()  ==  Token.FUNCTION  ||  callNode.getType()  ==  Token.NAME)  {	  if    (callNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	3	None	replace
8	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.CALL)  {	  if    (callNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	3	None	replace
9	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (callNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	3	None	replace
10	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild()  ==  null)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild()  ==  null)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild()  ==  null)  {	  if    (callNode.getType()!=    Token.CALL    ||    callNode.getFirstChild()    ==    null)    {    	non-compiled	[CE]  	11	None	replace
11	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.CALL  ||  callNode.getFirstChild()  ==  null)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.CALL  ||  callNode.getFirstChild()  ==  null)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.CALL  ||  callNode.getFirstChild()  ==  null)  {	  if    (callNode.getType()!=    Token.CALL    ||    callNode.getFirstChild()    ==    null)    {    	non-compiled	[CE]  	11	None	replace
12	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild()!=  null)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild()!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild()!=  null)  {	  if    (callNode.getType()!=    Token.CALL    ||    callNode.getFirstChild()    ==    null)    {    	non-compiled	[CE]  	11	None	replace
13	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.CALL  ||  callNode.getType()  ==  Token.GETPROP)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.CALL  ||  callNode.getType()  ==  Token.GETPROP)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.CALL  ||  callNode.getType()  ==  Token.GETPROP)  {	  if    (callNode.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  	2	None	replace
14	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.CALL)  {	  if    (callNode.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  	2	None	replace
15	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.GETPROP  ||  callNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.GETPROP  ||  callNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.GETPROP  ||  callNode.getFirstChild().getType()  ==  Token.CALL)  {	  if    (callNode.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  	2	None	replace
16	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (callNode.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  	2	None	replace
17	[BUG]  [BUGGY]  if((  callNode.getType()  ==  Token.CALL)&&(callNode.getType()!=  Token.GETPROP))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if((  callNode.getType()  ==  Token.CALL)&&(callNode.getType()!=  Token.GETPROP))  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if((  callNode.getType()  ==  Token.CALL)&&(callNode.getType()!=  Token.GETPROP))  {	  if    ((    callNode.getType()    ==    Token.CALL)||(callNode.getType()!=    Token.GETPROP))    {    	non-compiled	[CE]  	7	None	replace
18	[BUG]  [BUGGY]  if((  callNode.getType()  ==  Token.CALL)||(callNode.getType()  ==  Token.GETPROP))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if((  callNode.getType()  ==  Token.CALL)||(callNode.getType()  ==  Token.GETPROP))  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if((  callNode.getType()  ==  Token.CALL)||(callNode.getType()  ==  Token.GETPROP))  {	  if    ((    callNode.getType()    ==    Token.CALL)||(callNode.getType()!=    Token.GETPROP))    {    	non-compiled	[CE]  	7	None	replace
19	[BUG]  [BUGGY]  if((  callNode.getType()  ==  Token.GETPROP)||(callNode.getType()!=  Token.CALL))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if((  callNode.getType()  ==  Token.GETPROP)||(callNode.getType()!=  Token.CALL))  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if((  callNode.getType()  ==  Token.GETPROP)||(callNode.getType()!=  Token.CALL))  {	  if    ((    callNode.getType()    ==    Token.CALL)||(callNode.getType()!=    Token.GETPROP))    {    	non-compiled	[CE]  	7	None	replace
20	[BUG]  [BUGGY]  if((  callNode.getType()  ==  Token.CALL)&&(callNode.getType()!=  Token.CALL))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if((  callNode.getType()  ==  Token.CALL)&&(callNode.getType()!=  Token.CALL))  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if((  callNode.getType()  ==  Token.CALL)&&(callNode.getType()!=  Token.CALL))  {	  if    ((    callNode.getType()    ==    Token.CALL)||(callNode.getType()!=    Token.CALL))    {    	non-compiled	[CE]  	8	None	replace
21	[BUG]  [BUGGY]  if((  callNode.getType()  ==  Token.CALL)||(callNode.getType()!=  Token.FUNCTION))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if((  callNode.getType()  ==  Token.CALL)||(callNode.getType()!=  Token.FUNCTION))  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if((  callNode.getType()  ==  Token.CALL)||(callNode.getType()!=  Token.FUNCTION))  {	  if    ((    callNode.getType()    ==    Token.CALL)||(callNode.getType()!=    Token.CALL))    {    	non-compiled	[CE]  	8	None	replace
22	[BUG]  [BUGGY]  if((  callNode.getType()  ==  Token.GETPROP)||(callNode.getType()!=  Token.GETPROP))  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if((  callNode.getType()  ==  Token.GETPROP)||(callNode.getType()!=  Token.GETPROP))  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if((  callNode.getType()  ==  Token.GETPROP)||(callNode.getType()!=  Token.GETPROP))  {	  if    ((    callNode.getType()    ==    Token.CALL)||(callNode.getType()!=    Token.CALL))    {    	non-compiled	[CE]  	8	None	replace
23	[BUG]  [BUGGY]  if((  callNode.getType()  ==  Token.CALL)||(callNode.getType()  ==  Token.CALL))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if((  callNode.getType()  ==  Token.CALL)||(callNode.getType()  ==  Token.CALL))  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if((  callNode.getType()  ==  Token.CALL)||(callNode.getType()  ==  Token.CALL))  {	  if    ((    callNode.getType()    ==    Token.CALL)||(callNode.getType()!=    Token.CALL))    {    	non-compiled	[CE]  	8	None	replace
24	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.CALL  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.CALL  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.CALL  ||  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (callNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	1	None	replace
25	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (callNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	1	None	replace
26	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.FUNCTION  &&  callNode.getType()!=  Token.CALL)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()  ==  Token.FUNCTION  &&  callNode.getType()!=  Token.CALL)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()  ==  Token.FUNCTION  &&  callNode.getType()!=  Token.CALL)  {	  if    (callNode.getType()    ==    Token.FUNCTION    ||    callNode.getType()!=    Token.CALL)    {    	non-compiled	[CE]  	6	None	replace
27	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.FUNCTION  ||  callNode.getType()  ==  Token.CALL)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.FUNCTION  ||  callNode.getType()  ==  Token.CALL)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.FUNCTION  ||  callNode.getType()  ==  Token.CALL)  {	  if    (callNode.getType()    ==    Token.FUNCTION    ||    callNode.getType()!=    Token.CALL)    {    	non-compiled	[CE]  	6	None	replace
28	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.CALL  ||  callNode.getType()!=  Token.FUNCTION)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.CALL  ||  callNode.getType()!=  Token.FUNCTION)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.CALL  ||  callNode.getType()!=  Token.FUNCTION)  {	  if    (callNode.getType()    ==    Token.FUNCTION    ||    callNode.getType()!=    Token.CALL)    {    	non-compiled	[CE]  	6	None	replace
29	[BUG]  [BUGGY]  Node  param  =  callNode.getParent();  [CE]  [FE]                AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  Node  param  =  callNode.getParent();  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	Node  param  =  callNode.getParent();	      	non-compiled	[CE]  	5	None	replace
30	[BUG]  [BUGGY]  Node  param  =  callNode.getFirstChild();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  Node  param  =  callNode.getFirstChild();  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	Node  param  =  callNode.getFirstChild();	      	non-compiled	[CE]  	5	None	replace
31	[BUG]  [BUGGY]  Node  param  =  callNode.getLastChild();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  Node  param  =  callNode.getLastChild();  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	Node  param  =  callNode.getLastChild();	      	non-compiled	[CE]  	5	None	replace
32	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getFirstChild();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  Node  nameNode  =  callNode.getFirstChild();  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	Node  nameNode  =  callNode.getFirstChild();	      	non-compiled	[CE]  	5	None	replace
33	[BUG]  [BUGGY]  Node  param  =  callNode.getNext();  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  Node  param  =  callNode.getNext();  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	Node  param  =  callNode.getNext();	      	non-compiled	[CE]  	5	None	replace
34	[BUG]  [BUGGY]  Node  callNode  =  compiler.getParent();  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  Node  callNode  =  compiler.getParent();  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	Node  callNode  =  compiler.getParent();	      	non-compiled	[CE]  	5	None	replace
35	[BUG]  [BUGGY]  Node  param  =  compiler.getParameterType(JSC_PROPERTY_NAME_FN);  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  Node  param  =  compiler.getParameterType(JSC_PROPERTY_NAME_FN);  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	Node  param  =  compiler.getParameterType(JSC_PROPERTY_NAME_FN);	      	non-compiled	[CE]  	5	None	replace
36	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.CALL  &&  callNode.getLastChild()  ==  null)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.CALL  &&  callNode.getLastChild()  ==  null)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.CALL  &&  callNode.getLastChild()  ==  null)  {	  if    (callNode.getType()!=    Token.CALL    &&    callNode.getFirstChild()    ==    null)    {    	non-compiled	[CE]  	9	None	replace
37	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  compiler);  [CE]  [FE]                AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  compiler);  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	NodeTraversal.traverse(compiler,  callNode,  compiler);	      	non-compiled	[CE]  	5	None	replace
38	[BUG]  [BUGGY]  Node  parent  =  callNode.getParent();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  Node  parent  =  callNode.getParent();  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	Node  parent  =  callNode.getParent();	      	non-compiled	[CE]  	5	None	replace
39	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.CALL  ||  callNode.getFirstChild()!=  null)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()  ==  Token.CALL  ||  callNode.getFirstChild()!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.CALL  ||  callNode.getFirstChild()!=  null)  {	  if    (callNode.getType()!=    Token.CALL    ||    callNode.getFirstChild()    ==    null)    {    	non-compiled	[CE]  	11	None	replace
40	[BUG]  [BUGGY]  if  (callNode.getType()!=  Token.GETPROP)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()!=  Token.GETPROP)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()!=  Token.GETPROP)  {	  if    (nameNode.getType()!=    Token.CALL)    {    	non-compiled	[CE]  	4	None	replace
41	[BUG]  [BUGGY]  if  (callNode.getType()!=  Token.NAME)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()!=  Token.NAME)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()!=  Token.NAME)  {	  if    (nameNode.getType()!=    Token.CALL)    {    	non-compiled	[CE]  	4	None	replace
42	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.isNoSideEffectsCall())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.isNoSideEffectsCall())  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  callNode.isNoSideEffectsCall())  {	  if    (callNode.getType()!=    Token.CALL    &&    callNode.isNoSideEffectsCall())    {    	non-compiled	[CE]  	10	None	replace
43	[BUG]  [BUGGY]  if  (callNode.getType()!=  Token.FUNCTION  ||  callNode.getType()  ==  Token.CALL)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  (callNode.getType()!=  Token.FUNCTION  ||  callNode.getType()  ==  Token.CALL)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()!=  Token.FUNCTION  ||  callNode.getType()  ==  Token.CALL)  {	  if    (callNode.getType()    ==    Token.FUNCTION    ||    callNode.getType()!=    Token.CALL)    {    	non-compiled	[CE]  	6	None	replace
44	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild()  ==  null)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild()  ==  null)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild()  ==  null)  {	  if    (callNode.getType()!=    Token.CALL    &&    callNode.getFirstChild()    ==    null)    {    	non-compiled	[CE]  	9	None	replace
45	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild()!=  null)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild()!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()  ==  Token.GETPROP  &&  callNode.getFirstChild()!=  null)  {	  if    (callNode.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  	2	None	replace
46	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  ||  callNode.getFirstChild()!=  null)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  ||  callNode.getFirstChild()!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()  ==  Token.GETPROP  ||  callNode.getFirstChild()!=  null)  {	  if    (callNode.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  	2	None	replace
47	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild()!=  null)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild()!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild()!=  null)  {	  if    (callNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	3	None	replace
48	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  ||  callNode.getChildCount()  ==  2)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()  ==  Token.NAME  ||  callNode.getChildCount()  ==  2)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()  ==  Token.NAME  ||  callNode.getChildCount()  ==  2)  {	  if    (callNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	3	None	replace
49	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()!=  Token.CALL)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()!=  Token.CALL)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()!=  Token.CALL)  {	  if    (callNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	3	None	replace
50	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  this);  [CE]  [FE]                AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  this);  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	NodeTraversal.traverse(compiler,  callNode,  this);	      	non-compiled	[CE]  	5	None	replace
51	[BUG]  [BUGGY]  Node  param  =  nameNode.getFirstChild();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  Node  param  =  nameNode.getFirstChild();  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	Node  param  =  nameNode.getFirstChild();	      	non-compiled	[CE]  	5	None	replace
52	[BUG]  [BUGGY]  Node  got  =  callNode.getFirstChild();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  Node  got  =  callNode.getFirstChild();  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	Node  got  =  callNode.getFirstChild();	      	non-compiled	[CE]  	5	None	replace
53	[BUG]  [BUGGY]  if(callNode.getType()!=  Token.FUNCTION  ||  callNode.getType()!=  Token.CALL)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()!=  Token.FUNCTION  ||  callNode.getType()!=  Token.CALL)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()!=  Token.FUNCTION  ||  callNode.getType()!=  Token.CALL)  {	  if    (callNode.getType()    ==    Token.FUNCTION    ||    callNode.getType()!=    Token.CALL)    {    	non-compiled	[CE]  	6	None	replace
54	[BUG]  [BUGGY]  if  ((  callNode.getType()  ==  Token.CALL)||  callNode.getFirstChild()  ==  null)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  ((  callNode.getType()  ==  Token.CALL)||  callNode.getFirstChild()  ==  null)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  ((  callNode.getType()  ==  Token.CALL)||  callNode.getFirstChild()  ==  null)  {	  if    (callNode.getType()!=    Token.CALL    ||    callNode.getFirstChild()    ==    null)    {    	non-compiled	[CE]  	11	None	replace
55	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.CALL  &&  callNode.getFirstChild()  ==  null)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(nameNode.getType()!=  Token.CALL  &&  callNode.getFirstChild()  ==  null)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(nameNode.getType()!=  Token.CALL  &&  callNode.getFirstChild()  ==  null)  {	  if    (callNode.getType()!=    Token.CALL    ||    callNode.getFirstChild()    ==    null)    {    	non-compiled	[CE]  	11	None	replace
56	[BUG]  [BUGGY]  if((  callNode.getType()!=  Token.CALL)&&(callNode.getType()!=  Token.GETPROP))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if((  callNode.getType()!=  Token.CALL)&&(callNode.getType()!=  Token.GETPROP))  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if((  callNode.getType()!=  Token.CALL)&&(callNode.getType()!=  Token.GETPROP))  {	  if    ((    callNode.getType()    ==    Token.CALL)||(callNode.getType()!=    Token.GETPROP))    {    	non-compiled	[CE]  	7	None	replace
57	[BUG]  [BUGGY]  if((  callNode.getType()  ==  Token.CALL)||(callNode.getFirstChild()!=  Token.GETPROP))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if((  callNode.getType()  ==  Token.CALL)||(callNode.getFirstChild()!=  Token.GETPROP))  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if((  callNode.getType()  ==  Token.CALL)||(callNode.getFirstChild()!=  Token.GETPROP))  {	  if    ((    callNode.getType()    ==    Token.CALL)||(callNode.getType()!=    Token.GETPROP))    {    	non-compiled	[CE]  	7	None	replace
58	[BUG]  [BUGGY]  if((  callNode.getType()  ==  Token.CALL  ||  callNode.getType()!=  Token.GETPROP))  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if((  callNode.getType()  ==  Token.CALL  ||  callNode.getType()!=  Token.GETPROP))  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if((  callNode.getType()  ==  Token.CALL  ||  callNode.getType()!=  Token.GETPROP))  {	  if    ((    callNode.getType()    ==    Token.CALL)||(callNode.getType()!=    Token.GETPROP))    {    	non-compiled	[CE]  	7	None	replace
59	[BUG]  [BUGGY]  if  ((  callNode.getType()  ==  Token.CALL)&&  callNode.isNoSideEffectsCall())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if  ((  callNode.getType()  ==  Token.CALL)&&  callNode.isNoSideEffectsCall())  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  ((  callNode.getType()  ==  Token.CALL)&&  callNode.isNoSideEffectsCall())  {	  if    (callNode.getType()!=    Token.CALL    &&    callNode.isNoSideEffectsCall())    {    	non-compiled	[CE]  	10	None	replace
60	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  ||  callNode.getType()  ==  Token.NAME)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()  ==  Token.CALL  ||  callNode.getType()  ==  Token.NAME)  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()  ==  Token.CALL  ||  callNode.getType()  ==  Token.NAME)  {	  if    (callNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	3	None	replace
61	[BUG]  [BUGGY]  if((  callNode.getType()!=  Token.CALL)&&(callNode.getType()!=  Token.CALL))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if((  callNode.getType()!=  Token.CALL)&&(callNode.getType()!=  Token.CALL))  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if((  callNode.getType()!=  Token.CALL)&&(callNode.getType()!=  Token.CALL))  {	  if    ((    callNode.getType()    ==    Token.CALL)||(callNode.getType()!=    Token.CALL))    {    	non-compiled	[CE]  	8	None	replace
62	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren())  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    Node  callNode,  @Nullable  AbstractCompiler  compiler)  {    [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren())  {  [BUGGY]    throw  new  IllegalStateException(     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren())  {	  if    (callNode.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  	1	None	replace
