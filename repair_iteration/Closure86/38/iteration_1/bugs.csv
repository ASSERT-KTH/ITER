bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.CALL)  {  [CE]  [FE]    AssertionFailedError  [CONTEXT]  Node  callNode,  @Nullable  AbstractCompiler  compiler)  {  [BUGGY]  if  (callNode.getType()  ==  Token.CALL)  {  [BUGGY]  throw  new  IllegalStateException(   "Expected  CALL  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.CALL)  {	if  (callNode.getType()  !=  Token.CALL)  {  	non-compiled	[CE]  	75	None	replace
2	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.GETPROP)  {  [CE]  [FE]      AssertionFailedError  [CONTEXT]  Node  callNode,  @Nullable  AbstractCompiler  compiler)  {  [BUGGY]  if  (callNode.getType()  ==  Token.GETPROP)  {  [BUGGY]  throw  new  IllegalStateException(   "Expected  CALL  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.GETPROP)  {	if  (callNode.getType()  !=  Token.CALL)  {  	non-compiled	[CE]  	75	None	replace
3	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.NAME)  {  [CE]  [FE]        AssertionFailedError  [CONTEXT]  Node  callNode,  @Nullable  AbstractCompiler  compiler)  {  [BUGGY]  if  (callNode.getType()  ==  Token.NAME)  {  [BUGGY]  throw  new  IllegalStateException(   "Expected  CALL  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.NAME)  {	if  (callNode.getType()  !=  Token.CALL)  {  	non-compiled	[CE]  	75	None	replace
4	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.CALL)  {  [CE]  [FE]          AssertionFailedError  [CONTEXT]  Node  callNode,  @Nullable  AbstractCompiler  compiler)  {  [BUGGY]  if  (nameNode.getType()!=  Token.CALL)  {  [BUGGY]  throw  new  IllegalStateException(   "Expected  CALL  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (nameNode.getType()!=  Token.CALL)  {	if  (callNode.getType()  !=  Token.CALL)  {  	non-compiled	[CE]  	75	None	replace
5	[BUG]  [BUGGY]    [CE]  [FE]            AssertionFailedError  [CONTEXT]  Node  callNode,  @Nullable  AbstractCompiler  compiler)  {  [BUGGY]    [BUGGY]  throw  new  IllegalStateException(   "Expected  CALL  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	  	if  (callNode.getType()  !=  Token.CALL)  {  	non-compiled	[CE]  	75	None	replace
6	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.FUNCTION  ||  callNode.getType()!=  Token.CALL)  {  [CE]  [FE]    AssertionFailedError  [CONTEXT]  Node  callNode,  @Nullable  AbstractCompiler  compiler)  {  [BUGGY]  if  (callNode.getType()  ==  Token.FUNCTION  ||  callNode.getType()!=  Token.CALL)  {  [BUGGY]  throw  new  IllegalStateException(   "Expected  CALL  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()  ==  Token.FUNCTION  ||  callNode.getType()!=  Token.CALL)  {	if  (callNode.getType()  !=  Token.CALL)  {  	non-compiled	[CE]  	75	None	replace
7	[BUG]  [BUGGY]  if  ((  callNode.getType()  ==  Token.CALL)||(callNode.getType()!=  Token.GETPROP))  {  [CE]  [FE]      AssertionFailedError  [CONTEXT]  Node  callNode,  @Nullable  AbstractCompiler  compiler)  {  [BUGGY]  if  ((  callNode.getType()  ==  Token.CALL)||(callNode.getType()!=  Token.GETPROP))  {  [BUGGY]  throw  new  IllegalStateException(   "Expected  CALL  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  ((  callNode.getType()  ==  Token.CALL)||(callNode.getType()!=  Token.GETPROP))  {	if  (callNode.getType()  !=  Token.CALL)  {  	non-compiled	[CE]  	75	None	replace
8	[BUG]  [BUGGY]  if  ((  callNode.getType()  ==  Token.CALL)||(callNode.getType()!=  Token.CALL))  {  [CE]  [FE]        AssertionFailedError  [CONTEXT]  Node  callNode,  @Nullable  AbstractCompiler  compiler)  {  [BUGGY]  if  ((  callNode.getType()  ==  Token.CALL)||(callNode.getType()!=  Token.CALL))  {  [BUGGY]  throw  new  IllegalStateException(   "Expected  CALL  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  ((  callNode.getType()  ==  Token.CALL)||(callNode.getType()!=  Token.CALL))  {	if  (callNode.getType()  !=  Token.CALL)  {  	non-compiled	[CE]  	75	None	replace
9	[BUG]  [BUGGY]  if  (callNode.getType()!=  Token.CALL  &&  callNode.getFirstChild()  ==  null)  {  [CE]  [FE]    AssertionFailedError  [CONTEXT]  Node  callNode,  @Nullable  AbstractCompiler  compiler)  {  [BUGGY]  if  (callNode.getType()!=  Token.CALL  &&  callNode.getFirstChild()  ==  null)  {  [BUGGY]  throw  new  IllegalStateException(   "Expected  CALL  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()!=  Token.CALL  &&  callNode.getFirstChild()  ==  null)  {	if  (callNode.getType()  !=  Token.CALL)  {  	non-compiled	[CE]  	75	None	replace
10	[BUG]  [BUGGY]  if  (callNode.getType()!=  Token.CALL  &&  callNode.isNoSideEffectsCall())  {  [CE]  [FE]      AssertionFailedError  [CONTEXT]  Node  callNode,  @Nullable  AbstractCompiler  compiler)  {  [BUGGY]  if  (callNode.getType()!=  Token.CALL  &&  callNode.isNoSideEffectsCall())  {  [BUGGY]  throw  new  IllegalStateException(   "Expected  CALL  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()!=  Token.CALL  &&  callNode.isNoSideEffectsCall())  {	if  (callNode.getType()  !=  Token.CALL)  {  	non-compiled	[CE]  	75	None	replace
11	[BUG]  [BUGGY]  if  (callNode.getType()!=  Token.CALL  ||  callNode.getFirstChild()  ==  null)  {  [CE]  [FE]        AssertionFailedError  [CONTEXT]  Node  callNode,  @Nullable  AbstractCompiler  compiler)  {  [BUGGY]  if  (callNode.getType()!=  Token.CALL  ||  callNode.getFirstChild()  ==  null)  {  [BUGGY]  throw  new  IllegalStateException(   "Expected  CALL  node,  got   "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	if  (callNode.getType()!=  Token.CALL  ||  callNode.getFirstChild()  ==  null)  {	if  (callNode.getType()  !=  Token.CALL)  {  	non-compiled	[CE]  	75	None	replace
