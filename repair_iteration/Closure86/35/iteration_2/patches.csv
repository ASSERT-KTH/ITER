bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(callNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.hasChildren()    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	8	None	replace
2	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.hasChildren()    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	8	None	replace
3	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.hasChildren()    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	8	None	replace
4	[BUG]  [BUGGY]  if(callNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	22	None	replace
5	[BUG]  [BUGGY]  if(nameNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasChildren()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	23	None	replace
6	[BUG]  [BUGGY]  if(name.hasChildren()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(name.hasChildren()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(name.hasChildren()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasChildren()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	23	None	replace
7	[BUG]  [BUGGY]  if(callNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasChildren()    &&    callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	41	None	replace
8	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasChildren()    &&    callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	41	None	replace
9	[BUG]  [BUGGY]  if(!callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(!callNode.hasOneChild()    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	42	None	replace
10	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(!callNode.hasOneChild()    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	42	None	replace
11	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(!callNode.hasOneChild()    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	42	None	replace
12	[BUG]  [BUGGY]  if(!callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(!callNode.hasOneChild()    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	42	None	replace
13	[BUG]  [BUGGY]  if(callNode.hasOneChild()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(!callNode.hasOneChild()    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	42	None	replace
14	[BUG]  [BUGGY]  if(nameNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasOneChild()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	13	None	replace
15	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	37	None	replace
16	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString());  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString());  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString());	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getFirstChild().getString());    	non-compiled	[CE]  	44	None	replace
17	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getFirstChild().getString());  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getFirstChild().getString());  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getFirstChild().getString());	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getFirstChild().getString());    	non-compiled	[CE]  	44	None	replace
18	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	49	None	replace
19	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	49	None	replace
20	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	49	None	replace
21	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	49	None	replace
22	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.FUNCTION  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.FUNCTION  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.FUNCTION  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	49	None	replace
23	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(callNode.getFirstChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(callNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(callNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	49	None	replace
24	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.hasChildren()    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	45	None	replace
25	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasChildren()    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	45	None	replace
26	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasChildren()    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	45	None	replace
27	[BUG]  [BUGGY]  if(nameNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasChildren()    ||    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	10	None	replace
28	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasNext()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasNext()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.hasNext()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasThisChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	48	None	replace
29	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasFirstChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasFirstChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.hasFirstChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasThisChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	48	None	replace
30	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasThisChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	48	None	replace
31	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasThisChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	48	None	replace
32	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasThisChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	48	None	replace
33	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasThisChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	48	None	replace
34	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.CALL    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	47	None	replace
35	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.CALL    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	47	None	replace
36	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getType()    ==    Token.CALL    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	47	None	replace
37	[BUG]  [BUGGY]  if(!callNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(!callNode.hasChildren()    &&    callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	9	None	replace
38	[BUG]  [BUGGY]  if(!callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(!callNode.hasChildren()    &&    callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	9	None	replace
39	[BUG]  [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {	  if(nameNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	14	None	replace
40	[BUG]  [BUGGY]  if(!callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	14	None	replace
41	[BUG]  [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	14	None	replace
42	[BUG]  [BUGGY]  if(nameNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.hasOneChild()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	28	None	replace
43	[BUG]  [BUGGY]  if(callNode.hasFirstChild()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasFirstChild()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasFirstChild()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.hasOneChild()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	28	None	replace
44	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	17	None	replace
45	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild().getString()))  {  return  false;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild().getString()))  {  return  false;  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild().getString()))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString()))    {    return    false;    	non-compiled	[CE]  	5	None	replace
46	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getLastChild().getString()))  {  return  false;  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getLastChild().getString()))  {  return  false;  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getLastChild().getString()))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString()))    {    return    false;    	non-compiled	[CE]  	5	None	replace
47	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	39	None	replace
48	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	39	None	replace
49	[BUG]  [BUGGY]  if(name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(name.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	19	None	replace
50	[BUG]  [BUGGY]  if(name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(name.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	19	None	replace
51	[BUG]  [BUGGY]  if(name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getFirstChild()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getFirstChild()))  {	  if(name.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	19	None	replace
52	[BUG]  [BUGGY]  if(nameNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	33	None	replace
53	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	30	None	replace
54	[BUG]  [BUGGY]  Node  nameNode  =  param.getLastChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  param.getLastChild();  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	Node  nameNode  =  param.getLastChild();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	4	None	replace
55	[BUG]  [BUGGY]  Node  nameNode  =  param.getFirstChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  param.getFirstChild();  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	Node  nameNode  =  param.getFirstChild();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	4	None	replace
56	[BUG]  [BUGGY]  Node  nameNode  =  callNode.next();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  callNode.next();  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	Node  nameNode  =  callNode.next();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	4	None	replace
57	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	34	None	replace
58	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	34	None	replace
59	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	34	None	replace
60	[BUG]  [BUGGY]  if(name.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(name.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(name.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	34	None	replace
61	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getString()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getString()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getString()))  {	  if(callNode.getType()    ==    Token.CALL    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	34	None	replace
62	[BUG]  [BUGGY]  if(!callNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(!callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	27	None	replace
63	[BUG]  [BUGGY]  if(!callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(!callNode.hasChildren()    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	40	None	replace
64	[BUG]  [BUGGY]  if(!callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(!callNode.hasChildren()    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	40	None	replace
65	[BUG]  [BUGGY]  if(!callNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(!callNode.hasChildren()    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	6	None	replace
66	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.hasOneChild()    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	51	None	replace
67	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasOneChild()    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	51	None	replace
68	[BUG]  [BUGGY]  if(nameNode.hasOneChild()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.hasOneChild()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.hasOneChild()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasOneChild()    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	51	None	replace
69	[BUG]  [BUGGY]  if(callNode.hasOneChild()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasOneChild()    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	51	None	replace
70	[BUG]  [BUGGY]  if(!callNode.hasOneChild()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasOneChild()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasOneChild()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.hasOneChild()    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	51	None	replace
71	[BUG]  [BUGGY]  if(callNode.hasFirstChild()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasFirstChild()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasFirstChild()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasOneChild()    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	51	None	replace
72	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	38	None	replace
73	[BUG]  [BUGGY]  if(name.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(name.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(name.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	38	None	replace
74	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	38	None	replace
75	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()))  {  return  false;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()))  {  return  false;  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild().getString()))    {    return    false;    	non-compiled	[CE]  	2	None	replace
76	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getLastChild().getString()))  {  return  false;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getLastChild().getString()))  {  return  false;  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getLastChild().getString()))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild().getString()))    {    return    false;    	non-compiled	[CE]  	2	None	replace
77	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name.getLastChild().getString()))  {  return  false;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name.getLastChild().getString()))  {  return  false;  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name.getLastChild().getString()))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild().getString()))    {    return    false;    	non-compiled	[CE]  	2	None	replace
78	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name.getFirstChild().getString()))  {  return  false;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name.getFirstChild().getString()))  {  return  false;  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name.getFirstChild().getString()))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild().getString()))    {    return    false;    	non-compiled	[CE]  	2	None	replace
79	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.NAME  &&  callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasOneChild()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	52	None	replace
80	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.NAME  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasOneChild()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	52	None	replace
81	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.NAME  &&  callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasOneChild()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	52	None	replace
82	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasOneChild()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	52	None	replace
83	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	15	None	replace
84	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.NAME  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasOneChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	50	None	replace
85	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasOneChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	50	None	replace
86	[BUG]  [BUGGY]  if(callNode.getType()!=  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()!=  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()!=  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    ||    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	20	None	replace
87	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  ||  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    ||    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	20	None	replace
88	[BUG]  [BUGGY]  if(callNode.hasOneChild()  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	12	None	replace
89	[BUG]  [BUGGY]  if(!callNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(!callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	21	None	replace
90	[BUG]  [BUGGY]  if(!callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getString()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getString()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getString()))  {	  if(!callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	21	None	replace
91	[BUG]  [BUGGY]  Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.get(callNode.getLastChild());  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.get(callNode.getLastChild());  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.get(callNode.getLastChild());	  Node    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	1	None	replace
92	[BUG]  [BUGGY]  Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.getFirstChild();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.getFirstChild();  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.getFirstChild();	  Node    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	1	None	replace
93	[BUG]  [BUGGY]  Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.get(callNode.getFirstChild());  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.get(callNode.getFirstChild());  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.get(callNode.getFirstChild());	  Node    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	1	None	replace
94	[BUG]  [BUGGY]  Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.get(0);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.get(0);  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.get(0);	  Node    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	1	None	replace
95	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	43	None	replace
96	[BUG]  [BUGGY]  if(!callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	43	None	replace
97	[BUG]  [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getFirstChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getFirstChild()))  {	  if(nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	43	None	replace
98	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.GETPROP    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	18	None	replace
99	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.GETPROP    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	18	None	replace
100	[BUG]  [BUGGY]  if(name.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(name.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(name.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.GETPROP    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	18	None	replace
101	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.GETPROP    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	18	None	replace
102	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.GETPROP  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.getType()    ==    Token.GETPROP    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	18	None	replace
103	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	46	None	replace
104	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	46	None	replace
105	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	46	None	replace
106	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	46	None	replace
107	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.GETPROP  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	46	None	replace
108	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getString()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getString()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getString()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	46	None	replace
109	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&!callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&!callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.NAME  &&!callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(!callNode.hasChildren()    ||    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	11	None	replace
110	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(!callNode.hasChildren()    ||    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	11	None	replace
111	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	34	None	replace
112	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.GETPROP  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	34	None	replace
113	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall())  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall())  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall())  {	  if(nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	43	None	replace
114	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.hasOneChild()    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	51	None	replace
115	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.hasChildren()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.hasChildren()  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasOneChild()    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	51	None	replace
116	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasOneChild()    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	51	None	replace
117	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasOneChild()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	52	None	replace
118	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	14	None	replace
119	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	16	None	replace
120	[BUG]  [BUGGY]  Node  nameNode  =  callNode.removeFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  callNode.removeFirstChild();  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	Node  nameNode  =  callNode.removeFirstChild();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	4	None	replace
121	[BUG]  [BUGGY]  If(callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  If(callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	If(callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	33	None	replace
122	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getFirstChild().getString()))  {  return  false;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getFirstChild().getString()))  {  return  false;  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getFirstChild().getString()))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString()))    {    return    false;    	non-compiled	[CE]  	5	None	replace
123	[BUG]  [BUGGY]  if(name.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(name.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(name.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(name.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	19	None	replace
124	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.CALL    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	47	None	replace
125	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&  nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  &&  nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  &&  nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.CALL    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	47	None	replace
126	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	46	None	replace
127	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	46	None	replace
128	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	46	None	replace
129	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	49	None	replace
130	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasThisChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	48	None	replace
131	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasThisChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	48	None	replace
132	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasThisChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasThisChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	48	None	replace
133	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasFirstChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasFirstChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasFirstChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasThisChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	48	None	replace
134	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.GETPROP  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.getType()    ==    Token.GETPROP    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	18	None	replace
135	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(!callNode.hasOneChild()    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	42	None	replace
136	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.hasChildren()    &&    callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	41	None	replace
137	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasChildren()    &&    callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	41	None	replace
138	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasThisChild()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  callNode.hasThisChild()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  callNode.hasThisChild()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	15	None	replace
139	[BUG]  [BUGGY]  Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.getLastChild();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.getLastChild();  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	Node  nameNode  =  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.getLastChild();	  Node    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	1	None	replace
140	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getFirstChild().getString()))  {  return  false;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getFirstChild().getString()))  {  return  false;  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getFirstChild().getString()))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild().getString()))    {    return    false;    	non-compiled	[CE]  	2	None	replace
141	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.NAME  &&  callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasChildren()    ||    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	10	None	replace
142	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(name.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	19	None	replace
143	[BUG]  [BUGGY]  if(name.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(name.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(name.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(name.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	19	None	replace
144	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&  name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  &&  name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  &&  name.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(name.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	19	None	replace
145	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasOneChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	50	None	replace
146	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasOneChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	50	None	replace
147	[BUG]  [BUGGY]  Node  nameNode  =  nameNode.getFirstChild();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  nameNode.getFirstChild();  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	Node  nameNode  =  nameNode.getFirstChild();	  Node    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	1	None	replace
148	[BUG]  [BUGGY]  Node  nameNode  =  this.callNode.getFirstChild();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  this.callNode.getFirstChild();  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	Node  nameNode  =  this.callNode.getFirstChild();	  Node    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  	1	None	replace
149	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  &&!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  &&!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	30	None	replace
150	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name.getString()))  {  return  false;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name.getString()))  {  return  false;  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(name.getString()))  {  return  false;	  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild().getString()))    {    return    false;    	non-compiled	[CE]  	2	None	replace
151	[BUG]  [BUGGY]  if(!callNode.hasChildren()  &&  callNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasChildren()  &&  callNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasChildren()  &&  callNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    ||    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	20	None	replace
152	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  ||  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  ||  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  ||  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    ||    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	20	None	replace
153	[BUG]  [BUGGY]  Node  nameNode  =  callNode.cloneTree();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  Node  nameNode  =  callNode.cloneTree();  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	Node  nameNode  =  callNode.cloneTree();	  Node    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  	4	None	replace
154	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	49	None	replace
155	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasChildren()  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasChildren()  &&  callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	49	None	replace
156	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	49	None	replace
157	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.GETPROP    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	18	None	replace
158	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&!callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&!callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&!callNode.hasChildren()  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(!callNode.hasChildren()    ||    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	11	None	replace
159	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.hasNext()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.hasNext()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  nameNode.hasNext()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	24	None	replace
160	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	38	None	replace
161	[BUG]  [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getFirstChild().getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getFirstChild().getType()  ==  Token.CALL  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.CALL    &&    nameNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	47	None	replace
162	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	39	None	replace
163	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	39	None	replace
164	[BUG]  [BUGGY]  if(nameNode.hasChildren()  ||  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.hasChildren()  ||  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.hasChildren()  ||  nameNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasChildren()    ||    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	10	None	replace
165	[BUG]  [BUGGY]  if(callNode.getType()!=  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()!=  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()!=  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	34	None	replace
166	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&!callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&!callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.NAME  &&!callNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(!callNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	27	None	replace
167	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  nameNode.getType()  ==  Token.CALL  &&  callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.getType()    ==    Token.CALL    &&    callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	17	None	replace
168	[BUG]  [BUGGY]  if(nameNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.hasChildren()  ||  callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.hasChildren()    &&    callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	41	None	replace
169	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(nameNode.hasOneChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	32	None	replace
170	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.hasOneChild()  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.hasOneChild()  &&  nameNode.hasChildren()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(nameNode.hasChildren()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	33	None	replace
171	[BUG]  [BUGGY]  if(!callNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(!callNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(!callNode.hasOneChild()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {	  if(!callNode.hasOneChild()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    	non-compiled	[CE]  	25	None	replace
172	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasNext()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasNext()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasNext()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasThisChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	48	None	replace
173	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }      [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  [BUGGY]      &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(     "Math     "))  {  return  false;  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	if(callNode.getType()  ==  Token.CALL  &&  nameNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {	  if(callNode.getType()    ==    Token.CALL    &&    callNode.hasThisChild()    &&    evaluatesToLocalValue(nameNode.getFirstChild()))    {    	non-compiled	[CE]  	48	None	replace
