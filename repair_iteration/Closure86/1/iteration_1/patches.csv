bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Math ")||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChil  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Math ")||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChil  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Math ")||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChil	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChil    	non-compiled	[CE]  	23	None	replace
2	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Math ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Math ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Math ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChil    	non-compiled	[CE]  	23	None	replace
3	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChil  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChil  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChil	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChil    	non-compiled	[CE]  ')'  expected	23	None	replace
4	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChil  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChil  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChil	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChil    	non-compiled	[CE]  	23	None	replace
5	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Math ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Math ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Math ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChil    	non-compiled	[CE]  	23	None	replace
6	[BUG]  [BUGGY]  if(namespaceName.equals( "Math   ")||  namespaceName.equals( "Name   "))  {  return  false;  }  [CE]  cannot  find  symbol  namespaceName  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(namespaceName.equals( "Math   ")||  namespaceName.equals( "Name   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(namespaceName.equals( "Math   ")||  namespaceName.equals( "Name   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Math   ")||    JSC_PROPERTY_NAME.equals(   "Name   "))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  namespaceName	18	None	replace
7	[BUG]  [BUGGY]  ||  JSC_PROPERTY_NAME.equals( "Name   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  ||  JSC_PROPERTY_NAME.equals( "Name   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	||  JSC_PROPERTY_NAME.equals( "Name   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Math   ")||    JSC_PROPERTY_NAME.equals(   "Name   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
8	[BUG]  [BUGGY]  if(name.equals( "Math   ")||  name.equals( "Name   "))  {  return  false;  }  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(name.equals( "Math   ")||  name.equals( "Name   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(name.equals( "Math   ")||  name.equals( "Name   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Math   ")||    JSC_PROPERTY_NAME.equals(   "Name   "))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  name	18	None	replace
9	[BUG]  [BUGGY]  If(namespaceName.equals( "Math   ")||  namespaceName.equals( "Name   "))  {  return  false;  }  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  If(namespaceName.equals( "Math   ")||  namespaceName.equals( "Name   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	If(namespaceName.equals( "Math   ")||  namespaceName.equals( "Name   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Math   ")||    JSC_PROPERTY_NAME.equals(   "Name   "))    {    return    false;    }    	non-compiled	[CE]  	18	None	replace
10	[BUG]  [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	        OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()))  {  return  false;	  timeout    	non-compiled	[CE]  	14	None	add
11	[BUG]  [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString());  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString());  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	        OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString());	  timeout    	non-compiled	[CE]  	14	None	add
12	[BUG]  [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString()))  {  return  false;  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	        OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString()))  {  return  false;	  timeout    	non-compiled	[CE]  	14	None	add
13	[BUG]  [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getLastChild().getString()))  {  return  false;  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getLastChild().getString()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	        OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(callNode.getLastChild().getString()))  {  return  false;	  timeout    	non-compiled	[CE]  	14	None	add
14	[BUG]  [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getLastChild().getString());  [CE]  [FE]                              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getLastChild().getString());  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	        OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getLastChild().getString());	  timeout    	non-compiled	[CE]  	14	None	add
15	[BUG]  [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString());  return  false;  [CE]  [FE]                                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString());  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	        OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString());  return  false;	  timeout    	non-compiled	[CE]  	14	None	add
16	[BUG]  [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()))  {  return  false;  [CE]  [FE]                                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	        OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()))  {  return  false;	  timeout    	non-compiled	[CE]  	14	None	add
17	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Math ")||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Math ")||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Math ")||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getFirstChild().getString()));    	non-compiled	[CE]  	22	None	replace
18	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getFirstChild().getString()));    	non-compiled	[CE]  	22	None	replace
19	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Property   ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Property   ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Property   ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getFirstChild().getString()));    	non-compiled	[CE]  	22	None	replace
20	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getFirstChild().getString()));    	non-compiled	[CE]  	22	None	replace
21	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  	6	None	replace
22	[BUG]  [BUGGY]  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
23	[BUG]  [BUGGY]  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  Node  callNode  =  callNode.getFirstChild();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Node  callNode  =  callNode.getFirstChild();  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Node  callNode  =  callNode.getFirstChild();	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  	6	None	replace
25	[BUG]  [BUGGY]  Node  callNode  =  callNode.getFirstChild();  if(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Node  callNode  =  callNode.getFirstChild();  if(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Node  callNode  =  callNode.getFirstChild();  if(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  	6	None	replace
26	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  	9	None	add
27	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  If(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  If(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    If(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  	9	None	add
28	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  return  false;  }  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  	9	None	add
29	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(!callNode.hasThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(!callNode.hasThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    if(!callNode.hasThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  	9	None	add
30	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;	  timeout    	non-compiled	[CE]  	9	None	add
31	[BUG]  [BUGGY]  if(namespaceName.equals( "Math   ")||  namespaceName.equals( "Property   "))  {  return  false;  }  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(namespaceName.equals( "Math   ")||  namespaceName.equals( "Property   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(namespaceName.equals( "Math   ")||  namespaceName.equals( "Property   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Math   ")||    JSC_PROPERTY_NAME.equals(   "Property   "))    {    return    false;    }    	non-compiled	[CE]  	13	None	replace
32	[BUG]  [BUGGY]  if(name.equals( "Math   ")||  name.equals( "Property   "))  {  return  false;  }  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(name.equals( "Math   ")||  name.equals( "Property   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(name.equals( "Math   ")||  name.equals( "Property   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Math   ")||    JSC_PROPERTY_NAME.equals(   "Property   "))    {    return    false;    }    	non-compiled	[CE]  	13	None	replace
33	[BUG]  [BUGGY]  ||  JSC_PROPERTY_NAME.equals( "Property   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  ||  JSC_PROPERTY_NAME.equals( "Property   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	||  JSC_PROPERTY_NAME.equals( "Property   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Math   ")||    JSC_PROPERTY_NAME.equals(   "Property   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
34	[BUG]  [BUGGY]  If(name.equals( "Math   ")||  name.equals( "Property   "))  {  return  false;  }  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  If(name.equals( "Math   ")||  name.equals( "Property   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	If(name.equals( "Math   ")||  name.equals( "Property   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Math   ")||    JSC_PROPERTY_NAME.equals(   "Property   "))    {    return    false;    }    	non-compiled	[CE]  	13	None	replace
35	[BUG]  [BUGGY]  If(namespaceName.equals( "Math   ")||  namespaceName.equals( "Property   "))  {  return  false;  }  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  If(namespaceName.equals( "Math   ")||  namespaceName.equals( "Property   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	If(namespaceName.equals( "Math   ")||  namespaceName.equals( "Property   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Math   ")||    JSC_PROPERTY_NAME.equals(   "Property   "))    {    return    false;    }    	non-compiled	[CE]  	13	None	replace
36	[BUG]  [BUGGY]  if(namespaceName.equals( "Property   ")||  namespaceName.equals( "Math   "))  {  return  false;  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(namespaceName.equals( "Property   ")||  namespaceName.equals( "Math   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(namespaceName.equals( "Property   ")||  namespaceName.equals( "Math   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Property   ")||    JSC_PROPERTY_NAME.equals(   "Math   "))    {    return    false;    }    	non-compiled	[CE]  	19	None	replace
37	[BUG]  [BUGGY]  if(name.equals( "Property   ")||  name.equals( "Math   "))  {  return  false;  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(name.equals( "Property   ")||  name.equals( "Math   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(name.equals( "Property   ")||  name.equals( "Math   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Property   ")||    JSC_PROPERTY_NAME.equals(   "Math   "))    {    return    false;    }    	non-compiled	[CE]  	19	None	replace
38	[BUG]  [BUGGY]  ||  JSC_PROPERTY_NAME.equals( "Math   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  ||  JSC_PROPERTY_NAME.equals( "Math   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	||  JSC_PROPERTY_NAME.equals( "Math   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Property   ")||    JSC_PROPERTY_NAME.equals(   "Math   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
39	[BUG]  [BUGGY]  If(name.equals( "Property   ")||  name.equals( "Math   "))  {  return  false;  }  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  If(name.equals( "Property   ")||  name.equals( "Math   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	If(name.equals( "Property   ")||  name.equals( "Math   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Property   ")||    JSC_PROPERTY_NAME.equals(   "Math   "))    {    return    false;    }    	non-compiled	[CE]  	19	None	replace
40	[BUG]  [BUGGY]  If(namespaceName.equals( "Property   ")||  namespaceName.equals( "Math   "))  {  return  false;  }  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  If(namespaceName.equals( "Property   ")||  namespaceName.equals( "Math   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	If(namespaceName.equals( "Property   ")||  namespaceName.equals( "Math   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Property   ")||    JSC_PROPERTY_NAME.equals(   "Math   "))    {    return    false;    }    	non-compiled	[CE]  	19	None	replace
41	[BUG]  [BUGGY]  JSC_PROPERTY_NAME.equals( "Property   ")||  JSC_PROPERTY_NAME.equals( "Math   "))  {  return  false;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  JSC_PROPERTY_NAME.equals( "Property   ")||  JSC_PROPERTY_NAME.equals( "Math   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	JSC_PROPERTY_NAME.equals( "Property   ")||  JSC_PROPERTY_NAME.equals( "Math   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Property   ")||    JSC_PROPERTY_NAME.equals(   "Math   "))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
42	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  	16	None	add
43	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  	16	None	add
44	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  If(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  If(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    If(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  	16	None	add
45	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;	  timeout    	non-compiled	[CE]  	16	None	add
46	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Math ")||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Math ")||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Math ")||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild().getString()));    	non-compiled	[CE]  	21	None	replace
47	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild().getString()));    	non-compiled	[CE]  	21	None	replace
48	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild().getString()));    	non-compiled	[CE]  	21	None	replace
49	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()));	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild().getString()));    	non-compiled	[CE]  	21	None	replace
50	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  	12	None	replace
51	[BUG]  [BUGGY]  Context.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Context.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Context.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  	12	None	replace
52	[BUG]  [BUGGY]  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [CE]  orphaned  default  [FE]                      AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  orphaned  default	12	None	replace
53	[BUG]  [BUGGY]  Context.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]                        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Context.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Context.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  orphaned  default	12	None	replace
54	[BUG]  [BUGGY]  Context.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [CE]  orphaned  default  [FE]                          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Context.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Context.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  orphaned  default	12	None	replace
55	[BUG]  [BUGGY]  Context.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [CE]  orphaned  default  [FE]                            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Context.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Context.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  orphaned  default	12	None	replace
56	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Math ")||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild  [CE]  orphaned  default  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Math ")||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Math ")||  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild    	non-compiled	[CE]  orphaned  default	20	None	replace
57	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild  [CE]  orphaned  default  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild    	non-compiled	[CE]  orphaned  default	20	None	replace
58	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Property   ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()  [CE]  orphaned  default  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Property   ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Property   ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild    	non-compiled	[CE]  orphaned  default	20	None	replace
59	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild  [CE]  orphaned  default  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild    	non-compiled	[CE]  orphaned  default	20	None	replace
60	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  orphaned  default	17	None	replace
61	[BUG]  [BUGGY]  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  [CE]  orphaned  default  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  orphaned  default	17	None	replace
62	[BUG]  [BUGGY]  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  orphaned  default	17	None	replace
63	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  orphaned  default	10	None	replace
64	[BUG]  [BUGGY]  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [CE]  orphaned  default  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	&&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;	  if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  orphaned  default	10	None	replace
65	[BUG]  [BUGGY]  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  orphaned  default	10	None	replace
66	[BUG]  [BUGGY]  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [CE]  orphaned  default  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	&&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;	  if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  orphaned  default	8	None	replace
67	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]    junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  	non-compiled	[CE]  orphaned  default	3	None	add
68	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  If(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]      junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  If(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    If(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  	non-compiled	[CE]  orphaned  default	3	None	add
69	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.hasThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]        junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.hasThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(!callNode.hasThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  	non-compiled	[CE]  orphaned  default	3	None	add
70	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]          junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  	non-compiled	[CE]  orphaned  default	3	None	add
71	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]            junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  	non-compiled	[CE]  orphaned  default	3	None	add
72	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [CE]  orphaned  default  [FE]              junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;	  	non-compiled	[CE]  orphaned  default	3	None	add
73	[BUG]  [BUGGY]  Node  callNode  =  evaluatesToLocalValue(nameNode.getLastChild());  [CE]  orphaned  default  [FE]    junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Node  callNode  =  evaluatesToLocalValue(nameNode.getLastChild());  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Node  callNode  =  evaluatesToLocalValue(nameNode.getLastChild());	  if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    	non-compiled	[CE]  orphaned  default	4	None	replace
74	[BUG]  [BUGGY]  Node  <  K,  V>  callNode  =  evaluatesToLocalValue(nameNode.getLastChild());  [CE]  orphaned  default  [FE]      junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Node  <  K,  V>  callNode  =  evaluatesToLocalValue(nameNode.getLastChild());  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Node  <  K,  V>  callNode  =  evaluatesToLocalValue(nameNode.getLastChild());	  if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    	non-compiled	[CE]  orphaned  default	4	None	replace
75	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]        junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    	non-compiled	[CE]  orphaned  default	4	None	replace
76	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getFirstChild();  [CE]  orphaned  default  [FE]          junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Node  nameNode  =  callNode.getFirstChild();  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Node  nameNode  =  callNode.getFirstChild();	  if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    	non-compiled	[CE]  orphaned  default	4	None	replace
77	[BUG]  [BUGGY]  AssertionFailedError.was(callNode.getFirstChild(),  callNode.getLastChild());  [CE]  orphaned  default  [FE]            junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  AssertionFailedError.was(callNode.getFirstChild(),  callNode.getLastChild());  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	AssertionFailedError.was(callNode.getFirstChild(),  callNode.getLastChild());	  if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    	non-compiled	[CE]  orphaned  default	4	None	replace
78	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	7	None	add
79	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  If(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  If(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    If(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	7	None	add
80	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	7	None	add
81	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.hasThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.hasThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(!callNode.hasThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	7	None	add
82	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	5	None	add
83	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  If(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  If(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    If(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	5	None	add
84	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	5	None	add
85	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  while(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  while(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    while(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	5	None	add
86	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [CE]  orphaned  default  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;	  timeout    	non-compiled	[CE]  orphaned  default	5	None	add
87	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Property ")||  JSC_PROPERTY_NAME.equals( "Property "))  {  return  false;  }  [CE]  orphaned  default  [FE]    junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Property ")||  JSC_PROPERTY_NAME.equals( "Property "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(JSC_PROPERTY_NAME.equals( "Property ")||  JSC_PROPERTY_NAME.equals( "Property "))  {  return  false;  }	  return    true;    	non-compiled	[CE]  orphaned  default	2	None	replace
88	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Property ")||  JSC_PROPERTY_NAME.equals( "prototype "))  {  return  false;  }  [CE]  orphaned  default  [FE]      junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Property ")||  JSC_PROPERTY_NAME.equals( "prototype "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(JSC_PROPERTY_NAME.equals( "Property ")||  JSC_PROPERTY_NAME.equals( "prototype "))  {  return  false;  }	  return    true;    	non-compiled	[CE]  orphaned  default	2	None	replace
89	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "Object "))  {  return  false;  }  [CE]  orphaned  default  [FE]        junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "Object "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(JSC_PROPERTY_NAME.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "Object "))  {  return  false;  }	  return    true;    	non-compiled	[CE]  orphaned  default	2	None	replace
90	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Property ")||  JSC_PROPERTY_NAME.equals( "Property "))  {  return  true;  }  [CE]  orphaned  default  [FE]          junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Property ")||  JSC_PROPERTY_NAME.equals( "Property "))  {  return  true;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(JSC_PROPERTY_NAME.equals( "Property ")||  JSC_PROPERTY_NAME.equals( "Property "))  {  return  true;  }	  return    true;    	non-compiled	[CE]  orphaned  default	2	None	replace
91	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Property ")||  JSC_PROPERTY_NAME.equals( "Object "))  {  return  false;  }  [CE]  orphaned  default  [FE]            junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Property ")||  JSC_PROPERTY_NAME.equals( "Object "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(JSC_PROPERTY_NAME.equals( "Property ")||  JSC_PROPERTY_NAME.equals( "Object "))  {  return  false;  }	  return    true;    	non-compiled	[CE]  orphaned  default	2	None	replace
92	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	11	None	add
93	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  If(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  If(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    If(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	11	None	add
94	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]                      AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	11	None	add
95	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  while(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]                        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  while(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    while(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	11	None	add
96	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [CE]  orphaned  default  [FE]                          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;	  timeout    	non-compiled	[CE]  orphaned  default	11	None	add
97	[BUG]  [BUGGY]  return  true;  NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.FUNCTION);  [CE]  orphaned  default  [FE]    junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.FUNCTION);  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  orphaned  default	1	None	add
98	[BUG]  [BUGGY]  return  true;  Node  param  =  callNode.getFirstChild();  [CE]  orphaned  default  [FE]      junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  Node  param  =  callNode.getFirstChild();  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    Node  param  =  callNode.getFirstChild();	  	non-compiled	[CE]  orphaned  default	1	None	add
99	[BUG]  [BUGGY]  return  true;  NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.CALL);  [CE]  orphaned  default  [FE]        junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.CALL);  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.CALL);	  	non-compiled	[CE]  orphaned  default	1	None	add
100	[BUG]  [BUGGY]  return  true;  NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  callNode  [FE]          junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.GETPROP);  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  cannot  find  symbol  callNode	1	None	add
101	[BUG]  [BUGGY]  return  true;  NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  callNode  [FE]            junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.NAME);  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.NAME);	  	non-compiled	[CE]  cannot  find  symbol  callNode	1	None	add
102	[BUG]  [BUGGY]  return  true;  if(!callNode.isOnlyModifiesThisCall())  {  return  true;  }  [CE]  orphaned  default  [FE]              junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  if(!callNode.isOnlyModifiesThisCall())  {  return  true;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    if(!callNode.isOnlyModifiesThisCall())  {  return  true;  }	  	non-compiled	[CE]  orphaned  default	1	None	add
103	[BUG]  [BUGGY]  return  true;  NodeUtil.checkState(callNode.getType()  ==  Token.GETPROP);  [CE]  orphaned  default  [FE]                junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  NodeUtil.checkState(callNode.getType()  ==  Token.GETPROP);  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    NodeUtil.checkState(callNode.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  orphaned  default	1	None	add
104	[BUG]  [BUGGY]  return  true;  NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.THIS);  [CE]  orphaned  default  [FE]                  junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.THIS);  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    NodeUtil.checkState(callNode.getFirstChild().getType()  ==  Token.THIS);	  	non-compiled	[CE]  orphaned  default	1	None	add
105	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()))  {  return  false;  [CE]  orphaned  default  [FE]                      AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()))  {  return  false;	      timeout    	non-compiled	[CE]  orphaned  default	15	None	replace
106	[BUG]  [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild().getString());  [CE]  orphaned  default  [FE]                        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild().getString());  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getFirstChild().getString());	      timeout    	non-compiled	[CE]  orphaned  default	15	None	replace
107	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  AssertionFailedError  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  AssertionFailedError  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    AssertionFailedError  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	16	None	add
108	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getNextChild()))  {  return  false;  }  [CE]  orphaned  default  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getNextChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getNextChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  orphaned  default	16	None	add
109	[BUG]  [BUGGY]  return  true;  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()))  {  return  false;  [CE]  orphaned  default  [FE]    junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()))  {  return  false;	  	non-compiled	[CE]  orphaned  default	1	None	add
110	[BUG]  [BUGGY]  return  true;  NodeUtil.copyCall(callNode,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS);  [CE]  orphaned  default  [FE]      junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  NodeUtil.copyCall(callNode,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS);  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    NodeUtil.copyCall(callNode,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS);	  	non-compiled	[CE]  orphaned  default	1	None	add
111	[BUG]  [BUGGY]  return  true;  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()))  {  return  false;  [CE]  orphaned  default  [FE]        junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()))  {  return  false;	  	non-compiled	[CE]  orphaned  default	1	None	add
112	[BUG]  [BUGGY]  return  true;  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()))  {  return  false;  [CE]  orphaned  default  [FE]          junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()))  {  return  false;	  	non-compiled	[CE]  orphaned  default	1	None	add
113	[BUG]  [BUGGY]  return  true;  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString());  [CE]  cannot  find  symbol  nameNode  [FE]            junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString());  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(nameNode.getLastChild().getString());	  	non-compiled	[CE]  cannot  find  symbol  nameNode	1	None	add
114	[BUG]  [BUGGY]  return  true;  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()))  {  return  true;  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()))  {  return  true;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString()))  {  return  true;	  	non-compiled	[CE]  ';'  expected	1	None	add
115	[BUG]  [BUGGY]  if(name.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "Property   "))  {  return  false;  }  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(name.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "Property   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(name.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "Property   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Math   ")||    JSC_PROPERTY_NAME.equals(   "Property   "))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
116	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChil    	non-compiled	[CE]  ')'  expected	23	None	replace
117	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChil  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChil  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChil	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChil    	non-compiled	[CE]  ')'  expected	23	None	replace
118	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChil    	non-compiled	[CE]  	23	None	replace
119	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Property   ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Property   ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Property   ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChil    	non-compiled	[CE]  	23	None	replace
120	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild    	non-compiled	[CE]  ')'  expected	20	None	replace
121	[BUG]  [BUGGY]  if(name.equals( "Property   ")||  JSC_PROPERTY_NAME.equals( "Math   "))  {  return  false;  }  [CE]  cannot  find  symbol  name  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(name.equals( "Property   ")||  JSC_PROPERTY_NAME.equals( "Math   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(name.equals( "Property   ")||  JSC_PROPERTY_NAME.equals( "Math   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Property   ")||    JSC_PROPERTY_NAME.equals(   "Math   "))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  name	19	None	replace
122	[BUG]  [BUGGY]  if(namespaceName.equals( "Property   ")||  JSC_PROPERTY_NAME.equals( "Math   "))  {  return  false;  }  [CE]  cannot  find  symbol  namespaceName  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(namespaceName.equals( "Property   ")||  JSC_PROPERTY_NAME.equals( "Math   "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(namespaceName.equals( "Property   ")||  JSC_PROPERTY_NAME.equals( "Math   "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Property   ")||    JSC_PROPERTY_NAME.equals(   "Math   "))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  namespaceName	19	None	replace
123	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.getOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  cannot  find  symbol  callNode  [FE]    junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.getOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(!callNode.getOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  callNode	3	None	add
124	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  AssertionFailedError  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  AssertionFailedError  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    AssertionFailedError  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  not  a  statement	9	None	add
125	[BUG]  [BUGGY]  if(name.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "Name "))  {  return  false;  }  [CE]  cannot  find  symbol  name  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(name.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "Name "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(name.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "Name "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Math   ")||    JSC_PROPERTY_NAME.equals(   "Name   "))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  name	18	None	replace
126	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Property   ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Property   ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Property   ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild().getString()));    	non-compiled	[CE]  	21	None	replace
127	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString())  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString())  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals(nameNode.getString())&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild().getString())	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild().getString()));    	non-compiled	[CE]  ';'  expected	21	None	replace
128	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  cannot  find  symbol  callNode  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  callNode	10	None	replace
129	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  AssertionFailedError  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  AssertionFailedError  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    AssertionFailedError  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  not  a  statement	5	None	add
130	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(callNode.hasThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(callNode.hasThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(callNode.hasThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  not  a  statement	5	None	add
131	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Object ")||  JSC_PROPERTY_NAME.equals( "Math "))  {  return  false;  }  [CE]  cannot  find  symbol  JSC_PROPERTY_NAME  [FE]    junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Object ")||  JSC_PROPERTY_NAME.equals( "Math "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(JSC_PROPERTY_NAME.equals( "Object ")||  JSC_PROPERTY_NAME.equals( "Math "))  {  return  false;  }	  return    true;    	non-compiled	[CE]  cannot  find  symbol  JSC_PROPERTY_NAME	2	None	replace
132	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Object ")||  JSC_PROPERTY_NAME.equals( "Property "))  {  return  false;  }  [CE]  cannot  find  symbol  JSC_PROPERTY_NAME  [FE]      junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Object ")||  JSC_PROPERTY_NAME.equals( "Property "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(JSC_PROPERTY_NAME.equals( "Object ")||  JSC_PROPERTY_NAME.equals( "Property "))  {  return  false;  }	  return    true;    	non-compiled	[CE]  cannot  find  symbol  JSC_PROPERTY_NAME	2	None	replace
133	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "name "))  {  return  false;  }  [CE]  cannot  find  symbol  JSC_PROPERTY_NAME  [FE]        junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "name "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(JSC_PROPERTY_NAME.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "name "))  {  return  false;  }	  return    true;    	non-compiled	[CE]  cannot  find  symbol  JSC_PROPERTY_NAME	2	None	replace
134	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Object ")||  JSC_PROPERTY_NAME.equals( "name "))  {  return  false;  }  [CE]  cannot  find  symbol  JSC_PROPERTY_NAME  [FE]          junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(JSC_PROPERTY_NAME.equals( "Object ")||  JSC_PROPERTY_NAME.equals( "name "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(JSC_PROPERTY_NAME.equals( "Object ")||  JSC_PROPERTY_NAME.equals( "name "))  {  return  false;  }	  return    true;    	non-compiled	[CE]  cannot  find  symbol  JSC_PROPERTY_NAME	2	None	replace
135	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	NodeTraversal.traverse(compiler,  callNode,  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
136	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS);  [CE]  cannot  find  symbol  callNode  [FE]      junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS);  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	NodeTraversal.traverse(compiler,  callNode,  OBJECT_METHODS_WITHOUT_SIDEEFFECTS);	  if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  callNode	4	None	replace
137	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	NodeTraversal.traverse(compiler,  callNode,  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;	  if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
138	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  new  MatchShallowStatement());  [CE]  cannot  find  symbol  callNode  [FE]          junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  new  MatchShallowStatement());  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	NodeTraversal.traverse(compiler,  callNode,  new  MatchShallowStatement());	  if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  callNode	4	None	replace
139	[BUG]  [BUGGY]  if(callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  cannot  find  symbol  callNode  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.hasOneChild()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  callNode	8	None	replace
140	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	6	None	replace
141	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	6	None	replace
142	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	6	None	replace
143	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	6	None	replace
144	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	12	None	replace
145	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	12	None	replace
146	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	12	None	replace
147	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	12	None	replace
148	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  AssertionFailedError  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  AssertionFailedError  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    AssertionFailedError  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  not  a  statement	7	None	add
149	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
150	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	17	None	replace
151	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	17	None	replace
152	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Preconditions.checkState(callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	17	None	replace
153	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Preconditions.checkState(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	17	None	replace
154	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  AssertionFailedError  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  AssertionFailedError  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    AssertionFailedError  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  not  a  statement	11	None	add
155	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(callNode.hasThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(callNode.hasThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    if(callNode.hasThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  ';'  expected	11	None	add
156	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Object ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getFirstChild().getString()));    	non-compiled	[CE]  	22	None	replace
157	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "String ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));  [CE]  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "String ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "String ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild().getString()));	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getFirstChild().getString()));    	non-compiled	[CE]  	22	None	replace
158	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(callNode.getOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  if(callNode.getOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    if(callNode.getOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  ';'  expected	11	None	add
159	[BUG]  [BUGGY]  if(namespaceName.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "Name "))  {  return  false;  }  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(namespaceName.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "Name "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(namespaceName.equals( "Math ")||  JSC_PROPERTY_NAME.equals( "Name "))  {  return  false;  }	  if(JSC_PROPERTY_NAME.equals(   "Math   ")||    JSC_PROPERTY_NAME.equals(   "Name   "))    {    return    false;    }    	non-compiled	[CE]  incompatible  types	18	None	replace
160	[BUG]  [BUGGY]  return  true;  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
161	[BUG]  [BUGGY]  return  true;  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  true;  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return    true;    if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
162	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	12	None	replace
163	[BUG]  [BUGGY]  Node  param  =  callNode.getFirstChild();  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  Node  param  =  callNode.getFirstChild();  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	Node  param  =  callNode.getFirstChild();	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	12	None	replace
164	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingCall(callNode);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  aughtExceptionHandler.handleMissingCall(callNode);  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	aughtExceptionHandler.handleMissingCall(callNode);	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	12	None	replace
165	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getString()))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getString()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getString()))  {  return  false;  }	  if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	17	None	replace
166	[BUG]  [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getFirstChild().getString());  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]      OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getFirstChild().getString());  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	        OBJECT_METHODS_WITHOUT_SIDEEFFECTS.add(callNode.getFirstChild().getString());	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
167	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals(namespaceName)&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild()	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChil    	non-compiled	[CE]  ')'  expected	23	None	replace
168	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Text ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "Text ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "Text ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getFirstChild()	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChil    	non-compiled	[CE]  	23	None	replace
169	[BUG]  [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "String ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild  [CE]  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  return  JSC_PROPERTY_NAME_FN.equals( "String ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	return  JSC_PROPERTY_NAME_FN.equals( "String ")&&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(nameNode.getLastChild	  return    JSC_PROPERTY_NAME_FN.equals(   "Math   ")&&    OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(    nameNode.getLastChild    	non-compiled	[CE]  	20	None	replace
170	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  this);  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  NodeTraversal.traverse(compiler,  callNode,  this);  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	NodeTraversal.traverse(compiler,  callNode,  this);	  if(!callNode.isOnlyModifiesThisCall()    &&    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
171	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if(callNode.hasThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if(callNode.hasThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    if(callNode.hasThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  	16	None	add
172	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if(callNode.getOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  if(callNode.getOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    if(callNode.getOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  	16	None	add
173	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  while(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  while(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getFirstChild()))    {    return    false;    }    while(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getFirstChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  	16	None	add
174	[BUG]  [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  return  false;  }  [CE]  [FE]    junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getFirstChild()))  {  return  false;  }	  return    true;    	non-compiled	[CE]  	2	None	replace
175	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME_FN.equals( "Math ")||  JSC_PROPERTY_NAME_FN.equals( "Object "))  {  return  false;  }  [CE]  [FE]      junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(JSC_PROPERTY_NAME_FN.equals( "Math ")||  JSC_PROPERTY_NAME_FN.equals( "Object "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(JSC_PROPERTY_NAME_FN.equals( "Math ")||  JSC_PROPERTY_NAME_FN.equals( "Object "))  {  return  false;  }	  return    true;    	non-compiled	[CE]  	2	None	replace
176	[BUG]  [BUGGY]  if(JSC_PROPERTY_NAME_FN.equals( "Property ")||  JSC_PROPERTY_NAME_FN.equals( "Object "))  {  return  false;  }  [CE]  [FE]        junit.framework.AssertionFailedError:  expected:<[externObjSEThis]>  but  was:<[externObjSEThis    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(JSC_PROPERTY_NAME_FN.equals( "Property ")||  JSC_PROPERTY_NAME_FN.equals( "Object "))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(JSC_PROPERTY_NAME_FN.equals( "Property ")||  JSC_PROPERTY_NAME_FN.equals( "Object "))  {  return  false;  }	  return    true;    	non-compiled	[CE]  	2	None	replace
177	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [CE]  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.getType()  ==  Token.CALL  &&!callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(callNode.getLastChild()))  {  return  false;  }	  if(!callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(callNode.getLastChild()))    {    return    false;    }    timeout    	non-compiled	[CE]  	10	None	replace
178	[BUG]  [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(callNode.getOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  if  (callNode.isOnlyModifiesThisCall()  &&  evaluatesToLocalValue(nameNode.getFirstChild()))  {    [BUGGY]  if(callNode.isOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  if(callNode.getOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }  [BUGGY]    }  if  (nameNode.getFirstChild().getType()  ==  Token.NAME)  {  String  namespaceName  =  nameNode.getFirstChild().getString();  if  (namespaceName.equals(   "Math   "))  {  return  false;  }  }  [CLASS]  NodeUtil  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  boolean  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  name  namespaceName  Map  vars  int  type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	if(callNode.isOnlyModifiesThisCall()    ||    evaluatesToLocalValue(nameNode.getLastChild()))    {    return    false;    }    if(callNode.getOnlyModifiesThisCall()  ||  evaluatesToLocalValue(nameNode.getLastChild()))  {  return  false;  }	  timeout    	non-compiled	[CE]  	5	None	add
