bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return false; [FE] AssertionFailedError [CONTEXT] } } else if (nameNode.getType() == Token.GETPROP) { if (callNode.hasOneChild() && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains( nameNode.getLastChild().getString())) { return false; } if (callNode.isOnlyModifiesThisCall() && evaluatesToLocalValue(nameNode.getFirstChild())) { [BUGGY] return false; [BUGGY] }  if (nameNode.getFirstChild().getType() == Token.NAME) { String namespaceName = nameNode.getFirstChild().getString(); if (namespaceName.equals("Math")) { return false; } }  [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } } else if (nameNode.getType() == Token.GETPROP) { if (callNode.hasOneChild() && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains( nameNode.getLastChild().getString())) { return false; } if (callNode.isOnlyModifiesThisCall() && evaluatesToLocalValue(nameNode.getFirstChild())) { [BUGGY] [BUGGY] return false; }  if (nameNode.getFirstChild().getType() == Token.NAME) { String namespaceName = nameNode.getFirstChild().getString(); if (namespaceName.equals("Math")) { return false; } }  [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.7559289460184544	762	762	7	add	
3	[BUG] [BUGGY] return true; [FE] AssertionFailedError [CONTEXT]  return locals.apply(value); case Token.CALL: return callHasLocalResult(value) || isToStringMethodCall(value) || locals.apply(value); case Token.NEW:    [BUGGY] return true; [BUGGY] case Token.FUNCTION: case Token.REGEXP: case Token.ARRAYLIT: case Token.OBJECTLIT:  return true; case Token.IN:  return true; default: [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] evaluatesToLocalValue [RETURN_TYPE] boolean  Node value Node> locals [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node value String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s sourceName Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos total type Predicate locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  return locals.apply(value); case Token.CALL: return callHasLocalResult(value) || isToStringMethodCall(value) || locals.apply(value); case Token.NEW:    [BUGGY] [BUGGY] return true; case Token.FUNCTION: case Token.REGEXP: case Token.ARRAYLIT: case Token.OBJECTLIT:  return true; case Token.IN:  return true; default: [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] evaluatesToLocalValue [RETURN_TYPE] boolean  Node value Node> locals [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node value String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s sourceName Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos total type Predicate locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.6236095644623235	2465	2465	7	add	
5	[BUG] [BUGGY] return locals.apply(value); [FE] AssertionFailedError [CONTEXT] return evaluatesToLocalValue(value.getFirstChild().getNext(), locals) && evaluatesToLocalValue(value.getLastChild(), locals); case Token.INC: case Token.DEC: if (value.getBooleanProp(Node.INCRDECR_PROP)) { return evaluatesToLocalValue(value.getFirstChild(), locals); } else { return true; } case Token.THIS: [BUGGY] return locals.apply(value); [BUGGY] case Token.NAME: return isImmutableValue(value) || locals.apply(value); case Token.GETELEM: case Token.GETPROP:  return locals.apply(value); case Token.CALL: return callHasLocalResult(value) || isToStringMethodCall(value) || locals.apply(value); [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] evaluatesToLocalValue [RETURN_TYPE] boolean  Node value Node> locals [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node value String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s sourceName Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos total type Predicate locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.42857142857142855	2450	2450	7	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] return evaluatesToLocalValue(value.getFirstChild().getNext(), locals) && evaluatesToLocalValue(value.getLastChild(), locals); case Token.INC: case Token.DEC: if (value.getBooleanProp(Node.INCRDECR_PROP)) { return evaluatesToLocalValue(value.getFirstChild(), locals); } else { return true; } case Token.THIS: [BUGGY] [BUGGY] return locals.apply(value); case Token.NAME: return isImmutableValue(value) || locals.apply(value); case Token.GETELEM: case Token.GETPROP:  return locals.apply(value); case Token.CALL: return callHasLocalResult(value) || isToStringMethodCall(value) || locals.apply(value); [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] evaluatesToLocalValue [RETURN_TYPE] boolean  Node value Node> locals [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node value String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s sourceName Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos total type Predicate locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.42857142857142855	2450	2450	7	add	
7	[BUG] [BUGGY] return evaluatesToLocalValue(value, Predicates.<Node>alwaysFalse()); [FE] AssertionFailedError [CONTEXT] static boolean evaluatesToLocalValue(Node value) { [BUGGY] return evaluatesToLocalValue(value, Predicates.<Node>alwaysFalse()); [BUGGY] } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] evaluatesToLocalValue [RETURN_TYPE] boolean  Node value [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s sourceName boolean Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos total type Node value  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2416	2416	7	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean evaluatesToLocalValue(Node value) { [BUGGY] [BUGGY] return evaluatesToLocalValue(value, Predicates.<Node>alwaysFalse()); } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] evaluatesToLocalValue [RETURN_TYPE] boolean  Node value [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s sourceName boolean Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos total type Node value  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2416	2416	7	add	
9	[BUG] [BUGGY] switch (value.getType()) { [FE] AssertionFailedError [CONTEXT] static boolean evaluatesToLocalValue(Node value, Predicate<Node> locals) { [BUGGY] switch (value.getType()) { [BUGGY] case Token.ASSIGN:    return NodeUtil.isImmutableValue(value.getLastChild()) || (locals.apply(value) && evaluatesToLocalValue(value.getLastChild(), locals)); case Token.COMMA: return evaluatesToLocalValue(value.getLastChild(), locals); case Token.AND: [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] evaluatesToLocalValue [RETURN_TYPE] boolean  Node value Node> locals [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node value String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s sourceName Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos total type Predicate locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean evaluatesToLocalValue(Node value, Predicate<Node> locals) { [BUGGY] [BUGGY] switch (value.getType()) { case Token.ASSIGN:    return NodeUtil.isImmutableValue(value.getLastChild()) || (locals.apply(value) && evaluatesToLocalValue(value.getLastChild(), locals)); case Token.COMMA: return evaluatesToLocalValue(value.getLastChild(), locals); case Token.AND: [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] evaluatesToLocalValue [RETURN_TYPE] boolean  Node value Node> locals [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node value String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s sourceName Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos total type Predicate locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.4131969352706687	2425	2425	7	add	
11	[BUG] [BUGGY] String name = n.getString(); [FE] AssertionFailedError [CONTEXT] case Token.STRING: case Token.NUMBER: case Token.NULL: case Token.TRUE: case Token.FALSE: return true; case Token.VOID: case Token.NEG: return isImmutableValue(n.getFirstChild()); case Token.NAME: [BUGGY] String name = n.getString(); [BUGGY]   return "undefined".equals(name) || "Infinity".equals(name) || "NaN".equals(name); } return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isImmutableValue [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS String JSC_PROPERTY_NAME_FN name boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.39405520311955033	304	304	7	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case Token.STRING: case Token.NUMBER: case Token.NULL: case Token.TRUE: case Token.FALSE: return true; case Token.VOID: case Token.NEG: return isImmutableValue(n.getFirstChild()); case Token.NAME: [BUGGY] [BUGGY] String name = n.getString();   return "undefined".equals(name) || "Infinity".equals(name) || "NaN".equals(name); } return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isImmutableValue [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS String JSC_PROPERTY_NAME_FN name boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.39405520311955033	304	304	7	add	
13	[BUG] [BUGGY] return "undefined".equals(name) || "Infinity".equals(name)  || "NaN".equals(name); [FE] AssertionFailedError [CONTEXT] case Token.TRUE: case Token.FALSE: return true; case Token.VOID: case Token.NEG: return isImmutableValue(n.getFirstChild()); case Token.NAME: String name = n.getString();   [BUGGY] return "undefined".equals(name)   || "Infinity".equals(name)      || "NaN".equals(name); [BUGGY] || "Infinity".equals(name) || "NaN".equals(name); } return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isImmutableValue [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS String JSC_PROPERTY_NAME_FN name boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.39405520311955033	307	309	7	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case Token.TRUE: case Token.FALSE: return true; case Token.VOID: case Token.NEG: return isImmutableValue(n.getFirstChild()); case Token.NAME: String name = n.getString();   [BUGGY] [BUGGY] return "undefined".equals(name)   || "Infinity".equals(name)      || "NaN".equals(name); || "Infinity".equals(name) || "NaN".equals(name); } return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isImmutableValue [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS String JSC_PROPERTY_NAME_FN name boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.39405520311955033	307	309	7	add	
15	[BUG] [BUGGY] return NodeUtil.constructorCallHasSideEffects(n, compiler); [FE] AssertionFailedError [CONTEXT] switch(n.getType()) { case Token.DELPROP: case Token.DEC: case Token.INC: case Token.THROW: return true; case Token.CALL: return NodeUtil.functionCallHasSideEffects(n, compiler); case Token.NEW: [BUGGY] return NodeUtil.constructorCallHasSideEffects(n, compiler); [BUGGY] case Token.NAME:  return n.hasChildren(); default: return false; } } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean  Node n AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node n String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3833259389999639	825	825	7	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] switch(n.getType()) { case Token.DELPROP: case Token.DEC: case Token.INC: case Token.THROW: return true; case Token.CALL: return NodeUtil.functionCallHasSideEffects(n, compiler); case Token.NEW: [BUGGY] [BUGGY] return NodeUtil.constructorCallHasSideEffects(n, compiler); case Token.NAME:  return n.hasChildren(); default: return false; } } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean  Node n AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node n String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3833259389999639	825	825	7	add	
17	[BUG] [BUGGY] return node.getType() == Token.THIS; [FE] AssertionFailedError [CONTEXT] static boolean isThis(Node node) { [BUGGY] return node.getType() == Token.THIS; [BUGGY] } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isThis [RETURN_TYPE] boolean  Node node [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type Node node  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.37796447300922725	1462	1462	7	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean isThis(Node node) { [BUGGY] [BUGGY] return node.getType() == Token.THIS; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isThis [RETURN_TYPE] boolean  Node node [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type Node node  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.37796447300922725	1462	1462	7	add	
19	[BUG] [BUGGY] return constructorCallHasSideEffects(callNode, null); [FE] AssertionFailedError [CONTEXT] static boolean constructorCallHasSideEffects(Node callNode) { [BUGGY] return constructorCallHasSideEffects(callNode, null); [BUGGY] } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines String JSC_PROPERTY_NAME_FN name boolean Map vars int type Node callNode  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	681	681	7	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean constructorCallHasSideEffects(Node callNode) { [BUGGY] [BUGGY] return constructorCallHasSideEffects(callNode, null); } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines String JSC_PROPERTY_NAME_FN name boolean Map vars int type Node callNode  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	681	681	7	add	
21	[BUG] [BUGGY] if (callNode.getType() != Token.NEW) { [FE] AssertionFailedError [CONTEXT] static boolean constructorCallHasSideEffects( Node callNode, AbstractCompiler compiler) { [BUGGY] if (callNode.getType() != Token.NEW) { [BUGGY] throw new IllegalStateException( "Expected NEW node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { return false; } Node nameNode = callNode.getFirstChild(); if (nameNode.getType() == Token.NAME && [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode String JSC_PROPERTY_NAME_FN name Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	686	686	7	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean constructorCallHasSideEffects( Node callNode, AbstractCompiler compiler) { [BUGGY] [BUGGY] if (callNode.getType() != Token.NEW) { throw new IllegalStateException( "Expected NEW node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { return false; } Node nameNode = callNode.getFirstChild(); if (nameNode.getType() == Token.NAME && [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode String JSC_PROPERTY_NAME_FN name Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	686	686	7	add	
23	[BUG] [BUGGY] if (callNode.isNoSideEffectsCall()) { [FE] AssertionFailedError [CONTEXT] static boolean constructorCallHasSideEffects( Node callNode, AbstractCompiler compiler) { if (callNode.getType() != Token.NEW) { throw new IllegalStateException( "Expected NEW node, got " + Token.name(callNode.getType())); } [BUGGY] if (callNode.isNoSideEffectsCall()) { [BUGGY] return false; } Node nameNode = callNode.getFirstChild(); if (nameNode.getType() == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString())) { return false; } return true; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode String JSC_PROPERTY_NAME_FN name Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	691	691	7	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean constructorCallHasSideEffects( Node callNode, AbstractCompiler compiler) { if (callNode.getType() != Token.NEW) { throw new IllegalStateException( "Expected NEW node, got " + Token.name(callNode.getType())); } [BUGGY] [BUGGY] if (callNode.isNoSideEffectsCall()) { return false; } Node nameNode = callNode.getFirstChild(); if (nameNode.getType() == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString())) { return false; } return true; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode String JSC_PROPERTY_NAME_FN name Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	691	691	7	add	
25	[BUG] [BUGGY] Node nameNode = callNode.getFirstChild(); [FE] AssertionFailedError [CONTEXT] Node callNode, AbstractCompiler compiler) { if (callNode.getType() != Token.NEW) { throw new IllegalStateException( "Expected NEW node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { return false; } [BUGGY] Node nameNode = callNode.getFirstChild(); [BUGGY] if (nameNode.getType() == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString())) { return false; } return true; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode String JSC_PROPERTY_NAME_FN name Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	695	695	7	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Node callNode, AbstractCompiler compiler) { if (callNode.getType() != Token.NEW) { throw new IllegalStateException( "Expected NEW node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { return false; } [BUGGY] [BUGGY] Node nameNode = callNode.getFirstChild(); if (nameNode.getType() == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString())) { return false; } return true; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode String JSC_PROPERTY_NAME_FN name Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	695	695	7	add	
27	[BUG] [BUGGY] if (nameNode.getType() == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString())) { [FE] AssertionFailedError [CONTEXT] if (callNode.getType() != Token.NEW) { throw new IllegalStateException( "Expected NEW node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { return false; } Node nameNode = callNode.getFirstChild(); [BUGGY] if (nameNode.getType() == Token.NAME &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString())) { [BUGGY] CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString())) { return false; } return true; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode String JSC_PROPERTY_NAME_FN name Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (callNode.getType() != Token.NEW) { throw new IllegalStateException( "Expected NEW node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { return false; } Node nameNode = callNode.getFirstChild(); [BUGGY] [BUGGY] if (nameNode.getType() == Token.NAME &&  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString())) { CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString())) { return false; } return true; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode String JSC_PROPERTY_NAME_FN name Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	696	697	7	add	
29	[BUG] [BUGGY] return true; [FE] AssertionFailedError [CONTEXT] if (callNode.isNoSideEffectsCall()) { return false; } Node nameNode = callNode.getFirstChild(); if (nameNode.getType() == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString())) { return false; } [BUGGY] return true; [BUGGY] } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode String JSC_PROPERTY_NAME_FN name Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	701	701	7	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (callNode.isNoSideEffectsCall()) { return false; } Node nameNode = callNode.getFirstChild(); if (nameNode.getType() == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString())) { return false; } [BUGGY] [BUGGY] return true; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode String JSC_PROPERTY_NAME_FN name Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3779644730092272	701	701	7	add	
31	[BUG] [BUGGY] return has(node, new MatchNodeType(type), traverseChildrenPred); [FE] AssertionFailedError [CONTEXT] static boolean containsType(Node node, int type, Predicate<Node> traverseChildrenPred) { [BUGGY] return has(node, new MatchNodeType(type), traverseChildrenPred); [BUGGY] } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] containsType [RETURN_TYPE] boolean  Node node int type Node> traverseChildrenPred [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node node String JSC_PROPERTY_NAME_FN methodName name namespaceName propName res Map vars int operator type Predicate traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3678836036909795	1733	1733	7	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean containsType(Node node, int type, Predicate<Node> traverseChildrenPred) { [BUGGY] [BUGGY] return has(node, new MatchNodeType(type), traverseChildrenPred); } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] containsType [RETURN_TYPE] boolean  Node node int type Node> traverseChildrenPred [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node node String JSC_PROPERTY_NAME_FN methodName name namespaceName propName res Map vars int operator type Predicate traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.3678836036909795	1733	1733	7	add	
33	[BUG] [BUGGY] if (pred.apply(node)) { [FE] AssertionFailedError [CONTEXT] static boolean has(Node node, Predicate<Node> pred, Predicate<Node> traverseChildrenPred) { [BUGGY] if (pred.apply(node)) { [BUGGY] return true; } if (!traverseChildrenPred.apply(node)) { return false; } for (Node c = node.getFirstChild(); c != null; c = c.getNext()) { if (has(c, pred, traverseChildrenPred)) { return true; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] has [RETURN_TYPE] boolean  Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node c node String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos type Predicate pred traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2196	2196	7	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean has(Node node, Predicate<Node> pred, Predicate<Node> traverseChildrenPred) { [BUGGY] [BUGGY] if (pred.apply(node)) { return true; } if (!traverseChildrenPred.apply(node)) { return false; } for (Node c = node.getFirstChild(); c != null; c = c.getNext()) { if (has(c, pred, traverseChildrenPred)) { return true; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] has [RETURN_TYPE] boolean  Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node c node String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos type Predicate pred traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2196	2196	7	add	
35	[BUG] [BUGGY] if (!traverseChildrenPred.apply(node)) { [FE] AssertionFailedError [CONTEXT] static boolean has(Node node, Predicate<Node> pred, Predicate<Node> traverseChildrenPred) { if (pred.apply(node)) { return true; } [BUGGY] if (!traverseChildrenPred.apply(node)) { [BUGGY] return false; } for (Node c = node.getFirstChild(); c != null; c = c.getNext()) { if (has(c, pred, traverseChildrenPred)) { return true; } } return false; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] has [RETURN_TYPE] boolean  Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node c node String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos type Predicate pred traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean has(Node node, Predicate<Node> pred, Predicate<Node> traverseChildrenPred) { if (pred.apply(node)) { return true; } [BUGGY] [BUGGY] if (!traverseChildrenPred.apply(node)) { return false; } for (Node c = node.getFirstChild(); c != null; c = c.getNext()) { if (has(c, pred, traverseChildrenPred)) { return true; } } return false; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] has [RETURN_TYPE] boolean  Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node c node String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos type Predicate pred traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2200	2200	7	add	
37	[BUG] [BUGGY] for (Node c = node.getFirstChild(); c != null; c = c.getNext()) { [FE] AssertionFailedError [CONTEXT] Predicate<Node> pred, Predicate<Node> traverseChildrenPred) { if (pred.apply(node)) { return true; } if (!traverseChildrenPred.apply(node)) { return false; } [BUGGY] for (Node c = node.getFirstChild(); c != null; c = c.getNext()) { [BUGGY] if (has(c, pred, traverseChildrenPred)) { return true; } } return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] has [RETURN_TYPE] boolean  Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node c node String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos type Predicate pred traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2204	2204	7	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Predicate<Node> pred, Predicate<Node> traverseChildrenPred) { if (pred.apply(node)) { return true; } if (!traverseChildrenPred.apply(node)) { return false; } [BUGGY] [BUGGY] for (Node c = node.getFirstChild(); c != null; c = c.getNext()) { if (has(c, pred, traverseChildrenPred)) { return true; } } return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] has [RETURN_TYPE] boolean  Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node c node String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos type Predicate pred traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2204	2204	7	add	
39	[BUG] [BUGGY] return false; [FE] AssertionFailedError [CONTEXT] if (!traverseChildrenPred.apply(node)) { return false; } for (Node c = node.getFirstChild(); c != null; c = c.getNext()) { if (has(c, pred, traverseChildrenPred)) { return true; } } [BUGGY] return false; [BUGGY] } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] has [RETURN_TYPE] boolean  Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node c node String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos type Predicate pred traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2210	2210	7	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (!traverseChildrenPred.apply(node)) { return false; } for (Node c = node.getFirstChild(); c != null; c = c.getNext()) { if (has(c, pred, traverseChildrenPred)) { return true; } } [BUGGY] [BUGGY] return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] has [RETURN_TYPE] boolean  Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node c node String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos type Predicate pred traverseChildrenPred  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.36313651960128146	2210	2210	7	add	
41	[BUG] [BUGGY] case Token.NEG:return 13; [FE] AssertionFailedError [CONTEXT] case Token.DIV:return 12; case Token.INC: case Token.DEC: case Token.NEW: case Token.DELPROP: case Token.TYPEOF: case Token.VOID: case Token.NOT: case Token.BITNOT: case Token.POS: [BUGGY] case Token.NEG:return 13; [BUGGY]  case Token.ARRAYLIT: case Token.CALL: case Token.EMPTY: case Token.FALSE: case Token.FUNCTION: case Token.GETELEM: case Token.GETPROP: case Token.GET_REF: case Token.IF: [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] precedence [RETURN_TYPE] int  int type [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.345834250622541	948	948	7	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case Token.DIV:return 12; case Token.INC: case Token.DEC: case Token.NEW: case Token.DELPROP: case Token.TYPEOF: case Token.VOID: case Token.NOT: case Token.BITNOT: case Token.POS: [BUGGY] [BUGGY] case Token.NEG:return 13; case Token.ARRAYLIT: case Token.CALL: case Token.EMPTY: case Token.FALSE: case Token.FUNCTION: case Token.GETELEM: case Token.GETPROP: case Token.GET_REF: case Token.IF: [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] precedence [RETURN_TYPE] int  int type [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.345834250622541	948	948	7	add	
43	[BUG] [BUGGY] return false; [FE] AssertionFailedError [CONTEXT] static boolean constructorCallHasSideEffects( Node callNode, AbstractCompiler compiler) { if (callNode.getType() != Token.NEW) { throw new IllegalStateException( "Expected NEW node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { [BUGGY] return false; [BUGGY] } Node nameNode = callNode.getFirstChild(); if (nameNode.getType() == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString())) { return false; } return true; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode String JSC_PROPERTY_NAME_FN name Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean constructorCallHasSideEffects( Node callNode, AbstractCompiler compiler) { if (callNode.getType() != Token.NEW) { throw new IllegalStateException( "Expected NEW node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { [BUGGY] [BUGGY] return false; } Node nameNode = callNode.getFirstChild(); if (nameNode.getType() == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(nameNode.getString())) { return false; } return true; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode String JSC_PROPERTY_NAME_FN name Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.29649972666444047	692	692	7	add	
45	[BUG] [BUGGY] Preconditions.checkState(n.getType() == Token.CALL); [FE] AssertionFailedError [CONTEXT] static boolean callHasLocalResult(Node n) { [BUGGY] Preconditions.checkState(n.getType() == Token.CALL); [BUGGY] return (n.getSideEffectFlags() & Node.FLAG_LOCAL_RESULTS) > 0; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] callHasLocalResult [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2645751311064591	796	796	7	replace	
46	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean callHasLocalResult(Node n) { [BUGGY] [BUGGY] Preconditions.checkState(n.getType() == Token.CALL); return (n.getSideEffectFlags() & Node.FLAG_LOCAL_RESULTS) > 0; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] callHasLocalResult [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2645751311064591	796	796	7	add	
47	[BUG] [BUGGY] return (n.getSideEffectFlags() & Node.FLAG_LOCAL_RESULTS) > 0; [FE] AssertionFailedError [CONTEXT] static boolean callHasLocalResult(Node n) { Preconditions.checkState(n.getType() == Token.CALL); [BUGGY] return (n.getSideEffectFlags() & Node.FLAG_LOCAL_RESULTS) > 0; [BUGGY] } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] callHasLocalResult [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2645751311064591	797	797	7	replace	
48	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean callHasLocalResult(Node n) { Preconditions.checkState(n.getType() == Token.CALL); [BUGGY] [BUGGY] return (n.getSideEffectFlags() & Node.FLAG_LOCAL_RESULTS) > 0; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] callHasLocalResult [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2645751311064591	797	797	7	add	
49	[BUG] [BUGGY] case Token.ASSIGN: return 1; [FE] AssertionFailedError [CONTEXT] case Token.ASSIGN_BITXOR: case Token.ASSIGN_BITAND: case Token.ASSIGN_LSH: case Token.ASSIGN_RSH: case Token.ASSIGN_URSH: case Token.ASSIGN_ADD: case Token.ASSIGN_SUB: case Token.ASSIGN_MUL: case Token.ASSIGN_DIV: case Token.ASSIGN_MOD: [BUGGY] case Token.ASSIGN: return 1; [BUGGY] case Token.HOOK: return 2;// ?: operator case Token.OR: return 3; case Token.AND:return 4; case Token.BITOR:return 5; case Token.BITXOR: return 6; case Token.BITAND: return 7; case Token.EQ: case Token.NE: case Token.SHEQ: case Token.SHNE: return 8; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] precedence [RETURN_TYPE] int  int type [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2631806779839076	914	914	7	replace	
50	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case Token.ASSIGN_BITXOR: case Token.ASSIGN_BITAND: case Token.ASSIGN_LSH: case Token.ASSIGN_RSH: case Token.ASSIGN_URSH: case Token.ASSIGN_ADD: case Token.ASSIGN_SUB: case Token.ASSIGN_MUL: case Token.ASSIGN_DIV: case Token.ASSIGN_MOD: [BUGGY] [BUGGY] case Token.ASSIGN: return 1; case Token.HOOK: return 2;// ?: operator case Token.OR: return 3; case Token.AND:return 4; case Token.BITOR:return 5; case Token.BITXOR: return 6; case Token.BITAND: return 7; case Token.EQ: case Token.NE: case Token.SHEQ: case Token.SHNE: return 8; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] precedence [RETURN_TYPE] int  int type [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2631806779839076	914	914	7	add	
51	[BUG] [BUGGY] case Token.ASSIGN: return "="; [FE] AssertionFailedError [CONTEXT] case Token.GE: return ">="; case Token.GT: return ">"; case Token.MUL: return "*"; case Token.DIV: return "/"; case Token.MOD: return "%"; case Token.BITNOT: return "~"; case Token.ADD: return "+"; case Token.SUB: return "-"; case Token.POS: return "+"; case Token.NEG: return "-"; [BUGGY] case Token.ASSIGN: return "="; [BUGGY] case Token.ASSIGN_BITOR: return "|="; case Token.ASSIGN_BITXOR: return "^="; case Token.ASSIGN_BITAND: return "&="; case Token.ASSIGN_LSH: return "<<="; case Token.ASSIGN_RSH: return ">>="; case Token.ASSIGN_URSH: return ">>>="; case Token.ASSIGN_ADD: return "+="; case Token.ASSIGN_SUB: return "-="; case Token.ASSIGN_MUL: return "*="; case Token.ASSIGN_DIV: return "/="; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] opToStr [RETURN_TYPE] String  int operator [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN methodName name namespaceName propName boolean Map vars int operator type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2631806779839076	1691	1691	7	replace	
52	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case Token.GE: return ">="; case Token.GT: return ">"; case Token.MUL: return "*"; case Token.DIV: return "/"; case Token.MOD: return "%"; case Token.BITNOT: return "~"; case Token.ADD: return "+"; case Token.SUB: return "-"; case Token.POS: return "+"; case Token.NEG: return "-"; [BUGGY] [BUGGY] case Token.ASSIGN: return "="; case Token.ASSIGN_BITOR: return "|="; case Token.ASSIGN_BITXOR: return "^="; case Token.ASSIGN_BITAND: return "&="; case Token.ASSIGN_LSH: return "<<="; case Token.ASSIGN_RSH: return ">>="; case Token.ASSIGN_URSH: return ">>>="; case Token.ASSIGN_ADD: return "+="; case Token.ASSIGN_SUB: return "-="; case Token.ASSIGN_MUL: return "*="; case Token.ASSIGN_DIV: return "/="; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] opToStr [RETURN_TYPE] String  int operator [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN methodName name namespaceName propName boolean Map vars int operator type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2631806779839076	1691	1691	7	add	
53	[BUG] [BUGGY] return isImmutableValue(value) || locals.apply(value); [FE] AssertionFailedError [CONTEXT] case Token.INC: case Token.DEC: if (value.getBooleanProp(Node.INCRDECR_PROP)) { return evaluatesToLocalValue(value.getFirstChild(), locals); } else { return true; } case Token.THIS: return locals.apply(value); case Token.NAME: [BUGGY] return isImmutableValue(value) || locals.apply(value); [BUGGY] case Token.GETELEM: case Token.GETPROP:  return locals.apply(value); case Token.CALL: return callHasLocalResult(value) || isToStringMethodCall(value) || locals.apply(value); case Token.NEW:  [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] evaluatesToLocalValue [RETURN_TYPE] boolean  Node value Node> locals [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node value String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s sourceName Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos total type Predicate locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.26013299085723596	2452	2452	7	replace	
54	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case Token.INC: case Token.DEC: if (value.getBooleanProp(Node.INCRDECR_PROP)) { return evaluatesToLocalValue(value.getFirstChild(), locals); } else { return true; } case Token.THIS: return locals.apply(value); case Token.NAME: [BUGGY] [BUGGY] return isImmutableValue(value) || locals.apply(value); case Token.GETELEM: case Token.GETPROP:  return locals.apply(value); case Token.CALL: return callHasLocalResult(value) || isToStringMethodCall(value) || locals.apply(value); case Token.NEW:  [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] evaluatesToLocalValue [RETURN_TYPE] boolean  Node value Node> locals [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants boolean Node value String JSC_PROPERTY_NAME_FN lhsString methodName name namespaceName originalName part propName qNameStr res s sourceName Map vars int charno endPos index len lineno memberIndex operator prototypeIdx startPos total type Predicate locals  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.26013299085723596	2452	2452	7	add	
55	[BUG] [BUGGY] return true; [FE] AssertionFailedError [CONTEXT] static boolean nodeTypeMayHaveSideEffects(Node n, AbstractCompiler compiler) { if (isAssignmentOp(n)) { [BUGGY] return true; [BUGGY] } switch(n.getType()) { case Token.DELPROP: case Token.DEC: case Token.INC: case Token.THROW: return true; case Token.CALL: return NodeUtil.functionCallHasSideEffects(n, compiler); [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean  Node n AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node n String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.25555062599997597	813	813	7	replace	
56	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean nodeTypeMayHaveSideEffects(Node n, AbstractCompiler compiler) { if (isAssignmentOp(n)) { [BUGGY] [BUGGY] return true; } switch(n.getType()) { case Token.DELPROP: case Token.DEC: case Token.INC: case Token.THROW: return true; case Token.CALL: return NodeUtil.functionCallHasSideEffects(n, compiler); [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean  Node n AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node n String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.25555062599997597	813	813	7	add	
57	[BUG] [BUGGY] switch (n.getType()) { [FE] AssertionFailedError [CONTEXT] static boolean isImmutableValue(Node n) { [BUGGY] switch (n.getType()) { [BUGGY] case Token.STRING: case Token.NUMBER: case Token.NULL: case Token.TRUE: case Token.FALSE: return true; case Token.VOID: case Token.NEG: return isImmutableValue(n.getFirstChild()); case Token.NAME: [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isImmutableValue [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS String JSC_PROPERTY_NAME_FN name boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.24889134708717228	293	293	7	replace	
58	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean isImmutableValue(Node n) { [BUGGY] [BUGGY] switch (n.getType()) { case Token.STRING: case Token.NUMBER: case Token.NULL: case Token.TRUE: case Token.FALSE: return true; case Token.VOID: case Token.NEG: return isImmutableValue(n.getFirstChild()); case Token.NAME: [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isImmutableValue [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS String JSC_PROPERTY_NAME_FN name boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.24889134708717228	293	293	7	add	
59	[BUG] [BUGGY] return true; [FE] AssertionFailedError [CONTEXT] case Token.ASSIGN_BITXOR: case Token.ASSIGN_BITAND: case Token.ASSIGN_LSH: case Token.ASSIGN_RSH: case Token.ASSIGN_URSH: case Token.ASSIGN_ADD: case Token.ASSIGN_SUB: case Token.ASSIGN_MUL: case Token.ASSIGN_DIV: case Token.ASSIGN_MOD: [BUGGY] return true; [BUGGY] } return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isAssignmentOp [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.24854790640048002	1028	1028	7	replace	
60	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case Token.ASSIGN_BITXOR: case Token.ASSIGN_BITAND: case Token.ASSIGN_LSH: case Token.ASSIGN_RSH: case Token.ASSIGN_URSH: case Token.ASSIGN_ADD: case Token.ASSIGN_SUB: case Token.ASSIGN_MUL: case Token.ASSIGN_DIV: case Token.ASSIGN_MOD: [BUGGY] [BUGGY] return true; } return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isAssignmentOp [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.24854790640048002	1028	1028	7	add	
61	[BUG] [BUGGY] return n.getType() == Token.GETPROP || n.getType() == Token.GETELEM; [FE] AssertionFailedError [CONTEXT] static boolean isGet(Node n) { [BUGGY] return n.getType() == Token.GETPROP  || n.getType() == Token.GETELEM; [BUGGY] || n.getType() == Token.GETELEM; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isGet [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.24052284646041733	1084	1085	7	replace	
62	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean isGet(Node n) { [BUGGY] [BUGGY] return n.getType() == Token.GETPROP  || n.getType() == Token.GETELEM; || n.getType() == Token.GETELEM; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isGet [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.24052284646041733	1084	1085	7	add	
63	[BUG] [BUGGY] return functionCallHasSideEffects(callNode, null); [FE] AssertionFailedError [CONTEXT] static boolean functionCallHasSideEffects( Node callNode) { [BUGGY] return functionCallHasSideEffects(callNode, null); [BUGGY] } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines String JSC_PROPERTY_NAME_FN name boolean Map vars int type Node callNode  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2279211529192759	724	724	7	replace	
64	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean functionCallHasSideEffects( Node callNode) { [BUGGY] [BUGGY] return functionCallHasSideEffects(callNode, null); } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines String JSC_PROPERTY_NAME_FN name boolean Map vars int type Node callNode  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2279211529192759	724	724	7	add	
65	[BUG] [BUGGY] return NodeUtil.functionCallHasSideEffects(n, compiler); [FE] AssertionFailedError [CONTEXT] return true; } switch(n.getType()) { case Token.DELPROP: case Token.DEC: case Token.INC: case Token.THROW: return true; case Token.CALL: [BUGGY] return NodeUtil.functionCallHasSideEffects(n, compiler); [BUGGY] case Token.NEW: return NodeUtil.constructorCallHasSideEffects(n, compiler); case Token.NAME:  return n.hasChildren(); default: return false; } } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean  Node n AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node n String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2279211529192759	823	823	7	replace	
66	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] return true; } switch(n.getType()) { case Token.DELPROP: case Token.DEC: case Token.INC: case Token.THROW: return true; case Token.CALL: [BUGGY] [BUGGY] return NodeUtil.functionCallHasSideEffects(n, compiler); case Token.NEW: return NodeUtil.constructorCallHasSideEffects(n, compiler); case Token.NAME:  return n.hasChildren(); default: return false; } } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean  Node n AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node n String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2279211529192759	823	823	7	add	
67	[BUG] [BUGGY] if (callNode.hasOneChild() && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString())) { [FE] AssertionFailedError [CONTEXT] Node nameNode = callNode.getFirstChild();  if (nameNode.getType() == Token.NAME) { String name = nameNode.getString(); if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) { return false; } } else if (nameNode.getType() == Token.GETPROP) { [BUGGY] if (callNode.hasOneChild()   && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(        nameNode.getLastChild().getString())) { [BUGGY] && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains( nameNode.getLastChild().getString())) { return false; } if (callNode.isOnlyModifiesThisCall() && evaluatesToLocalValue(nameNode.getFirstChild())) { return false; }  [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	754	756	7	replace	
68	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Node nameNode = callNode.getFirstChild();  if (nameNode.getType() == Token.NAME) { String name = nameNode.getString(); if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) { return false; } } else if (nameNode.getType() == Token.GETPROP) { [BUGGY] [BUGGY] if (callNode.hasOneChild()   && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(        nameNode.getLastChild().getString())) { && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains( nameNode.getLastChild().getString())) { return false; } if (callNode.isOnlyModifiesThisCall() && evaluatesToLocalValue(nameNode.getFirstChild())) { return false; }  [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	754	756	7	add	
69	[BUG] [BUGGY] if (callNode.isOnlyModifiesThisCall() && evaluatesToLocalValue(nameNode.getFirstChild())) { [FE] AssertionFailedError [CONTEXT] if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) { return false; } } else if (nameNode.getType() == Token.GETPROP) { if (callNode.hasOneChild() && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains( nameNode.getLastChild().getString())) { return false; } [BUGGY] if (callNode.isOnlyModifiesThisCall()   && evaluatesToLocalValue(nameNode.getFirstChild())) { [BUGGY] && evaluatesToLocalValue(nameNode.getFirstChild())) { return false; }  if (nameNode.getFirstChild().getType() == Token.NAME) { String namespaceName = nameNode.getFirstChild().getString(); if (namespaceName.equals("Math")) { return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	replace	
70	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) { return false; } } else if (nameNode.getType() == Token.GETPROP) { if (callNode.hasOneChild() && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains( nameNode.getLastChild().getString())) { return false; } [BUGGY] [BUGGY] if (callNode.isOnlyModifiesThisCall()   && evaluatesToLocalValue(nameNode.getFirstChild())) { && evaluatesToLocalValue(nameNode.getFirstChild())) { return false; }  if (nameNode.getFirstChild().getType() == Token.NAME) { String namespaceName = nameNode.getFirstChild().getString(); if (namespaceName.equals("Math")) { return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	760	761	7	add	
71	[BUG] [BUGGY] if (nameNode.getFirstChild().getType() == Token.NAME) { [FE] AssertionFailedError [CONTEXT] nameNode.getLastChild().getString())) { return false; } if (callNode.isOnlyModifiesThisCall() && evaluatesToLocalValue(nameNode.getFirstChild())) { return false; }  [BUGGY] if (nameNode.getFirstChild().getType() == Token.NAME) { [BUGGY] String namespaceName = nameNode.getFirstChild().getString(); if (namespaceName.equals("Math")) { return false; } } if (compiler != null && !compiler.hasRegExpGlobalReferences()) { if (nameNode.getFirstChild().getType() == Token.REGEXP && REGEXP_METHODS.contains(nameNode.getLastChild().getString())) { return false; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	replace	
72	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] nameNode.getLastChild().getString())) { return false; } if (callNode.isOnlyModifiesThisCall() && evaluatesToLocalValue(nameNode.getFirstChild())) { return false; }  [BUGGY] [BUGGY] if (nameNode.getFirstChild().getType() == Token.NAME) { String namespaceName = nameNode.getFirstChild().getString(); if (namespaceName.equals("Math")) { return false; } } if (compiler != null && !compiler.hasRegExpGlobalReferences()) { if (nameNode.getFirstChild().getType() == Token.REGEXP && REGEXP_METHODS.contains(nameNode.getLastChild().getString())) { return false; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	766	766	7	add	
73	[BUG] [BUGGY] if (compiler != null && !compiler.hasRegExpGlobalReferences()) { [FE] AssertionFailedError [CONTEXT] }  if (nameNode.getFirstChild().getType() == Token.NAME) { String namespaceName = nameNode.getFirstChild().getString(); if (namespaceName.equals("Math")) { return false; } } [BUGGY] if (compiler != null && !compiler.hasRegExpGlobalReferences()) { [BUGGY] if (nameNode.getFirstChild().getType() == Token.REGEXP && REGEXP_METHODS.contains(nameNode.getLastChild().getString())) { return false; } else if (nameNode.getFirstChild().getType() == Token.STRING && STRING_REGEXP_METHODS.contains( nameNode.getLastChild().getString())) { Node param = nameNode.getNext(); if (param != null && (param.getType() == Token.STRING || param.getType() == Token.REGEXP)) [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	773	773	7	replace	
74	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] }  if (nameNode.getFirstChild().getType() == Token.NAME) { String namespaceName = nameNode.getFirstChild().getString(); if (namespaceName.equals("Math")) { return false; } } [BUGGY] [BUGGY] if (compiler != null && !compiler.hasRegExpGlobalReferences()) { if (nameNode.getFirstChild().getType() == Token.REGEXP && REGEXP_METHODS.contains(nameNode.getLastChild().getString())) { return false; } else if (nameNode.getFirstChild().getType() == Token.STRING && STRING_REGEXP_METHODS.contains( nameNode.getLastChild().getString())) { Node param = nameNode.getNext(); if (param != null && (param.getType() == Token.STRING || param.getType() == Token.REGEXP)) [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2253744679276044	773	773	7	add	
75	[BUG] [BUGGY] if (callNode.getType() != Token.CALL) { [FE] AssertionFailedError [CONTEXT] Node callNode, @Nullable AbstractCompiler compiler) { [BUGGY] if (callNode.getType() != Token.CALL) { [BUGGY] throw new IllegalStateException( "Expected CALL node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { return false; } Node nameNode = callNode.getFirstChild();  [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	replace	
76	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Node callNode, @Nullable AbstractCompiler compiler) { [BUGGY] [BUGGY] if (callNode.getType() != Token.CALL) { throw new IllegalStateException( "Expected CALL node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { return false; } Node nameNode = callNode.getFirstChild();  [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	736	736	7	add	
77	[BUG] [BUGGY] if (callNode.isNoSideEffectsCall()) { [FE] AssertionFailedError [CONTEXT] Node callNode, @Nullable AbstractCompiler compiler) { if (callNode.getType() != Token.CALL) { throw new IllegalStateException( "Expected CALL node, got " + Token.name(callNode.getType())); } [BUGGY] if (callNode.isNoSideEffectsCall()) { [BUGGY] return false; } Node nameNode = callNode.getFirstChild();  if (nameNode.getType() == Token.NAME) { String name = nameNode.getString(); if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) { return false; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	741	741	7	replace	
78	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Node callNode, @Nullable AbstractCompiler compiler) { if (callNode.getType() != Token.CALL) { throw new IllegalStateException( "Expected CALL node, got " + Token.name(callNode.getType())); } [BUGGY] [BUGGY] if (callNode.isNoSideEffectsCall()) { return false; } Node nameNode = callNode.getFirstChild();  if (nameNode.getType() == Token.NAME) { String name = nameNode.getString(); if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) { return false; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	741	741	7	add	
79	[BUG] [BUGGY] Node nameNode = callNode.getFirstChild(); [FE] AssertionFailedError [CONTEXT] Node callNode, @Nullable AbstractCompiler compiler) { if (callNode.getType() != Token.CALL) { throw new IllegalStateException( "Expected CALL node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { return false; } [BUGGY] Node nameNode = callNode.getFirstChild(); [BUGGY]   if (nameNode.getType() == Token.NAME) { String name = nameNode.getString(); if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) { return false; } } else if (nameNode.getType() == Token.GETPROP) { if (callNode.hasOneChild() && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains( [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	745	745	7	replace	
80	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Node callNode, @Nullable AbstractCompiler compiler) { if (callNode.getType() != Token.CALL) { throw new IllegalStateException( "Expected CALL node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { return false; } [BUGGY] [BUGGY] Node nameNode = callNode.getFirstChild();  if (nameNode.getType() == Token.NAME) { String name = nameNode.getString(); if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) { return false; } } else if (nameNode.getType() == Token.GETPROP) { if (callNode.hasOneChild() && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains( [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	745	745	7	add	
81	[BUG] [BUGGY] if (nameNode.getType() == Token.NAME) { [FE] AssertionFailedError [CONTEXT] "Expected CALL node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { return false; } Node nameNode = callNode.getFirstChild();  [BUGGY] if (nameNode.getType() == Token.NAME) { [BUGGY] String name = nameNode.getString(); if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) { return false; } } else if (nameNode.getType() == Token.GETPROP) { if (callNode.hasOneChild() && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains( nameNode.getLastChild().getString())) { return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	replace	
82	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] "Expected CALL node, got " + Token.name(callNode.getType())); } if (callNode.isNoSideEffectsCall()) { return false; } Node nameNode = callNode.getFirstChild();  [BUGGY] [BUGGY] if (nameNode.getType() == Token.NAME) { String name = nameNode.getString(); if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) { return false; } } else if (nameNode.getType() == Token.GETPROP) { if (callNode.hasOneChild() && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains( nameNode.getLastChild().getString())) { return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	748	748	7	add	
83	[BUG] [BUGGY] } else if (nameNode.getType() == Token.GETPROP) { [FE] AssertionFailedError [CONTEXT] } Node nameNode = callNode.getFirstChild();  if (nameNode.getType() == Token.NAME) { String name = nameNode.getString(); if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) { return false; } [BUGGY] } else if (nameNode.getType() == Token.GETPROP) { [BUGGY] if (callNode.hasOneChild() && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains( nameNode.getLastChild().getString())) { return false; } if (callNode.isOnlyModifiesThisCall() && evaluatesToLocalValue(nameNode.getFirstChild())) { return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	replace	
84	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } Node nameNode = callNode.getFirstChild();  if (nameNode.getType() == Token.NAME) { String name = nameNode.getString(); if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) { return false; } [BUGGY] [BUGGY] } else if (nameNode.getType() == Token.GETPROP) { if (callNode.hasOneChild() && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains( nameNode.getLastChild().getString())) { return false; } if (callNode.isOnlyModifiesThisCall() && evaluatesToLocalValue(nameNode.getFirstChild())) { return false; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	753	753	7	add	
85	[BUG] [BUGGY] return true; [FE] AssertionFailedError [CONTEXT] nameNode.getLastChild().getString())) { Node param = nameNode.getNext(); if (param != null && (param.getType() == Token.STRING || param.getType() == Token.REGEXP)) return false; } } } [BUGGY] return true; [BUGGY] } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	789	789	7	replace	
86	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] nameNode.getLastChild().getString())) { Node param = nameNode.getNext(); if (param != null && (param.getType() == Token.STRING || param.getType() == Token.REGEXP)) return false; } } } [BUGGY] [BUGGY] return true; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean  Node callNode AbstractCompiler compiler [VARIABLES] AbstractCompiler compiler Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines boolean Node callNode nameNode param String JSC_PROPERTY_NAME_FN name namespaceName Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	789	789	7	add	
87	[BUG] [BUGGY] return n.getType() == Token.NEW; [FE] AssertionFailedError [CONTEXT] static boolean isNew(Node n) { [BUGGY] return n.getType() == Token.NEW; [BUGGY] } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isNew [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	1106	1106	7	replace	
88	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean isNew(Node n) { [BUGGY] [BUGGY] return n.getType() == Token.NEW; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isNew [RETURN_TYPE] boolean  Node n [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type Node n  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	1106	1106	7	add	
89	[BUG] [BUGGY] char c = s.charAt(index); [FE] AssertionFailedError [CONTEXT] static boolean isLatin(String s) { char LARGEST_BASIC_LATIN = 0x7f; int len = s.length(); for (int index = 0; index < len; index++) { [BUGGY] char c = s.charAt(index); [BUGGY] if (c > LARGEST_BASIC_LATIN) { return false; } } return true; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isLatin [RETURN_TYPE] boolean  String s [VARIABLES] char LARGEST_BASIC_LATIN c Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN methodName name namespaceName originalName part propName res s boolean Map vars int charno endPos index len lineno operator startPos type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	1969	1969	7	replace	
90	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean isLatin(String s) { char LARGEST_BASIC_LATIN = 0x7f; int len = s.length(); for (int index = 0; index < len; index++) { [BUGGY] [BUGGY] char c = s.charAt(index); if (c > LARGEST_BASIC_LATIN) { return false; } } return true; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isLatin [RETURN_TYPE] boolean  String s [VARIABLES] char LARGEST_BASIC_LATIN c Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN methodName name namespaceName originalName part propName res s boolean Map vars int charno endPos index len lineno operator startPos type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	1969	1969	7	add	
91	[BUG] [BUGGY] if (c > LARGEST_BASIC_LATIN) { [FE] AssertionFailedError [CONTEXT] static boolean isLatin(String s) { char LARGEST_BASIC_LATIN = 0x7f; int len = s.length(); for (int index = 0; index < len; index++) { char c = s.charAt(index); [BUGGY] if (c > LARGEST_BASIC_LATIN) { [BUGGY] return false; } } return true; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isLatin [RETURN_TYPE] boolean  String s [VARIABLES] char LARGEST_BASIC_LATIN c Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN methodName name namespaceName originalName part propName res s boolean Map vars int charno endPos index len lineno operator startPos type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	1970	1970	7	replace	
92	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static boolean isLatin(String s) { char LARGEST_BASIC_LATIN = 0x7f; int len = s.length(); for (int index = 0; index < len; index++) { char c = s.charAt(index); [BUGGY] [BUGGY] if (c > LARGEST_BASIC_LATIN) { return false; } } return true; } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] isLatin [RETURN_TYPE] boolean  String s [VARIABLES] char LARGEST_BASIC_LATIN c Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN methodName name namespaceName originalName part propName res s boolean Map vars int charno endPos index len lineno operator startPos type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.2234516768171576	1970	1970	7	add	
93	[BUG] [BUGGY] switch (type) { [FE] AssertionFailedError [CONTEXT] static int precedence(int type) { [BUGGY] switch (type) { [BUGGY] case Token.COMMA:return 0; case Token.ASSIGN_BITOR: case Token.ASSIGN_BITXOR: case Token.ASSIGN_BITAND: case Token.ASSIGN_LSH: case Token.ASSIGN_RSH: case Token.ASSIGN_URSH: case Token.ASSIGN_ADD: case Token.ASSIGN_SUB: case Token.ASSIGN_MUL: [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] precedence [RETURN_TYPE] int  int type [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.22237479499833035	901	901	7	replace	
94	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static int precedence(int type) { [BUGGY] [BUGGY] switch (type) { case Token.COMMA:return 0; case Token.ASSIGN_BITOR: case Token.ASSIGN_BITXOR: case Token.ASSIGN_BITAND: case Token.ASSIGN_LSH: case Token.ASSIGN_RSH: case Token.ASSIGN_URSH: case Token.ASSIGN_ADD: case Token.ASSIGN_SUB: case Token.ASSIGN_MUL: [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] precedence [RETURN_TYPE] int  int type [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.22237479499833035	901	901	7	add	
95	[BUG] [BUGGY] return 15; [FE] AssertionFailedError [CONTEXT] case Token.LP: case Token.NAME: case Token.NULL: case Token.NUMBER: case Token.OBJECTLIT: case Token.REGEXP: case Token.RETURN: case Token.STRING: case Token.THIS: case Token.TRUE: [BUGGY] return 15; [BUGGY]  default: throw new Error("Unknown precedence for " + Node.tokenToName(type) + " (type " + type + ")"); } } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] precedence [RETURN_TYPE] int  int type [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.22237479499833035	969	969	7	replace	
96	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case Token.LP: case Token.NAME: case Token.NULL: case Token.NUMBER: case Token.OBJECTLIT: case Token.REGEXP: case Token.RETURN: case Token.STRING: case Token.THIS: case Token.TRUE: [BUGGY] [BUGGY] return 15; default: throw new Error("Unknown precedence for " + Node.tokenToName(type) + " (type " + type + ")"); } } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] precedence [RETURN_TYPE] int  int type [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN name namespaceName boolean Map vars int type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.22237479499833035	969	969	7	add	
97	[BUG] [BUGGY] switch (operator) { [FE] AssertionFailedError [CONTEXT] static String opToStr(int operator) { [BUGGY] switch (operator) { [BUGGY] case Token.BITOR: return "|"; case Token.OR: return "||"; case Token.BITXOR: return "^"; case Token.AND: return "&&"; case Token.BITAND: return "&"; case Token.SHEQ: return "==="; case Token.EQ: return "=="; case Token.NOT: return "!"; case Token.NE: return "!="; case Token.SHNE: return "!=="; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] opToStr [RETURN_TYPE] String  int operator [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN methodName name namespaceName propName boolean Map vars int operator type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.22237479499833035	1664	1664	7	replace	
98	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] static String opToStr(int operator) { [BUGGY] [BUGGY] switch (operator) { case Token.BITOR: return "|"; case Token.OR: return "||"; case Token.BITXOR: return "^"; case Token.AND: return "&&"; case Token.BITAND: return "&"; case Token.SHEQ: return "==="; case Token.EQ: return "=="; case Token.NOT: return "!"; case Token.NE: return "!="; case Token.SHNE: return "!=="; [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] opToStr [RETURN_TYPE] String  int operator [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN methodName name namespaceName propName boolean Map vars int operator type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.22237479499833035	1664	1664	7	add	
99	[BUG] [BUGGY] default: return null; [FE] AssertionFailedError [CONTEXT] case Token.ASSIGN_RSH: return ">>="; case Token.ASSIGN_URSH: return ">>>="; case Token.ASSIGN_ADD: return "+="; case Token.ASSIGN_SUB: return "-="; case Token.ASSIGN_MUL: return "*="; case Token.ASSIGN_DIV: return "/="; case Token.ASSIGN_MOD: return "%="; case Token.VOID: return "void"; case Token.TYPEOF: return "typeof"; case Token.INSTANCEOF: return "instanceof"; [BUGGY] default: return null; [BUGGY] } } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] opToStr [RETURN_TYPE] String  int operator [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN methodName name namespaceName propName boolean Map vars int operator type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.22237479499833035	1706	1706	7	replace	
100	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case Token.ASSIGN_RSH: return ">>="; case Token.ASSIGN_URSH: return ">>>="; case Token.ASSIGN_ADD: return "+="; case Token.ASSIGN_SUB: return "-="; case Token.ASSIGN_MUL: return "*="; case Token.ASSIGN_DIV: return "/="; case Token.ASSIGN_MOD: return "%="; case Token.VOID: return "void"; case Token.TYPEOF: return "typeof"; case Token.INSTANCEOF: return "instanceof"; [BUGGY] [BUGGY] default: return null; } } [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType MatchDeclaration MatchNotFunction MatchShallowStatement [METHOD] opToStr [RETURN_TYPE] String  int operator [VARIABLES] Set BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS CONSTRUCTORS_WITHOUT_SIDE_EFFECTS OBJECT_METHODS_WITHOUT_SIDEEFFECTS REGEXP_METHODS STRING_REGEXP_METHODS defines emptySet knownConstants String JSC_PROPERTY_NAME_FN methodName name namespaceName propName boolean Map vars int operator type  	projects/Closure86/src/com/google/javascript/jscomp/NodeUtil.java	0.22237479499833035	1706	1706	7	add	
