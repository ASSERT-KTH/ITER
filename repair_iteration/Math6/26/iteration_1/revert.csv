projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411k=xmean.add(times(diagD,arz.getColumnMatrix(i)).scalarMultiply(sigma));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411k=xmean.add(times(diagD,arz.getColumnMatrix(k)).scalarMultiply(sigma));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411copyColumn(arxk,0,arx,k);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411copyColumn(arxk,0,arindex,k);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411scan(arxk,0,arindex,k);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411Arxk=xmean.add(times(diagD,arz.getColumnMatrix(i)).scalarMultiply(sigma));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411Arxk=xmean.add(times(diagD,arz.getRowMatrix(i)).scalarMultiply(sigma));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411Arxk=xmean.add(times(diagD,arz.getRangeMatrix(i)).scalarMultiply(sigma));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411copyColumn(arx,0,arz,k);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411k=xmean.add(times(diagD,arz.getRowMatrix(k)).scalarMultiply(sigma));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411copyColumn(arxk,0,arz,k);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411scan(arxk,0,arindex,1);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411scan(arxk,0,arindex,sigma);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411copyColumn(arx,0,arz,dimension);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411sigma.copyColumn(arx,0,arz,k);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411Arxk=xmean.add(times(diagD,arz.getColumnMatrix(k)).scalarMultiply(sigma));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411Arxk=zmean.add(times(diagD,arz.getColumnMatrix(k)).scalarMultiply(sigma));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411Arxk=xmean.add(times(diagD,arz.getRangeMatrix(k)).scalarMultiply(sigma));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411copyColumn(arxk,0,arindex,sigma);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411copyColumn(arxk,0,arindex,1);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411sigma.copyColumn(arxk,0,arz,k);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411copyColumn(arxk,0,arz,dimension);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411k=zmean.add(times(diagD,arz.getColumnMatrix(k)).scalarMultiply(sigma));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411Arxk=xmean.add(times(diagD,arz.getRowMatrix(k)).scalarMultiply(sigma));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411sigma.copyColumn(arxk,0,arindex,k);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411scan(arxk,0,arz,k);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411copyColumn(arxk,0,arz,i);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411scan(diagD,0,arindex,k);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java411scan(arx,0,arz,k);
