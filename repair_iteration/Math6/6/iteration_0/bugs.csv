bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
11	[BUG] [BUGGY] return new Array2DRowRealMatrix(d, false); [FE] AssertionError [CONTEXT] final double[][] d = new double[m.getRowDimension()][m.getRowDimension()]; for (int i = 0; i < m.getRowDimension(); i++) { d[i][i] = m.getEntry(i, 0); } return new Array2DRowRealMatrix(d, false); } else { final double[][] d = new double[m.getRowDimension()][1]; for (int i = 0; i < m.getColumnDimension(); i++) { d[i][0] = m.getEntry(i, i); } [BUGGY] return new Array2DRowRealMatrix(d, false); [BUGGY] } } [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] diag [RETURN_TYPE] RealMatrix  RealMatrix m [VARIABLES] boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] doubles fitness fitnessHistory guess init inputSigma lB pcCol point repaired s sigma sqrtDiagC uB vals x RealMatrix B BD C Cneg D arnorms arnormsInv arnormsReverse arnormsSorted arpos artmp arx arxk arz arzneg bestArx bestArz diagC diagD insigma m n pc ps roneu weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps diff e historyBest historyWorst logMu2 mueff negalphaold negccov negcovMax negminresidualvariance normps oldFac penalty sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sum sumw sumwq tfac val value valueRange w worstFitness double[][] d List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int c checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu r size RandomGenerator random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1113	1113	28	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double[][] d = new double[m.getRowDimension()][m.getRowDimension()]; for (int i = 0; i < m.getRowDimension(); i++) { d[i][i] = m.getEntry(i, 0); } return new Array2DRowRealMatrix(d, false); } else { final double[][] d = new double[m.getRowDimension()][1]; for (int i = 0; i < m.getColumnDimension(); i++) { d[i][0] = m.getEntry(i, i); } [BUGGY] [BUGGY] return new Array2DRowRealMatrix(d, false); } } [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] diag [RETURN_TYPE] RealMatrix  RealMatrix m [VARIABLES] boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] doubles fitness fitnessHistory guess init inputSigma lB pcCol point repaired s sigma sqrtDiagC uB vals x RealMatrix B BD C Cneg D arnorms arnormsInv arnormsReverse arnormsSorted arpos artmp arx arxk arz arzneg bestArx bestArz diagC diagD insigma m n pc ps roneu weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps diff e historyBest historyWorst logMu2 mueff negalphaold negccov negcovMax negminresidualvariance normps oldFac penalty sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sum sumw sumwq tfac val value valueRange w worstFitness double[][] d List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int c checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu r size RandomGenerator random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1113	1113	28	add	
