bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  [CE]  [FE]    AssertionError  [CONTEXT]  }    if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  [BUGGY]    sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  [BUGGY]  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {  break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	457	457	28	replace	    sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;		non-compiled	[CE]  	96	None	add
2	[BUG]  [BUGGY]    sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  }  [CE]  [FE]      AssertionError  [CONTEXT]  }    if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  [BUGGY]    sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  }  [BUGGY]  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {  break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	457	457	28	replace	    sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  }		non-compiled	[CE]  	96	None	add
3	[BUG]  [BUGGY]    sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {  break  generationLoop;  [CE]  [FE]        AssertionError  [CONTEXT]  }    if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  [BUGGY]    sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {  break  generationLoop;  [BUGGY]  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {  break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	457	457	28	replace	    sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {  break  generationLoop;		non-compiled	[CE]  	96	None	add
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pcCol.length;  i++)  {  [CE]  [FE]    AssertionError  [CONTEXT]  }    if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  [BUGGY]  for(int  i  =  0;  i  <  pcCol.length;  i++)  {  [BUGGY]  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {  break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	457	457	28	replace	for(int  i  =  0;  i  <  pcCol.length;  i++)  {	for  (int  i  =  0;  i  <  dimension;  i++)  {  	non-compiled	[CE]  	95	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  sqrtDiagC.length;  i++)  {  [CE]  [FE]      AssertionError  [CONTEXT]  }    if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  [BUGGY]  for(int  i  =  0;  i  <  sqrtDiagC.length;  i++)  {  [BUGGY]  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {  break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	457	457	28	replace	for(int  i  =  0;  i  <  sqrtDiagC.length;  i++)  {	for  (int  i  =  0;  i  <  dimension;  i++)  {  	non-compiled	[CE]  	95	None	replace
6	[BUG]  [BUGGY]    sigma  =  Math.max(Math.abs(pcCol[0]),  sqrtDiagC[0]);  [CE]  [FE]    AssertionError  [CONTEXT]  }    if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  [BUGGY]    sigma  =  Math.max(Math.abs(pcCol[0]),  sqrtDiagC[0]);  [BUGGY]  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {  break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	457	457	28	replace	    sigma  =  Math.max(Math.abs(pcCol[0]),  sqrtDiagC[0]);		non-compiled	[CE]  	96	None	add
7	[BUG]  [BUGGY]    sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  pcCol[i]);  [CE]  [FE]      AssertionError  [CONTEXT]  }    if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  [BUGGY]    sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  pcCol[i]);  [BUGGY]  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {  break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	457	457	28	replace	    sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  pcCol[i]);		non-compiled	[CE]  	96	None	add
8	[BUG]  [BUGGY]    sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  pcCol);  [CE]  [FE]        AssertionError  [CONTEXT]  }    if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  [BUGGY]    sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  pcCol);  [BUGGY]  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {  break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	457	457	28	replace	    sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  pcCol);		non-compiled	[CE]  	96	None	add
9	[BUG]  [BUGGY]    sigma  =  Math.max(Math.abs(sqrtDiagC[0]),  pcCol[1]);  [CE]  [FE]    AssertionError  [CONTEXT]  }    if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  [BUGGY]    sigma  =  Math.max(Math.abs(sqrtDiagC[0]),  pcCol[1]);  [BUGGY]  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {  break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	457	457	28	replace	    sigma  =  Math.max(Math.abs(sqrtDiagC[0]),  pcCol[1]);		non-compiled	[CE]  	96	None	add
