bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  return  iterations  ==  null?  0  :  iterations.getCount();  [BUGGY]    }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	add	return  iterations  ==  null?  0  :  iterations.getCount();	  return    iterations!=    null?    0    :    iterations.getCount();    	compilable	  [FE]  AssertionError  	10	28	replace
2	[BUG]  [BUGGY]  return  iterations  ==  null?  0  :  iterations.getCount();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  return  iterations  ==  null?  0  :  iterations.getCount();  [BUGGY]    }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	return  iterations  ==  null?  0  :  iterations.getCount();	  return    iterations!=    null?    0    :    iterations.getCount();    	compilable	  [FE]  AssertionError  	10	28	replace
3	[BUG]  [BUGGY]  return  iterations!=  null?  0  :  iterations.getCount();  iterations!=  null?  0  :  iterations.getCount();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  return  iterations!=  null?  0  :  iterations.getCount();  iterations!=  null?  0  :  iterations.getCount();  [BUGGY]    }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	return    iterations!=    null?    0    :    iterations.getCount();    iterations!=  null?  0  :  iterations.getCount();	  	non-compiled	[CE]  not  a  statement	9	None	add
4	[BUG]  [BUGGY]  return  iterations!=  null?  0  :  iterations.getCount();  int  iterations  =  getIterationsCount();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  return  iterations!=  null?  0  :  iterations.getCount();  int  iterations  =  getIterationsCount();  [BUGGY]    }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	return    iterations!=    null?    0    :    iterations.getCount();    int  iterations  =  getIterationsCount();	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
5	[BUG]  [BUGGY]  return  iterations!=  null?  0  :  iterations.getCount();  Iterator  <  Increment>  iterations  =  getIterations();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  return  iterations!=  null?  0  :  iterations.getCount();  Iterator  <  Increment>  iterations  =  getIterations();  [BUGGY]    }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	return    iterations!=    null?    0    :    iterations.getCount();    Iterator  <  Increment>  iterations  =  getIterations();	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
6	[BUG]  [BUGGY]  return  iterations.size()  -  1;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  return  iterations.size()  -  1;  [BUGGY]    }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	return  iterations.size()  -  1;	  return    iterations.size();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
7	[BUG]  [BUGGY]  int  iterationsCount  =  getIterationsCount()  -  1;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  int  iterationsCount  =  getIterationsCount()  -  1;  [BUGGY]    return  iterations.getCount();  }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	int  iterationsCount  =  getIterationsCount()  -  1;	      int    iterationsCount    =    getIterationsCount();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
8	[BUG]  [BUGGY]  int  iterations  =  getIterationsCount()  -  1;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  int  iterations  =  getIterationsCount()  -  1;  [BUGGY]    return  iterations.getCount();  }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	int  iterations  =  getIterationsCount()  -  1;	      int    iterations    =    getIterationsCount();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
9	[BUG]  [BUGGY]  return  iterations.getCount()  -  1;  int  count  =  iterations.getCount()  -  1;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  return  iterations.getCount()  -  1;  int  count  =  iterations.getCount()  -  1;  [BUGGY]    }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	return    iterations.getCount()    -    1;    int  count  =  iterations.getCount()  -  1;	  	non-compiled	[CE]  unreachable  statement	5	None	add
10	[BUG]  [BUGGY]  return  iterations.getCount()  -  1;  iterations.getCount()  -  1;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  return  iterations.getCount()  -  1;  iterations.getCount()  -  1;  [BUGGY]    }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	return    iterations.getCount()    -    1;    iterations.getCount()  -  1;	  	non-compiled	[CE]  not  a  statement	5	None	add
11	[BUG]  [BUGGY]  return  iterations.getCount()  -  1;  int  count  =  iterations.getCount();  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  return  iterations.getCount()  -  1;  int  count  =  iterations.getCount();  [BUGGY]    }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	return    iterations.getCount()    -    1;    int  count  =  iterations.getCount();	  	non-compiled	[CE]  unreachable  statement	5	None	add
12	[BUG]  [BUGGY]  Iterator  <  Increment>  iterations  =  super.iterations.iterator();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  Iterator  <  Increment>  iterations  =  super.iterations.iterator();  [BUGGY]    return  iterations.getCount();  }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	Iterator  <  Increment>  iterations  =  super.iterations.iterator();	      Iterator    <    Increment>    iterations    =    this.iterations.iterator();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
13	[BUG]  [BUGGY]  int  count  =  iterations.size()  -  1;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  int  count  =  iterations.size()  -  1;  [BUGGY]    return  iterations.getCount();  }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	int  count  =  iterations.size()  -  1;	      int    count    =    iterations.size();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
14	[BUG]  [BUGGY]  return  iterations!=  null?  0  :  iterations.getCount();  int  iterations  =  getIterations();  [CE]  int  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  return  iterations!=  null?  0  :  iterations.getCount();  int  iterations  =  getIterations();  [BUGGY]    }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	return    iterations!=    null?    0    :    iterations.getCount();    int  iterations  =  getIterations();	  	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	add
15	[BUG]  [BUGGY]  return  iterations.getCount()  -  1;  Iterator  <  Increment>  iterations  =  getIterations();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  return  iterations.getCount()  -  1;  Iterator  <  Increment>  iterations  =  getIterations();  [BUGGY]    }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	return    iterations.getCount()    -    1;    Iterator  <  Increment>  iterations  =  getIterations();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
16	[BUG]  [BUGGY]  int  iterations  =  getIterations().size();  [CE]  int  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  int  iterations  =  getIterations().size();  [BUGGY]    return  iterations.getCount();  }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	int  iterations  =  getIterations().size();	      int    iterations    =    getIterations();    	non-compiled	[CE]  int  cannot  be  dereferenced	8	None	replace
17	[BUG]  [BUGGY]  return  iterations!=  null?  0  :  iterations.size();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  return  iterations!=  null?  0  :  iterations.size();  [BUGGY]    }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	return  iterations!=  null?  0  :  iterations.size();	  return    iterations.size();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
18	[BUG]  [BUGGY]  Iterator  <  Increment>  iterations  =  super.iterators.iterator();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  Iterator  <  Increment>  iterations  =  super.iterators.iterator();  [BUGGY]    return  iterations.getCount();  }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	Iterator  <  Increment>  iterations  =  super.iterators.iterator();	      Iterator    <    Increment>    iterations    =    this.iterations.iterator();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
19	[BUG]  [BUGGY]  return  iterations!=  null?  0  :  iterations.getCount();  int  iterations!=  null?  0  :  iterations.getCount();  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    public  int  getIterations()  {    [BUGGY]  return  iterations!=  null?  0  :  iterations.getCount();  int  iterations!=  null?  0  :  iterations.getCount();  [BUGGY]    }  [CLASS]  BaseOptimizer  MaxEvalCallback  MaxIterCallback  [METHOD]  getIterations  [RETURN_TYPE]  int  [VARIABLES]  Incrementor  evaluations  iterations  ConvergenceChecker  checker  boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	return    iterations!=    null?    0    :    iterations.getCount();    int  iterations!=  null?  0  :  iterations.getCount();	  	non-compiled	[CE]  ';'  expected	9	None	add
