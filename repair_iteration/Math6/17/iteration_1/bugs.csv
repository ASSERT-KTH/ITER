bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    lastResult.addValue(generateStatistics?  bestValue  :  bestValue);  [CE]  [FE]    AssertionError  [CONTEXT]  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  PointValuePair  lastResult  =  null;    generationLoop:  [BUGGY]    lastResult.addValue(generateStatistics?  bestValue  :  bestValue);  [BUGGY]  for  (iterations  =  1;  iterations  <=  maxIterations;  iterations++)  {  final  RealMatrix  arz  =  randn1(dimension,  lambda);  final  RealMatrix  arx  =  zeros(dimension,  lambda);  final  double[]  fitness  =  new  double[lambda];  for  (int  k  =  0;  k  <  lambda;  k++)  {  RealMatrix  arxk  =  null;  for  (int  i  =  0;  i  <  checkFeasableCount  +  1;  i++)  {  if  (diagonalOnly  <=  0)  {  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	387	387	28	replace	    lastResult.addValue(generateStatistics?  bestValue  :  bestValue);		non-compiled	[CE]  	34	None	add
2	[BUG]  [BUGGY]    lastResult.addValue(generateStatistics);  [CE]  [FE]      AssertionError  [CONTEXT]  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  PointValuePair  lastResult  =  null;    generationLoop:  [BUGGY]    lastResult.addValue(generateStatistics);  [BUGGY]  for  (iterations  =  1;  iterations  <=  maxIterations;  iterations++)  {  final  RealMatrix  arz  =  randn1(dimension,  lambda);  final  RealMatrix  arx  =  zeros(dimension,  lambda);  final  double[]  fitness  =  new  double[lambda];  for  (int  k  =  0;  k  <  lambda;  k++)  {  RealMatrix  arxk  =  null;  for  (int  i  =  0;  i  <  checkFeasableCount  +  1;  i++)  {  if  (diagonalOnly  <=  0)  {  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	387	387	28	replace	    lastResult.addValue(generateStatistics);		non-compiled	[CE]  	34	None	add
3	[BUG]  [BUGGY]    lastResult.addValue(generateStatistics?  bestValue  :  optimum);  [CE]  [FE]        AssertionError  [CONTEXT]  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  PointValuePair  lastResult  =  null;    generationLoop:  [BUGGY]    lastResult.addValue(generateStatistics?  bestValue  :  optimum);  [BUGGY]  for  (iterations  =  1;  iterations  <=  maxIterations;  iterations++)  {  final  RealMatrix  arz  =  randn1(dimension,  lambda);  final  RealMatrix  arx  =  zeros(dimension,  lambda);  final  double[]  fitness  =  new  double[lambda];  for  (int  k  =  0;  k  <  lambda;  k++)  {  RealMatrix  arxk  =  null;  for  (int  i  =  0;  i  <  checkFeasableCount  +  1;  i++)  {  if  (diagonalOnly  <=  0)  {  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	387	387	28	replace	    lastResult.addValue(generateStatistics?  bestValue  :  optimum);		non-compiled	[CE]  	34	None	add
4	[BUG]  [BUGGY]  for(iterations  =  1;  iterations  <  maxIterations;  iterations++)  {  [CE]  [FE]    AssertionError  [CONTEXT]  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  PointValuePair  lastResult  =  null;    generationLoop:  [BUGGY]  for(iterations  =  1;  iterations  <  maxIterations;  iterations++)  {  [BUGGY]    final  RealMatrix  arz  =  randn1(dimension,  lambda);  final  RealMatrix  arx  =  zeros(dimension,  lambda);  final  double[]  fitness  =  new  double[lambda];  for  (int  k  =  0;  k  <  lambda;  k++)  {  RealMatrix  arxk  =  null;  for  (int  i  =  0;  i  <  checkFeasableCount  +  1;  i++)  {  if  (diagonalOnly  <=  0)  {  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	387	387	28	replace	for(iterations  =  1;  iterations  <  maxIterations;  iterations++)  {	for  (iterations  =  1;  iterations  <=  maxIterations;  iterations++)  {  	non-compiled	[CE]  	33	None	replace
5	[BUG]  [BUGGY]  for(iterations  =  0;  iterations  <  =  maxIterations;  iterations++)  {  [CE]  [FE]      AssertionError  [CONTEXT]  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  PointValuePair  lastResult  =  null;    generationLoop:  [BUGGY]  for(iterations  =  0;  iterations  <  =  maxIterations;  iterations++)  {  [BUGGY]    final  RealMatrix  arz  =  randn1(dimension,  lambda);  final  RealMatrix  arx  =  zeros(dimension,  lambda);  final  double[]  fitness  =  new  double[lambda];  for  (int  k  =  0;  k  <  lambda;  k++)  {  RealMatrix  arxk  =  null;  for  (int  i  =  0;  i  <  checkFeasableCount  +  1;  i++)  {  if  (diagonalOnly  <=  0)  {  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	387	387	28	replace	for(iterations  =  0;  iterations  <  =  maxIterations;  iterations++)  {	for  (iterations  =  1;  iterations  <=  maxIterations;  iterations++)  {  	non-compiled	[CE]  	33	None	replace
6	[BUG]  [BUGGY]    lastResult  =  new  PointValuePair(getStartPoint(),  isMinimize?  bestValue  :  -bestValue);  [CE]  [FE]    AssertionError  [CONTEXT]  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  PointValuePair  lastResult  =  null;    generationLoop:  [BUGGY]    lastResult  =  new  PointValuePair(getStartPoint(),  isMinimize?  bestValue  :  -bestValue);  [BUGGY]  for  (iterations  =  1;  iterations  <=  maxIterations;  iterations++)  {  final  RealMatrix  arz  =  randn1(dimension,  lambda);  final  RealMatrix  arx  =  zeros(dimension,  lambda);  final  double[]  fitness  =  new  double[lambda];  for  (int  k  =  0;  k  <  lambda;  k++)  {  RealMatrix  arxk  =  null;  for  (int  i  =  0;  i  <  checkFeasableCount  +  1;  i++)  {  if  (diagonalOnly  <=  0)  {  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	387	387	28	replace	    lastResult  =  new  PointValuePair(getStartPoint(),  isMinimize?  bestValue  :  -bestValue);		non-compiled	[CE]  	34	None	add
7	[BUG]  [BUGGY]    lastResult  =  new  PointValuePair(getEndPoint(),  isMinimize?  bestValue  :  -bestValue);  [CE]  [FE]      AssertionError  [CONTEXT]  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  PointValuePair  lastResult  =  null;    generationLoop:  [BUGGY]    lastResult  =  new  PointValuePair(getEndPoint(),  isMinimize?  bestValue  :  -bestValue);  [BUGGY]  for  (iterations  =  1;  iterations  <=  maxIterations;  iterations++)  {  final  RealMatrix  arz  =  randn1(dimension,  lambda);  final  RealMatrix  arx  =  zeros(dimension,  lambda);  final  double[]  fitness  =  new  double[lambda];  for  (int  k  =  0;  k  <  lambda;  k++)  {  RealMatrix  arxk  =  null;  for  (int  i  =  0;  i  <  checkFeasableCount  +  1;  i++)  {  if  (diagonalOnly  <=  0)  {  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	387	387	28	replace	    lastResult  =  new  PointValuePair(getEndPoint(),  isMinimize?  bestValue  :  -bestValue);		non-compiled	[CE]  	34	None	add
8	[BUG]  [BUGGY]    lastResult  =  new  PointValuePair(getStartPoint(),  isMinimize?  bestValue  :  -gap);  [CE]  [FE]        AssertionError  [CONTEXT]  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  PointValuePair  lastResult  =  null;    generationLoop:  [BUGGY]    lastResult  =  new  PointValuePair(getStartPoint(),  isMinimize?  bestValue  :  -gap);  [BUGGY]  for  (iterations  =  1;  iterations  <=  maxIterations;  iterations++)  {  final  RealMatrix  arz  =  randn1(dimension,  lambda);  final  RealMatrix  arx  =  zeros(dimension,  lambda);  final  double[]  fitness  =  new  double[lambda];  for  (int  k  =  0;  k  <  lambda;  k++)  {  RealMatrix  arxk  =  null;  for  (int  i  =  0;  i  <  checkFeasableCount  +  1;  i++)  {  if  (diagonalOnly  <=  0)  {  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	387	387	28	replace	    lastResult  =  new  PointValuePair(getStartPoint(),  isMinimize?  bestValue  :  -gap);		non-compiled	[CE]  	34	None	add
9	[BUG]  [BUGGY]    lastResult  =  new  PointValuePair(getStartPoint(),  isMinimize?  bestValue  :  -maxIterations);  [CE]  [FE]    AssertionError  [CONTEXT]  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  PointValuePair  lastResult  =  null;    generationLoop:  [BUGGY]    lastResult  =  new  PointValuePair(getStartPoint(),  isMinimize?  bestValue  :  -maxIterations);  [BUGGY]  for  (iterations  =  1;  iterations  <=  maxIterations;  iterations++)  {  final  RealMatrix  arz  =  randn1(dimension,  lambda);  final  RealMatrix  arx  =  zeros(dimension,  lambda);  final  double[]  fitness  =  new  double[lambda];  for  (int  k  =  0;  k  <  lambda;  k++)  {  RealMatrix  arxk  =  null;  for  (int  i  =  0;  i  <  checkFeasableCount  +  1;  i++)  {  if  (diagonalOnly  <=  0)  {  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	387	387	28	replace	    lastResult  =  new  PointValuePair(getStartPoint(),  isMinimize?  bestValue  :  -maxIterations);		non-compiled	[CE]  	34	None	add
10	[BUG]  [BUGGY]  for(iterations  =  0;  iterations  <  maxIterations;  iterations++)  {  [CE]  [FE]    AssertionError  [CONTEXT]  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  PointValuePair  lastResult  =  null;    generationLoop:  [BUGGY]  for(iterations  =  0;  iterations  <  maxIterations;  iterations++)  {  [BUGGY]    final  RealMatrix  arz  =  randn1(dimension,  lambda);  final  RealMatrix  arx  =  zeros(dimension,  lambda);  final  double[]  fitness  =  new  double[lambda];  for  (int  k  =  0;  k  <  lambda;  k++)  {  RealMatrix  arxk  =  null;  for  (int  i  =  0;  i  <  checkFeasableCount  +  1;  i++)  {  if  (diagonalOnly  <=  0)  {  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	387	387	28	replace	for(iterations  =  0;  iterations  <  maxIterations;  iterations++)  {	for  (iterations  =  1;  iterations  <=  maxIterations;  iterations++)  {  	non-compiled	[CE]  	33	None	replace
