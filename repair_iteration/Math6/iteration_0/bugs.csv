bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return iterations.getCount(); [FE] AssertionError testGetIterations [CONTEXT] public int getIterations() { [BUGGY] return iterations.getCount(); [BUGGY] } [CLASS] BaseOptimizer MaxEvalCallback MaxIterCallback [METHOD] getIterations [RETURN_TYPE] int  [VARIABLES] Incrementor evaluations iterations ConvergenceChecker checker boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	replace	
2	[BUG] [BUGGY] [FE] AssertionError testGetIterations [CONTEXT] public int getIterations() { [BUGGY] [BUGGY] return iterations.getCount(); } [CLASS] BaseOptimizer MaxEvalCallback MaxIterCallback [METHOD] getIterations [RETURN_TYPE] int  [VARIABLES] Incrementor evaluations iterations ConvergenceChecker checker boolean  	projects/Math6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java	1.0	93	93	28	add	
3	[BUG] [BUGGY] if (bestFitness < (isMinimize ? stopFitness : -stopFitness)) { [FE] AssertionError testGetIterations [CONTEXT] if (getConvergenceChecker() != null && lastResult != null) { if (getConvergenceChecker().converged(iterations, optimum, lastResult)) { break generationLoop; } } }   if (stopFitness != 0) { // only if stopFitness is defined [BUGGY] if (bestFitness < (isMinimize ? stopFitness : -stopFitness)) { [BUGGY] break generationLoop; } } final double[] sqrtDiagC = sqrt(diagC).getColumn(0); final double[] pcCol = pc.getColumn(0); for (int i = 0; i < dimension; i++) { if (sigma * Math.max(Math.abs(pcCol[i]), sqrtDiagC[i]) > stopTolX) { break; } if (i >= dimension - 1) { [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol s sigma sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu size RandomGenerator random PointValuePair current lastResult optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7559289460184544	451	451	28	replace	
4	[BUG] [BUGGY] [FE] AssertionError testGetIterations [CONTEXT] if (getConvergenceChecker() != null && lastResult != null) { if (getConvergenceChecker().converged(iterations, optimum, lastResult)) { break generationLoop; } } }   if (stopFitness != 0) { // only if stopFitness is defined [BUGGY] [BUGGY] if (bestFitness < (isMinimize ? stopFitness : -stopFitness)) { break generationLoop; } } final double[] sqrtDiagC = sqrt(diagC).getColumn(0); final double[] pcCol = pc.getColumn(0); for (int i = 0; i < dimension; i++) { if (sigma * Math.max(Math.abs(pcCol[i]), sqrtDiagC[i]) > stopTolX) { break; } if (i >= dimension - 1) { [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol s sigma sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu size RandomGenerator random PointValuePair current lastResult optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7559289460184544	451	451	28	add	
5	[BUG] [BUGGY] final double[][] d = new double[m.getRowDimension()][1]; [FE] AssertionError testGetIterations [CONTEXT] private static RealMatrix diag(final RealMatrix m) { if (m.getColumnDimension() == 1) { final double[][] d = new double[m.getRowDimension()][m.getRowDimension()]; for (int i = 0; i < m.getRowDimension(); i++) { d[i][i] = m.getEntry(i, 0); } return new Array2DRowRealMatrix(d, false); } else { [BUGGY] final double[][] d = new double[m.getRowDimension()][1]; [BUGGY] for (int i = 0; i < m.getColumnDimension(); i++) { d[i][0] = m.getEntry(i, i); } return new Array2DRowRealMatrix(d, false); } } [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] diag [RETURN_TYPE] RealMatrix  RealMatrix m [VARIABLES] boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] doubles fitness fitnessHistory guess init inputSigma lB pcCol point repaired s sigma sqrtDiagC uB vals x RealMatrix B BD C Cneg D arnorms arnormsInv arnormsReverse arnormsSorted arpos artmp arx arxk arz arzneg bestArx bestArz diagC diagD insigma m n pc ps roneu weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps diff e historyBest historyWorst logMu2 mueff negalphaold negccov negcovMax negminresidualvariance normps oldFac penalty sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sum sumw sumwq tfac val value valueRange w worstFitness double[][] d List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int c checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu r size RandomGenerator random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1109	1109	28	replace	
6	[BUG] [BUGGY] [FE] AssertionError testGetIterations [CONTEXT] private static RealMatrix diag(final RealMatrix m) { if (m.getColumnDimension() == 1) { final double[][] d = new double[m.getRowDimension()][m.getRowDimension()]; for (int i = 0; i < m.getRowDimension(); i++) { d[i][i] = m.getEntry(i, 0); } return new Array2DRowRealMatrix(d, false); } else { [BUGGY] [BUGGY] final double[][] d = new double[m.getRowDimension()][1]; for (int i = 0; i < m.getColumnDimension(); i++) { d[i][0] = m.getEntry(i, i); } return new Array2DRowRealMatrix(d, false); } } [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] diag [RETURN_TYPE] RealMatrix  RealMatrix m [VARIABLES] boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] doubles fitness fitnessHistory guess init inputSigma lB pcCol point repaired s sigma sqrtDiagC uB vals x RealMatrix B BD C Cneg D arnorms arnormsInv arnormsReverse arnormsSorted arpos artmp arx arxk arz arzneg bestArx bestArz diagC diagD insigma m n pc ps roneu weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps diff e historyBest historyWorst logMu2 mueff negalphaold negccov negcovMax negminresidualvariance normps oldFac penalty sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sum sumw sumwq tfac val value valueRange w worstFitness double[][] d List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int c checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu r size RandomGenerator random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1109	1109	28	add	
7	[BUG] [BUGGY] for (int i = 0; i < m.getColumnDimension(); i++) { [FE] AssertionError testGetIterations [CONTEXT] private static RealMatrix diag(final RealMatrix m) { if (m.getColumnDimension() == 1) { final double[][] d = new double[m.getRowDimension()][m.getRowDimension()]; for (int i = 0; i < m.getRowDimension(); i++) { d[i][i] = m.getEntry(i, 0); } return new Array2DRowRealMatrix(d, false); } else { final double[][] d = new double[m.getRowDimension()][1]; [BUGGY] for (int i = 0; i < m.getColumnDimension(); i++) { [BUGGY] d[i][0] = m.getEntry(i, i); } return new Array2DRowRealMatrix(d, false); } } [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] diag [RETURN_TYPE] RealMatrix  RealMatrix m [VARIABLES] boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] doubles fitness fitnessHistory guess init inputSigma lB pcCol point repaired s sigma sqrtDiagC uB vals x RealMatrix B BD C Cneg D arnorms arnormsInv arnormsReverse arnormsSorted arpos artmp arx arxk arz arzneg bestArx bestArz diagC diagD insigma m n pc ps roneu weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps diff e historyBest historyWorst logMu2 mueff negalphaold negccov negcovMax negminresidualvariance normps oldFac penalty sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sum sumw sumwq tfac val value valueRange w worstFitness double[][] d List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int c checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu r size RandomGenerator random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1110	1110	28	replace	
8	[BUG] [BUGGY] [FE] AssertionError testGetIterations [CONTEXT] private static RealMatrix diag(final RealMatrix m) { if (m.getColumnDimension() == 1) { final double[][] d = new double[m.getRowDimension()][m.getRowDimension()]; for (int i = 0; i < m.getRowDimension(); i++) { d[i][i] = m.getEntry(i, 0); } return new Array2DRowRealMatrix(d, false); } else { final double[][] d = new double[m.getRowDimension()][1]; [BUGGY] [BUGGY] for (int i = 0; i < m.getColumnDimension(); i++) { d[i][0] = m.getEntry(i, i); } return new Array2DRowRealMatrix(d, false); } } [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] diag [RETURN_TYPE] RealMatrix  RealMatrix m [VARIABLES] boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] doubles fitness fitnessHistory guess init inputSigma lB pcCol point repaired s sigma sqrtDiagC uB vals x RealMatrix B BD C Cneg D arnorms arnormsInv arnormsReverse arnormsSorted arpos artmp arx arxk arz arzneg bestArx bestArz diagC diagD insigma m n pc ps roneu weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps diff e historyBest historyWorst logMu2 mueff negalphaold negccov negcovMax negminresidualvariance normps oldFac penalty sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sum sumw sumwq tfac val value valueRange w worstFitness double[][] d List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int c checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu r size RandomGenerator random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1110	1110	28	add	
9	[BUG] [BUGGY] d[i][0] = m.getEntry(i, i); [FE] AssertionError testGetIterations [CONTEXT] private static RealMatrix diag(final RealMatrix m) { if (m.getColumnDimension() == 1) { final double[][] d = new double[m.getRowDimension()][m.getRowDimension()]; for (int i = 0; i < m.getRowDimension(); i++) { d[i][i] = m.getEntry(i, 0); } return new Array2DRowRealMatrix(d, false); } else { final double[][] d = new double[m.getRowDimension()][1]; for (int i = 0; i < m.getColumnDimension(); i++) { [BUGGY] d[i][0] = m.getEntry(i, i); [BUGGY] } return new Array2DRowRealMatrix(d, false); } } [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] diag [RETURN_TYPE] RealMatrix  RealMatrix m [VARIABLES] boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] doubles fitness fitnessHistory guess init inputSigma lB pcCol point repaired s sigma sqrtDiagC uB vals x RealMatrix B BD C Cneg D arnorms arnormsInv arnormsReverse arnormsSorted arpos artmp arx arxk arz arzneg bestArx bestArz diagC diagD insigma m n pc ps roneu weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps diff e historyBest historyWorst logMu2 mueff negalphaold negccov negcovMax negminresidualvariance normps oldFac penalty sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sum sumw sumwq tfac val value valueRange w worstFitness double[][] d List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int c checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu r size RandomGenerator random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1111	1111	28	replace	
10	[BUG] [BUGGY] [FE] AssertionError testGetIterations [CONTEXT] private static RealMatrix diag(final RealMatrix m) { if (m.getColumnDimension() == 1) { final double[][] d = new double[m.getRowDimension()][m.getRowDimension()]; for (int i = 0; i < m.getRowDimension(); i++) { d[i][i] = m.getEntry(i, 0); } return new Array2DRowRealMatrix(d, false); } else { final double[][] d = new double[m.getRowDimension()][1]; for (int i = 0; i < m.getColumnDimension(); i++) { [BUGGY] [BUGGY] d[i][0] = m.getEntry(i, i); } return new Array2DRowRealMatrix(d, false); } } [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] diag [RETURN_TYPE] RealMatrix  RealMatrix m [VARIABLES] boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] doubles fitness fitnessHistory guess init inputSigma lB pcCol point repaired s sigma sqrtDiagC uB vals x RealMatrix B BD C Cneg D arnorms arnormsInv arnormsReverse arnormsSorted arpos artmp arx arxk arz arzneg bestArx bestArz diagC diagD insigma m n pc ps roneu weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps diff e historyBest historyWorst logMu2 mueff negalphaold negccov negcovMax negminresidualvariance normps oldFac penalty sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sum sumw sumwq tfac val value valueRange w worstFitness double[][] d List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int c checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu r size RandomGenerator random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1111	1111	28	add	
11	[BUG] [BUGGY] return new Array2DRowRealMatrix(d, false); [FE] AssertionError testGetIterations [CONTEXT] final double[][] d = new double[m.getRowDimension()][m.getRowDimension()]; for (int i = 0; i < m.getRowDimension(); i++) { d[i][i] = m.getEntry(i, 0); } return new Array2DRowRealMatrix(d, false); } else { final double[][] d = new double[m.getRowDimension()][1]; for (int i = 0; i < m.getColumnDimension(); i++) { d[i][0] = m.getEntry(i, i); } [BUGGY] return new Array2DRowRealMatrix(d, false); [BUGGY] } } [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] diag [RETURN_TYPE] RealMatrix  RealMatrix m [VARIABLES] boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] doubles fitness fitnessHistory guess init inputSigma lB pcCol point repaired s sigma sqrtDiagC uB vals x RealMatrix B BD C Cneg D arnorms arnormsInv arnormsReverse arnormsSorted arpos artmp arx arxk arz arzneg bestArx bestArz diagC diagD insigma m n pc ps roneu weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps diff e historyBest historyWorst logMu2 mueff negalphaold negccov negcovMax negminresidualvariance normps oldFac penalty sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sum sumw sumwq tfac val value valueRange w worstFitness double[][] d List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int c checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu r size RandomGenerator random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1113	1113	28	replace	
12	[BUG] [BUGGY] [FE] AssertionError testGetIterations [CONTEXT] final double[][] d = new double[m.getRowDimension()][m.getRowDimension()]; for (int i = 0; i < m.getRowDimension(); i++) { d[i][i] = m.getEntry(i, 0); } return new Array2DRowRealMatrix(d, false); } else { final double[][] d = new double[m.getRowDimension()][1]; for (int i = 0; i < m.getColumnDimension(); i++) { d[i][0] = m.getEntry(i, i); } [BUGGY] [BUGGY] return new Array2DRowRealMatrix(d, false); } } [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] diag [RETURN_TYPE] RealMatrix  RealMatrix m [VARIABLES] boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] doubles fitness fitnessHistory guess init inputSigma lB pcCol point repaired s sigma sqrtDiagC uB vals x RealMatrix B BD C Cneg D arnorms arnormsInv arnormsReverse arnormsSorted arpos artmp arx arxk arz arzneg bestArx bestArz diagC diagD insigma m n pc ps roneu weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps diff e historyBest historyWorst logMu2 mueff negalphaold negccov negcovMax negminresidualvariance normps oldFac penalty sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sum sumw sumwq tfac val value valueRange w worstFitness double[][] d List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int c checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu r size RandomGenerator random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1113	1113	28	add	
13	[BUG] [BUGGY] isMinimize = getGoalType().equals(GoalType.MINIMIZE); [FE] AssertionError testGetIterations [CONTEXT] protected PointValuePair doOptimize() {  [BUGGY] isMinimize = getGoalType().equals(GoalType.MINIMIZE); [BUGGY] final FitnessFunction fitfun = new FitnessFunction(); final double[] guess = getStartPoint();  dimension = guess.length; initializeCMA(guess); iterations = 0; double bestValue = fitfun.value(guess); push(fitnessHistory, bestValue); PointValuePair optimum = new PointValuePair(getStartPoint(), [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol s sigma sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu size RandomGenerator random PointValuePair current lastResult optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	
14	[BUG] [BUGGY] [FE] AssertionError testGetIterations [CONTEXT] protected PointValuePair doOptimize() {  [BUGGY] [BUGGY] isMinimize = getGoalType().equals(GoalType.MINIMIZE); final FitnessFunction fitfun = new FitnessFunction(); final double[] guess = getStartPoint();  dimension = guess.length; initializeCMA(guess); iterations = 0; double bestValue = fitfun.value(guess); push(fitnessHistory, bestValue); PointValuePair optimum = new PointValuePair(getStartPoint(), [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol s sigma sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu size RandomGenerator random PointValuePair current lastResult optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	add	
15	[BUG] [BUGGY] final FitnessFunction fitfun = new FitnessFunction(); [FE] AssertionError testGetIterations [CONTEXT] protected PointValuePair doOptimize() {  isMinimize = getGoalType().equals(GoalType.MINIMIZE); [BUGGY] final FitnessFunction fitfun = new FitnessFunction(); [BUGGY] final double[] guess = getStartPoint();  dimension = guess.length; initializeCMA(guess); iterations = 0; double bestValue = fitfun.value(guess); push(fitnessHistory, bestValue); PointValuePair optimum = new PointValuePair(getStartPoint(), isMinimize ? bestValue : -bestValue); [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol s sigma sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu size RandomGenerator random PointValuePair current lastResult optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	
16	[BUG] [BUGGY] [FE] AssertionError testGetIterations [CONTEXT] protected PointValuePair doOptimize() {  isMinimize = getGoalType().equals(GoalType.MINIMIZE); [BUGGY] [BUGGY] final FitnessFunction fitfun = new FitnessFunction(); final double[] guess = getStartPoint();  dimension = guess.length; initializeCMA(guess); iterations = 0; double bestValue = fitfun.value(guess); push(fitnessHistory, bestValue); PointValuePair optimum = new PointValuePair(getStartPoint(), isMinimize ? bestValue : -bestValue); [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol s sigma sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu size RandomGenerator random PointValuePair current lastResult optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	add	
17	[BUG] [BUGGY] final double[] guess = getStartPoint(); [FE] AssertionError testGetIterations [CONTEXT] protected PointValuePair doOptimize() {  isMinimize = getGoalType().equals(GoalType.MINIMIZE); final FitnessFunction fitfun = new FitnessFunction(); [BUGGY] final double[] guess = getStartPoint(); [BUGGY]  dimension = guess.length; initializeCMA(guess); iterations = 0; double bestValue = fitfun.value(guess); push(fitnessHistory, bestValue); PointValuePair optimum = new PointValuePair(getStartPoint(), isMinimize ? bestValue : -bestValue); PointValuePair lastResult = null; [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol s sigma sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu size RandomGenerator random PointValuePair current lastResult optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	372	372	28	replace	
18	[BUG] [BUGGY] [FE] AssertionError testGetIterations [CONTEXT] protected PointValuePair doOptimize() {  isMinimize = getGoalType().equals(GoalType.MINIMIZE); final FitnessFunction fitfun = new FitnessFunction(); [BUGGY] [BUGGY] final double[] guess = getStartPoint();  dimension = guess.length; initializeCMA(guess); iterations = 0; double bestValue = fitfun.value(guess); push(fitnessHistory, bestValue); PointValuePair optimum = new PointValuePair(getStartPoint(), isMinimize ? bestValue : -bestValue); PointValuePair lastResult = null; [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol s sigma sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu size RandomGenerator random PointValuePair current lastResult optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	372	372	28	add	
19	[BUG] [BUGGY] dimension = guess.length; [FE] AssertionError testGetIterations [CONTEXT] protected PointValuePair doOptimize() {  isMinimize = getGoalType().equals(GoalType.MINIMIZE); final FitnessFunction fitfun = new FitnessFunction(); final double[] guess = getStartPoint();  [BUGGY] dimension = guess.length; [BUGGY] initializeCMA(guess); iterations = 0; double bestValue = fitfun.value(guess); push(fitnessHistory, bestValue); PointValuePair optimum = new PointValuePair(getStartPoint(), isMinimize ? bestValue : -bestValue); PointValuePair lastResult = null;   [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol s sigma sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu size RandomGenerator random PointValuePair current lastResult optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	374	374	28	replace	
20	[BUG] [BUGGY] [FE] AssertionError testGetIterations [CONTEXT] protected PointValuePair doOptimize() {  isMinimize = getGoalType().equals(GoalType.MINIMIZE); final FitnessFunction fitfun = new FitnessFunction(); final double[] guess = getStartPoint();  [BUGGY] [BUGGY] dimension = guess.length; initializeCMA(guess); iterations = 0; double bestValue = fitfun.value(guess); push(fitnessHistory, bestValue); PointValuePair optimum = new PointValuePair(getStartPoint(), isMinimize ? bestValue : -bestValue); PointValuePair lastResult = null;   [CLASS] CMAESOptimizer Sigma PopulationSize DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol s sigma sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu size RandomGenerator random PointValuePair current lastResult optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	374	374	28	add	
