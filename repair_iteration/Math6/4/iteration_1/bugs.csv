bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  double[][]  d  =  new  double[m.getColumnDimension()][1];  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  private  static  RealMatrix  diag(final  RealMatrix  m)  {  if  (m.getColumnDimension()  ==  1)  {  final  double[][]  d  =  new  double[m.getRowDimension()][m.getRowDimension()];  for  (int  i  =  0;  i  <  m.getRowDimension();  i++)  {  d[i][i]  =  m.getEntry(i,  0);  }  return  new  Array2DRowRealMatrix(d,  false);  }  else  {  final  double[][]  d  =  new  double[m.getRowDimension()][1];  [BUGGY]    final  double[][]  d  =  new  double[m.getColumnDimension()][1];  [BUGGY]  for  (int  i  =  0;  i  <  m.getColumnDimension();  i++)  {  d[i][0]  =  m.getEntry(i,  i);  }  return  new  Array2DRowRealMatrix(d,  false);  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  diag  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  doubles  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  point  repaired  s  sigma  sqrtDiagC  uB  vals  x  RealMatrix  B  BD  C  Cneg  D  arnorms  arnormsInv  arnormsReverse  arnormsSorted  arpos  artmp  arx  arxk  arz  arzneg  bestArx  bestArz  diagC  diagD  insigma  m  n  pc  ps  roneu  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  diff  e  historyBest  historyWorst  logMu2  mueff  negalphaold  negccov  negcovMax  negminresidualvariance  normps  oldFac  penalty  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sum  sumw  sumwq  tfac  val  value  valueRange  w  worstFitness  double[][]  d  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  c  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  r  size  RandomGenerator  random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1110	1110	28	replace	    final  double[][]  d  =  new  double[m.getColumnDimension()][1];		non-compiled	[CE]  illegal  start  of  expression	8	None	add
2	[BUG]  [BUGGY]    final  double[][]  d  =  new  double[m.getColumnDimension()][0];  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  private  static  RealMatrix  diag(final  RealMatrix  m)  {  if  (m.getColumnDimension()  ==  1)  {  final  double[][]  d  =  new  double[m.getRowDimension()][m.getRowDimension()];  for  (int  i  =  0;  i  <  m.getRowDimension();  i++)  {  d[i][i]  =  m.getEntry(i,  0);  }  return  new  Array2DRowRealMatrix(d,  false);  }  else  {  final  double[][]  d  =  new  double[m.getRowDimension()][1];  [BUGGY]    final  double[][]  d  =  new  double[m.getColumnDimension()][0];  [BUGGY]  for  (int  i  =  0;  i  <  m.getColumnDimension();  i++)  {  d[i][0]  =  m.getEntry(i,  i);  }  return  new  Array2DRowRealMatrix(d,  false);  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  diag  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  doubles  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  point  repaired  s  sigma  sqrtDiagC  uB  vals  x  RealMatrix  B  BD  C  Cneg  D  arnorms  arnormsInv  arnormsReverse  arnormsSorted  arpos  artmp  arx  arxk  arz  arzneg  bestArx  bestArz  diagC  diagD  insigma  m  n  pc  ps  roneu  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  diff  e  historyBest  historyWorst  logMu2  mueff  negalphaold  negccov  negcovMax  negminresidualvariance  normps  oldFac  penalty  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sum  sumw  sumwq  tfac  val  value  valueRange  w  worstFitness  double[][]  d  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  c  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  r  size  RandomGenerator  random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1110	1110	28	replace	    final  double[][]  d  =  new  double[m.getColumnDimension()][0];		non-compiled	[CE]  illegal  start  of  expression	8	None	add
3	[BUG]  [BUGGY]    d[0][0]  =  m.getEntry(0,  0);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  private  static  RealMatrix  diag(final  RealMatrix  m)  {  if  (m.getColumnDimension()  ==  1)  {  final  double[][]  d  =  new  double[m.getRowDimension()][m.getRowDimension()];  for  (int  i  =  0;  i  <  m.getRowDimension();  i++)  {  d[i][i]  =  m.getEntry(i,  0);  }  return  new  Array2DRowRealMatrix(d,  false);  }  else  {  final  double[][]  d  =  new  double[m.getRowDimension()][1];  [BUGGY]    d[0][0]  =  m.getEntry(0,  0);  [BUGGY]  for  (int  i  =  0;  i  <  m.getColumnDimension();  i++)  {  d[i][0]  =  m.getEntry(i,  i);  }  return  new  Array2DRowRealMatrix(d,  false);  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  diag  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  doubles  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  point  repaired  s  sigma  sqrtDiagC  uB  vals  x  RealMatrix  B  BD  C  Cneg  D  arnorms  arnormsInv  arnormsReverse  arnormsSorted  arpos  artmp  arx  arxk  arz  arzneg  bestArx  bestArz  diagC  diagD  insigma  m  n  pc  ps  roneu  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  diff  e  historyBest  historyWorst  logMu2  mueff  negalphaold  negccov  negcovMax  negminresidualvariance  normps  oldFac  penalty  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sum  sumw  sumwq  tfac  val  value  valueRange  w  worstFitness  double[][]  d  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  c  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  r  size  RandomGenerator  random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1110	1110	28	replace	    d[0][0]  =  m.getEntry(0,  0);		non-compiled	[CE]  illegal  start  of  expression	8	None	add
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  m.getRowDimension();  i++)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  private  static  RealMatrix  diag(final  RealMatrix  m)  {  if  (m.getColumnDimension()  ==  1)  {  final  double[][]  d  =  new  double[m.getRowDimension()][m.getRowDimension()];  for  (int  i  =  0;  i  <  m.getRowDimension();  i++)  {  d[i][i]  =  m.getEntry(i,  0);  }  return  new  Array2DRowRealMatrix(d,  false);  }  else  {  final  double[][]  d  =  new  double[m.getRowDimension()][1];  [BUGGY]  for(int  i  =  0;  i  <  m.getRowDimension();  i++)  {  [BUGGY]  d[i][0]  =  m.getEntry(i,  i);  }  return  new  Array2DRowRealMatrix(d,  false);  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  diag  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  doubles  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  point  repaired  s  sigma  sqrtDiagC  uB  vals  x  RealMatrix  B  BD  C  Cneg  D  arnorms  arnormsInv  arnormsReverse  arnormsSorted  arpos  artmp  arx  arxk  arz  arzneg  bestArx  bestArz  diagC  diagD  insigma  m  n  pc  ps  roneu  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  diff  e  historyBest  historyWorst  logMu2  mueff  negalphaold  negccov  negcovMax  negminresidualvariance  normps  oldFac  penalty  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sum  sumw  sumwq  tfac  val  value  valueRange  w  worstFitness  double[][]  d  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  c  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  r  size  RandomGenerator  random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1110	1110	28	replace	for(int  i  =  0;  i  <  m.getRowDimension();  i++)  {	for  (int  i  =  0;  i  <  m.getColumnDimension();  i++)  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]    d[0][1]  =  m.getEntry(0,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  private  static  RealMatrix  diag(final  RealMatrix  m)  {  if  (m.getColumnDimension()  ==  1)  {  final  double[][]  d  =  new  double[m.getRowDimension()][m.getRowDimension()];  for  (int  i  =  0;  i  <  m.getRowDimension();  i++)  {  d[i][i]  =  m.getEntry(i,  0);  }  return  new  Array2DRowRealMatrix(d,  false);  }  else  {  final  double[][]  d  =  new  double[m.getRowDimension()][1];  [BUGGY]    d[0][1]  =  m.getEntry(0,  0);  [BUGGY]  for  (int  i  =  0;  i  <  m.getColumnDimension();  i++)  {  d[i][0]  =  m.getEntry(i,  i);  }  return  new  Array2DRowRealMatrix(d,  false);  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  diag  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  doubles  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  point  repaired  s  sigma  sqrtDiagC  uB  vals  x  RealMatrix  B  BD  C  Cneg  D  arnorms  arnormsInv  arnormsReverse  arnormsSorted  arpos  artmp  arx  arxk  arz  arzneg  bestArx  bestArz  diagC  diagD  insigma  m  n  pc  ps  roneu  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  diff  e  historyBest  historyWorst  logMu2  mueff  negalphaold  negccov  negcovMax  negminresidualvariance  normps  oldFac  penalty  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sum  sumw  sumwq  tfac  val  value  valueRange  w  worstFitness  double[][]  d  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  c  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  r  size  RandomGenerator  random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1110	1110	28	replace	    d[0][1]  =  m.getEntry(0,  0);		non-compiled	[CE]  illegal  start  of  expression	8	None	add
6	[BUG]  [BUGGY]    d[0][1]  =  m.getEntry(0,  1);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  private  static  RealMatrix  diag(final  RealMatrix  m)  {  if  (m.getColumnDimension()  ==  1)  {  final  double[][]  d  =  new  double[m.getRowDimension()][m.getRowDimension()];  for  (int  i  =  0;  i  <  m.getRowDimension();  i++)  {  d[i][i]  =  m.getEntry(i,  0);  }  return  new  Array2DRowRealMatrix(d,  false);  }  else  {  final  double[][]  d  =  new  double[m.getRowDimension()][1];  [BUGGY]    d[0][1]  =  m.getEntry(0,  1);  [BUGGY]  for  (int  i  =  0;  i  <  m.getColumnDimension();  i++)  {  d[i][0]  =  m.getEntry(i,  i);  }  return  new  Array2DRowRealMatrix(d,  false);  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  diag  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  doubles  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  point  repaired  s  sigma  sqrtDiagC  uB  vals  x  RealMatrix  B  BD  C  Cneg  D  arnorms  arnormsInv  arnormsReverse  arnormsSorted  arpos  artmp  arx  arxk  arz  arzneg  bestArx  bestArz  diagC  diagD  insigma  m  n  pc  ps  roneu  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  diff  e  historyBest  historyWorst  logMu2  mueff  negalphaold  negccov  negcovMax  negminresidualvariance  normps  oldFac  penalty  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sum  sumw  sumwq  tfac  val  value  valueRange  w  worstFitness  double[][]  d  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  c  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  r  size  RandomGenerator  random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1110	1110	28	replace	    d[0][1]  =  m.getEntry(0,  1);		non-compiled	[CE]  illegal  start  of  expression	8	None	add
7	[BUG]  [BUGGY]    d[0][1]  =  m.getEntry(1,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  private  static  RealMatrix  diag(final  RealMatrix  m)  {  if  (m.getColumnDimension()  ==  1)  {  final  double[][]  d  =  new  double[m.getRowDimension()][m.getRowDimension()];  for  (int  i  =  0;  i  <  m.getRowDimension();  i++)  {  d[i][i]  =  m.getEntry(i,  0);  }  return  new  Array2DRowRealMatrix(d,  false);  }  else  {  final  double[][]  d  =  new  double[m.getRowDimension()][1];  [BUGGY]    d[0][1]  =  m.getEntry(1,  0);  [BUGGY]  for  (int  i  =  0;  i  <  m.getColumnDimension();  i++)  {  d[i][0]  =  m.getEntry(i,  i);  }  return  new  Array2DRowRealMatrix(d,  false);  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  diag  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  doubles  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  point  repaired  s  sigma  sqrtDiagC  uB  vals  x  RealMatrix  B  BD  C  Cneg  D  arnorms  arnormsInv  arnormsReverse  arnormsSorted  arpos  artmp  arx  arxk  arz  arzneg  bestArx  bestArz  diagC  diagD  insigma  m  n  pc  ps  roneu  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  diff  e  historyBest  historyWorst  logMu2  mueff  negalphaold  negccov  negcovMax  negminresidualvariance  normps  oldFac  penalty  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sum  sumw  sumwq  tfac  val  value  valueRange  w  worstFitness  double[][]  d  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  c  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  r  size  RandomGenerator  random  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7319250547113999	1110	1110	28	replace	    d[0][1]  =  m.getEntry(1,  0);		non-compiled	[CE]  illegal  start  of  expression	8	None	add
