bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(isActiveCMA  ||  isRepairMode);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  Preconditions.checkState(isActiveCMA  ||  isRepairMode);  [BUGGY]    isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);  final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	Preconditions.checkState(isActiveCMA  ||  isRepairMode);	      Preconditions.checkState(isActiveCMA);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  isMinimize  =  getOptimize().equals(GoalType.MINIMIZE)+  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  isMinimize  =  getOptimize().equals(GoalType.MINIMIZE)+  1;  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	isMinimize  =  getOptimize().equals(GoalType.MINIMIZE)+  1;	  isMinimize    =    getOptimize().equals(GoalType.MINIMIZE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
3	[BUG]  [BUGGY]  RandomGenerator  <  Goal>  randomGenerator  =  getRandomGenerator(0);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  RandomGenerator  <  Goal>  randomGenerator  =  getRandomGenerator(0);  [BUGGY]    isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);  final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	RandomGenerator  <  Goal>  randomGenerator  =  getRandomGenerator(0);	      RandomGenerator    <    Goal>    randomGenerator    =    getRandomGenerator();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  isMinimize  =  getMaximumSize().equals(GoalType.MINIMIZE)+  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  isMinimize  =  getMaximumSize().equals(GoalType.MINIMIZE)+  1;  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	isMinimize  =  getMaximumSize().equals(GoalType.MINIMIZE)+  1;	  isMinimize    =    getMaximumSize().equals(GoalType.MINIMIZE);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(getOptimize()!=  null);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  Preconditions.checkState(getOptimize()!=  null);  [BUGGY]    isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);  final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	Preconditions.checkState(getOptimize()!=  null);	      Preconditions.checkState(getOptimize()    ==    null);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(getStartPoint()!=  null);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  Preconditions.checkState(getStartPoint()!=  null);  [BUGGY]    isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);  final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	Preconditions.checkState(getStartPoint()!=  null);	      Preconditions.checkNotNull(getStartPoint());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(getStartPoint()  ==  null);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  Preconditions.checkState(getStartPoint()  ==  null);  [BUGGY]    isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);  final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	Preconditions.checkState(getStartPoint()  ==  null);	      Preconditions.checkNotNull(getStartPoint());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
8	[BUG]  [BUGGY]  isMinimize  =  getMinimize().equals(GoalType.MINIMIZE)+  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  isMinimize  =  getMinimize().equals(GoalType.MINIMIZE)+  1;  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	isMinimize  =  getMinimize().equals(GoalType.MINIMIZE)+  1;	  isMinimize    =    getMinimize().equals(GoalType.MINIMIZE);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  isMinimize  =  getMinimumSize().equals(GoalType.MINIMIZE)+  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  isMinimize  =  getMinimumSize().equals(GoalType.MINIMIZE)+  1;  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	isMinimize  =  getMinimumSize().equals(GoalType.MINIMIZE)+  1;	  isMinimize    =    getMinimumSize().equals(GoalType.MINIMIZE);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  RandomGenerator  <  Goal>  randomGenerator  =  new  RandomGenerator(getStartPoint(),  getMinimize());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  RandomGenerator  <  Goal>  randomGenerator  =  new  RandomGenerator(getStartPoint(),  getMinimize());  [BUGGY]    isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);  final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	RandomGenerator  <  Goal>  randomGenerator  =  new  RandomGenerator(getStartPoint(),  getMinimize());	      RandomGenerator    <    Goal>    randomGenerator    =    new    RandomGenerator(getStartPoint());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  RandomGenerator  <  Goal>  randomGenerator  =  new  RandomGenerator(getMinimumSize());  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  RandomGenerator  <  Goal>  randomGenerator  =  new  RandomGenerator(getMinimumSize());  [BUGGY]    isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);  final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	RandomGenerator  <  Goal>  randomGenerator  =  new  RandomGenerator(getMinimumSize());	      RandomGenerator    <    Goal>    randomGenerator    =    new    RandomGenerator(getStartPoint());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  RandomGenerator  <  Number>  randomGenerator  =  getRandomGenerator(0);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  RandomGenerator  <  Number>  randomGenerator  =  getRandomGenerator(0);  [BUGGY]    isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);  final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	RandomGenerator  <  Number>  randomGenerator  =  getRandomGenerator(0);	      RandomGenerator    <    Number>    randomGenerator    =    getRandomGenerator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  int[]  dimension  =  getStartPoint();  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  int[]  dimension  =  getStartPoint();  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	int[]  dimension  =  getStartPoint();	      	non-compiled	[CE]  'else'  without  'if'	3	None	replace
14	[BUG]  [BUGGY]  int[]  dimensions  =  getSize();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  int[]  dimensions  =  getSize();  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	int[]  dimensions  =  getSize();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  isMinimize  =  getOptimize().doOptimize(GoalType.MINIMIZE);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  isMinimize  =  getOptimize().doOptimize(GoalType.MINIMIZE);  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	isMinimize  =  getOptimize().doOptimize(GoalType.MINIMIZE);	  isMinimize    =    getOptimize().equals(GoalType.MINIMIZE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
16	[BUG]  [BUGGY]  RandomGenerator  <  Number>  randomGenerator  =  getRangeValues();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  RandomGenerator  <  Number>  randomGenerator  =  getRangeValues();  [BUGGY]    isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);  final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	RandomGenerator  <  Number>  randomGenerator  =  getRangeValues();	      RandomGenerator    <    Number>    randomGenerator    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  RandomGenerator  <  Goal>  randomGenerator  =  new  RandomGenerator(getMinimize());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  RandomGenerator  <  Goal>  randomGenerator  =  new  RandomGenerator(getMinimize());  [BUGGY]    isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);  final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	RandomGenerator  <  Goal>  randomGenerator  =  new  RandomGenerator(getMinimize());	      RandomGenerator    <    Goal>    randomGenerator    =    new    RandomGenerator(getStartPoint());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  RandomGenerator  <  Number>  random  =  getRandomGenerator();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  RandomGenerator  <  Number>  random  =  getRandomGenerator();  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	RandomGenerator  <  Number>  random  =  getRandomGenerator();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  isMinimize  =  getMaximize().equals(GoalType.MINIMIZE);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  isMinimize  =  getMaximize().equals(GoalType.MINIMIZE);  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	isMinimize  =  getMaximize().equals(GoalType.MINIMIZE);	  isMinimize    =    getMinimize().equals(GoalType.MINIMIZE);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  RandomGenerator  <  Goal>  randomGenerator  =  getLandomGenerator();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  RandomGenerator  <  Goal>  randomGenerator  =  getLandomGenerator();  [BUGGY]    isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);  final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	RandomGenerator  <  Goal>  randomGenerator  =  getLandomGenerator();	      RandomGenerator    <    Goal>    randomGenerator    =    getRandomGenerator();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  isMinimize  =  getOptimize().evaluate(GoalType.MINIMIZE);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  isMinimize  =  getOptimize().evaluate(GoalType.MINIMIZE);  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	isMinimize  =  getOptimize().evaluate(GoalType.MINIMIZE);	  isMinimize    =    getOptimize().equals(GoalType.MINIMIZE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
22	[BUG]  [BUGGY]  RandomGenerator  <  Number>  randomGenerator  =  getValueGenerator();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  RandomGenerator  <  Number>  randomGenerator  =  getValueGenerator();  [BUGGY]    isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);  final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	RandomGenerator  <  Number>  randomGenerator  =  getValueGenerator();	      RandomGenerator    <    Number>    randomGenerator    =    getRandomGenerator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
23	[BUG]  [BUGGY]  RandomGenerator  <  Goal>  randomGenerator  =  new  RandomGenerator(getOptimizer());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {      [BUGGY]  RandomGenerator  <  Goal>  randomGenerator  =  new  RandomGenerator(getOptimizer());  [BUGGY]    isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);  final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	370	370	28	replace	RandomGenerator  <  Goal>  randomGenerator  =  new  RandomGenerator(getOptimizer());	      RandomGenerator    <    Goal>    randomGenerator    =    new    RandomGenerator(getStartPoint());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
