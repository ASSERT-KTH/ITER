bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  generationLoop  +=  Math.max(Math.abs(sigma[i]),  sqrtDiagC[i]);  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  generationLoop  +=  Math.max(Math.abs(sigma[i]),  sqrtDiagC[i]);  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	generationLoop  +=  Math.max(Math.abs(sigma[i]),  sqrtDiagC[i]);	  generationLoop    +=    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	14	None	replace
2	[BUG]  [BUGGY]  sigma  *  Math.min(Math.abs(pcCol[i]),  sqrtDiagC[i])>  stopTolUpX)  {  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.min(Math.abs(pcCol[i]),  sqrtDiagC[i])>  stopTolUpX)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.min(Math.abs(pcCol[i]),  sqrtDiagC[i])>  stopTolUpX)  {	  sigma    *    Math.min(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])>    stopTolUpX)    {    	non-compiled	[CE]  	11	None	replace
3	[BUG]  [BUGGY]  linguriTolerance(sigma,  pc);  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  linguriTolerance(sigma,  pc);  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	linguriTolerance(sigma,  pc);	  linguriTolerance(sigma,    pcCol);    	non-compiled	[CE]  	3	None	replace
4	[BUG]  [BUGGY]  continue  this;  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  continue  this;  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	continue  this;	  continue    null;    	non-compiled	[CE]  	23	None	replace
5	[BUG]  [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  {  [CE]  [FE]              AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  {	  sigma    *    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i])    {    	non-compiled	[CE]  	12	None	replace
6	[BUG]  [BUGGY]  linguriTolerance(sigma,  linguriTolerance(sigma),  linguriTolerance(sigma));  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  linguriTolerance(sigma,  linguriTolerance(sigma),  linguriTolerance(sigma));  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	linguriTolerance(sigma,  linguriTolerance(sigma),  linguriTolerance(sigma));	  linguriTolerance(sigma,    linguriTolerance(sigma));    	non-compiled	[CE]  	29	None	replace
7	[BUG]  [BUGGY]  sigma  =  Math.abs(pcCol[i]);  [CE]  [FE]                  AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.abs(pcCol[i]);  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.abs(pcCol[i]);	  sigma    =    Math.abs(sqrtDiagC[i]);    	non-compiled	[CE]  	22	None	replace
8	[BUG]  [BUGGY]  continue  generationLoop  -  1;  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  continue  generationLoop  -  1;  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	continue  generationLoop  -  1;	  continue    generationLoop;    	non-compiled	[CE]  	28	None	replace
9	[BUG]  [BUGGY]  sigma  =  Math.min(Math.abs(pcCol[i]),  sqrtDiagC[i]);  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.min(Math.abs(pcCol[i]),  sqrtDiagC[i]);  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.min(Math.abs(pcCol[i]),  sqrtDiagC[i]);	  sigma    =    Math.min(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	6	None	replace
10	[BUG]  [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  }  [CE]  [FE]                AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  }  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  }	  sigma    *    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i])>    stopTolUpX)    {    break    generationLoop;    }    	non-compiled	[CE]  	25	None	replace
11	[BUG]  [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  }  [CE]  [FE]                  AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  }  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  }	  sigma    *    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i])>    stopTolUpX)    {    break    generationLoop;    }    	non-compiled	[CE]  	25	None	replace
12	[BUG]  [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  stopTolUpX)  {  [CE]  [FE]                AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  stopTolUpX)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  stopTolUpX)  {	  sigma    *    Math.max(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])    <    stopTolUpX)    {    	non-compiled	[CE]  	4	None	replace
13	[BUG]  [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  stopTolUpX)  {  [CE]  [FE]                  AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  stopTolUpX)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  stopTolUpX)  {	  sigma    *    Math.min(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])    <    stopTolUpX)    {    	non-compiled	[CE]  	5	None	replace
14	[BUG]  [BUGGY]  sigma  *  Math.min(Math.abs(pcCol[i]),  sqrtDiagC[i])  <  stopTolUpX)  {  [CE]  [FE]                    AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.min(Math.abs(pcCol[i]),  sqrtDiagC[i])  <  stopTolUpX)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.min(Math.abs(pcCol[i]),  sqrtDiagC[i])  <  stopTolUpX)  {	  sigma    *    Math.min(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])    <    stopTolUpX)    {    	non-compiled	[CE]  	5	None	replace
15	[BUG]  [BUGGY]  sigma  =  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])/  stopTolUpX;  [CE]  [FE]              AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])/  stopTolUpX;  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])/  stopTolUpX;	  sigma    =    Math.max(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])/    stopTolUpX;    	non-compiled	[CE]  	8	None	replace
16	[BUG]  [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  [CE]  [FE]                AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;	  sigma    *    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i])>    stopTolUpX)    {    break    generationLoop;    	non-compiled	[CE]  	16	None	replace
17	[BUG]  [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  [CE]  [FE]                  AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  stopTolUpX)  {  break  generationLoop;	  sigma    *    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i])>    stopTolUpX)    {    break    generationLoop;    	non-compiled	[CE]  	16	None	replace
18	[BUG]  [BUGGY]  sigma  =  Math.max(Math.abs(sigma[i]),  sqrtDiagC[i]);  [CE]  [FE]              AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.max(Math.abs(sigma[i]),  sqrtDiagC[i]);  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.max(Math.abs(sigma[i]),  sqrtDiagC[i]);	  sigma    =    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	7	None	replace
19	[BUG]  [BUGGY]  sigma  =  Math.min(Math.abs(sigma[i]),  sqrtDiagC[i]);  [CE]  [FE]                AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.min(Math.abs(sigma[i]),  sqrtDiagC[i]);  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.min(Math.abs(sigma[i]),  sqrtDiagC[i]);	  sigma    =    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	7	None	replace
20	[BUG]  [BUGGY]  generationLoop  +=  Math.max(Math.abs(sigma  *  sqrtDiagC[i]),  pcCol[i]);  [CE]  [FE]              AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  generationLoop  +=  Math.max(Math.abs(sigma  *  sqrtDiagC[i]),  pcCol[i]);  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	generationLoop  +=  Math.max(Math.abs(sigma  *  sqrtDiagC[i]),  pcCol[i]);	  generationLoop    +=    Math.max(Math.abs(sigma    *    sqrtDiagC[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	15	None	replace
21	[BUG]  [BUGGY]  generationLoop  +=  Math.min(Math.abs(sigma  *  sqrtDiagC[i]),  pcCol[i]);  [CE]  [FE]                AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  generationLoop  +=  Math.min(Math.abs(sigma  *  sqrtDiagC[i]),  pcCol[i]);  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	generationLoop  +=  Math.min(Math.abs(sigma  *  sqrtDiagC[i]),  pcCol[i]);	  generationLoop    +=    Math.max(Math.abs(sigma    *    sqrtDiagC[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	15	None	replace
22	[BUG]  [BUGGY]  generationLoop  +=  Math.min(Math.abs(sigma  *  sqrtDiagC[i]),  sqrtDiagC[i]);  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  generationLoop  +=  Math.min(Math.abs(sigma  *  sqrtDiagC[i]),  sqrtDiagC[i]);  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	generationLoop  +=  Math.min(Math.abs(sigma  *  sqrtDiagC[i]),  sqrtDiagC[i]);	  generationLoop    +=    Math.max(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	20	None	replace
23	[BUG]  [BUGGY]  sigma  *=  sqrtDiagC[i].doubleValue()  +  1;  [CE]  [FE]                AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *=  sqrtDiagC[i].doubleValue()  +  1;  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *=  sqrtDiagC[i].doubleValue()  +  1;	  sigma    *=    sqrtDiagC[i].doubleValue();    	non-compiled	[CE]  	21	None	replace
24	[BUG]  [BUGGY]  linguriTolerance(sigma,  linguriTolerance(i));  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  linguriTolerance(sigma,  linguriTolerance(i));  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	linguriTolerance(sigma,  linguriTolerance(i));	  linguriTolerance(sigma,    linguriTolerance(sigma));    	non-compiled	[CE]  	29	None	replace
25	[BUG]  [BUGGY]  sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])/  generationLoop;  [CE]  [FE]                AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])/  generationLoop;  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])/  generationLoop;	  sigma    =    Math.max(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])-    generationLoop;    	non-compiled	[CE]  	9	None	replace
26	[BUG]  [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  generationLoop)  {  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  generationLoop)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])>  generationLoop)  {	  sigma    *    Math.min(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])>    stopTolUpX)    {    	non-compiled	[CE]  	11	None	replace
27	[BUG]  [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  1)  {  [CE]  [FE]                  AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  1)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  1)  {	  sigma    *    Math.min(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])    <    stopTolUpX)    {    	non-compiled	[CE]  	5	None	replace
28	[BUG]  [BUGGY]  break  generationLoop  +  2;  [CE]  [FE]              AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  break  generationLoop  +  2;  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	break  generationLoop  +  2;	  break    generationLoop    +    1;    	non-compiled	[CE]  	1	None	replace
29	[BUG]  [BUGGY]  if(sigma  >=  bestFitness)  {  continue;  }  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  if(sigma  >=  bestFitness)  {  continue;  }  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	if(sigma  >=  bestFitness)  {  continue;  }	  if(sigma    >    bestFitness)    {    continue;    }    	non-compiled	[CE]  	10	None	replace
30	[BUG]  [BUGGY]  sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])/  stopTolUpX  +  1;  [CE]  [FE]              AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])/  stopTolUpX  +  1;  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])/  stopTolUpX  +  1;	  sigma    =    Math.max(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])/    stopTolUpX;    	non-compiled	[CE]  	8	None	replace
31	[BUG]  [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtCol[i])  {  [CE]  [FE]              AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtCol[i])  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtCol[i])  {	  sigma    *    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i])    {    	non-compiled	[CE]  	12	None	replace
32	[BUG]  [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtCol[i])  {  [CE]  [FE]                AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtCol[i])  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtCol[i])  {	  sigma    *    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i])    {    	non-compiled	[CE]  	12	None	replace
33	[BUG]  [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  generationLoop)  {  [CE]  [FE]                AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  generationLoop)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  generationLoop)  {	  sigma    *    Math.max(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])    <    =    stopTolX)    {    	non-compiled	[CE]  	26	None	replace
34	[BUG]  [BUGGY]  sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  <  =  stopTolX)  {  [CE]  [FE]                  AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  <  =  stopTolX)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  <  =  stopTolX)  {	  sigma    *    Math.max(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])    <    =    stopTolX)    {    	non-compiled	[CE]  	26	None	replace
35	[BUG]  [BUGGY]  sigma  =  Math.abs(sqrtDiagC[i]  +  1);  [CE]  [FE]                  AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.abs(sqrtDiagC[i]  +  1);  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.abs(sqrtDiagC[i]  +  1);	  sigma    =    Math.abs(sqrtDiagC[i]);    	non-compiled	[CE]  	22	None	replace
36	[BUG]  [BUGGY]  sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  sqrtCol[i]);  [CE]  [FE]              AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  sqrtCol[i]);  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  sqrtCol[i]);	  sigma    =    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	7	None	replace
37	[BUG]  [BUGGY]  sigma  =  Math.min(Math.abs(sqrtDiagC[i]),  sqrtCol[i]);  [CE]  [FE]                AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.min(Math.abs(sqrtDiagC[i]),  sqrtCol[i]);  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.min(Math.abs(sqrtDiagC[i]),  sqrtCol[i]);	  sigma    =    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	7	None	replace
38	[BUG]  [BUGGY]  generationLoop  +=  Math.max(Math.abs(sigma)+  sqrtDiagC[i],  sqrtDiagC[i]);  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  generationLoop  +=  Math.max(Math.abs(sigma)+  sqrtDiagC[i],  sqrtDiagC[i]);  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	generationLoop  +=  Math.max(Math.abs(sigma)+  sqrtDiagC[i],  sqrtDiagC[i]);	  generationLoop    +=    Math.max(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	20	None	replace
39	[BUG]  [BUGGY]  continue  generationLoop  +  1;  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  continue  generationLoop  +  1;  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	continue  generationLoop  +  1;	  continue    generationLoop;    	non-compiled	[CE]  	28	None	replace
40	[BUG]  [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtCol[i])>  stopTolUpX)  {  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtCol[i])>  stopTolUpX)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.min(Math.abs(sqrtDiagC[i]),  sqrtCol[i])>  stopTolUpX)  {	  sigma    *    Math.max(Math.abs(sqrtDiagC[i]),    sqrtCol[i])>    stopTolUpX)    {    	non-compiled	[CE]  	19	None	replace
41	[BUG]  [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  1)  {  [CE]  [FE]                AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  1)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  =  1)  {	  sigma    *    Math.max(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])    <    stopTolUpX)    {    	non-compiled	[CE]  	4	None	replace
42	[BUG]  [BUGGY]  sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  <  stopTolUpX)  {  [CE]  [FE]                  AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  <  stopTolUpX)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  <  stopTolUpX)  {	  sigma    *    Math.max(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])    <    stopTolUpX)    {    	non-compiled	[CE]  	4	None	replace
43	[BUG]  [BUGGY]  sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])/  20;  [CE]  [FE]              AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])/  20;  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])/  20;	  sigma    =    Math.max(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])/    stopTolUpX;    	non-compiled	[CE]  	8	None	replace
44	[BUG]  [BUGGY]  generationLoop  +=  Math.max(Math.abs(sigma  *  pcCol[i]),  sqrtDiagC[i]);  [CE]  [FE]              AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  generationLoop  +=  Math.max(Math.abs(sigma  *  pcCol[i]),  sqrtDiagC[i]);  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	generationLoop  +=  Math.max(Math.abs(sigma  *  pcCol[i]),  sqrtDiagC[i]);	  generationLoop    +=    Math.max(Math.abs(sigma    *    sqrtDiagC[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	15	None	replace
45	[BUG]  [BUGGY]  sigma  =  Math.max(Math.abs(sigma  *  sqrtDiagC[i]),  sqrtDiagC[i]);  [CE]  [FE]              AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.max(Math.abs(sigma  *  sqrtDiagC[i]),  sqrtDiagC[i]);  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.max(Math.abs(sigma  *  sqrtDiagC[i]),  sqrtDiagC[i]);	  sigma    =    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	7	None	replace
46	[BUG]  [BUGGY]  sigma  =  Math.abs(sigma  *  sqrtDiagC[i]);  [CE]  [FE]                  AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.abs(sigma  *  sqrtDiagC[i]);  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.abs(sigma  *  sqrtDiagC[i]);	  sigma    =    Math.abs(sqrtDiagC[i]);    	non-compiled	[CE]  	22	None	replace
47	[BUG]  [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  generationLoop)  {  [CE]  [FE]                AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  generationLoop)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i])  <  generationLoop)  {	  sigma    *    Math.max(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i])    <    stopTolUpX)    {    	non-compiled	[CE]  	4	None	replace
48	[BUG]  [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtCol[i])>  generationLoop)  {  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtCol[i])>  generationLoop)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtCol[i])>  generationLoop)  {	  sigma    *    Math.max(Math.abs(sqrtDiagC[i]),    sqrtCol[i])>    stopTolUpX)    {    	non-compiled	[CE]  	19	None	replace
49	[BUG]  [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtCol[i])  <  =  stopTolUpX)  {  [CE]  [FE]              AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtCol[i])  <  =  stopTolUpX)  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.max(Math.abs(sqrtDiagC[i]),  sqrtCol[i])  <  =  stopTolUpX)  {	  sigma    *    Math.max(Math.abs(sqrtDiagC[i]),    sqrtCol[i])>    stopTolUpX)    {    	non-compiled	[CE]  	19	None	replace
50	[BUG]  [BUGGY]  sigma  *  Math.max(Math.abs(sigma  *  sqrtDiagC[i]),  sqrtDiagC[i])  {  [CE]  [FE]              AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  *  Math.max(Math.abs(sigma  *  sqrtDiagC[i]),  sqrtDiagC[i])  {  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  *  Math.max(Math.abs(sigma  *  sqrtDiagC[i]),  sqrtDiagC[i])  {	  sigma    *    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i])    {    	non-compiled	[CE]  	12	None	replace
51	[BUG]  [BUGGY]  continue  GenerationLoop;  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  continue  GenerationLoop;  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	continue  GenerationLoop;	  continue    null;    	non-compiled	[CE]  	23	None	replace
52	[BUG]  [BUGGY]  sigma  =  Math.min(Math.abs(sqrtDiagC[i]),  pcCol[i]);  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  sigma  =  Math.min(Math.abs(sqrtDiagC[i]),  pcCol[i]);  [BUGGY]      }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	sigma  =  Math.min(Math.abs(sqrtDiagC[i]),  pcCol[i]);	  sigma    =    Math.min(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	6	None	replace
53	[BUG]  [BUGGY]  generationLoop  -=  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i]);  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  generationLoop  -=  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i]);  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	generationLoop  -=  Math.max(Math.abs(sqrtDiagC[i]),  sqrtDiagC[i]);	  generationLoop    +=    Math.max(Math.abs(sqrtDiagC[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	20	None	replace
54	[BUG]  [BUGGY]  generationLoop  -=  Math.max(Math.abs(sigma  *  sqrtDiagC[i]),  sqrtDiagC[i]);  [CE]  [FE]            AssertionError      [CONTEXT]        if  (stopFitness  !=  0)  {  //  only  if  stopFitness  is  defined  if  (bestFitness  <  (isMinimize  ?  stopFitness  :  -stopFitness))  {  break  generationLoop;  }  }  final  double[]  sqrtDiagC  =  sqrt(diagC).getColumn(0);  final  double[]  pcCol  =  pc.getColumn(0);  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  Math.max(Math.abs(pcCol[i]),  sqrtDiagC[i])  >  stopTolX)  {      [BUGGY]  generationLoop  -=  Math.max(Math.abs(sigma  *  sqrtDiagC[i]),  sqrtDiagC[i]);  [BUGGY]      break;  }  if  (i  >=  dimension  -  1)  {  break  generationLoop;  }  }  for  (int  i  =  0;  i  <  dimension;  i++)  {  if  (sigma  *  sqrtDiagC[i]  >  stopTolUpX)  {  break  generationLoop;  }  }  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	459	459	28	replace	generationLoop  -=  Math.max(Math.abs(sigma  *  sqrtDiagC[i]),  sqrtDiagC[i]);	  generationLoop    +=    Math.max(Math.abs(pcCol[i]),    sqrtDiagC[i]);    	non-compiled	[CE]  	14	None	replace
