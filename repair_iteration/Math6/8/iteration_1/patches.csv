bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(isActiveCMA)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  isActiveCMA  =  true;  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  if(isActiveCMA)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  isActiveCMA  =  true;  }  [BUGGY]    final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	if(isActiveCMA)  {  for(int  i  =  0;  i  <  iterations;  i++)  {  isActiveCMA  =  true;  }	      	non-compiled	[CE]  ')'  expected	2	None	replace
2	[BUG]  [BUGGY]  Integer  i  =  getInitializeInt(isMinimize);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  Integer  i  =  getInitializeInt(isMinimize);  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	Integer  i  =  getInitializeInt(isMinimize);	      Integer    i    =    getInitializeInt();    	non-compiled	[CE]  ')'  expected	8	None	replace
3	[BUG]  [BUGGY]  Integer  i  =  getInitializeInt(getStartPoint()  +  1);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  Integer  i  =  getInitializeInt(getStartPoint()  +  1);  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	Integer  i  =  getInitializeInt(getStartPoint()  +  1);	      Integer    i    =    getInitializeInt(getStartPoint());    	non-compiled	[CE]  ')'  expected	7	None	replace
4	[BUG]  [BUGGY]  MiscUtilities.checkState(isRepairMode  frumoase);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  MiscUtilities.checkState(isRepairMode  frumoase);  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	MiscUtilities.checkState(isRepairMode  frumoase);	      if(isActiveCMA)    {    for(int    i    =    0;    i    <    getStartPoint();    i++)    {    isActiveCMA    =    true;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
5	[BUG]  [BUGGY]  MiscUtilities.checkState(isActiveCMA);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  MiscUtilities.checkState(isActiveCMA);  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	MiscUtilities.checkState(isActiveCMA);	      if(isActiveCMA)    {    for(int    i    =    0;    i    <    getStartPoint();    i++)    {    isActiveCMA    =    true;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
6	[BUG]  [BUGGY]  final  FitnessFunction  fitfun  =  new  FitnessFunction(isActiveCMA);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  final  FitnessFunction  fitfun  =  new  FitnessFunction(isActiveCMA);  [BUGGY]    final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	final  FitnessFunction  fitfun  =  new  FitnessFunction(isActiveCMA);	  final    FitnessFunction    fitfun    =    new    FitnessFunction(isMinimize);    	non-compiled	[CE]  ')'  expected	1	None	replace
7	[BUG]  [BUGGY]  final  FitnessFunction  fitfun  =  new  FitnessFunction(isActive);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  final  FitnessFunction  fitfun  =  new  FitnessFunction(isActive);  [BUGGY]    final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	final  FitnessFunction  fitfun  =  new  FitnessFunction(isActive);	  final    FitnessFunction    fitfun    =    new    FitnessFunction(isMinimize);    	non-compiled	[CE]  ')'  expected	1	None	replace
8	[BUG]  [BUGGY]  int[]  dimension  =  getStartPoint().toArray(new  int[size()  -  1]);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  int[]  dimension  =  getStartPoint().toArray(new  int[size()  -  1]);  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	int[]  dimension  =  getStartPoint().toArray(new  int[size()  -  1]);	      int[]    dimension    =    getStartPoint().toArray(new    int[size()    ]);    	non-compiled	[CE]  ')'  expected	4	None	replace
9	[BUG]  [BUGGY]  Integer  i  =  getInitializeIntValue()  +  1;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  Integer  i  =  getInitializeIntValue()  +  1;  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	Integer  i  =  getInitializeIntValue()  +  1;	      Integer    i    =    getInitializeIntValue();    	non-compiled	[CE]  ')'  expected	6	None	replace
10	[BUG]  [BUGGY]  int[]  dimension  =  getDimension();  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  int[]  dimension  =  getDimension();  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	int[]  dimension  =  getDimension();	      int[]    dimension    =    getStartPoint();    	non-compiled	[CE]  ')'  expected	5	None	replace
11	[BUG]  [BUGGY]  int[]  dimension  =  getMinimize();  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  int[]  dimension  =  getMinimize();  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	int[]  dimension  =  getMinimize();	      int[]    dimension    =    getStartPoint();    	non-compiled	[CE]  ')'  expected	5	None	replace
12	[BUG]  [BUGGY]  int[]  dimension  =  getEndPoint().getValues();  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  int[]  dimension  =  getEndPoint().getValues();  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	int[]  dimension  =  getEndPoint().getValues();	      int[]    dimension    =    getStartPoint().getValues();    	non-compiled	[CE]  ')'  expected	3	None	replace
13	[BUG]  [BUGGY]  FitnessFunction  fitfun  =  new  FitnessFunction(isMinimize);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  FitnessFunction  fitfun  =  new  FitnessFunction(isMinimize);  [BUGGY]    final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	FitnessFunction  fitfun  =  new  FitnessFunction(isMinimize);	  FitnessFunction    fitfun    =    new    FitnessFunction();    	non-compiled	[CE]  ')'  expected	12	None	replace
14	[BUG]  [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  getStartPoint();  i++)  {  add(getStartPoint(),  isMinimize);  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  getStartPoint();  i++)  {  add(getStartPoint(),  isMinimize);  }  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	if(isRepairMode)  {  for(int  i  =  0;  i  <  getStartPoint();  i++)  {  add(getStartPoint(),  isMinimize);  }	      if(isActiveCMA)    {    for(int    i    =    0;    i    <    getStartPoint();    i++)    {    add(getStartPoint(),    isMinimize);    }    	non-compiled	[CE]  ')'  expected	10	None	replace
15	[BUG]  [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  getEndPoint();  i++)  {  add(getStartPoint(),  isMinimize);  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  getEndPoint();  i++)  {  add(getStartPoint(),  isMinimize);  }  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	if(isRepairMode)  {  for(int  i  =  0;  i  <  getEndPoint();  i++)  {  add(getStartPoint(),  isMinimize);  }	      if(isActiveCMA)    {    for(int    i    =    0;    i    <    getStartPoint();    i++)    {    add(getStartPoint(),    isMinimize);    }    	non-compiled	[CE]  ')'  expected	10	None	replace
16	[BUG]  [BUGGY]  int  dimension  =  getStartPoint();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  int  dimension  =  getStartPoint();  [BUGGY]    final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	int  dimension  =  getStartPoint();	      	non-compiled	[CE]  ')'  expected	2	None	replace
17	[BUG]  [BUGGY]  Integer  i  =  getInitializeInt(getEndPoint());  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  Integer  i  =  getInitializeInt(getEndPoint());  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	Integer  i  =  getInitializeInt(getEndPoint());	      Integer    i    =    getInitializeInt(getStartPoint());    	non-compiled	[CE]  ')'  expected	7	None	replace
18	[BUG]  [BUGGY]  Injectables.checkNotNull(injectables);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  Injectables.checkNotNull(injectables);  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	Injectables.checkNotNull(injectables);	      if(isActiveCMA)    {    for(int    i    =    0;    i    <    getStartPoint();    i++)    {    add(getStartPoint(),    isMinimize);    }    	non-compiled	[CE]  ')'  expected	10	None	replace
19	[BUG]  [BUGGY]  Injectables.checkState(isActiveCMA);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  Injectables.checkState(isActiveCMA);  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	Injectables.checkState(isActiveCMA);	      if(isActiveCMA)    {    for(int    i    =    0;    i    <    getStartPoint();    i++)    {    add(getStartPoint(),    isMinimize);    }    	non-compiled	[CE]  ')'  expected	10	None	replace
20	[BUG]  [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  getStartPoint();  i++)  {  isActiveCMA  =  false;  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  getStartPoint();  i++)  {  isActiveCMA  =  false;  }  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	if(isRepairMode)  {  for(int  i  =  0;  i  <  getStartPoint();  i++)  {  isActiveCMA  =  false;  }	      if(isActiveCMA)    {    for(int    i    =    0;    i    <    getStartPoint();    i++)    {    isActiveCMA    =    false;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
21	[BUG]  [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  getEndPoint();  i++)  {  isActiveCMA  =  false;  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  getEndPoint();  i++)  {  isActiveCMA  =  false;  }  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	if(isRepairMode)  {  for(int  i  =  0;  i  <  getEndPoint();  i++)  {  isActiveCMA  =  false;  }	      if(isActiveCMA)    {    for(int    i    =    0;    i    <    getStartPoint();    i++)    {    isActiveCMA    =    false;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
22	[BUG]  [BUGGY]  int[]  dimension  =  getDimensions();  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  int[]  dimension  =  getDimensions();  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	int[]  dimension  =  getDimensions();	      int[]    dimension    =    getStartPoint();    	non-compiled	[CE]  ')'  expected	5	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(isActiveCMA);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  Preconditions.checkState(isActiveCMA);  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	Preconditions.checkState(isActiveCMA);	      if(isActiveCMA)    {    for(int    i    =    0;    i    <    getStartPoint();    i++)    {    isActiveCMA    =    true;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(isRepairMode  ==  false);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  Preconditions.checkState(isRepairMode  ==  false);  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	Preconditions.checkState(isRepairMode  ==  false);	      if(isActiveCMA)    {    for(int    i    =    0;    i    <    getStartPoint();    i++)    {    isActiveCMA    =    true;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
25	[BUG]  [BUGGY]  int[]  dimension  =  getSize();  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  int[]  dimension  =  getSize();  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	int[]  dimension  =  getSize();	      int[]    dimension    =    getStartPoint();    	non-compiled	[CE]  ')'  expected	5	None	replace
26	[BUG]  [BUGGY]  final  FitnessFunction  fitfun  =  new  FitnessFunction(isOptimize);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  final  FitnessFunction  fitfun  =  new  FitnessFunction(isOptimize);  [BUGGY]    final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	final  FitnessFunction  fitfun  =  new  FitnessFunction(isOptimize);	  final    FitnessFunction    fitfun    =    new    FitnessFunction(isMinimize);    	non-compiled	[CE]  ')'  expected	1	None	replace
27	[BUG]  [BUGGY]  int[]  dimension  =  getEndPoint().toArray(new  int[size()  ]);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  int[]  dimension  =  getEndPoint().toArray(new  int[size()  ]);  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	int[]  dimension  =  getEndPoint().toArray(new  int[size()  ]);	      int[]    dimension    =    getStartPoint().toArray(new    int[size()    ]);    	non-compiled	[CE]  ')'  expected	4	None	replace
28	[BUG]  [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  getStartPoint();  i++)  {  isActiveCMA  =  true;  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  getStartPoint();  i++)  {  isActiveCMA  =  true;  }  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	if(isRepairMode)  {  for(int  i  =  0;  i  <  getStartPoint();  i++)  {  isActiveCMA  =  true;  }	      if(isActiveCMA)    {    for(int    i    =    0;    i    <    getStartPoint();    i++)    {    isActiveCMA    =    true;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
29	[BUG]  [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  getEndPoint();  i++)  {  isActiveCMA  =  true;  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  getEndPoint();  i++)  {  isActiveCMA  =  true;  }  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	if(isRepairMode)  {  for(int  i  =  0;  i  <  getEndPoint();  i++)  {  isActiveCMA  =  true;  }	      if(isActiveCMA)    {    for(int    i    =    0;    i    <    getStartPoint();    i++)    {    isActiveCMA    =    true;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
30	[BUG]  [BUGGY]  Integer  i  =  getInitializeInt(getMinimumSize());  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  Integer  i  =  getInitializeInt(getMinimumSize());  [BUGGY]    final  FitnessFunction  fitfun  =  new  FitnessFunction();  final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	Integer  i  =  getInitializeInt(getMinimumSize());	      Integer    i    =    getInitializeInt(getStartPoint());    	non-compiled	[CE]  ')'  expected	7	None	replace
31	[BUG]  [BUGGY]  if(isActiveCMA)  {  final  double[]  dimension  =  getStartPoint();  if(dimension!=  0)  {  return  new  PointValuePair(getStartPoint(),  isMinimize?  1  :  0);  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  if(isActiveCMA)  {  final  double[]  dimension  =  getStartPoint();  if(dimension!=  0)  {  return  new  PointValuePair(getStartPoint(),  isMinimize?  1  :  0);  }  [BUGGY]    final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	if(isActiveCMA)  {  final  double[]  dimension  =  getStartPoint();  if(dimension!=  0)  {  return  new  PointValuePair(getStartPoint(),  isMinimize?  1  :  0);  }	      	non-compiled	[CE]  ')'  expected	2	None	replace
32	[BUG]  [BUGGY]  if(isActiveCMA)  {  final  double[]  dimension  =  getStartPoint();  if(dimension  ==  0)  {  return  new  PointValuePair(getStartPoint(),  isMinimize?  1  :  0);  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    protected  PointValuePair  doOptimize()  {  isMinimize  =  getGoalType().equals(GoalType.MINIMIZE);    [BUGGY]  if(isActiveCMA)  {  final  double[]  dimension  =  getStartPoint();  if(dimension  ==  0)  {  return  new  PointValuePair(getStartPoint(),  isMinimize?  1  :  0);  }  [BUGGY]    final  double[]  guess  =  getStartPoint();  dimension  =  guess.length;  initializeCMA(guess);  iterations  =  0;  double  bestValue  =  fitfun.value(guess);  push(fitnessHistory,  bestValue);  PointValuePair  optimum  =  new  PointValuePair(getStartPoint(),  isMinimize  ?  bestValue  :  -bestValue);  [CLASS]  CMAESOptimizer  Sigma  PopulationSize  DoubleIndex  FitnessFunction  [METHOD]  doOptimize  [RETURN_TYPE]  PointValuePair  [VARIABLES]  TooManyEvaluationsException  e  boolean  generateStatistics  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  inputSigma  pcCol  s  sigma  sqrtDiagC  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  FitnessFunction  fitfun  int[]  arindex  int  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  size  RandomGenerator  random  PointValuePair  current  lastResult  optimum  	projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java	0.7126966450997984	371	371	28	replace	if(isActiveCMA)  {  final  double[]  dimension  =  getStartPoint();  if(dimension  ==  0)  {  return  new  PointValuePair(getStartPoint(),  isMinimize?  1  :  0);  }	      	non-compiled	[CE]  ')'  expected	2	None	replace
