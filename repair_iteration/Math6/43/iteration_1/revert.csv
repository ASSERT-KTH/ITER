projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getColumn(0)),isMinimize?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(arindex.getColumn(0)),isMinimize?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getColumn(0)),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439bestArx.setMaximumSize(bestValue);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439bestArx.setColumn(sigma);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439bestArx.setColumn(column);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439lastResult=Math.min(lastResult.length,bestValue);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439lastResult=Math.max(lastResult,bestValue);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getColumn(1)),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getColumn(0),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getColumnIndex(0)),isMinimize?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439bestArx.setColumn(column+1);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getRowCount(0),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getRowCount(),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439bestArx.setMaximumSize(bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439bestArx.setMaximumSize(sigma);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(arindex.getColumnIndex(0)),isMinimize?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getRowIndex(0)),isMinimize?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getRowCount(0)),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(arindex.getColumn(0)),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439lastResult=Math.max(lastResult,bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439lastResult=Math.min(lastResult,bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439lastResult=Math.min(lastResult.length,bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439lastResult=Math.max(lastResult.length,bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(arindex.getColumn(1)),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getRowCount(1)),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(arindex.getColumn(0)),isActive?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439bestFitness=Math.min(bestFitness,getConvergenceChecker().converged(iterations,optimum,lastResult));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439bestFitness=Math.min(bestFitness,getConvergenceChecker().converged(iterations,optimum));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getColumn(1),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getColumnIndex(0)),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439lastResult=Math.min(lastResult.length,worstFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439bestArx.setMaximumSize(bestValue+1);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getColumn(2)),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439lastResult=Math.min(lastResult,bestValue);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(arindex.getColumn(1)),isActive?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getColumnIndex(0),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getColumnIndex(1),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439bestFitness=Math.max(bestValue,getConvergenceChecker().converged(iterations,optimum));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439bestFitness=Math.max(bestValue,getConvergenceChecker().converged(iterations,optimum,lastResult));
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439bestArx.setIndex(sigma);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439optimum=newPointValuePair(fitfun.repair(bestArx.getColumnIndex(1)),bestValue?bestFitness:-bestFitness);
projects/Math6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java439lastResult=Math.max(lastResult.length,bestValue);
