bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
2	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]  final  int  sz  =  seq[1].length();  [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	add	final  int  sz  =  seq[1].length();	final  int  sz  =  seq[0].length();  	compilable	  [FE]  AssertionError  testLang882	17	1
3	[BUG]  [BUGGY]  final  int  sz  =  seq[1].length();  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]  final  int  sz  =  seq[1].length();  [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	replace	final  int  sz  =  seq[1].length();	final  int  sz  =  seq[0].length();  	compilable	  [FE]  AssertionError  testLang882	17	1
5	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  sz  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	replace	  	final  int  sz  =  seq[0].length();  	non-compiled	[CE]  cannot  find  symbol  sz	17	None
11	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =  1;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  1;	int  _longest  =  0;  	compilable	  [FE]  AssertionError  testLang882	9	1
12	[BUG]  [BUGGY]  int  _longest  =  1;  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =  1;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  1;	int  _longest  =  0;  	compilable	  [FE]  AssertionError  testLang882	9	1
12	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  Integer.MAX_VALUE;	int  _longest  =  0;  	compilable	  [FE]  AssertionError  testLang882	9	1
13	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  Integer.MAX_VALUE;	int  _longest  =  0;  	compilable	  [FE]  AssertionError  testLang882	9	1
13	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =  lookup.length;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  lookup.length;	int  _longest  =  0;  	compilable	  [FE]  AssertionError  testLang882	9	1
14	[BUG]  [BUGGY]  int  _longest  =  lookup.length;  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =  lookup.length;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  lookup.length;	int  _longest  =  0;  	compilable	  [FE]  AssertionError  testLang882	9	1
14	[BUG]  [BUGGY]  int  _longest  =  lookupMap.length;  [CE]  cannot  find  symbol  length  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =  lookupMap.length;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  lookupMap.length;	int  _longest  =  0;  	non-compiled	[CE]  cannot  find  symbol  length	9	None
15	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  _longest  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	  	int  _longest  =  0;  	non-compiled	[CE]  cannot  find  symbol  _longest	9	None
22	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  _longest);  [CE]  no  suitable  method  found  for  put(CharSequence,CharSequence,int)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  _longest);  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1],  _longest);	this.lookupMap.put(seq[0],  seq[1]);  	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,CharSequence,int)	15	None
23	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  lookup);  [CE]  no  suitable  method  found  for  put(CharSequence,CharSequence,CharSequence[][])  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  lookup);  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1],  lookup);	this.lookupMap.put(seq[0],  seq[1]);  	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,CharSequence,CharSequence[][])	15	None
24	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  -  1);  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1]  -  1);	this.lookupMap.put(seq[0],  seq[1]);  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	15	None
32	[BUG]  [BUGGY]  if(sz  >  shortest)  {  [CE]  variable  shortest  might  not  have  been  initialized  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  [BUGGY]  if(sz  >  shortest)  {  [BUGGY]  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	53	53	1	replace	if(sz  >  shortest)  {	if  (sz  <  _shortest)  {  	non-compiled	[CE]  variable  shortest  might  not  have  been  initialized	19	None
35	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  [BUGGY]    [BUGGY]  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	53	53	1	replace	  	if  (sz  <  _shortest)  {  	non-compiled	[CE]  <identifier>  expected	19	None
41	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	add	    this.lookupMap.put(seq[0],  seq[1]);		compilable	  [FE]  AssertionError  testLang882	18	1
42	[BUG]  [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	replace	    this.lookupMap.put(seq[0],  seq[1]);		compilable	  [FE]  AssertionError  testLang882	18	1
42	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    lookupMap.put(seq[0],  seq[1]);  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	add	    lookupMap.put(seq[0],  seq[1]);		compilable	  [FE]  AssertionError  testLang882	18	1
43	[BUG]  [BUGGY]    lookupMap.put(seq[0],  seq[1]);  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    lookupMap.put(seq[0],  seq[1]);  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	replace	    lookupMap.put(seq[0],  seq[1]);		compilable	  [FE]  AssertionError  testLang882	18	1
43	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    _longest  =  seq[1].length();  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	add	    _longest  =  seq[1].length();		compilable	  [FE]  AssertionError  testLang882	18	1
44	[BUG]  [BUGGY]    _longest  =  seq[1].length();  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    _longest  =  seq[1].length();  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	replace	    _longest  =  seq[1].length();		compilable	  [FE]  AssertionError  testLang882	18	1
53	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence>,  CharSequence>();  [CE]  '('  or  '['  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence>,  CharSequence>();  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence>,  CharSequence>();	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	non-compiled	[CE]  '('  or  '['  expected	5	None
54	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	compilable	  [FE]  AssertionError  testLang882	5	1
55	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	compilable	  [FE]  AssertionError  testLang882	5	1
55	[BUG]  [BUGGY]    [CE]  variable  lookupMap  might  not  have  been  initialized  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	  	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	non-compiled	[CE]  variable  lookupMap  might  not  have  been  initialized	5	None
61	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testLang882  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	add	throw  new  IllegalArgumentException( " ");	return  0;  	compilable	  [FE]  IllegalArgumentException  testLang882	1	1
62	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  IllegalArgumentException  testLang882  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	throw  new  IllegalArgumentException( " ");	return  0;  	compilable	  [FE]  IllegalArgumentException  testLang882	1	1
62	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]  return  1;  [BUGGY]  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	add	return  1;	return  0;  	compilable	  [FE]  AssertionError  testLang882	1	1
63	[BUG]  [BUGGY]  return  1;  [FE]  AssertionError  testLang882  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]  return  1;  [BUGGY]  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	return  1;	return  0;  	compilable	  [FE]  AssertionError  testLang882	1	1
63	[BUG]  [BUGGY]  return  0L;  [CE]  possible  loss  of  precision  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]  return  0L;  [BUGGY]  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	return  0L;	return  0;  	non-compiled	[CE]  possible  loss  of  precision	1	None
64	[BUG]  [BUGGY]  [FE]  IllegalStateException  testLang882  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	add	throw  new  IllegalStateException( " ");	return  0;  	compilable	  [FE]  IllegalStateException  testLang882	1	1
65	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  IllegalStateException  testLang882  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	throw  new  IllegalStateException( " ");	return  0;  	compilable	  [FE]  IllegalStateException  testLang882	1	1
65	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    [BUGGY]  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	  	return  0;  	non-compiled	[CE]  missing  return  statement	1	None
71	[BUG]  [BUGGY]    this.lookupMap.put(seq[0],  lookup[1]);  [CE]  cannot  find  symbol  seq  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    this.lookupMap.put(seq[0],  lookup[1]);  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	    this.lookupMap.put(seq[0],  lookup[1]);		non-compiled	[CE]  cannot  find  symbol  seq	10	None
72	[BUG]  [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  seq  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	    this.lookupMap.put(seq[0],  seq[1]);		non-compiled	[CE]  cannot  find  symbol  seq	10	None
73	[BUG]  [BUGGY]    lookupMap.put(seq[0],  lookup[1]);  [CE]  cannot  find  symbol  seq  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    lookupMap.put(seq[0],  lookup[1]);  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	    lookupMap.put(seq[0],  lookup[1]);		non-compiled	[CE]  cannot  find  symbol  seq	10	None
74	[BUG]  [BUGGY]    lookupMap.put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  seq  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    lookupMap.put(seq[0],  seq[1]);  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	    lookupMap.put(seq[0],  seq[1]);		non-compiled	[CE]  cannot  find  symbol  seq	10	None
75	[BUG]  [BUGGY]    int  sz  =  lookupMap.length();  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    int  sz  =  lookupMap.length();  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	    int  sz  =  lookupMap.length();		non-compiled	[CE]  cannot  find  symbol	10	None
82	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]  if(this.lookupMap!=  null)  {  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	add	if(this.lookupMap!=  null)  {	if  (lookup  !=  null)  {  	compilable	  [FE]  AssertionError  testLang882	11	1
83	[BUG]  [BUGGY]  if(this.lookupMap!=  null)  {  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]  if(this.lookupMap!=  null)  {  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	if(this.lookupMap!=  null)  {	if  (lookup  !=  null)  {  	compilable	  [FE]  AssertionError  testLang882	11	1
85	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	  	if  (lookup  !=  null)  {  	non-compiled	[CE]  <identifier>  expected	11	None
91	[BUG]  [BUGGY]  final  LookupTranslator(final  CharSequence[]...  lookup)  {  [CE]  modifier  final  not  allowed  here  [CONTEXT]    [BUGGY]  final  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	final  LookupTranslator(final  CharSequence[]...  lookup)  {	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  modifier  final  not  allowed  here	3	None
93	[BUG]  [BUGGY]  super(final  CharSequence[]...  lookup)  {  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]  super(final  CharSequence[]...  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(final  CharSequence[]...  lookup)  {	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  illegal  start  of  type	3	None
94	[BUG]  [BUGGY]  super()  &&  final  CharSequence[]...  lookup)  {  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]  super()  &&  final  CharSequence[]...  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super()  &&  final  CharSequence[]...  lookup)  {	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  illegal  start  of  type	3	None
95	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	  	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  <identifier>  expected	3	None
102	[BUG]  [BUGGY]  for(final  CharSequence[]  seq  :  lookupMap)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]  for(final  CharSequence[]  seq  :  lookupMap)  {  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	for(final  CharSequence[]  seq  :  lookupMap)  {	for  (final  CharSequence[]  seq  :  lookup)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	13	None
104	[BUG]  [BUGGY]  for(final  CharSequence[]  seq  :  lookup.seq)  {  [CE]  cannot  find  symbol  seq  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]  for(final  CharSequence[]  seq  :  lookup.seq)  {  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	for(final  CharSequence[]  seq  :  lookup.seq)  {	for  (final  CharSequence[]  seq  :  lookup)  {  	non-compiled	[CE]  cannot  find  symbol  seq	13	None
105	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	  	for  (final  CharSequence[]  seq  :  lookup)  {  	non-compiled	[CE]  <identifier>  expected	13	None
111	[BUG]  [BUGGY]    lookupMap.put(_shortest,  _longest);  [CE]  no  suitable  method  found  for  put(int,int)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    lookupMap.put(_shortest,  _longest);  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    lookupMap.put(_shortest,  _longest);		non-compiled	[CE]  no  suitable  method  found  for  put(int,int)	12	None
112	[BUG]  [BUGGY]    this.lookupMap.put(_shortest,  _longest);  [CE]  no  suitable  method  found  for  put(int,int)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    this.lookupMap.put(_shortest,  _longest);  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    this.lookupMap.put(_shortest,  _longest);		non-compiled	[CE]  no  suitable  method  found  for  put(int,int)	12	None
113	[BUG]  [BUGGY]    this.lookupMap.put(_shortest,  lookup);  [CE]  no  suitable  method  found  for  put(int,CharSequence[][])  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    this.lookupMap.put(_shortest,  lookup);  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    this.lookupMap.put(_shortest,  lookup);		non-compiled	[CE]  no  suitable  method  found  for  put(int,CharSequence[][])	12	None
114	[BUG]  [BUGGY]    this.lookupMap.put(_shortest,  lookup[0],  _longest);  [CE]  no  suitable  method  found  for  put(int,CharSequence[],int)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    this.lookupMap.put(_shortest,  lookup[0],  _longest);  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    this.lookupMap.put(_shortest,  lookup[0],  _longest);		non-compiled	[CE]  no  suitable  method  found  for  put(int,CharSequence[],int)	12	None
115	[BUG]  [BUGGY]    this.lookupMap.put(_shortest,  lookup[1]);  [CE]  no  suitable  method  found  for  put(int,CharSequence[])  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    this.lookupMap.put(_shortest,  lookup[1]);  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    this.lookupMap.put(_shortest,  lookup[1]);		non-compiled	[CE]  no  suitable  method  found  for  put(int,CharSequence[])	12	None
121	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  -  1;	int  _shortest  =  Integer.MAX_VALUE;  	compilable	  [FE]  AssertionError  testLang882	7	1
122	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  -  1;	int  _shortest  =  Integer.MAX_VALUE;  	compilable	  [FE]  AssertionError  testLang882	7	1
122	[BUG]  [BUGGY]  int  _shortest  =  LookupMap.MAX_VALUE;  [CE]  cannot  find  symbol  LookupMap  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]  int  _shortest  =  LookupMap.MAX_VALUE;  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  LookupMap.MAX_VALUE;	int  _shortest  =  Integer.MAX_VALUE;  	non-compiled	[CE]  cannot  find  symbol  LookupMap	7	None
123	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]  int  _shortest  =  lookup.length;  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  lookup.length;	int  _shortest  =  Integer.MAX_VALUE;  	compilable	  [FE]  AssertionError  testLang882	7	1
124	[BUG]  [BUGGY]  int  _shortest  =  lookup.length;  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]  int  _shortest  =  lookup.length;  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  lookup.length;	int  _shortest  =  Integer.MAX_VALUE;  	compilable	  [FE]  AssertionError  testLang882	7	1
125	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  _shortest  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	  	int  _shortest  =  Integer.MAX_VALUE;  	non-compiled	[CE]  cannot  find  symbol  _shortest	7	None
131	[BUG]  [BUGGY]    int  sz  =  seq[1].length();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  [BUGGY]    int  sz  =  seq[1].length();  [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	53	53	1	replace	    int  sz  =  seq[1].length();		non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	20	None
132	[BUG]  [BUGGY]    if(sz  >  longest)  {  if(sz  >  shortest)  {  sz  =  seq[1].length();  }  [CE]  ';'  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  [BUGGY]    if(sz  >  longest)  {  if(sz  >  shortest)  {  sz  =  seq[1].length();  }  [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	53	53	1	replace	    if(sz  >  longest)  {  if(sz  >  shortest)  {  sz  =  seq[1].length();  }		non-compiled	[CE]  ';'  expected	20	None
133	[BUG]  [BUGGY]    sz  =  seq[1].length();  [CE]  cannot  assign  a  value  to  final  variable  sz  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  [BUGGY]    sz  =  seq[1].length();  [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	53	53	1	replace	    sz  =  seq[1].length();		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sz	20	None
134	[BUG]  [BUGGY]    final  int  sz  =  seq[1].length();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  [BUGGY]    final  int  sz  =  seq[1].length();  [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	53	53	1	replace	    final  int  sz  =  seq[1].length();		non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	20	None
135	[BUG]  [BUGGY]    if(sz  >  longest)  {  if(sz  >  shortest)  {  sz  =  seq[1];  }  [CE]  ';'  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  [BUGGY]    if(sz  >  longest)  {  if(sz  >  shortest)  {  sz  =  seq[1];  }  [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	53	53	1	replace	    if(sz  >  longest)  {  if(sz  >  shortest)  {  sz  =  seq[1];  }		non-compiled	[CE]  ';'  expected	20	None
141	[BUG]  [BUGGY]    if(!out.hasChildren())  {  out.write(result.toString());  if(!out.hasChildren())  {  out.write(result.toString());  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    if(!out.hasChildren())  {  out.write(result.toString());  if(!out.hasChildren())  {  out.write(result.toString());  }  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    if(!out.hasChildren())  {  out.write(result.toString());  if(!out.hasChildren())  {  out.write(result.toString());  }		non-compiled	[CE]  reached  end  of  file  while  parsing	2	None
142	[BUG]  [BUGGY]    if(!out.hasChildren())  {  out.write(result.toString());  if(!out.hasChildren())  {  out.write(_longest);  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    if(!out.hasChildren())  {  out.write(result.toString());  if(!out.hasChildren())  {  out.write(_longest);  }  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    if(!out.hasChildren())  {  out.write(result.toString());  if(!out.hasChildren())  {  out.write(_longest);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	2	None
143	[BUG]  [BUGGY]    if(max  >  i)  {  if(!result.isLong())  {  out.write('n');  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    if(max  >  i)  {  if(!result.isLong())  {  out.write('n');  }  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    if(max  >  i)  {  if(!result.isLong())  {  out.write('n');  }		non-compiled	[CE]  reached  end  of  file  while  parsing	2	None
144	[BUG]  [BUGGY]    if(!out.hasChildren())  {  out.write(result.toString());  if(!out.hasChildren())  {  out.write(_longest  +  i);  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    if(!out.hasChildren())  {  out.write(result.toString());  if(!out.hasChildren())  {  out.write(_longest  +  i);  }  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    if(!out.hasChildren())  {  out.write(result.toString());  if(!out.hasChildren())  {  out.write(_longest  +  i);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	2	None
145	[BUG]  [BUGGY]    if(!out.hasChildren())  {  out.write(result.toString());  if(!out.hasChildren())  {  return  1;  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    if(!out.hasChildren())  {  out.write(result.toString());  if(!out.hasChildren())  {  return  1;  }  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    if(!out.hasChildren())  {  out.write(result.toString());  if(!out.hasChildren())  {  return  1;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	2	None
151	[BUG]  [BUGGY]    lookupMap.put(_shortest,  _longest);  [CE]  no  suitable  method  found  for  put(int,int)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    lookupMap.put(_shortest,  _longest);  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	    lookupMap.put(_shortest,  _longest);		non-compiled	[CE]  no  suitable  method  found  for  put(int,int)	14	None
152	[BUG]  [BUGGY]    this.lookupMap.put(_shortest,  _longest);  [CE]  no  suitable  method  found  for  put(int,int)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    this.lookupMap.put(_shortest,  _longest);  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	    this.lookupMap.put(_shortest,  _longest);		non-compiled	[CE]  no  suitable  method  found  for  put(int,int)	14	None
153	[BUG]  [BUGGY]    this.lookupMap.put(_shortest,  lookup);  [CE]  no  suitable  method  found  for  put(int,CharSequence[][])  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    this.lookupMap.put(_shortest,  lookup);  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	    this.lookupMap.put(_shortest,  lookup);		non-compiled	[CE]  no  suitable  method  found  for  put(int,CharSequence[][])	14	None
154	[BUG]  [BUGGY]    this.lookupMap.put(_shortest,  lookup.getLowerBound());  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    this.lookupMap.put(_shortest,  lookup.getLowerBound());  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	    this.lookupMap.put(_shortest,  lookup.getLowerBound());		non-compiled	[CE]  cannot  find  symbol	14	None
155	[BUG]  [BUGGY]    this.lookupMap.put(_shortest,  lookup[0],  _longest);  [CE]  no  suitable  method  found  for  put(int,CharSequence[],int)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    this.lookupMap.put(_shortest,  lookup[0],  _longest);  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	    this.lookupMap.put(_shortest,  lookup[0],  _longest);		non-compiled	[CE]  no  suitable  method  found  for  put(int,CharSequence[],int)	14	None
162	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]    lookupMap.put(seq[0],  seq[1]);  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	    lookupMap.put(seq[0],  seq[1]);		compilable	  [FE]  AssertionError  testLang882	16	1
163	[BUG]  [BUGGY]    lookupMap.put(seq[0],  seq[1]);  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]    lookupMap.put(seq[0],  seq[1]);  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	    lookupMap.put(seq[0],  seq[1]);		compilable	  [FE]  AssertionError  testLang882	16	1
163	[BUG]  [BUGGY]    _longest  =  lookup.length();  this.lookupMap.put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]    _longest  =  lookup.length();  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	    _longest  =  lookup.length();  this.lookupMap.put(seq[0],  seq[1]);		non-compiled	[CE]  cannot  find  symbol	16	None
164	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]    this.lookupMap.remove(seq[0],  seq[1]);  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	    this.lookupMap.remove(seq[0],  seq[1]);		compilable	  [FE]  AssertionError  testLang882	16	1
165	[BUG]  [BUGGY]    this.lookupMap.remove(seq[0],  seq[1]);  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]    this.lookupMap.remove(seq[0],  seq[1]);  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	    this.lookupMap.remove(seq[0],  seq[1]);		compilable	  [FE]  AssertionError  testLang882	16	1
165	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  _longest  =  _longest;  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	    this.lookupMap.put(seq[0],  seq[1]);  _longest  =  _longest;		compilable	  [FE]  AssertionError  testLang882	16	1
166	[BUG]  [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  _longest  =  _longest;  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  _longest  =  _longest;  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	    this.lookupMap.put(seq[0],  seq[1]);  _longest  =  _longest;		compilable	  [FE]  AssertionError  testLang882	16	1
171	[BUG]  [BUGGY]    super();  this.lookupMap.put(seq[0],  lookup[1]);  [CE]  cannot  find  symbol  seq  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    super();  this.lookupMap.put(seq[0],  lookup[1]);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    super();  this.lookupMap.put(seq[0],  lookup[1]);		non-compiled	[CE]  cannot  find  symbol  seq	6	None
172	[BUG]  [BUGGY]    this.lookupMap.put(seq[0],  lookup[1]);  [CE]  cannot  find  symbol  seq  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    this.lookupMap.put(seq[0],  lookup[1]);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    this.lookupMap.put(seq[0],  lookup[1]);		non-compiled	[CE]  cannot  find  symbol  seq	6	None
173	[BUG]  [BUGGY]    super();  this.lookupMap  =  new  HashMap  <  CharSequence>();  [CE]  wrong  number  of  type  arguments;  required  2  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    super();  this.lookupMap  =  new  HashMap  <  CharSequence>();  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    super();  this.lookupMap  =  new  HashMap  <  CharSequence>();		non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	6	None
174	[BUG]  [BUGGY]    super();  this.lookupMap.put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  seq  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    super();  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    super();  this.lookupMap.put(seq[0],  seq[1]);		non-compiled	[CE]  cannot  find  symbol  seq	6	None
175	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    super();  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	    super();		compilable	  [FE]  AssertionError  testLang882	6	1
176	[BUG]  [BUGGY]    super();  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    super();  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    super();		compilable	  [FE]  AssertionError  testLang882	6	1
181	[BUG]  [BUGGY]    this.lookupMap.put(seq[0],  lookup[1]);  [CE]  cannot  find  symbol  seq  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    this.lookupMap.put(seq[0],  lookup[1]);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    this.lookupMap.put(seq[0],  lookup[1]);		non-compiled	[CE]  cannot  find  symbol  seq	8	None
182	[BUG]  [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  seq  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    this.lookupMap.put(seq[0],  seq[1]);		non-compiled	[CE]  cannot  find  symbol  seq	8	None
183	[BUG]  [BUGGY]    lookupMap.put(seq[0],  lookup[1]);  [CE]  cannot  find  symbol  seq  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    lookupMap.put(seq[0],  lookup[1]);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    lookupMap.put(seq[0],  lookup[1]);		non-compiled	[CE]  cannot  find  symbol  seq	8	None
184	[BUG]  [BUGGY]    super();  this.lookupMap.put(seq[0],  seq[1]);  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    super();  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    super();  this.lookupMap.put(seq[0],  seq[1]);		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	8	None
185	[BUG]  [BUGGY]    lookupMap.put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  seq  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    lookupMap.put(seq[0],  seq[1]);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    lookupMap.put(seq[0],  seq[1]);		non-compiled	[CE]  cannot  find  symbol  seq	8	None
191	[BUG]  [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    this.lookupMap.put(seq[0],  seq[1]);		non-compiled	[CE]  illegal  start  of  type	4	None
192	[BUG]  [BUGGY]    super();  this.lookupMap.put(seq[0],  seq[1]);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super();  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    super();  this.lookupMap.put(seq[0],  seq[1]);		non-compiled	[CE]  illegal  start  of  type	4	None
193	[BUG]  [BUGGY]    super();  lookupMap.put(seq[0],  seq[1]);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super();  lookupMap.put(seq[0],  seq[1]);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    super();  lookupMap.put(seq[0],  seq[1]);		non-compiled	[CE]  illegal  start  of  type	4	None
194	[BUG]  [BUGGY]    this.lookupMap.put(seq[0],  lookup[1]);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    this.lookupMap.put(seq[0],  lookup[1]);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    this.lookupMap.put(seq[0],  lookup[1]);		non-compiled	[CE]  illegal  start  of  type	4	None
195	[BUG]  [BUGGY]    lookupMap.put(seq[0],  seq[1]);  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    lookupMap.put(seq[0],  seq[1]);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    lookupMap.put(seq[0],  seq[1]);		non-compiled	[CE]  <identifier>  expected	4	None
1	[BUG]  [BUGGY]    this.lookupMap.put(new  CharSequence[][]  {  lookup);  [CE]  '}'  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    this.lookupMap.put(new  CharSequence[][]  {  lookup);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    this.lookupMap.put(new  CharSequence[][]  {  lookup);		non-compiled	[CE]  '}'  expected	8	None
2	[BUG]  [BUGGY]    this.lookupMap.put(new  CharSequence[][]  }  lookup);  [CE]  array  dimension  missing  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    this.lookupMap.put(new  CharSequence[][]  }  lookup);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    this.lookupMap.put(new  CharSequence[][]  }  lookup);		non-compiled	[CE]  array  dimension  missing	8	None
3	[BUG]  [BUGGY]    this.lookupMap.put(new  CharSequence[][]);  [CE]  array  dimension  missing  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    this.lookupMap.put(new  CharSequence[][]);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    this.lookupMap.put(new  CharSequence[][]);		non-compiled	[CE]  array  dimension  missing	8	None
4	[BUG]  [BUGGY]    super(lookupMap);  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    super(lookupMap);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    super(lookupMap);		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	8	None
5	[BUG]  [BUGGY]    this.lookupMap.put(new  CharSequence[][]  {  lookup));  [CE]  '}'  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    this.lookupMap.put(new  CharSequence[][]  {  lookup));  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    this.lookupMap.put(new  CharSequence[][]  {  lookup));		non-compiled	[CE]  '}'  expected	8	None
21	[BUG]  [BUGGY]  int  _shortest  =  lookupMap.length;  [CE]  cannot  find  symbol  length  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]  int  _shortest  =  lookupMap.length;  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  lookupMap.length;	int  _shortest  =  Integer.MAX_VALUE;  	non-compiled	[CE]  cannot  find  symbol  length	7	None
24	[BUG]  [BUGGY]  int  _shortest  =  lookupMap.length();  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]  int  _shortest  =  lookupMap.length();  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  lookupMap.length();	int  _shortest  =  Integer.MAX_VALUE;  	non-compiled	[CE]  cannot  find  symbol	7	None
42	[BUG]  [BUGGY]  for(final  CharSequence[]  seq  = "java.seq "  :  lookup)  {  [CE]  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]  for(final  CharSequence[]  seq  = "java.seq "  :  lookup)  {  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	for(final  CharSequence[]  seq  = "java.seq "  :  lookup)  {	for  (final  CharSequence[]  seq  :  lookup)  {  	non-compiled	[CE]  	13	None
44	[BUG]  [BUGGY]  for(final  CharSequence[]  seq  =  lookup.seq())  {  [CE]  ';'  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]  for(final  CharSequence[]  seq  =  lookup.seq())  {  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	for(final  CharSequence[]  seq  =  lookup.seq())  {	for  (final  CharSequence[]  seq  :  lookup)  {  	non-compiled	[CE]  ';'  expected	13	None
63	[BUG]  [BUGGY]  if(lookup  }  null)  {  [CE]  ')'  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]  if(lookup  }  null)  {  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	if(lookup  }  null)  {	if  (lookup  !=  null)  {  	non-compiled	[CE]  ')'  expected	11	None
81	[BUG]  [BUGGY]    super();  this.lookupMap  =  new  HashMap  <  CharSequence[][];  [CE]  >  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    super();  this.lookupMap  =  new  HashMap  <  CharSequence[][];  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    super();  this.lookupMap  =  new  HashMap  <  CharSequence[][];		non-compiled	[CE]  >  expected	6	None
84	[BUG]  [BUGGY]    super(lookup);  this.lookupMap  =  new  HashMap  <  CharSequence[][];  [CE]  >  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    super(lookup);  this.lookupMap  =  new  HashMap  <  CharSequence[][];  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    super(lookup);  this.lookupMap  =  new  HashMap  <  CharSequence[][];		non-compiled	[CE]  >  expected	6	None
85	[BUG]  [BUGGY]    super(null);  this.lookupMap  =  new  HashMap  <  CharSequence[][];  [CE]  >  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    super(null);  this.lookupMap  =  new  HashMap  <  CharSequence[][];  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    super(null);  this.lookupMap  =  new  HashMap  <  CharSequence[][];		non-compiled	[CE]  >  expected	6	None
102	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    this.lookupMap.remove(_shortest);  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	add	    this.lookupMap.remove(_shortest);		compilable	  [FE]  AssertionError  testLang882	14	1
103	[BUG]  [BUGGY]    this.lookupMap.remove(_shortest);  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    this.lookupMap.remove(_shortest);  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	    this.lookupMap.remove(_shortest);		compilable	  [FE]  AssertionError  testLang882	14	1
104	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    lookupMap.remove(_shortest);  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	add	    lookupMap.remove(_shortest);		compilable	  [FE]  AssertionError  testLang882	14	1
105	[BUG]  [BUGGY]    lookupMap.remove(_shortest);  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    lookupMap.remove(_shortest);  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	    lookupMap.remove(_shortest);		compilable	  [FE]  AssertionError  testLang882	14	1
105	[BUG]  [BUGGY]    lookup.put(_shortest,  _longest);  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    lookup.put(_shortest,  _longest);  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	    lookup.put(_shortest,  _longest);		non-compiled	[CE]  cannot  find  symbol	14	None
121	[BUG]  [BUGGY]    out.write(input.getLength());  [CE]  cannot  find  symbol  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    out.write(input.getLength());  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    out.write(input.getLength());		non-compiled	[CE]  cannot  find  symbol	2	None
122	[BUG]  [BUGGY]    out.write(input.getValue(index));  [CE]  cannot  find  symbol  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    out.write(input.getValue(index));  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    out.write(input.getValue(index));		non-compiled	[CE]  cannot  find  symbol	2	None
123	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    out.write(input.getClass().getName());  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	add	    out.write(input.getClass().getName());		compilable	  [FE]  AssertionError  testLang882	2	1
124	[BUG]  [BUGGY]    out.write(input.getClass().getName());  [FE]  AssertionError  testLang882  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    out.write(input.getClass().getName());  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    out.write(input.getClass().getName());		compilable	  [FE]  AssertionError  testLang882	2	1
124	[BUG]  [BUGGY]    out.write(input.getName());  [CE]  cannot  find  symbol  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    out.write(input.getName());  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    out.write(input.getName());		non-compiled	[CE]  cannot  find  symbol	2	None
125	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    out.write(index);  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	add	    out.write(index);		compilable	  [FE]  AssertionError  testLang882	2	1
126	[BUG]  [BUGGY]    out.write(index);  [FE]  AssertionError  testLang882  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    out.write(index);  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    out.write(index);		compilable	  [FE]  AssertionError  testLang882	2	1
183	[BUG]  [BUGGY]    super(seq);  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]    super(seq);  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	    super(seq);		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	16	None
185	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]    this.lookupMap.remove(seq);  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	    this.lookupMap.remove(seq);		compilable	  [FE]  AssertionError  testLang882	16	1
186	[BUG]  [BUGGY]    this.lookupMap.remove(seq);  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]    this.lookupMap.remove(seq);  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	    this.lookupMap.remove(seq);		compilable	  [FE]  AssertionError  testLang882	16	1
203	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  lookup[1]);  [CE]  no  suitable  method  found  for  put(CharSequence,CharSequence[])  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]  this.lookupMap.put(seq[0],  lookup[1]);  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  lookup[1]);	this.lookupMap.put(seq[0],  seq[1]);  	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,CharSequence[])	15	None
221	[BUG]  [BUGGY]    super();  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super();  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    super();		non-compiled	[CE]  illegal  start  of  type	4	None
222	[BUG]  [BUGGY]    super();  this.lookupMap  =  new  HashMap  <  CharSequence[][];  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super();  this.lookupMap  =  new  HashMap  <  CharSequence[][];  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    super();  this.lookupMap  =  new  HashMap  <  CharSequence[][];		non-compiled	[CE]  illegal  start  of  type	4	None
224	[BUG]  [BUGGY]    super(null);  this.lookupMap  =  new  HashMap  <  CharSequence[][];  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super(null);  this.lookupMap  =  new  HashMap  <  CharSequence[][];  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    super(null);  this.lookupMap  =  new  HashMap  <  CharSequence[][];		non-compiled	[CE]  illegal  start  of  type	4	None
225	[BUG]  [BUGGY]    super();  lookupMap.put(new  CharSequence[][]);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super();  lookupMap.put(new  CharSequence[][]);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    super();  lookupMap.put(new  CharSequence[][]);		non-compiled	[CE]  illegal  start  of  type	4	None
262	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  Integer.MIN_VALUE;	int  _longest  =  0;  	compilable	  [FE]  AssertionError  testLang882	9	1
263	[BUG]  [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  Integer.MIN_VALUE;	int  _longest  =  0;  	compilable	  [FE]  AssertionError  testLang882	9	1
263	[BUG]  [BUGGY]  int  _longest  =(_longest  <  0)?  Integer.MAX_VALUE  :  _shortest;  [CE]  variable  _longest  might  not  have  been  initialized  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =(_longest  <  0)?  Integer.MAX_VALUE  :  _shortest;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =(_longest  <  0)?  Integer.MAX_VALUE  :  _shortest;	int  _longest  =  0;  	non-compiled	[CE]  variable  _longest  might  not  have  been  initialized	9	None
264	[BUG]  [BUGGY]  int  _longest  =(_longest  <  0)?  Integer.MAX_VALUE  :  _longest;  [CE]  variable  _longest  might  not  have  been  initialized  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =(_longest  <  0)?  Integer.MAX_VALUE  :  _longest;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =(_longest  <  0)?  Integer.MAX_VALUE  :  _longest;	int  _longest  =  0;  	non-compiled	[CE]  variable  _longest  might  not  have  been  initialized	9	None
281	[BUG]  [BUGGY]    final  CharSequence[][]  lookup  =  this.lookupMap.get(_shortest);  [CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    final  CharSequence[][]  lookup  =  this.lookupMap.get(_shortest);  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    final  CharSequence[][]  lookup  =  this.lookupMap.get(_shortest);		non-compiled	[CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None
282	[BUG]  [BUGGY]    final  CharSequence[][]  lookup  =  super.lookupMap();  [CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    final  CharSequence[][]  lookup  =  super.lookupMap();  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    final  CharSequence[][]  lookup  =  super.lookupMap();		non-compiled	[CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None
283	[BUG]  [BUGGY]    final  CharSequence[][]  lookup  =  getLookupMap();  [CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    final  CharSequence[][]  lookup  =  getLookupMap();  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    final  CharSequence[][]  lookup  =  getLookupMap();		non-compiled	[CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None
284	[BUG]  [BUGGY]    final  CharSequence[][]  lookup  =  this.lookupMap.get(new  CharSequence[]  {  );  [CE]  illegal  start  of  expression  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    final  CharSequence[][]  lookup  =  this.lookupMap.get(new  CharSequence[]  {  );  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    final  CharSequence[][]  lookup  =  this.lookupMap.get(new  CharSequence[]  {  );		non-compiled	[CE]  illegal  start  of  expression	12	None
285	[BUG]  [BUGGY]    final  CharSequence[][]  lookup  =  new  LookupMap(this,  _shortest,  _longest);  [CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    final  CharSequence[][]  lookup  =  new  LookupMap(this,  _shortest,  _longest);  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    final  CharSequence[][]  lookup  =  new  LookupMap(this,  _shortest,  _longest);		non-compiled	[CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None
303	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Circular  dependency  involving  subSeq: "  +  subSeq.getName());  [CE]  cannot  find  symbol  subSeq  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]  throw  new  IllegalArgumentException( "Circular  dependency  involving  subSeq: "  +  subSeq.getName());  [BUGGY]  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	throw  new  IllegalArgumentException( "Circular  dependency  involving  subSeq: "  +  subSeq.getName());	return  0;  	non-compiled	[CE]  cannot  find  symbol  subSeq	1	None
304	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Circular  dependency  involving  subSeq: "  +  subSeq.toString());  [CE]  cannot  find  symbol  subSeq  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]  throw  new  IllegalArgumentException( "Circular  dependency  involving  subSeq: "  +  subSeq.toString());  [BUGGY]  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	throw  new  IllegalArgumentException( "Circular  dependency  involving  subSeq: "  +  subSeq.toString());	return  0;  	non-compiled	[CE]  cannot  find  symbol  subSeq	1	None
322	[BUG]  [BUGGY]    this.lookupMap.put(seq[1],  lookup);  [CE]  no  suitable  method  found  for  put(CharSequence,CharSequence[][])  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    this.lookupMap.put(seq[1],  lookup);  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	replace	    this.lookupMap.put(seq[1],  lookup);		non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,CharSequence[][])	18	None
323	[BUG]  [BUGGY]    this.lookupMap.put(seq[2],  lookup);  [CE]  no  suitable  method  found  for  put(CharSequence,CharSequence[][])  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    this.lookupMap.put(seq[2],  lookup);  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	replace	    this.lookupMap.put(seq[2],  lookup);		non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,CharSequence[][])	18	None
324	[BUG]  [BUGGY]    this.lookupMap.put(seq[0],  lookup);  [CE]  no  suitable  method  found  for  put(CharSequence,CharSequence[][])  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    this.lookupMap.put(seq[0],  lookup);  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	replace	    this.lookupMap.put(seq[0],  lookup);		non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,CharSequence[][])	18	None
325	[BUG]  [BUGGY]    _longest  =  lookup.get(seq[0].length());  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    _longest  =  lookup.get(seq[0].length());  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	replace	    _longest  =  lookup.get(seq[0].length());		non-compiled	[CE]  cannot  find  symbol	18	None
342	[BUG]  [BUGGY]    int  sz  =  lookup.length();  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    int  sz  =  lookup.length();  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	    int  sz  =  lookup.length();		non-compiled	[CE]  cannot  find  symbol	10	None
343	[BUG]  [BUGGY]    int  sz  =  lookup.size();  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    int  sz  =  lookup.size();  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	    int  sz  =  lookup.size();		non-compiled	[CE]  cannot  find  symbol	10	None
345	[BUG]  [BUGGY]    int  _longest  =  lookup.length();  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  lookup.length();  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	    int  _longest  =  lookup.length();		non-compiled	[CE]  cannot  find  symbol	10	None
361	[BUG]  [BUGGY]    lookupMap.put(seq[1],  sz);  [CE]  no  suitable  method  found  for  put(CharSequence,int)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  [BUGGY]    lookupMap.put(seq[1],  sz);  [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	53	53	1	replace	    lookupMap.put(seq[1],  sz);		non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int)	20	None
362	[BUG]  [BUGGY]    lookupMap.put(seq[1],  _longest);  [CE]  no  suitable  method  found  for  put(CharSequence,int)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  [BUGGY]    lookupMap.put(seq[1],  _longest);  [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	53	53	1	replace	    lookupMap.put(seq[1],  _longest);		non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int)	20	None
363	[BUG]  [BUGGY]    int  sz  =  lookupMap.size();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  [BUGGY]    int  sz  =  lookupMap.size();  [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	53	53	1	replace	    int  sz  =  lookupMap.size();		non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	20	None
365	[BUG]  [BUGGY]    int  sz  =  lookup.size();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  [BUGGY]    int  sz  =  lookup.size();  [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	53	53	1	replace	    int  sz  =  lookup.size();		non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	20	None
381	[BUG]  [BUGGY]  final  LookupTranslator(final  CharSequence[][]  lookup)  {  [CE]  modifier  final  not  allowed  here  [CONTEXT]    [BUGGY]  final  LookupTranslator(final  CharSequence[][]  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	final  LookupTranslator(final  CharSequence[][]  lookup)  {	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  modifier  final  not  allowed  here	3	None
383	[BUG]  [BUGGY]  final  LookupTranslator(final  CharSequence[]...  lookupMap)  {  [CE]  modifier  final  not  allowed  here  [CONTEXT]    [BUGGY]  final  LookupTranslator(final  CharSequence[]...  lookupMap)  {  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	final  LookupTranslator(final  CharSequence[]...  lookupMap)  {	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  modifier  final  not  allowed  here	3	None
33	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][])  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][])	5	None
92	[BUG]  [BUGGY]    super();  lookupMap.put(new  CharSequence[][]  {  Integer.MAX_VALUE,  Integer.MIN_VALUE);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super();  lookupMap.put(new  CharSequence[][]  {  Integer.MAX_VALUE,  Integer.MIN_VALUE);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    super();  lookupMap.put(new  CharSequence[][]  {  Integer.MAX_VALUE,  Integer.MIN_VALUE);		non-compiled	[CE]  illegal  start  of  type	4	None
93	[BUG]  [BUGGY]    setLookupMap(new  LookupMap  <  CharSequence>());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]    [BUGGY]    setLookupMap(new  LookupMap  <  CharSequence>());  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    setLookupMap(new  LookupMap  <  CharSequence>());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None
94	[BUG]  [BUGGY]    super();  this.lookupMap.put(_longest,  lookup);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super();  this.lookupMap.put(_longest,  lookup);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    super();  this.lookupMap.put(_longest,  lookup);		non-compiled	[CE]  illegal  start  of  type	4	None
95	[BUG]  [BUGGY]    this.lookupMap.put(seq[0],  lookup);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    this.lookupMap.put(seq[0],  lookup);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    this.lookupMap.put(seq[0],  lookup);		non-compiled	[CE]  illegal  start  of  type	4	None
123	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Input  data  does  not  have  the  same  length: "  +  input.getLength());  [CE]  cannot  find  symbol  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]  throw  new  IllegalArgumentException( "Input  data  does  not  have  the  same  length: "  +  input.getLength());  [BUGGY]  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	throw  new  IllegalArgumentException( "Input  data  does  not  have  the  same  length: "  +  input.getLength());	return  0;  	non-compiled	[CE]  cannot  find  symbol	1	None
124	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Input  data  does  not  have  the  same  length: "  +  input.getSize());  [CE]  cannot  find  symbol  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]  throw  new  IllegalArgumentException( "Input  data  does  not  have  the  same  length: "  +  input.getSize());  [BUGGY]  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	throw  new  IllegalArgumentException( "Input  data  does  not  have  the  same  length: "  +  input.getSize());	return  0;  	non-compiled	[CE]  cannot  find  symbol	1	None
151	[BUG]  [BUGGY]    if(index  <  0)  {  for(int  sz  =  i;  sz  >  max;  sz  =  lookupMap.size();  sz++)  {  out.write(sz);  }  [CE]  ')'  expected  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    if(index  <  0)  {  for(int  sz  =  i;  sz  >  max;  sz  =  lookupMap.size();  sz++)  {  out.write(sz);  }  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    if(index  <  0)  {  for(int  sz  =  i;  sz  >  max;  sz  =  lookupMap.size();  sz++)  {  out.write(sz);  }		non-compiled	[CE]  ')'  expected	2	None
152	[BUG]  [BUGGY]    if(index  <  _longest)  {  if(lookupMap.contains(sz))  {  out.write(sz);  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    if(index  <  _longest)  {  if(lookupMap.contains(sz))  {  out.write(sz);  }  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    if(index  <  _longest)  {  if(lookupMap.contains(sz))  {  out.write(sz);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	2	None
153	[BUG]  [BUGGY]    if(index  <  0)  {  for(int  sz  =  input.size();  sz  >  max;  sz  =  lookupMap.size();  sz++)  {  out.write(sz);  }  [CE]  ')'  expected  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    if(index  <  0)  {  for(int  sz  =  input.size();  sz  >  max;  sz  =  lookupMap.size();  sz++)  {  out.write(sz);  }  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    if(index  <  0)  {  for(int  sz  =  input.size();  sz  >  max;  sz  =  lookupMap.size();  sz++)  {  out.write(sz);  }		non-compiled	[CE]  ')'  expected	2	None
154	[BUG]  [BUGGY]    if(index  <  _longest)  {  for(int  sz  =  i;  sz  >  max;  sz  =  lookupMap.size();  sz++)  {  out.write(sz);  }  [CE]  ')'  expected  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    if(index  <  _longest)  {  for(int  sz  =  i;  sz  >  max;  sz  =  lookupMap.size();  sz++)  {  out.write(sz);  }  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    if(index  <  _longest)  {  for(int  sz  =  i;  sz  >  max;  sz  =  lookupMap.size();  sz++)  {  out.write(sz);  }		non-compiled	[CE]  ')'  expected	2	None
155	[BUG]  [BUGGY]    if(index  <  0)  {  for(int  sz  =  _longest;  sz  >  max;  sz  =  lookupMap.size();  sz++)  {  out.write(sz);  }  [CE]  ')'  expected  [CONTEXT]  }  for  (int  i  =  max;  i  >=  shortest;  i--)  {  final  CharSequence  subSeq  =  input.subSequence(index,  index  +  i);  final  CharSequence  result  =  lookupMap.get(subSeq);  if  (result  !=  null)  {  out.write(result.toString());  return  i;  }  }  [BUGGY]    if(index  <  0)  {  for(int  sz  =  _longest;  sz  >  max;  sz  =  lookupMap.size();  sz++)  {  out.write(sz);  }  [BUGGY]  return  0;  }  [CLASS]  LookupTranslator  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  final  int  index  Writer  out  [VARIABLES]  CharSequence  input  result  subSeq  boolean  HashMap  lookupMap  int  _longest  _shortest  i  index  longest  max  shortest  sz  Writer  out  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	1.0	83	83	1	replace	    if(index  <  0)  {  for(int  sz  =  _longest;  sz  >  max;  sz  =  lookupMap.size();  sz++)  {  out.write(sz);  }		non-compiled	[CE]  ')'  expected	2	None
182	[BUG]  [BUGGY]  int  _shortest  =  Lookup.MAX_VALUE;  [CE]  cannot  find  symbol  Lookup  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]  int  _shortest  =  Lookup.MAX_VALUE;  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Lookup.MAX_VALUE;	int  _shortest  =  Integer.MAX_VALUE;  	non-compiled	[CE]  cannot  find  symbol  Lookup	7	None
183	[BUG]  [BUGGY]  int  _shortest  =  lookup.length();  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]  int  _shortest  =  lookup.length();  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  lookup.length();	int  _shortest  =  Integer.MAX_VALUE;  	non-compiled	[CE]  cannot  find  symbol	7	None
213	[BUG]  [BUGGY]    this.lookupMap.put(seq[1],  seq[2].length());  [CE]  no  suitable  method  found  for  put(CharSequence,int)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    this.lookupMap.put(seq[1],  seq[2].length());  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	replace	    this.lookupMap.put(seq[1],  seq[2].length());		non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int)	18	None
215	[BUG]  [BUGGY]    this.lookupMap.put(seq[2],  seq[3].length());  [CE]  no  suitable  method  found  for  put(CharSequence,int)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    this.lookupMap.put(seq[2],  seq[3].length());  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	52	52	1	replace	    this.lookupMap.put(seq[2],  seq[3].length());		non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int)	18	None
242	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =(int)Integer.MAX_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =(int)Integer.MAX_VALUE;	int  _longest  =  0;  	compilable	  [FE]  AssertionError  testLang882	9	1
243	[BUG]  [BUGGY]  int  _longest  =(int)Integer.MAX_VALUE;  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =(int)Integer.MAX_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =(int)Integer.MAX_VALUE;	int  _longest  =  0;  	compilable	  [FE]  AssertionError  testLang882	9	1
272	[BUG]  [BUGGY]  if(lookup!=  null  &&  lookup.hasAnySingletonTypeTags())  {  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]  if(lookup!=  null  &&  lookup.hasAnySingletonTypeTags())  {  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	if(lookup!=  null  &&  lookup.hasAnySingletonTypeTags())  {	if  (lookup  !=  null)  {  	non-compiled	[CE]  cannot  find  symbol	11	None
273	[BUG]  [BUGGY]  if(lookup!=  null  &&  lookup.hasNode(seq[0]))  {  [CE]  cannot  find  symbol  seq  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]  if(lookup!=  null  &&  lookup.hasNode(seq[0]))  {  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	if(lookup!=  null  &&  lookup.hasNode(seq[0]))  {	if  (lookup  !=  null)  {  	non-compiled	[CE]  cannot  find  symbol  seq	11	None
274	[BUG]  [BUGGY]  if(lookup!=  null  &&  lookup.size()  >  0)  {  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]  if(lookup!=  null  &&  lookup.size()  >  0)  {  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	if(lookup!=  null  &&  lookup.size()  >  0)  {	if  (lookup  !=  null)  {  	non-compiled	[CE]  cannot  find  symbol	11	None
301	[BUG]  [BUGGY]    int  _longest  =  Integer.MAX_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    int  _longest  =  Integer.MAX_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    int  _longest  =  Integer.MAX_VALUE;		non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None
303	[BUG]  [BUGGY]    int  _longest  =  Integer.MAX_VALUE;  this.lookupMap.put(_longest,  lookup);  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    int  _longest  =  Integer.MAX_VALUE;  this.lookupMap.put(_longest,  lookup);  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    int  _longest  =  Integer.MAX_VALUE;  this.lookupMap.put(_longest,  lookup);		non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None
304	[BUG]  [BUGGY]    int  _longest  =  Integer.MAX_VALUE;  lookupMap.put(_longest,  _shortest);  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    int  _longest  =  Integer.MAX_VALUE;  lookupMap.put(_longest,  _shortest);  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    int  _longest  =  Integer.MAX_VALUE;  lookupMap.put(_longest,  _shortest);		non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None
305	[BUG]  [BUGGY]    final  int  _longest  =  Integer.MAX_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    final  int  _longest  =  Integer.MAX_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    final  int  _longest  =  Integer.MAX_VALUE;		non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None
331	[BUG]  [BUGGY]    this.lookupMap.put(lookup[0],  lookup[1]);  [CE]  no  suitable  method  found  for  put(CharSequence[],CharSequence[])  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    this.lookupMap.put(lookup[0],  lookup[1]);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    this.lookupMap.put(lookup[0],  lookup[1]);		non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence[],CharSequence[])	8	None
332	[BUG]  [BUGGY]    this.lookupMap.put(lookup,  new  CharSequence[][]  {  CharSequence.MIN_VALUE  }  );  [CE]  cannot  find  symbol  MIN_VALUE  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    this.lookupMap.put(lookup,  new  CharSequence[][]  {  CharSequence.MIN_VALUE  }  );  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    this.lookupMap.put(lookup,  new  CharSequence[][]  {  CharSequence.MIN_VALUE  }  );		non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	8	None
333	[BUG]  [BUGGY]    this.lookupMap.put(Lookup.MIN_VALUE,  lookup);  [CE]  cannot  find  symbol  Lookup  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    this.lookupMap.put(Lookup.MIN_VALUE,  lookup);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    this.lookupMap.put(Lookup.MIN_VALUE,  lookup);		non-compiled	[CE]  cannot  find  symbol  Lookup	8	None
334	[BUG]  [BUGGY]    this.lookupMap.put(lookup.getSequenceCount(),  lookup);  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    this.lookupMap.put(lookup.getSequenceCount(),  lookup);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    this.lookupMap.put(lookup.getSequenceCount(),  lookup);		non-compiled	[CE]  cannot  find  symbol	8	None
335	[BUG]  [BUGGY]    this.lookupMap.put(Lookup.class,  lookup);  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  [BUGGY]    this.lookupMap.put(Lookup.class,  lookup);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	    this.lookupMap.put(Lookup.class,  lookup);		non-compiled	[CE]  cannot  find  symbol	8	None
362	[BUG]  [BUGGY]    int  _longest  =  lookupMap.length();  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  lookupMap.length();  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	    int  _longest  =  lookupMap.length();		non-compiled	[CE]  cannot  find  symbol	10	None
364	[BUG]  [BUGGY]    int  _longest  =  LookupMap.MAX_VALUE;  [CE]  cannot  find  symbol  LookupMap  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  LookupMap.MAX_VALUE;  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	    int  _longest  =  LookupMap.MAX_VALUE;		non-compiled	[CE]  cannot  find  symbol  LookupMap	10	None
365	[BUG]  [BUGGY]    int  _longest  =  Lookup.MIN_VALUE  +  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  Lookup  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  Lookup.MIN_VALUE  +  Integer.MAX_VALUE;  [BUGGY]  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	    int  _longest  =  Lookup.MIN_VALUE  +  Integer.MAX_VALUE;		non-compiled	[CE]  cannot  find  symbol  Lookup	10	None
422	[BUG]  [BUGGY]    super();  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  variable  lookupMap  might  already  have  been  assigned  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    super();  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    super();  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();		non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	6	None
424	[BUG]  [BUGGY]    super(lookup);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    super(lookup);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    super(lookup);		non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	6	None
425	[BUG]  [BUGGY]    super();  this.lookupMap.put(lookup);  [CE]  no  suitable  method  found  for  put(CharSequence[][])  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    super();  this.lookupMap.put(lookup);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    super();  this.lookupMap.put(lookup);		non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence[][])	6	None
453	[BUG]  [BUGGY]    this.lookupMap.put(seq[0],  lookup);  [CE]  no  suitable  method  found  for  put(CharSequence,CharSequence[][])  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]    this.lookupMap.put(seq[0],  lookup);  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	    this.lookupMap.put(seq[0],  lookup);		non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,CharSequence[][])	16	None
455	[BUG]  [BUGGY]    _longest  =  lookup.getLength();  [CE]  cannot  find  symbol  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]    _longest  =  lookup.getLength();  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	    _longest  =  lookup.getLength();		non-compiled	[CE]  cannot  find  symbol	16	None
483	[BUG]  [BUGGY]    this.lookupMap.put(_longest,  lookup);  [CE]  no  suitable  method  found  for  put(int,CharSequence[][])  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    this.lookupMap.put(_longest,  lookup);  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	    this.lookupMap.put(_longest,  lookup);		non-compiled	[CE]  no  suitable  method  found  for  put(int,CharSequence[][])	14	None
485	[BUG]  [BUGGY]  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    this.lookupMap.remove(_longest);  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	add	    this.lookupMap.remove(_longest);		compilable	  [FE]  AssertionError  testLang882	14	1
486	[BUG]  [BUGGY]    this.lookupMap.remove(_longest);  [FE]  AssertionError  testLang882  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]    this.lookupMap.remove(_longest);  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	    this.lookupMap.remove(_longest);		compilable	  [FE]  AssertionError  testLang882	14	1
512	[BUG]  [BUGGY]    _longest  =  lookupMap.get(seq[1].length());  [CE]  incompatible  types  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  [BUGGY]    _longest  =  lookupMap.get(seq[1].length());  [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	53	53	1	replace	    _longest  =  lookupMap.get(seq[1].length());		non-compiled	[CE]  incompatible  types	20	None
513	[BUG]  [BUGGY]    lookupMap.put(seq[1],  seq[2].length());  [CE]  no  suitable  method  found  for  put(CharSequence,int)  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  [BUGGY]    lookupMap.put(seq[1],  seq[2].length());  [BUGGY]  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  longest  =  _longest;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	53	53	1	replace	    lookupMap.put(seq[1],  seq[2].length());		non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int)	20	None
544	[BUG]  [BUGGY]  for(final  CharSequence[]  seq  :  lookedup)  {  [CE]  cannot  find  symbol  lookedup  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  [BUGGY]  for(final  CharSequence[]  seq  :  lookedup)  {  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	50	50	1	replace	for(final  CharSequence[]  seq  :  lookedup)  {	for  (final  CharSequence[]  seq  :  lookup)  {  	non-compiled	[CE]  cannot  find  symbol  lookedup	13	None
573	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]),  lookup);  [CE]  ';'  expected  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]),  lookup);  [BUGGY]  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1]),  lookup);	this.lookupMap.put(seq[0],  seq[1]);  	non-compiled	[CE]  ';'  expected	15	None
