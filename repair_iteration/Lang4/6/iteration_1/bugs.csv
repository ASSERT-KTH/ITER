bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();		non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	12	None	add
2	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  Integer.MAX_VALUE;  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]      AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  Integer.MAX_VALUE;		non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	12	None	add
3	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;		non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	add
4	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;		non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    _longest  =  Integer.MAX_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	add	    _longest  =  Integer.MAX_VALUE;		compilable	  [FE]  AssertionError  	12	1	add
6	[BUG]  [BUGGY]    _longest  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    _longest  =  Integer.MAX_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    _longest  =  Integer.MAX_VALUE;		compilable	  [FE]  AssertionError  	12	1	add
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]  if(lookup  ==  null)  {  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	add	if(lookup  ==  null)  {	if  (lookup  !=  null)  {  	compilable	  [FE]  AssertionError  	11	2	replace
8	[BUG]  [BUGGY]  if(lookup  ==  null)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]  if(lookup  ==  null)  {  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	if(lookup  ==  null)  {	if  (lookup  !=  null)  {  	compilable	  [FE]  AssertionError  	11	2	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]  if(this.lookupMap!=  null)  {  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	add	if(this.lookupMap!=  null)  {	if  (lookup  !=  null)  {  	compilable	  [FE]  AssertionError  	11	1	replace
10	[BUG]  [BUGGY]  if(this.lookupMap!=  null)  {  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]  if(this.lookupMap!=  null)  {  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	if(this.lookupMap!=  null)  {	if  (lookup  !=  null)  {  	compilable	  [FE]  AssertionError  	11	1	replace
11	[BUG]  [BUGGY]    LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();		non-compiled	[CE]  cannot  find  symbol	12	None	add
12	[BUG]  [BUGGY]    LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  Integer.MAX_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  Integer.MAX_VALUE;		non-compiled	[CE]  cannot  find  symbol	12	None	add
13	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]        AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;		non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	12	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]  if(this.lookupMap  ==  null)  {  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	add	if(this.lookupMap  ==  null)  {	if  (lookup  !=  null)  {  	compilable	  [FE]  AssertionError  	11	2	replace
15	[BUG]  [BUGGY]  if(this.lookupMap  ==  null)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]  if(this.lookupMap  ==  null)  {  [BUGGY]  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	if(this.lookupMap  ==  null)  {	if  (lookup  !=  null)  {  	compilable	  [FE]  AssertionError  	11	2	replace
16	[BUG]  [BUGGY]    int  sz  =  this.lookupMap.size();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    int  sz  =  this.lookupMap.size();  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    int  sz  =  this.lookupMap.size();		non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	add
17	[BUG]  [BUGGY]    this.lookupMap  =  lookupMap.get(_shortest);  [CE]  incompatible  types  [FE]      AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  [BUGGY]    this.lookupMap  =  lookupMap.get(_shortest);  [BUGGY]  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	49	49	1	replace	    this.lookupMap  =  lookupMap.get(_shortest);		non-compiled	[CE]  incompatible  types	12	None	add
