bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  seq  =  sq.length();  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq  =  sq.length();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq  =  sq.length();	  final    int    seq    =    seq.length()    -    2;    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	27	None	replace
2	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  _shortest,  _longest);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  _shortest,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1]  +  _shortest,  _longest);	  this.lookupMap.put(seq[0],    seq[1]    +    _shortest);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	78	None	replace
3	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  _longest,  _shortest);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  _longest,  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1]  +  _longest,  _shortest);	  this.lookupMap.put(seq[0],    seq[1]    +    _shortest);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	78	None	replace
4	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getName(),  lookup);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getName(),  lookup);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].getName(),  lookup);	  this.lookupMap.put(seq[0],    seq[1].getName());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
5	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getName(),  null);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getName(),  null);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].getName(),  null);	  this.lookupMap.put(seq[0],    seq[1].getName());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
6	[BUG]  [BUGGY]  final  int  _longest  =  seq[0].length()  +  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  _longest  =  seq[0].length()  +  1;  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  _longest  =  seq[0].length()  +  1;	  final    int    _longest    =    seq[0].length();    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	18	None	replace
7	[BUG]  [BUGGY]  final  int  _longest  =  seq[1].length();  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  _longest  =  seq[1].length();  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  _longest  =  seq[1].length();	  final    int    _longest    =    seq[0].length();    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	18	None	replace
8	[BUG]  [BUGGY]  final  int  _longest  =  seq[0].length()  -  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  _longest  =  seq[0].length()  -  1;  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  _longest  =  seq[0].length()  -  1;	  final    int    _longest    =    seq[0].length();    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	18	None	replace
9	[BUG]  [BUGGY]  ((  CharSequence[][])seq).removeAll(seq);  [CE]  inconvertible  types  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).removeAll(seq);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).removeAll(seq);	  ((    CharSequence[][])seq).remove();    	non-compiled	[CE]  inconvertible  types	76	None	replace
10	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(_longest,  _shortest);  [CE]  cannot  find  symbol  sq  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(_longest,  _shortest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(_longest,  _shortest);	  ((    CharSequence[][])sq).put(_longest,    seq);    	non-compiled	[CE]  cannot  find  symbol  sq	46	None	replace
11	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(_longest,  seq[0]);  [CE]  cannot  find  symbol  sq  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(_longest,  seq[0]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(_longest,  seq[0]);	  ((    CharSequence[][])sq).put(_longest,    seq);    	non-compiled	[CE]  cannot  find  symbol  sq	46	None	replace
12	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(_longest,  seq[1]);  [CE]  cannot  find  symbol  sq  [FE]                          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(_longest,  seq[1]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(_longest,  seq[1]);	  ((    CharSequence[][])sq).put(_longest,    seq);    	non-compiled	[CE]  cannot  find  symbol  sq	46	None	replace
13	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _shortest,  _longest);  [CE]  CharSequence  is  abstract;  cannot  be  instantiated  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _shortest,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _shortest,  _longest);	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]),    _shortest);    	non-compiled	[CE]  CharSequence  is  abstract;  cannot  be  instantiated	51	None	replace
14	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _shortest,  _shortest);  [CE]  CharSequence  is  abstract;  cannot  be  instantiated  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _shortest,  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _shortest,  _shortest);	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]),    _shortest);    	non-compiled	[CE]  CharSequence  is  abstract;  cannot  be  instantiated	51	None	replace
15	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _longest,  _shortest);  [CE]  CharSequence  is  abstract;  cannot  be  instantiated  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _longest,  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _longest,  _shortest);	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]),    _shortest);    	non-compiled	[CE]  CharSequence  is  abstract;  cannot  be  instantiated	51	None	replace
16	[BUG]  [BUGGY]  int  sz  =(seq.length()  {  0)?  seq.length()  :  _shortest;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  {  0)?  seq.length()  :  _shortest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  {  0)?  seq.length()  :  _shortest;	  int    sz    =(seq.length()    ==    0)?    seq.length()    :    _shortest;    	non-compiled	[CE]  ')'  expected	62	None	replace
17	[BUG]  [BUGGY]  int  sz  =(_shortest.length()  ==  0)?  seq.length()  :  _shortest;  [CE]  int  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(_shortest.length()  ==  0)?  seq.length()  :  _shortest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(_shortest.length()  ==  0)?  seq.length()  :  _shortest;	  int    sz    =(seq.length()    ==    0)?    seq.length()    :    _shortest;    	non-compiled	[CE]  int  cannot  be  dereferenced	62	None	replace
18	[BUG]  [BUGGY]  ((  CharSequence[][])seq).invoke(lookupMap,  null);  [CE]  inconvertible  types  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).invoke(lookupMap,  null);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).invoke(lookupMap,  null);	  ((    CharSequence[][])seq).invoke(null,    lookupMap);    	non-compiled	[CE]  inconvertible  types	72	None	replace
19	[BUG]  [BUGGY]  ((  CharSequence[][])sq).invoke(lookupMap,  null);  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).invoke(lookupMap,  null);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).invoke(lookupMap,  null);	  ((    CharSequence[][])seq).invoke(null,    lookupMap);    	non-compiled	[CE]  cannot  find  symbol  sq	72	None	replace
20	[BUG]  [BUGGY]  ((  CharSequence[][])seq).invoke(this.lookupMap,  seq);  [CE]  inconvertible  types  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).invoke(this.lookupMap,  seq);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).invoke(this.lookupMap,  seq);	  ((    CharSequence[][])seq).invoke(null,    lookupMap);    	non-compiled	[CE]  inconvertible  types	72	None	replace
21	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  lookup,  _shortest);  [CE]  no  suitable  method  found  for  put(CharSequence,int,CharSequence[][],int)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  lookup,  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].length(),  lookup,  _shortest);	  this.lookupMap.put(seq[0],    seq[1].length(),    lookup);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int,CharSequence[][],int)	22	None	replace
22	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  _longest,  lookup);  [CE]  no  suitable  method  found  for  put(CharSequence,int,int,CharSequence[][])  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  _longest,  lookup);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].length(),  _longest,  lookup);	  this.lookupMap.put(seq[0],    seq[1].length(),    lookup);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int,int,CharSequence[][])	22	None	replace
23	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].longest,  null);  [CE]  cannot  find  symbol  longest  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].longest,  null);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].longest,  null);	  this.lookupMap.put(seq[0],    seq[1].longest,    lookup);    	non-compiled	[CE]  cannot  find  symbol  longest	55	None	replace
24	[BUG]  [BUGGY]  ((  CharSequence[])seq),  lookupMap,  null).clear();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])seq),  lookupMap,  null).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])seq),  lookupMap,  null).clear();	  ((    CharSequence[])seq),    lookupMap).clear();    	non-compiled	[CE]  not  a  statement	65	None	replace
25	[BUG]  [BUGGY]  ((  CharSequence[])seq),  lookupMap,  _longest).clear();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])seq),  lookupMap,  _longest).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])seq),  lookupMap,  _longest).clear();	  ((    CharSequence[])seq),    lookupMap).clear();    	non-compiled	[CE]  not  a  statement	65	None	replace
26	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  0,  lookup);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  0,  lookup);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1]  +  0,  lookup);	  this.lookupMap.put(seq[0],    seq[1]    +    0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	57	None	replace
27	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _longest,  _shortest);  [CE]  no  suitable  method  found  for  put(CharSequence,int,int)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _longest,  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _longest,  _shortest);	  this.lookupMap.put(seq[0],    _longest);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int,int)	68	None	replace
28	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  _longest);  [CE]  no  suitable  method  found  for  put(CharSequence,CharSequence,int)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1],  _longest);	  this.lookupMap.put(seq[0],    _longest);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,CharSequence,int)	68	None	replace
29	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq);  [CE]  no  suitable  method  found  for  put(CharSequence,CharSequence[])  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq);	  this.lookupMap.put(seq[0],    _longest);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,CharSequence[])	68	None	replace
30	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _longest,  seq);  [CE]  no  suitable  method  found  for  put(CharSequence,int,CharSequence[])  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _longest,  seq);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _longest,  seq);	  this.lookupMap.put(seq[0],    _longest);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int,CharSequence[])	68	None	replace
31	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length,  _longest,  _shortest);  [CE]  cannot  find  symbol  length  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length,  _longest,  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].length,  _longest,  _shortest);	  this.lookupMap.put(seq[0],    seq[1].length,    _longest);    	non-compiled	[CE]  cannot  find  symbol  length	35	None	replace
32	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _shortest);  [CE]  no  suitable  method  found  for  put(CharSequence,int)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _shortest);	  this.lookupMap.put(sq[0],    _shortest);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int)	2	None	replace
33	[BUG]  [BUGGY]  this.lookupMap.put(sq[0],  _shortest,  _longest);  [CE]  cannot  find  symbol  sq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(sq[0],  _shortest,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(sq[0],  _shortest,  _longest);	  this.lookupMap.put(sq[0],    _shortest);    	non-compiled	[CE]  cannot  find  symbol  sq	2	None	replace
34	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[2].toString());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	replace
35	[BUG]  [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[2].toString());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	replace
36	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[2].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	this.lookupMap.put(seq[0],  seq[2].toString());	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[2].toString());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	replace
37	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[2].toString());  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[2].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[2].toString());	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[2].toString());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	replace
38	[BUG]  [BUGGY]  ((  CharSequence[][])seq).invoke(this,  lookupMap,  seq);  [CE]  inconvertible  types  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).invoke(this,  lookupMap,  seq);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).invoke(this,  lookupMap,  seq);	  ((    CharSequence[][])seq).invoke(this,    lookupMap);    	non-compiled	[CE]  inconvertible  types	40	None	replace
39	[BUG]  [BUGGY]  ((  CharSequence[][])seq).invoke(lookupMap,  this);  [CE]  inconvertible  types  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).invoke(lookupMap,  this);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).invoke(lookupMap,  this);	  ((    CharSequence[][])seq).invoke(this,    lookupMap);    	non-compiled	[CE]  inconvertible  types	40	None	replace
40	[BUG]  [BUGGY]  ((  CharSequence[][])seq).invoke(this,  lookupMap,  _shortest);  [CE]  inconvertible  types  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).invoke(this,  lookupMap,  _shortest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).invoke(this,  lookupMap,  _shortest);	  ((    CharSequence[][])seq).invoke(this,    lookupMap);    	non-compiled	[CE]  inconvertible  types	40	None	replace
41	[BUG]  [BUGGY]  ((  CharSequence[][])seq).invoke(this,  lookupMap,  _longest);  [CE]  inconvertible  types  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).invoke(this,  lookupMap,  _longest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).invoke(this,  lookupMap,  _longest);	  ((    CharSequence[][])seq).invoke(this,    lookupMap);    	non-compiled	[CE]  inconvertible  types	40	None	replace
42	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  _longest).length;  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  _longest).length;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq,  _longest).length;	  final    int    seq[][]    =    lookupMap.get(seq).length;    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	66	None	replace
43	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq).length  -  1;  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq).length  -  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq).length  -  1;	  final    int    seq[][]    =    lookupMap.get(seq).length;    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	66	None	replace
44	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].longest,  _shortest);  [CE]  array  required,  but  int  found  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].longest,  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _longest[1].longest,  _shortest);	  this.lookupMap.put(seq[0],    seq[1].longest,    _shortest);    	non-compiled	[CE]  array  required,  but  int  found	53	None	replace
45	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].hashCode,  _shortest);  [CE]  cannot  find  symbol  hashCode  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].hashCode,  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].hashCode,  _shortest);	  this.lookupMap.put(seq[0],    seq[1].longest,    _shortest);    	non-compiled	[CE]  cannot  find  symbol  hashCode	53	None	replace
46	[BUG]  [BUGGY]  ((  CharSequence[][])seq).init(this.lookupMap);  [CE]  inconvertible  types  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).init(this.lookupMap);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).init(this.lookupMap);	  ((    CharSequence[][])seq).init(lookupMap);    	non-compiled	[CE]  inconvertible  types	64	None	replace
47	[BUG]  [BUGGY]  ((  CharSequence[][])seq).init(this,  lookupMap);  [CE]  inconvertible  types  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).init(this,  lookupMap);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).init(this,  lookupMap);	  ((    CharSequence[][])seq).init(lookupMap);    	non-compiled	[CE]  inconvertible  types	64	None	replace
48	[BUG]  [BUGGY]  ((  CharSequence[][])sq).init(this.lookupMap);  [CE]  cannot  find  symbol  sq  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).init(this.lookupMap);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).init(this.lookupMap);	  ((    CharSequence[][])seq).init(lookupMap);    	non-compiled	[CE]  cannot  find  symbol  sq	64	None	replace
49	[BUG]  [BUGGY]  ((  CharSequence[][])seq).init(lookupMap,  seq);  [CE]  inconvertible  types  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).init(lookupMap,  seq);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).init(lookupMap,  seq);	  ((    CharSequence[][])seq).init(lookupMap);    	non-compiled	[CE]  inconvertible  types	64	None	replace
50	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq.length  -  1);  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq.length  -  1);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq.length  -  1);	  final    int    seq[][]    =    lookupMap.get(seq    -    1);    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	15	None	replace
51	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(_shortest  -  1);  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(_shortest  -  1);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(_shortest  -  1);	  final    int    seq[][]    =    lookupMap.get(seq    -    1);    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	15	None	replace
52	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq  -  1,  _shortest);  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq  -  1,  _shortest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq  -  1,  _shortest);	  final    int    seq[][]    =    lookupMap.get(seq    -    1);    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	15	None	replace
53	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].longest,  seq[1].longest);  [CE]  array  required,  but  int  found  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].longest,  seq[1].longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _longest[1].longest,  seq[1].longest);	  this.lookupMap.put(seq[0],    seq[1].longest,    _longest);    	non-compiled	[CE]  array  required,  but  int  found	54	None	replace
54	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].longest,  seq);  [CE]  array  required,  but  int  found  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].longest,  seq);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _longest[1].longest,  seq);	  this.lookupMap.put(seq[0],    seq[1].longest,    _longest);    	non-compiled	[CE]  array  required,  but  int  found	54	None	replace
55	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].longest,  seq[1]);  [CE]  array  required,  but  int  found  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].longest,  seq[1]);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _longest[1].longest,  seq[1]);	  this.lookupMap.put(seq[0],    seq[1].longest,    _longest);    	non-compiled	[CE]  array  required,  but  int  found	54	None	replace
56	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(seq[0]);  [CE]  cannot  find  symbol  sq  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(seq[0]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(seq[0]);	  ((    CharSequence[][])sq).put(seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	47	None	replace
57	[BUG]  [BUGGY]  ((  CharSequence[][])sz).put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  sz  [FE]                          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sz).put(seq[0],  seq[1]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sz).put(seq[0],  seq[1]);	  ((    CharSequence[][])sq).put(seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sz	47	None	replace
58	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(seq[1],  seq[1]);  [CE]  cannot  find  symbol  sq  [FE]                            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(seq[1],  seq[1]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(seq[1],  seq[1]);	  ((    CharSequence[][])sq).put(seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	47	None	replace
59	[BUG]  [BUGGY]  ((  CharSequence[])sq.clone()).clear();  [CE]  cannot  find  symbol  sq  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])sq.clone()).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])sq.clone()).clear();	  ((    CharSequence[])seq.clone()).clear();    	non-compiled	[CE]  cannot  find  symbol  sq	3	None	replace
60	[BUG]  [BUGGY]  ((  CharSequence[])seq,  lookupMap.clone()).clear();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])seq,  lookupMap.clone()).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])seq,  lookupMap.clone()).clear();	  ((    CharSequence[])seq.clone()).clear();    	non-compiled	[CE]  ')'  expected	3	None	replace
61	[BUG]  [BUGGY]  ((  CharSequence[])sq1).clear();  [CE]  cannot  find  symbol  sq1  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])sq1).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])sq1).clear();	  ((    CharSequence[])sq).clear();    	non-compiled	[CE]  cannot  find  symbol  sq1	4	None	replace
62	[BUG]  [BUGGY]  ((  CharSequence[])sq2).clear();  [CE]  cannot  find  symbol  sq2  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])sq2).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])sq2).clear();	  ((    CharSequence[])sq).clear();    	non-compiled	[CE]  cannot  find  symbol  sq2	4	None	replace
63	[BUG]  [BUGGY]  ((  CharSequence[][])seq).length()  +  1;  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).length()  +  1;  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).length()  +  1;	          ((    CharSequence[][])seq).length();    	non-compiled	[CE]  not  a  statement	70	None	replace
64	[BUG]  [BUGGY]  ((  CharSequence[][])seq).length()  +  1,  seq.length();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).length()  +  1,  seq.length();  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).length()  +  1,  seq.length();	          ((    CharSequence[][])seq).length();    	non-compiled	[CE]  not  a  statement	70	None	replace
65	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  lookup,  _shortest);  [CE]  CharSequence  is  abstract;  cannot  be  instantiated  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  lookup,  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  lookup,  _shortest);	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]),    lookup);    	non-compiled	[CE]  CharSequence  is  abstract;  cannot  be  instantiated	50	None	replace
66	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  lookup,  null);  [CE]  CharSequence  is  abstract;  cannot  be  instantiated  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  lookup,  null);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  lookup,  null);	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]),    lookup);    	non-compiled	[CE]  CharSequence  is  abstract;  cannot  be  instantiated	50	None	replace
67	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getValue(),  lookup);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getValue(),  lookup);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].getValue(),  lookup);	  this.lookupMap.put(seq[0],    seq[1].getValue());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
68	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  lookupMap.getValue());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  lookupMap.getValue());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1],  lookupMap.getValue());	  this.lookupMap.put(seq[0],    seq[1].getValue());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
69	[BUG]  [BUGGY]  final  int  _shortest  =  seq[0].length()  +  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  _shortest  =  seq[0].length()  +  1;  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  _shortest  =  seq[0].length()  +  1;	          final    int    _shortest    =    seq[0].length();    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	75	None	replace
70	[BUG]  [BUGGY]  final  int  _shortest  =  seq[1].length();  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  _shortest  =  seq[1].length();  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  _shortest  =  seq[1].length();	          final    int    _shortest    =    seq[0].length();    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	75	None	replace
71	[BUG]  [BUGGY]  final  int  _shortest  =  seq[0].length()  -  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  _shortest  =  seq[0].length()  -  1;  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  _shortest  =  seq[0].length()  -  1;	          final    int    _shortest    =    seq[0].length();    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	75	None	replace
72	[BUG]  [BUGGY]  int  sz  =(_shortest.length()  >  0)?  seq.length()  :  _shortest;  [CE]  int  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(_shortest.length()  >  0)?  seq.length()  :  _shortest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(_shortest.length()  >  0)?  seq.length()  :  _shortest;	  int    sz    =(seq.length()    >    0)?    seq.length()    :    _shortest;    	non-compiled	[CE]  int  cannot  be  dereferenced	37	None	replace
73	[BUG]  [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[0]  :  _shortest;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[0]  :  _shortest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  >  0)?  seq[0]  :  _shortest;	  int    sz    =(seq.length()    >    0)?    seq.length()    :    _shortest;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
74	[BUG]  [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[0].length()  :  _shortest;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[0].length()  :  _shortest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  >  0)?  seq[0].length()  :  _shortest;	  int    sz    =(seq.length()    >    0)?    seq.length()    :    _shortest;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
75	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(sz[0],  seq[1]);  [CE]  cannot  find  symbol  sz  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(sz[0],  seq[1]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(sz[0],  seq[1]);	  ((    CharSequence[][])sq).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sz	44	None	replace
76	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(seq[0],  _longest);  [CE]  cannot  find  symbol  sq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(seq[0],  _longest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(seq[0],  _longest);	  ((    CharSequence[][])sq).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	44	None	replace
77	[BUG]  [BUGGY]  this.lookupMap.put(sq[0],  new  CharSequence(sq[1]));  [CE]  cannot  find  symbol  sq  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(sq[0],  new  CharSequence(sq[1]));  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(sq[0],  new  CharSequence(sq[1]));	  this.lookupMap.put(seq[0],    new    CharSequence(sq[1]));    	non-compiled	[CE]  cannot  find  symbol  sq	71	None	replace
78	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(sq[1]),  lookup);  [CE]  cannot  find  symbol  sq  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(sq[1]),  lookup);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(sq[1]),  lookup);	  this.lookupMap.put(seq[0],    new    CharSequence(sq[1]));    	non-compiled	[CE]  cannot  find  symbol  sq	71	None	replace
79	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(sq[1]),  _shortest);  [CE]  cannot  find  symbol  sq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(sq[1]),  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(sq[1]),  _shortest);	  this.lookupMap.put(seq[0],    new    CharSequence(sq[1]));    	non-compiled	[CE]  cannot  find  symbol  sq	71	None	replace
80	[BUG]  [BUGGY]  int  sz  =  seq.length  /  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =  seq.length  /  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =  seq.length  /  1;	  int    sz    =    seq.length    +    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	13	None	replace
81	[BUG]  [BUGGY]  int  sz  =  seq.length  +  2;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =  seq.length  +  2;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =  seq.length  +  2;	  int    sz    =    seq.length    +    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	13	None	replace
82	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length()  +  1);  [CE]  no  suitable  method  found  for  put(CharSequence,int)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length()  +  1);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].length()  +  1);	  this.lookupMap.put(seq[0],    seq[1].length()    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int)	19	None	replace
83	[BUG]  [BUGGY]  int  sz  =(seq.length()  >  0)?  this.seq.length()  :  _shortest;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  >  0)?  this.seq.length()  :  _shortest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  >  0)?  this.seq.length()  :  _shortest;	  int    sz    =    this.seq.length();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
84	[BUG]  [BUGGY]  int  sz  =(seq.length()  >  0)?  this.seq.length()  :  _longest;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  >  0)?  this.seq.length()  :  _longest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  >  0)?  this.seq.length()  :  _longest;	  int    sz    =    this.seq.length();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
85	[BUG]  [BUGGY]  int  sz  =  seq.length  /  2;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =  seq.length  /  2;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =  seq.length  /  2;	  int    sz    =    seq.length    -    2;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	replace
86	[BUG]  [BUGGY]  int  sz  =  seq.length  -  4;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =  seq.length  -  4;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =  seq.length  -  4;	  int    sz    =    seq.length    -    2;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	replace
87	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[2].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	add
88	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[2].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	add
89	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[3].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[2].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[3].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	add
90	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[3].toString());  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[3].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[2].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[3].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	add
91	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[2],  seq[2].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[2].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[2],  seq[2].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	add
92	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[2],  seq[2].toString());  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[2],  seq[2].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[2].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[2],  seq[2].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	add
93	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[2],  seq[3].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[2].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[2],  seq[3].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	add
94	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[2],  seq[3].toString());  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[2],  seq[3].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[2].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[2],  seq[3].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	add
95	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[3],  seq[3].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[2].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[3],  seq[3].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	add
96	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[3],  seq[3].toString());  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[3],  seq[3].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[2].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[3],  seq[3].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	add
97	[BUG]  [BUGGY]  final  int  seq  =  seq[seq.length()  ];  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq  =  seq[seq.length()  ];  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq  =  seq[seq.length()  ];	  final    int    seq    =    seq.length()    -    1;    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	26	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());	  	compilable	  [FE]  AssertionError  	29	1	add
99	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());	  	compilable	  [FE]  AssertionError  	29	1	add
100	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	2	add
101	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	2	add
102	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  this.lookupMap.put(seq[0],  seq[1].toString());  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  this.lookupMap.put(seq[0],  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1]toString());  this.lookupMap.put(seq[0],  seq[1].toString());	  	non-compiled	[CE]  ')'  expected	29	None	add
103	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[3].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[3].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	2	add
104	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[3].toString());  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[3].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[3].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	2	add
105	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  _shortest,  _longest);  [CE]  no  suitable  method  found  for  put(CharSequence,int,int,int)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  _shortest,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].length(),  _shortest,  _longest);	  this.lookupMap.put(seq[0],    seq[1].length(),    _shortest);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int,int,int)	21	None	replace
106	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  _longest,  _shortest);  [CE]  no  suitable  method  found  for  put(CharSequence,int,int,int)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  _longest,  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].length(),  _longest,  _shortest);	  this.lookupMap.put(seq[0],    seq[1].length(),    _shortest);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int,int,int)	21	None	replace
107	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  _shortest,  _shortest);  [CE]  no  suitable  method  found  for  put(CharSequence,int,int,int)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  _shortest,  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].length(),  _shortest,  _shortest);	  this.lookupMap.put(seq[0],    seq[1].length(),    _shortest);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int,int,int)	21	None	replace
108	[BUG]  [BUGGY]  this.lookupMap.put(sq[0],  seq[1].length(),  _shortest,  _longest);  [CE]  cannot  find  symbol  sq  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(sq[0],  seq[1].length(),  _shortest,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(sq[0],  seq[1].length(),  _shortest,  _longest);	  this.lookupMap.put(seq[0],    seq[1].length(),    _shortest);    	non-compiled	[CE]  cannot  find  symbol  sq	21	None	replace
109	[BUG]  [BUGGY]  final  int  sq  =  seq.length();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  sq  =  seq.length();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  sq  =  seq.length();	  final    int    seq    =    seq.length()    +    1;    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
110	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  _longest,  _shortest);  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  _longest,  _shortest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq,  _longest,  _shortest);	  final    int    seq[][]    =    lookupMap.get(seq,    _longest);    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	14	None	replace
111	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  _longest  +  1);  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  _longest  +  1);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq,  _longest  +  1);	  final    int    seq[][]    =    lookupMap.get(seq,    _longest);    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	14	None	replace
112	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  0,  _longest);  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  0,  _longest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq,  0,  _longest);	  final    int    seq[][]    =    lookupMap.get(seq,    _longest);    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	14	None	replace
113	[BUG]  [BUGGY]  final  int  sz  =  seq[0].length()  +  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  sz  =  seq[0].length()  +  1;  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  sz  =  seq[0].length()  +  1;	  final    int    sz    =    seq[0].length();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	17	None	replace
114	[BUG]  [BUGGY]  final  int  sz  =  seq[1].length();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  sz  =  seq[1].length();  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  sz  =  seq[1].length();	  final    int    sz    =    seq[0].length();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	17	None	replace
115	[BUG]  [BUGGY]  final  int  sz  =  seq[0].length()  -  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  sz  =  seq[0].length()  -  1;  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  sz  =  seq[0].length()  -  1;	  final    int    sz    =    seq[0].length();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	17	None	replace
116	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(seq,  seq);  [CE]  cannot  find  symbol  sq  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(seq,  seq);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(seq,  seq);	  ((    CharSequence[][])sq).put(str,    seq);    	non-compiled	[CE]  cannot  find  symbol  sq	61	None	replace
117	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(seq[0,  seq[1]);  [CE]  ']'  expected  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(seq[0,  seq[1]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(seq[0,  seq[1]);	  ((    CharSequence[][])sq).put(str,    seq);    	non-compiled	[CE]  ']'  expected	61	None	replace
118	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(sq);  [CE]  cannot  find  symbol  sq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(sq);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(sq);	  ((    CharSequence[][])sq).put(short);    	non-compiled	[CE]  cannot  find  symbol  sq	60	None	replace
119	[BUG]  [BUGGY]  int  sz  =(seq.length  >  0)?  seq[0]  :  1;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length  >  0)?  seq[0]  :  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length  >  0)?  seq[0]  :  1;	  int    sz    =(seq.length    >    0)?    seq.length    :    1;    	non-compiled	[CE]  incompatible  types	58	None	replace
120	[BUG]  [BUGGY]  int  sz  =(seq.length  >  0)?  seq.length  -  1  :  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length  >  0)?  seq.length  -  1  :  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length  >  0)?  seq.length  -  1  :  1;	  int    sz    =(seq.length    >    0)?    seq.length    :    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	58	None	replace
121	[BUG]  [BUGGY]  int  sz  =(seq.length  >  1)?  seq.length  :  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length  >  1)?  seq.length  :  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length  >  1)?  seq.length  :  1;	  int    sz    =(seq.length    >    0)?    seq.length    :    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	58	None	replace
122	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _shortest[1].length,  seq[1].length);  [CE]  array  required,  but  int  found  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _shortest[1].length,  seq[1].length);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _shortest[1].length,  seq[1].length);	  this.lookupMap.put(seq[0],    seq[1].length,    _shortest);    	non-compiled	[CE]  array  required,  but  int  found	36	None	replace
123	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(_shortest,  seq);  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(_shortest,  seq);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(_shortest,  seq);	  ((    CharSequence[][])sq).put(sz,    seq);    	non-compiled	[CE]  cannot  find  symbol  sq	59	None	replace
124	[BUG]  [BUGGY]  ((  CharSequence[][])sz).put(_longest,  seq);  [CE]  cannot  find  symbol  sz  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sz).put(_longest,  seq);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sz).put(_longest,  seq);	  ((    CharSequence[][])sq).put(sz,    seq);    	non-compiled	[CE]  cannot  find  symbol  sz	59	None	replace
125	[BUG]  [BUGGY]  ((  CharSequence[])seq).clear(),  lookupMap;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])seq).clear(),  lookupMap;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])seq).clear(),  lookupMap;	  ((    CharSequence[])seq).clear(),    this.lookupMap;    	non-compiled	[CE]  ';'  expected	5	None	replace
126	[BUG]  [BUGGY]  ((  CharSequence[])seq).clear(),  this.lookupMap.clone();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])seq).clear(),  this.lookupMap.clone();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])seq).clear(),  this.lookupMap.clone();	  ((    CharSequence[])seq).clear(),    this.lookupMap;    	non-compiled	[CE]  ';'  expected	5	None	replace
127	[BUG]  [BUGGY]  ((  CharSequence[])seq).clear(),  this.lookupMap.put(seq[0],  seq[1]);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])seq).clear(),  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])seq).clear(),  this.lookupMap.put(seq[0],  seq[1]);	  ((    CharSequence[])seq).clear(),    this.lookupMap;    	non-compiled	[CE]  ';'  expected	5	None	replace
128	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].length(),  seq);  [CE]  array  required,  but  int  found  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].length(),  seq);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _longest[1].length(),  seq);	  this.lookupMap.put(seq[0],    seq[1].length(),    _longest);    	non-compiled	[CE]  array  required,  but  int  found	20	None	replace
129	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString());  This.lookupMap.put(seq[0],  seq[2].toString());  [CE]  package  This  does  not  exist  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString());  This.lookupMap.put(seq[0],  seq[2].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].toString());  This.lookupMap.put(seq[0],  seq[2].toString());	  this.lookupMap.put(seq[0],    seq[1].toString());    This.lookupMap.put(seq[0],    seq[1].toString());    	non-compiled	[CE]  package  This  does  not  exist	33	None	replace
130	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString());  Iterator.lookupMap.put(seq[0],  seq[1].toString());  [CE]  package  Iterator  does  not  exist  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString());  Iterator.lookupMap.put(seq[0],  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].toString());  Iterator.lookupMap.put(seq[0],  seq[1].toString());	  this.lookupMap.put(seq[0],    seq[1].toString());    This.lookupMap.put(seq[0],    seq[1].toString());    	non-compiled	[CE]  package  Iterator  does  not  exist	33	None	replace
131	[BUG]  [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[0].length()  :  1;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[0].length()  :  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  >  0)?  seq[0].length()  :  1;	  int    sz    =(seq.length()    >    0)?    seq.length()    :    1;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
132	[BUG]  [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[0]  :  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[0]  :  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  >  0)?  seq[0]  :  1;	  int    sz    =(seq.length()    >    0)?    seq.length()    :    1;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
133	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString(),  lookup,  _shortest);  [CE]  no  suitable  method  found  for  put(CharSequence,String,CharSequence[][],int)  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString(),  lookup,  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].toString(),  lookup,  _shortest);	  this.lookupMap.put(seq[0],    seq[1].toString(),    lookup);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,String,CharSequence[][],int)	23	None	replace
134	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString(),  lookup,  _longest);  [CE]  no  suitable  method  found  for  put(CharSequence,String,CharSequence[][],int)  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString(),  lookup,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].toString(),  lookup,  _longest);	  this.lookupMap.put(seq[0],    seq[1].toString(),    lookup);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,String,CharSequence[][],int)	23	None	replace
135	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString(),  lookup,  null);  [CE]  no  suitable  method  found  for  put(CharSequence,String,CharSequence[][],<null>)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString(),  lookup,  null);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].toString(),  lookup,  null);	  this.lookupMap.put(seq[0],    seq[1].toString(),    lookup);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,String,CharSequence[][],<null>)	23	None	replace
136	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  _longest,  _longest);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  _longest,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1]  +  _longest,  _longest);	  this.lookupMap.put(seq[0],    seq[1]    +    _longest);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	6	None	replace
137	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _longest[1]  +  seq[1]);  [CE]  array  required,  but  int  found  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _longest[1]  +  seq[1]);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _longest[1]  +  seq[1]);	  this.lookupMap.put(seq[0],    seq[1]    +    _longest);    	non-compiled	[CE]  array  required,  but  int  found	6	None	replace
138	[BUG]  [BUGGY]  ((  CharSequence[][])sq.clone()).clear();  [CE]  cannot  find  symbol  sq  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq.clone()).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq.clone()).clear();	  ((    CharSequence[][])seq.clone()).clear();    	non-compiled	[CE]  cannot  find  symbol  sq	9	None	replace
139	[BUG]  [BUGGY]  ((  CharSequence[][])seq.clone()).reset();  [CE]  inconvertible  types  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq.clone()).reset();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq.clone()).reset();	  ((    CharSequence[][])seq.clone()).clear();    	non-compiled	[CE]  inconvertible  types	9	None	replace
140	[BUG]  [BUGGY]  ((  CharSequence[][])sq1).clear();  [CE]  cannot  find  symbol  sq1  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq1).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq1).clear();	  ((    CharSequence[][])sq).clear();    	non-compiled	[CE]  cannot  find  symbol  sq1	10	None	replace
141	[BUG]  [BUGGY]  ((  CharSequence[][])sq2).clear();  [CE]  cannot  find  symbol  sq2  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq2).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq2).clear();	  ((    CharSequence[][])sq).clear();    	non-compiled	[CE]  cannot  find  symbol  sq2	10	None	replace
142	[BUG]  [BUGGY]  final  int  sz  =(seq.length()  >  0)?  seq[0].length()  :  _longest;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  sz  =(seq.length()  >  0)?  seq[0].length()  :  _longest;  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  sz  =(seq.length()  >  0)?  seq[0].length()  :  _longest;	          final    int    sz    =    seq.length();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
143	[BUG]  [BUGGY]  ((  CharSequence[][])seq).invoke(lookupMap,  seq,  _shortest);  [CE]  inconvertible  types  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).invoke(lookupMap,  seq,  _shortest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).invoke(lookupMap,  seq,  _shortest);	  ((    CharSequence[][])seq).invoke(lookupMap,    seq);    	non-compiled	[CE]  inconvertible  types	41	None	replace
144	[BUG]  [BUGGY]  ((  CharSequence[][])seq).invoke(lookupMap,  seq,  _longest);  [CE]  inconvertible  types  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).invoke(lookupMap,  seq,  _longest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).invoke(lookupMap,  seq,  _longest);	  ((    CharSequence[][])seq).invoke(lookupMap,    seq);    	non-compiled	[CE]  inconvertible  types	41	None	replace
145	[BUG]  [BUGGY]  this.lookupMap.put(sq[0],  seq);  [CE]  cannot  find  symbol  sq  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(sq[0],  seq);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(sq[0],  seq);	  this.lookupMap.put(sq[0],    _longest);    	non-compiled	[CE]  cannot  find  symbol  sq	1	None	replace
146	[BUG]  [BUGGY]  int  sz  =(seq.length  <  1)?  seq.length  :  seq[0].length;  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length  <  1)?  seq.length  :  seq[0].length;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length  <  1)?  seq.length  :  seq[0].length;	  int    sz    =(seq.length    <    1)?    seq.length    :    seq.length;    	non-compiled	[CE]  cannot  find  symbol  length	79	None	replace
147	[BUG]  [BUGGY]  int  sz  =(seq.length  <  2)?  seq.length  :  seq.length;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length  <  2)?  seq.length  :  seq.length;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length  <  2)?  seq.length  :  seq.length;	  int    sz    =(seq.length    <    1)?    seq.length    :    seq.length;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	79	None	replace
148	[BUG]  [BUGGY]  int  sz  =(seq.length  <  1)?  seq.length  :  seq[_longest];  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length  <  1)?  seq.length  :  seq[_longest];  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length  <  1)?  seq.length  :  seq[_longest];	  int    sz    =(seq.length    <    1)?    seq.length    :    seq.length;    	non-compiled	[CE]  incompatible  types	79	None	replace
149	[BUG]  [BUGGY]  int  sz  =(_longest.length()  >  0)?  seq.length()  :  _longest;  [CE]  int  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(_longest.length()  >  0)?  seq.length()  :  _longest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(_longest.length()  >  0)?  seq.length()  :  _longest;	  int    sz    =(seq.length()    >    0)?    seq.length()    :    _longest;    	non-compiled	[CE]  int  cannot  be  dereferenced	38	None	replace
150	[BUG]  [BUGGY]  int  sz  =(seq.length()  >  0)?  seq.length()  :  _longest  +  1;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  >  0)?  seq.length()  :  _longest  +  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  >  0)?  seq.length()  :  _longest  +  1;	  int    sz    =(seq.length()    >    0)?    seq.length()    :    _longest;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
151	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  _shortest,  _longest);  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  _shortest,  _longest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq,  _shortest,  _longest);	  final    int    seq[][]    =    lookupMap.get(seq,    _shortest);    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	16	None	replace
152	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  0);  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  0);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq,  0);	  final    int    seq[][]    =    lookupMap.get(seq,    _shortest);    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	16	None	replace
153	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]toString());  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1]toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1]toString());	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1]toString());    	non-compiled	[CE]  ')'  expected	34	None	replace
154	[BUG]  [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1]toString());    	non-compiled	[CE]  ')'  expected	34	None	replace
155	[BUG]  [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1]toString());    	non-compiled	[CE]  	34	None	replace
156	[BUG]  [BUGGY]  ((  CharSequence[][])seq),  lookupMap,  null).clear();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq),  lookupMap,  null).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq),  lookupMap,  null).clear();	  ((    CharSequence[][])seq),    lookupMap).clear();    	non-compiled	[CE]  not  a  statement	77	None	replace
157	[BUG]  [BUGGY]  ((  CharSequence[][])seq),  lookupMap,  this.lookupMap).clear();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq),  lookupMap,  this.lookupMap).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq),  lookupMap,  this.lookupMap).clear();	  ((    CharSequence[][])seq),    lookupMap).clear();    	non-compiled	[CE]  not  a  statement	77	None	replace
158	[BUG]  [BUGGY]  this.lookupMap.put(sq[0],  seq[1]  +  2);  [CE]  cannot  find  symbol  sq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(sq[0],  seq[1]  +  2);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(sq[0],  seq[1]  +  2);	  this.lookupMap.put(sq[0],    seq[1]    +    1);    	non-compiled	[CE]  cannot  find  symbol  sq	7	None	replace
159	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	1	replace
160	[BUG]  [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	1	replace
161	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	1	replace
162	[BUG]  [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	1	replace
163	[BUG]  [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(se  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(se  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq.length  >  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(se	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	non-compiled	[CE]  ')'  expected	30	None	replace
164	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  lookup.getValue());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  lookup.getValue());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1],  lookup.getValue());	  this.lookupMap.put(seq[0],    seq[1].getValue());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
165	[BUG]  [BUGGY]  int  sz  =(seq.length  <  1)?  seq.length  :  seq[0];  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length  <  1)?  seq.length  :  seq[0];  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length  <  1)?  seq.length  :  seq[0];	  int    sz    =(seq.length    <    1)?    seq.length    :    seq.length;    	non-compiled	[CE]  incompatible  types	79	None	replace
166	[BUG]  [BUGGY]  int  sz  =(seq.length  <  1)?  seq.length  -  1  :  seq.length;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length  <  1)?  seq.length  -  1  :  seq.length;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length  <  1)?  seq.length  -  1  :  seq.length;	  int    sz    =(seq.length    <    1)?    seq.length    :    seq.length;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	79	None	replace
167	[BUG]  [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[0]  :  _longest;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[0]  :  _longest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  >  0)?  seq[0]  :  _longest;	  int    sz    =(seq.length()    >    0)?    seq.length()    :    _longest;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
168	[BUG]  [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[0].length()  :  _longest;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[0].length()  :  _longest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  >  0)?  seq[0].length()  :  _longest;	  int    sz    =(seq.length()    >    0)?    seq.length()    :    _longest;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
169	[BUG]  [BUGGY]  Integer  sz  =  seq[1].length();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  Integer  sz  =  seq[1].length();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	Integer  sz  =  seq[1].length();	  int    sz    =    seq[1].length()    -    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	43	None	replace
170	[BUG]  [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[1].length()  :  1;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[1].length()  :  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  >  0)?  seq[1].length()  :  1;	  int    sz    =(seq.length()    >    0)?    seq.length()    :    1;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
171	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].longest,  _shortest,  _longest);  [CE]  cannot  find  symbol  longest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].longest,  _shortest,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].longest,  _shortest,  _longest);	  this.lookupMap.put(seq[0],    seq[1].longest,    _shortest);    	non-compiled	[CE]  cannot  find  symbol  longest	53	None	replace
172	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].longest,  _shortest  +  1);  [CE]  cannot  find  symbol  longest  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].longest,  _shortest  +  1);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].longest,  _shortest  +  1);	  this.lookupMap.put(seq[0],    seq[1].longest,    _shortest);    	non-compiled	[CE]  cannot  find  symbol  longest	53	None	replace
173	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  _longest,  lookup);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  _longest,  lookup);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1]  +  _longest,  lookup);	  this.lookupMap.put(seq[0],    seq[1]    +    _longest);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	6	None	replace
174	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  lookup,  _longest);  [CE]  no  suitable  method  found  for  put(CharSequence,int,CharSequence[][],int)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  lookup,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].length(),  lookup,  _longest);	  this.lookupMap.put(seq[0],    seq[1].length(),    lookup);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int,CharSequence[][],int)	22	None	replace
175	[BUG]  [BUGGY]  ((  CharSequence[][])sz).put(seq[0]);  [CE]  cannot  find  symbol  sz  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sz).put(seq[0]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sz).put(seq[0]);	  ((    CharSequence[][])sq).put(seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sz	47	None	replace
176	[BUG]  [BUGGY]  ((  CharSequence[][])sq1).put(seq[0]);  [CE]  cannot  find  symbol  sq1  [FE]                          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq1).put(seq[0]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq1).put(seq[0]);	  ((    CharSequence[][])sq).put(seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq1	47	None	replace
177	[BUG]  [BUGGY]  int  sz  =(seq.length()  ==  0)?  seq[0]  :  _shortest;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  ==  0)?  seq[0]  :  _shortest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  ==  0)?  seq[0]  :  _shortest;	  int    sz    =(seq.length()    ==    0)?    seq.length()    :    _shortest;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
178	[BUG]  [BUGGY]  int  sz  =(seq.length()  ==  0)?  seq[0].length()  :  _shortest;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  ==  0)?  seq[0].length()  :  _shortest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  ==  0)?  seq[0].length()  :  _shortest;	  int    sz    =(seq.length()    ==    0)?    seq.length()    :    _shortest;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
179	[BUG]  [BUGGY]  int  sz  =(seq.length()  ==  0)?  seq.length()  :  1;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  ==  0)?  seq.length()  :  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  ==  0)?  seq.length()  :  1;	  int    sz    =(seq.length()    ==    0)?    seq.length()    :    _shortest;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
180	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].length,  seq[1].length);  [CE]  array  required,  but  int  found  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].length,  seq[1].length);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _longest[1].length,  seq[1].length);	  this.lookupMap.put(seq[0],    seq[1].length,    _longest);    	non-compiled	[CE]  array  required,  but  int  found	35	None	replace
181	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length,  _shortest,  _longest);  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length,  _shortest,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].length,  _shortest,  _longest);	  this.lookupMap.put(seq[0],    seq[1].length,    _shortest);    	non-compiled	[CE]  cannot  find  symbol  length	36	None	replace
182	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());	  	compilable	  [FE]  AssertionError  	29	1	add
183	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());	  	compilable	  [FE]  AssertionError  	29	1	add
184	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  Seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  [CE]  cannot  find  symbol  Seq  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  Seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  Seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());	  	non-compiled	[CE]  cannot  find  symbol  Seq	29	None	add
185	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString(),  null);  [CE]  no  suitable  method  found  for  put(CharSequence,String,<null>)  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString(),  null);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].toString(),  null);	  this.lookupMap.put(seq[0],    seq[1].toString(),    lookup);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,String,<null>)	23	None	replace
186	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  _shortest  +  1);  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq,  _shortest  +  1);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq,  _shortest  +  1);	  final    int    seq[][]    =    lookupMap.get(seq,    _shortest);    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	16	None	replace
187	[BUG]  [BUGGY]  ((  CharSequence[][])seq).length()  -  1;  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).length()  -  1;  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).length()  -  1;	          ((    CharSequence[][])seq).length();    	non-compiled	[CE]  not  a  statement	70	None	replace
188	[BUG]  [BUGGY]  ((  CharSequence[][])seq).restrictByNotNullOrUndefined();  [CE]  inconvertible  types  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).restrictByNotNullOrUndefined();  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).restrictByNotNullOrUndefined();	          ((    CharSequence[][])seq).length();    	non-compiled	[CE]  inconvertible  types	70	None	replace
189	[BUG]  [BUGGY]  LookupMap.put(seq[0],  seq[1].toString());  [CE]  cannot  find  symbol  LookupMap  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  LookupMap.put(seq[0],  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	LookupMap.put(seq[0],  seq[1].toString());	  this.lookupMap.put(seq[0],    seq[1].toString());    This.lookupMap.put(seq[0],    seq[1].toString());    	non-compiled	[CE]  cannot  find  symbol  LookupMap	33	None	replace
190	[BUG]  [BUGGY]  This.lookupMap.put(seq[0],  seq[1].toString());  [CE]  package  This  does  not  exist  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  This.lookupMap.put(seq[0],  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	This.lookupMap.put(seq[0],  seq[1].toString());	  this.lookupMap.put(seq[0],    seq[1].toString());    This.lookupMap.put(seq[0],    seq[1].toString());    	non-compiled	[CE]  package  This  does  not  exist	33	None	replace
191	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _shortest,  _longest);  [CE]  no  suitable  method  found  for  put(CharSequence,int,int)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _shortest,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _shortest,  _longest);	  this.lookupMap.put(seq[0],    _longest);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int,int)	68	None	replace
192	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  lookup,  _longest);  [CE]  CharSequence  is  abstract;  cannot  be  instantiated  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  lookup,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  lookup,  _longest);	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]),    lookup);    	non-compiled	[CE]  CharSequence  is  abstract;  cannot  be  instantiated	50	None	replace
193	[BUG]  [BUGGY]  int  sz  =(seq.length  <  0)?  seq.length  :  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length  <  0)?  seq.length  :  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length  <  0)?  seq.length  :  1;	  int    sz    =(seq.length    >    0)?    seq.length    :    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	58	None	replace
194	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _shortest[1].length(),  seq);  [CE]  array  required,  but  int  found  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _shortest[1].length(),  seq);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _shortest[1].length(),  seq);	  this.lookupMap.put(seq[0],    seq[1].length(),    _shortest);    	non-compiled	[CE]  array  required,  but  int  found	21	None	replace
195	[BUG]  [BUGGY]  Integer  sz  =  seq[0].length();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  Integer  sz  =  seq[0].length();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	Integer  sz  =  seq[0].length();	  int    sz    =    seq[0].length()    +    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	48	None	replace
196	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(sz,  _longest);  [CE]  cannot  find  symbol  sz  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(sz,  _longest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(sz,  _longest);	  ((    CharSequence[][])sq).put(short);    	non-compiled	[CE]  cannot  find  symbol  sz	60	None	replace
197	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(str,  _longest);  [CE]  cannot  find  symbol  str  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(str,  _longest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(str,  _longest);	  ((    CharSequence[][])sq).put(short);    	non-compiled	[CE]  cannot  find  symbol  str	60	None	replace
198	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[2].toString());    this.lookupMap.put(seq[0],  seq[1].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	add
199	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[2].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[2].toString());    this.lookupMap.put(seq[0],  seq[1].toString());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	2	add
200	[BUG]  [BUGGY]  ((  CharSequence[][])sq1).put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  sq1  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq1).put(seq[0],  seq[1]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq1).put(seq[0],  seq[1]);	  ((    CharSequence[][])sq).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq1	44	None	replace
201	[BUG]  [BUGGY]  ((  CharSequence[][])symbols).put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  symbols  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])symbols).put(seq[0],  seq[1]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])symbols).put(seq[0],  seq[1]);	  ((    CharSequence[][])sq).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  symbols	44	None	replace
202	[BUG]  [BUGGY]  if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1]toString());    	non-compiled	[CE]  ')'  expected	34	None	replace
203	[BUG]  [BUGGY]  if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1]toString());    	non-compiled	[CE]  	34	None	replace
204	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  lookup.getName());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  lookup.getName());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1],  lookup.getName());	  this.lookupMap.put(seq[0],    seq[1].getName());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
205	[BUG]  [BUGGY]  ((  CharSequence[][])sq.length).clear();  [CE]  cannot  find  symbol  sq  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq.length).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq.length).clear();	  ((    CharSequence[][])sq).clear();    	non-compiled	[CE]  cannot  find  symbol  sq	10	None	replace
206	[BUG]  [BUGGY]  int  sz  =  seq.length  -  1L;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =  seq.length  -  1L;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =  seq.length  -  1L;	  int    sz    =    seq.length    -    1;    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
207	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[1],  seq[2].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[1],  seq[2].toString());	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[2].toString());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	replace
208	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[1],  seq[2].toString());  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[1],  seq[2].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[1],  seq[2].toString());	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[2].toString());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	replace
209	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _shortest  +  1);  [CE]  CharSequence  is  abstract;  cannot  be  instantiated  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _shortest  +  1);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _shortest  +  1);	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]),    _shortest);    	non-compiled	[CE]  CharSequence  is  abstract;  cannot  be  instantiated	51	None	replace
210	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq)?  _longest  :  seq.length;  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq)?  _longest  :  seq.length;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq)?  _longest  :  seq.length;	  final    int    seq[][]    =    lookupMap.get(seq).length;    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	66	None	replace
211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	2	replace
212	[BUG]  [BUGGY]  if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	2	replace
213	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(seq[0],  seq[1].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(seq[0],  seq[1].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	1	replace
214	[BUG]  [BUGGY]  if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(seq[0],  seq[1].toString());  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(seq[0],  seq[1].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(seq[0],  seq[1].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	1	replace
215	[BUG]  [BUGGY]  if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(s  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(s  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq.length  ==  0)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(s	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	non-compiled	[CE]  ')'  expected	30	None	replace
216	[BUG]  [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[1]  :  _shortest;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[1]  :  _shortest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  >  0)?  seq[1]  :  _shortest;	  int    sz    =(seq.length()    >    0)?    seq.length()    :    _shortest;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
217	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  0,  _longest);  [CE]  no  suitable  method  found  for  put(CharSequence,int,int,int)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length(),  0,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].length(),  0,  _longest);	  this.lookupMap.put(seq[0],    seq[1].length(),    _longest);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,int,int,int)	20	None	replace
218	[BUG]  [BUGGY]  ((  CharSequence[][])seq).toArray(new  CharSequence[seq.length]);  [CE]  inconvertible  types  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).toArray(new  CharSequence[seq.length]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).toArray(new  CharSequence[seq.length]);	  ((    CharSequence[][])seq).get();    	non-compiled	[CE]  inconvertible  types	63	None	replace
219	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(_longest,  seq.length);  [CE]  cannot  find  symbol  sq  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(_longest,  seq.length);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(_longest,  seq.length);	  ((    CharSequence[][])sq).put(_longest,    seq);    	non-compiled	[CE]  cannot  find  symbol  sq	46	None	replace
220	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  lookup);  [CE]  no  suitable  method  found  for  put(CharSequence,CharSequence,CharSequence[][])  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1],  lookup);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1],  lookup);	  this.lookupMap.put(seq[0],    seq[1].longest,    lookup);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,CharSequence,CharSequence[][])	55	None	replace
221	[BUG]  [BUGGY]  ((  CharSequence[][])seq).invoke(null,  lookupMap,  _shortest);  [CE]  inconvertible  types  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).invoke(null,  lookupMap,  _shortest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).invoke(null,  lookupMap,  _shortest);	  ((    CharSequence[][])seq).invoke(null,    lookupMap);    	non-compiled	[CE]  inconvertible  types	72	None	replace
222	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].longest,  seq[1].length);  [CE]  array  required,  but  int  found  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _longest[1].longest,  seq[1].length);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _longest[1].longest,  seq[1].length);	  this.lookupMap.put(seq[0],    seq[1].longest,    _longest);    	non-compiled	[CE]  array  required,  but  int  found	54	None	replace
223	[BUG]  [BUGGY]  ((  CharSequence[][])seq),  lookupMap,  _longest).clear();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq),  lookupMap,  _longest).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq),  lookupMap,  _longest).clear();	  ((    CharSequence[][])seq),    lookupMap).clear();    	non-compiled	[CE]  not  a  statement	77	None	replace
224	[BUG]  [BUGGY]  ((  CharSequence[][])seq),  lookupMap).reset();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq),  lookupMap).reset();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq),  lookupMap).reset();	  ((    CharSequence[][])seq),    lookupMap).clear();    	non-compiled	[CE]  not  a  statement	77	None	replace
225	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq  -  2);  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq  -  2);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq  -  2);	  final    int    seq[][]    =    lookupMap.get(seq    -    1);    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	15	None	replace
226	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq  -  1,  _longest);  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq  -  1,  _longest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq  -  1,  _longest);	  final    int    seq[][]    =    lookupMap.get(seq    -    1);    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	15	None	replace
227	[BUG]  [BUGGY]  ((  CharSequence[][])seq,  lookupMap.clone()).clear();  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq,  lookupMap.clone()).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq,  lookupMap.clone()).clear();	  ((    CharSequence[][])seq.clone()).clear();    	non-compiled	[CE]  ')'  expected	9	None	replace
228	[BUG]  [BUGGY]  ((  CharSequence[][])seq.clone()).clearArgument();  [CE]  inconvertible  types  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq.clone()).clearArgument();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq.clone()).clearArgument();	  ((    CharSequence[][])seq.clone()).clear();    	non-compiled	[CE]  inconvertible  types	9	None	replace
229	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(seq,  _longest);  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(seq,  _longest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(seq,  _longest);	  ((    CharSequence[][])sq).put(sz,    seq);    	non-compiled	[CE]  cannot  find  symbol  sq	59	None	replace
230	[BUG]  [BUGGY]  ((  CharSequence[])seq).clear(),  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])seq).clear(),  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])seq).clear(),  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  ((    CharSequence[])seq).clear(),    this.lookupMap;    	non-compiled	[CE]  ';'  expected	5	None	replace
231	[BUG]  [BUGGY]  ((  CharSequence[])seq).clear(),  lookupMap.toArray(new  CharSequence[seq.length]);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])seq).clear(),  lookupMap.toArray(new  CharSequence[seq.length]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])seq).clear(),  lookupMap.toArray(new  CharSequence[seq.length]);	  ((    CharSequence[])seq).clear(),    this.lookupMap;    	non-compiled	[CE]  ';'  expected	5	None	replace
232	[BUG]  [BUGGY]  ((  CharSequence[][])seq).removeChildren();  [CE]  inconvertible  types  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).removeChildren();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).removeChildren();	  ((    CharSequence[][])seq).remove();    	non-compiled	[CE]  inconvertible  types	76	None	replace
233	[BUG]  [BUGGY]  final  int  sz  =(seq  ==  null)?  seq.length()  :  _seq.length();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  sz  =(seq  ==  null)?  seq.length()  :  _seq.length();  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  sz  =(seq  ==  null)?  seq.length()  :  _seq.length();	          final    int    sz    =    seq.length();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
234	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  siq[1].toString());  [CE]  cannot  find  symbol  siq  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  siq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  siq[1].toString());	  this.lookupMap.put(seq[0],    seq[1].toString());    This.lookupMap.put(seq[0],    seq[1].toString());    	non-compiled	[CE]  cannot  find  symbol  siq	33	None	replace
235	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  shortest,  _longest);  [CE]  CharSequence  is  abstract;  cannot  be  instantiated  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  shortest,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  shortest,  _longest);	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]),    _shortest);    	non-compiled	[CE]  CharSequence  is  abstract;  cannot  be  instantiated	51	None	replace
236	[BUG]  [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq1.length  -  1);  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  lookupMap.get(seq1.length  -  1);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  lookupMap.get(seq1.length  -  1);	  final    int    seq[][]    =    lookupMap.get(seq    -    1);    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	15	None	replace
237	[BUG]  [BUGGY]  final  int  seq[][]  =  this.lookupMap.get(seq  -  1);  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq[][]  =  this.lookupMap.get(seq  -  1);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq[][]  =  this.lookupMap.get(seq  -  1);	  final    int    seq[][]    =    lookupMap.get(seq    -    1);    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	15	None	replace
238	[BUG]  [BUGGY]  ((  CharSequence[][])seq),  lookupMap).put(seq[0],  seq[1]).clear();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq),  lookupMap).put(seq[0],  seq[1]).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq),  lookupMap).put(seq[0],  seq[1]).clear();	  ((    CharSequence[][])seq),    lookupMap).clear();    	non-compiled	[CE]  not  a  statement	77	None	replace
239	[BUG]  [BUGGY]  int  sz  =  seq.length  -  1  +  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =  seq.length  -  1  +  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =  seq.length  -  1  +  1;	  int    sz    =    seq.length    -    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	11	None	replace
240	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  <  2)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	if(seq.length  <  2)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[2].toString());    	compilable	  [FE]  AssertionError  	32	2	replace
241	[BUG]  [BUGGY]  if(seq.length  <  2)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  <  2)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq.length  <  2)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[2].toString());    	compilable	  [FE]  AssertionError  	32	2	replace
242	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  <  2)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	if(seq.length  <  2)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[2].toString());    	compilable	  [FE]  IllegalArgumentException  	32	2	replace
243	[BUG]  [BUGGY]  if(seq.length  <  2)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq.length  <  2)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq.length  <  2)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[2].toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[2].toString());    	compilable	  [FE]  IllegalArgumentException  	32	2	replace
244	[BUG]  [BUGGY]  int  sz  =(seq.length  >  0)?  seq[1]  :  1;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length  >  0)?  seq[1]  :  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length  >  0)?  seq[1]  :  1;	  int    sz    =(seq.length    >    0)?    seq.length    :    1;    	non-compiled	[CE]  incompatible  types	58	None	replace
245	[BUG]  [BUGGY]  int  sz  =(seq.length  <  1)?  seq.length  :  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length  <  1)?  seq.length  :  1;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length  <  1)?  seq.length  :  1;	  int    sz    =(seq.length    >    0)?    seq.length    :    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	58	None	replace
246	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(len,  seq);  [CE]  cannot  find  symbol  len  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(len,  seq);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(len,  seq);	  ((    CharSequence[][])sq).put(str,    seq);    	non-compiled	[CE]  cannot  find  symbol  len	61	None	replace
247	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[1],  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[1],  seq[1].toString());	  	compilable	  [FE]  AssertionError  	29	1	add
248	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[1],  seq[1].toString());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[1],  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[1],  seq[1].toString());	  	compilable	  [FE]  AssertionError  	29	1	add
249	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[1,  seq[1].toString());  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[1,  seq[1].toString());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],        seq[1].toString());        this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[1,  seq[1].toString());	  	non-compiled	[CE]  ']'  expected	29	None	add
250	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].hashCode,  _longest);  [CE]  cannot  find  symbol  hashCode  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].hashCode,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].hashCode,  _longest);	  this.lookupMap.put(seq[0],    seq[1].longest,    _longest);    	non-compiled	[CE]  cannot  find  symbol  hashCode	54	None	replace
251	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  seq,  _longest);  [CE]  CharSequence  is  abstract;  cannot  be  instantiated  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  seq,  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  seq,  _longest);	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]),    seq);    	non-compiled	[CE]  CharSequence  is  abstract;  cannot  be  instantiated	52	None	replace
252	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(seq,  shortest);  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(seq,  shortest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(seq,  shortest);	  ((    CharSequence[][])sq).put(sz,    seq);    	non-compiled	[CE]  cannot  find  symbol  sq	59	None	replace
253	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getKey());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getKey());  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].getKey());	  this.lookupMap.put(seq[0],    seq[1].getValue());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
254	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(seq[1],  seq);  [CE]  cannot  find  symbol  sq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(seq[1],  seq);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(seq[1],  seq);	  ((    CharSequence[][])sq).put(seq);    	non-compiled	[CE]  cannot  find  symbol  sq	45	None	replace
255	[BUG]  [BUGGY]  ((  CharSequence[][])seq).convertUTCToLowerCase(_longest);  [CE]  inconvertible  types  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).convertUTCToLowerCase(_longest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).convertUTCToLowerCase(_longest);	  ((    CharSequence[][])seq).remove();    	non-compiled	[CE]  inconvertible  types	76	None	replace
256	[BUG]  [BUGGY]  ((  CharSequence[][])seq).put(seq[0],  seq[1]);  [CE]  inconvertible  types  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).put(seq[0],  seq[1]);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).put(seq[0],  seq[1]);	  ((    CharSequence[][])sq).put(seq[0],    seq[1]);    	non-compiled	[CE]  inconvertible  types	44	None	replace
257	[BUG]  [BUGGY]  if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1]toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1]toString());    	non-compiled	[CE]  ')'  expected	34	None	replace
258	[BUG]  [BUGGY]  ((  CharSequence[])seq).clear(),  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])seq).clear(),  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])seq).clear(),  new  HashMap  <  CharSequence,  CharSequence>();	  ((    CharSequence[])seq).clear(),    this.lookupMap;    	non-compiled	[CE]  ';'  expected	5	None	replace
259	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  /  _longest);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  /  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1]  /  _longest);	  this.lookupMap.put(seq[0],    seq[1]    +    _longest);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	6	None	replace
260	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString(),  _longest);  [CE]  no  suitable  method  found  for  put(CharSequence,String,int)  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString(),  _longest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].toString(),  _longest);	  this.lookupMap.put(seq[0],    seq[1].toString(),    lookup);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,String,int)	23	None	replace
261	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString(),  _shortest);  [CE]  no  suitable  method  found  for  put(CharSequence,String,int)  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString(),  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  seq[1].toString(),  _shortest);	  this.lookupMap.put(seq[0],    seq[1].toString(),    lookup);    	non-compiled	[CE]  no  suitable  method  found  for  put(CharSequence,String,int)	23	None	replace
262	[BUG]  [BUGGY]  ((  CharSequence[][])seq.clone()).remove();  [CE]  inconvertible  types  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq.clone()).remove();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq.clone()).remove();	  ((    CharSequence[][])seq.clone()).clear();    	non-compiled	[CE]  inconvertible  types	9	None	replace
263	[BUG]  [BUGGY]  final  int  seq  =  separator.length();  [CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  seq  =  separator.length();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  seq  =  separator.length();	  final    int    seq    =    seq.length()    -    2;    	non-compiled	[CE]  variable  seq  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	27	None	replace
264	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _shortest,  seq[1]  +  _shortest);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  _shortest,  seq[1]  +  _shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  _shortest,  seq[1]  +  _shortest);	  this.lookupMap.put(seq[0],    seq[1]    +    _shortest);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	78	None	replace
265	[BUG]  [BUGGY]  final  int  sz  =  seq[_shortest].length();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  final  int  sz  =  seq[_shortest].length();  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	final  int  sz  =  seq[_shortest].length();	          final    int    sz    =    seq.length();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	69	None	replace
266	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(seq[0],  seq[1].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(seq[0],  seq[1].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	1	replace
267	[BUG]  [BUGGY]  if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(seq[0],  seq[1].toString());  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(seq[0],  seq[1].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  lookupMap.put(seq[0],  seq[1].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	1	replace
268	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  this.lookupMap.put(seq[0],  seq[1].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	1	replace
269	[BUG]  [BUGGY]  if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  }  else  {  this.lookupMap.put(seq[0],  seq[1].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	1	replace
270	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	add	if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	2	replace
271	[BUG]  [BUGGY]  if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	if(seq[0].length()  ==  _longest)  {  this.lookupMap.put(seq[0],  seq[1].toString());  this.lookupMap.put(seq[0],  seq[1].toString());  }	  this.lookupMap.put(seq[0],    seq[1].toString());    this.lookupMap.put(seq[0],    seq[1].toString());    	compilable	  [FE]  AssertionError  	30	2	replace
272	[BUG]  [BUGGY]  ((  CharSequence[][])sq).put(_longest,  shortest);  [CE]  cannot  find  symbol  sq  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])sq).put(_longest,  shortest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])sq).put(_longest,  shortest);	  ((    CharSequence[][])sq).put(_longest,    seq);    	non-compiled	[CE]  cannot  find  symbol  sq	46	None	replace
273	[BUG]  [BUGGY]  int  sz  =(seq.length()  <  1)?  this.seq.length()  :  seq.length();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  <  1)?  this.seq.length()  :  seq.length();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  <  1)?  this.seq.length()  :  seq.length();	  int    sz    =    this.seq.length();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
274	[BUG]  [BUGGY]  int  sz  =(seq.length()  <  2)?  this.seq.length()  :  seq.length();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  <  2)?  this.seq.length()  :  seq.length();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  <  2)?  this.seq.length()  :  seq.length();	  int    sz    =    this.seq.length();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
275	[BUG]  [BUGGY]  ((  CharSequence[])seq.clone());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])seq.clone());  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])seq.clone());	  ((    CharSequence[])seq2).clear();    	non-compiled	[CE]  not  a  statement	74	None	replace
276	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  shortest);  [CE]  CharSequence  is  abstract;  cannot  be  instantiated  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  shortest);  [BUGGY]      final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  shortest);	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]),    _longest);    	non-compiled	[CE]  CharSequence  is  abstract;  cannot  be  instantiated	56	None	replace
277	[BUG]  [BUGGY]  ((  CharSequence[])seq),  lookupMap).put(seq[0],  seq[1]).clear();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[])seq),  lookupMap).put(seq[0],  seq[1]).clear();  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[])seq),  lookupMap).put(seq[0],  seq[1]).clear();	  ((    CharSequence[])seq),    lookupMap).clear();    	non-compiled	[CE]  not  a  statement	65	None	replace
278	[BUG]  [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[1]  :  _longest;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  >  0)?  seq[1]  :  _longest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  >  0)?  seq[1]  :  _longest;	  int    sz    =(seq.length()    >    0)?    seq.length()    :    _longest;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
279	[BUG]  [BUGGY]  ((  CharSequence[][])seq).invoke(null,  lookupMap,  _longest);  [CE]  inconvertible  types  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  ((  CharSequence[][])seq).invoke(null,  lookupMap,  _longest);  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	((  CharSequence[][])seq).invoke(null,  lookupMap,  _longest);	  ((    CharSequence[][])seq).invoke(null,    lookupMap);    	non-compiled	[CE]  inconvertible  types	72	None	replace
280	[BUG]  [BUGGY]  int  sz  =(seq.length()  <  0)?  seq.length()  :  _shortest;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  <  0)?  seq.length()  :  _shortest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  <  0)?  seq.length()  :  _shortest;	  int    sz    =(seq.length()    ==    0)?    seq.length()    :    _shortest;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
281	[BUG]  [BUGGY]  int  sz  =(seq.length()  >=  0)?  seq.length()  :  _shortest;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  >=  0)?  seq.length()  :  _shortest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  >=  0)?  seq.length()  :  _shortest;	  int    sz    =(seq.length()    ==    0)?    seq.length()    :    _shortest;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
282	[BUG]  [BUGGY]  int  sz  =(seq.length()  ==  0)?  seq.length()  :  _longest;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {      [BUGGY]  int  sz  =(seq.length()  ==  0)?  seq.length()  :  _longest;  [BUGGY]      this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  }  }  shortest  =  _shortest;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	51	51	1	replace	int  sz  =(seq.length()  ==  0)?  seq.length()  :  _longest;	  int    sz    =(seq.length()    ==    0)?    seq.length()    :    _shortest;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
