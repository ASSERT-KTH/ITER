bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _longest  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  _longest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _longest  =  Integer.MAX_VALUE;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_longest  =  Integer.MAX_VALUE;	  int    _longest    =    Integer.MAX_VALUE;    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	37	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Integer  _longest  =  Integer.MAX_VALUE;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	Integer  _longest  =  Integer.MAX_VALUE;	  int    _longest    =    Integer.MAX_VALUE;    _longest    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	37	1	replace
3	[BUG]  [BUGGY]  Integer  _longest  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Integer  _longest  =  Integer.MAX_VALUE;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	Integer  _longest  =  Integer.MAX_VALUE;	  int    _longest    =    Integer.MAX_VALUE;    _longest    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	37	1	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Integer  _longest  =  2;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	Integer  _longest  =  2;	  int    _longest    =    1;    Integer    _longest    =    2;    	compilable	  [FE]  AssertionError  	51	1	replace
5	[BUG]  [BUGGY]  Integer  _longest  =  2;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Integer  _longest  =  2;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	Integer  _longest  =  2;	  int    _longest    =    1;    Integer    _longest    =    2;    	compilable	  [FE]  AssertionError  	51	1	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MAX_VALUE  /  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  Integer.MAX_VALUE  /  1;	  int    _longest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	17	1	replace
7	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MAX_VALUE  /  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  Integer.MAX_VALUE  /  1;	  int    _longest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	17	1	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  2;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  Integer.MAX_VALUE  -  2;	  int    _longest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	17	1	replace
9	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  2;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  Integer.MAX_VALUE  -  2;	  int    _longest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	17	1	replace
10	[BUG]  [BUGGY]  this.lookupMap.put(_shortest[0],  seq[1]);  [CE]  array  required,  but  int  found  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  this.lookupMap.put(_shortest[0],  seq[1]);  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(_shortest[0],  seq[1]);	  this.lookupMap.put(sz[0],    seq[1]);    	non-compiled	[CE]  array  required,  but  int  found	39	None	replace
11	[BUG]  [BUGGY]  int  lookup  =  this.lookupMap.get(_shortest,  _shortest);  [CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  lookup  =  this.lookupMap.get(_shortest,  _shortest);  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  lookup  =  this.lookupMap.get(_shortest,  _shortest);	  int    lookup    =    this.lookupMap.get(_shortest);    	non-compiled	[CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	48	None	replace
12	[BUG]  [BUGGY]  int  lookup  =  this.lookupMap.get(_shortest  -  1);  [CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  lookup  =  this.lookupMap.get(_shortest  -  1);  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  lookup  =  this.lookupMap.get(_shortest  -  1);	  int    lookup    =    this.lookupMap.get(_shortest);    	non-compiled	[CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	48	None	replace
13	[BUG]  [BUGGY]  int  lookup  =  this.lookupMap.get(_shortest  +  1);  [CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  lookup  =  this.lookupMap.get(_shortest  +  1);  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  lookup  =  this.lookupMap.get(_shortest  +  1);	  int    lookup    =    this.lookupMap.get(_shortest);    	non-compiled	[CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	48	None	replace
14	[BUG]  [BUGGY]  int  lookup  =  this.lookupMap.get(_shortest,  _longest);  [CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  lookup  =  this.lookupMap.get(_shortest,  _longest);  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  lookup  =  this.lookupMap.get(_shortest,  _longest);	  int    lookup    =    this.lookupMap.get(_shortest);    	non-compiled	[CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	48	None	replace
15	[BUG]  [BUGGY]  int  longest  =  Integer.MIN_VALUE  -  1;  [CE]  cannot  find  symbol  _longest  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  longest  =  Integer.MIN_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  longest  =  Integer.MIN_VALUE  -  1;	  int    longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	11	None	replace
16	[BUG]  [BUGGY]  int  longest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  _longest  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  longest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  longest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;	  int    longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	11	None	replace
17	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _shortest,  _shortest);  [CE]  cannot  find  symbol  seq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  this.lookupMap.put(seq[0],  _shortest,  _shortest);  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(seq[0],  _shortest,  _shortest);	  this.lookupMap.put(seq[0],    _shortest);    	non-compiled	[CE]  cannot  find  symbol  seq	38	None	replace
18	[BUG]  [BUGGY]  this.lookupMap.put(sq[0],  _shortest);  [CE]  cannot  find  symbol  sq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  this.lookupMap.put(sq[0],  _shortest);  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(sq[0],  _shortest);	  this.lookupMap.put(seq[0],    _shortest);    	non-compiled	[CE]  cannot  find  symbol  sq	38	None	replace
19	[BUG]  [BUGGY]  int  sz  =  lookupMap.length()  +  1;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  sz  =  lookupMap.length()  +  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =  lookupMap.length()  +  1;	  int    sz    =    lookupMap.length();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
20	[BUG]  [BUGGY]  int  sz  =  lookup.length();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  sz  =  lookup.length();  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =  lookup.length();	  int    sz    =    lookupMap.length();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
21	[BUG]  [BUGGY]  final  int  _longest  =  2;  [CE]  cannot  assign  a  value  to  final  variable  _longest  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  final  int  _longest  =  2;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	final  int  _longest  =  2;	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    final    int    _longest    =    2;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _longest	26	None	replace
22	[BUG]  [BUGGY]  int  _longest  =  0;  Int  _longest  =  0;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  0;  Int  _longest  =  0;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  0;  Int  _longest  =  0;	  int    _longest    =    1;    Int    _longest    =    1;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
23	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  /  1;  [CE]  cannot  find  symbol  _longest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  longest  =  Integer.MAX_VALUE  /  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  longest  =  Integer.MAX_VALUE  /  1;	  int    longest    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  cannot  find  symbol  _longest	10	None	replace
24	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  +  2;  [CE]  cannot  find  symbol  _longest  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  longest  =  Integer.MAX_VALUE  +  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  longest  =  Integer.MAX_VALUE  +  2;	  int    longest    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  cannot  find  symbol  _longest	10	None	replace
25	[BUG]  [BUGGY]  double  _longest  =  0L;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  double  _longest  =  0L;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	double  _longest  =  0L;	  float    _longest    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
26	[BUG]  [BUGGY]  float  _longest  =  0;  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  float  _longest  =  0;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	float  _longest  =  0;	  float    _longest    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
27	[BUG]  [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  int  _longest  =  Integer.MIN_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  int  _longest  =  Integer.MIN_VALUE;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MIN_VALUE;    int  _longest  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	5	None	add
28	[BUG]  [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  Integer  _longest  =  Integer.MIN_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  Integer  _longest  =  Integer.MIN_VALUE;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MIN_VALUE;    Integer  _longest  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	5	None	add
29	[BUG]  [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  int  _longest  =  Integer.MAX_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  int  _longest  =  Integer.MAX_VALUE;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MIN_VALUE;    int  _longest  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	5	None	add
30	[BUG]  [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  _longest  =  Integer.MIN_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  _longest  =  Integer.MIN_VALUE;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MIN_VALUE;    _longest  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	5	None	add
31	[BUG]  [BUGGY]  _longest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  _longest  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _longest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_longest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;	          _shortest    =    Integer.MAX_VALUE;    _shortest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	44	None	replace
32	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	                _shortest        =        Integer.MAX_VALUE;        _shortest    =    Integer.MIN_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	add
33	[BUG]  [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	                _shortest        =        Integer.MAX_VALUE;        _shortest    =    Integer.MIN_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	add
34	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	                _shortest        =        Integer.MAX_VALUE;        _shortest    =    Integer.MIN_VALUE;    _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MIN_VALUE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	add
35	[BUG]  [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MIN_VALUE;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	                _shortest        =        Integer.MAX_VALUE;        _shortest    =    Integer.MIN_VALUE;    _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MIN_VALUE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	add
36	[BUG]  [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;  int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;  int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	                _shortest        =        Integer.MAX_VALUE;        _shortest    =    Integer.MIN_VALUE;    int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	43	None	add
37	[BUG]  [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.min_VALUE;  [CE]  cannot  find  symbol  min_VALUE  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.min_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	                _shortest        =        Integer.MAX_VALUE;        _shortest    =    Integer.MIN_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.min_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  min_VALUE	43	None	add
38	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  -  2;  [CE]  cannot  find  symbol  _longest  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  longest  =  Integer.MAX_VALUE  -  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  longest  =  Integer.MAX_VALUE  -  2;	  int    longest    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  cannot  find  symbol  _longest	9	None	replace
39	[BUG]  [BUGGY]  _longest  =  0L;  [CE]  cannot  find  symbol  _longest  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _longest  =  0L;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_longest  =  0L;	  _longest    =    0;    	non-compiled	[CE]  cannot  find  symbol  _longest	4	None	replace
40	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  /  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  /  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MIN_VALUE  /  1;	  int    _shortest    =    Integer.MIN_VALUE    +    1;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	18	None	replace
41	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	33	None	replace
42	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	33	None	replace
43	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	33	None	replace
44	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	33	None	replace
45	[BUG]  [BUGGY]  Integer  _shortest  =  Integer.MIN_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Integer  _shortest  =  Integer.MIN_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	Integer  _shortest  =  Integer.MIN_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  Integer    _shortest    =    Integer.MAX_VALUE;    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	56	None	replace
46	[BUG]  [BUGGY]  Char  _longest  =  0;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Char  _longest  =  0;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	Char  _longest  =  0;	  char    _longest    =    0L;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
47	[BUG]  [BUGGY]  String  _longest  =  0L;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  String  _longest  =  0L;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	String  _longest  =  0L;	  char    _longest    =    0L;    	non-compiled	[CE]  incompatible  types	1	None	replace
48	[BUG]  [BUGGY]  Char  _longest  =  0L;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Char  _longest  =  0L;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	Char  _longest  =  0L;	  char    _longest    =    0L;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
49	[BUG]  [BUGGY]  Integer  sz  =  lookupMap.size();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Integer  sz  =  lookupMap.size();  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	Integer  sz  =  lookupMap.size();	  int    sz    =    lookupMap.size()    -    2;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	8	None	replace
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	                _shortest        =        Integer.MAX_VALUE;        _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;	  	compilable	  [FE]  AssertionError  	41	1	add
51	[BUG]  [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	                _shortest        =        Integer.MAX_VALUE;        _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;	  	compilable	  [FE]  AssertionError  	41	1	add
52	[BUG]  [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	                _shortest        =        Integer.MAX_VALUE;        _shortest    =    Integer.MAX_VALUE;    int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	41	None	add
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	                _shortest        =        Integer.MAX_VALUE;        _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;	  	compilable	  [FE]  AssertionError  	41	1	add
54	[BUG]  [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	                _shortest        =        Integer.MAX_VALUE;        _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;	  	compilable	  [FE]  AssertionError  	41	1	add
55	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	                _shortest        =        Integer.MAX_VALUE;        _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	add
56	[BUG]  [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]          _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	                _shortest        =        Integer.MAX_VALUE;        _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	add
57	[BUG]  [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	Integer  _shortest  =  Integer.MAX_VALUE;	          _shortest    =    Integer.MAX_VALUE;    int    _shortest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	45	None	replace
58	[BUG]  [BUGGY]  _shortest  =  Integer.MAX_VALUE  +  2;  [CE]  cannot  find  symbol  _longest  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _shortest  =  Integer.MAX_VALUE  +  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_shortest  =  Integer.MAX_VALUE  +  2;	  _shortest    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  cannot  find  symbol  _longest	28	None	replace
59	[BUG]  [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  Integer.MIN_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  int    _longest    =    Integer.MAX_VALUE;    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	20	None	replace
60	[BUG]  [BUGGY]  _longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  cannot  find  symbol  _longest  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  int    _longest    =    Integer.MAX_VALUE;    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol  _longest	20	None	replace
61	[BUG]  [BUGGY]  Integer  _longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Integer  _longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	Integer  _longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  int    _longest    =    Integer.MAX_VALUE;    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	20	None	replace
62	[BUG]  [BUGGY]  final  int  _longest  =  1;  [CE]  cannot  assign  a  value  to  final  variable  _longest  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  final  int  _longest  =  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	final  int  _longest  =  1;	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    final    int    _longest    =    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _longest	24	None	replace
63	[BUG]  [BUGGY]  _shortest  =  Long.MAX_VALUE  +  1;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _shortest  =  Long.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_shortest  =  Long.MAX_VALUE  +  1;	  _shortest    =    Long.MAX_VALUE;    	non-compiled	[CE]  possible  loss  of  precision	29	None	replace
64	[BUG]  [BUGGY]  _shortest  =  Long.MAX_VALUE  |  Long.MAX_VALUE;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _shortest  =  Long.MAX_VALUE  |  Long.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_shortest  =  Long.MAX_VALUE  |  Long.MAX_VALUE;	  _shortest    =    Long.MAX_VALUE;    	non-compiled	[CE]  possible  loss  of  precision	29	None	replace
65	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE  +  1;  int  _longest  =  Integer.MAX_VALUE  +  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MAX_VALUE  +  1;  int  _longest  =  Integer.MAX_VALUE  +  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MAX_VALUE    +    1;    int  _longest  =  Integer.MAX_VALUE  +  1;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	14	None	add
66	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE  +  1;  Integer  _longest  =  Integer.MAX_VALUE  +  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MAX_VALUE  +  1;  Integer  _longest  =  Integer.MAX_VALUE  +  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MAX_VALUE    +    1;    Integer  _longest  =  Integer.MAX_VALUE  +  1;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	14	None	add
67	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE  +  1;  int  _longest  =  Integer.MIN_VALUE  +  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MAX_VALUE  +  1;  int  _longest  =  Integer.MIN_VALUE  +  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MAX_VALUE    +    1;    int  _longest  =  Integer.MIN_VALUE  +  1;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	14	None	add
68	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE  +  1;  _longest  =  Integer.MAX_VALUE  +  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MAX_VALUE  +  1;  _longest  =  Integer.MAX_VALUE  +  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MAX_VALUE    +    1;    _longest  =  Integer.MAX_VALUE  +  1;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	14	None	add
69	[BUG]  [BUGGY]  this.lookupMap.put(sq[0],  sz);  [CE]  cannot  find  symbol  sq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  this.lookupMap.put(sq[0],  sz);  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(sq[0],  sz);	  this.lookupMap.put(seq[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  sq	55	None	replace
70	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  1;  int  _longest  =  Integer.MAX_VALUE  -  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  1;  int  _longest  =  Integer.MAX_VALUE  -  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MAX_VALUE    -    1;    int  _longest  =  Integer.MAX_VALUE  -  1;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	16	None	add
71	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  1;  Integer  _longest  =  Integer.MAX_VALUE  -  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  1;  Integer  _longest  =  Integer.MAX_VALUE  -  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MAX_VALUE    -    1;    Integer  _longest  =  Integer.MAX_VALUE  -  1;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	16	None	add
72	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  1;  _longest  =  Integer.MAX_VALUE  -  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  1;  _longest  =  Integer.MAX_VALUE  -  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MAX_VALUE    -    1;    _longest  =  Integer.MAX_VALUE  -  1;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	16	None	add
73	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MAX_VALUE  /  1;	  int    _shortest    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	32	None	replace
74	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  &  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  &  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MIN_VALUE  &  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE    |    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	19	None	replace
75	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  /  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  /  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MIN_VALUE  /  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE    |    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	19	None	replace
76	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MIN_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MAX_VALUE  -  Integer.MIN_VALUE;	  int    _shortest    =    Integer.MIN_VALUE    |    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	19	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Integer  _longest  =  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	Integer  _longest  =  1;	  int    _longest    =    1;    Integer    _longest    =    1;    	compilable	  [FE]  AssertionError  	49	1	replace
78	[BUG]  [BUGGY]  Integer  _longest  =  1;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Integer  _longest  =  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	Integer  _longest  =  1;	  int    _longest    =    1;    Integer    _longest    =    1;    	compilable	  [FE]  AssertionError  	49	1	replace
79	[BUG]  [BUGGY]  int  _longest  =  2;  int  _longest  =  2;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  2;  int  _longest  =  2;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    2;    int  _longest  =  2;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	30	None	add
80	[BUG]  [BUGGY]  int  _longest  =  2;  int  _longest  =  2;  this.lookupMap.put(seq[0],  seq[1]);  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  2;  int  _longest  =  2;  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    2;    int  _longest  =  2;  this.lookupMap.put(seq[0],  seq[1]);	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	30	None	add
81	[BUG]  [BUGGY]  int  _longest  =  2;  int  _longest  =  2;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  2;  int  _longest  =  2;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    2;    int  _longest  =  2;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
82	[BUG]  [BUGGY]  int  _longest  =  2;  int  _longest  =  2;  this.lookupMap.put(seq[0],  seq[1].length());  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  2;  int  _longest  =  2;  this.lookupMap.put(seq[0],  seq[1].length());  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    2;    int  _longest  =  2;  this.lookupMap.put(seq[0],  seq[1].length());	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	30	None	add
83	[BUG]  [BUGGY]  int  _longest  =  2;  int  _longest  =  2;  this.lookupMap.put(seq[0],  lookup[1]);  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  2;  int  _longest  =  2;  this.lookupMap.put(seq[0],  lookup[1]);  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    2;    int  _longest  =  2;  this.lookupMap.put(seq[0],  lookup[1]);	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	30	None	add
84	[BUG]  [BUGGY]  long  _longest  =  Integer.MAX_VALUE;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  long  _longest  =  Integer.MAX_VALUE;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	long  _longest  =  Integer.MAX_VALUE;	  int    _longest    =    Integer.MAX_VALUE;    int    _longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  possible  loss  of  precision	36	None	replace
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MIN_VALUE  +  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  Integer.MIN_VALUE  +  1;	  int    _longest    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	6	1	replace
86	[BUG]  [BUGGY]  int  _longest  =  Integer.MIN_VALUE  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MIN_VALUE  +  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  Integer.MIN_VALUE  +  1;	  int    _longest    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	6	1	replace
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MIN_VALUE  -  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  Integer.MIN_VALUE  -  1;	  int    _longest    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	6	1	replace
88	[BUG]  [BUGGY]  int  _longest  =  Integer.MIN_VALUE  -  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MIN_VALUE  -  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  Integer.MIN_VALUE  -  1;	  int    _longest    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	6	1	replace
89	[BUG]  [BUGGY]  int  sz  =  this.lookupMap.length()  +  1;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  sz  =  this.lookupMap.length()  +  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =  this.lookupMap.length()  +  1;	  int    sz    =    this.lookupMap.length();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
90	[BUG]  [BUGGY]  int  sz  =  this.lookupMap.length()  +  2;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  sz  =  this.lookupMap.length()  +  2;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =  this.lookupMap.length()  +  2;	  int    sz    =    this.lookupMap.length();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
91	[BUG]  [BUGGY]  int  sz  =(this.lookupMap!=  null)?  this.lookupMap.size()  :  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  sz  =(this.lookupMap!=  null)?  this.lookupMap.size()  :  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =(this.lookupMap!=  null)?  this.lookupMap.size()  :  1;	  int    sz    =    this.lookupMap.size()    -    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	replace
92	[BUG]  [BUGGY]  int  sz  =(this.lookupMap!=  null)?  0  :  this.lookupMap.size();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  sz  =(this.lookupMap!=  null)?  0  :  this.lookupMap.size();  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =(this.lookupMap!=  null)?  0  :  this.lookupMap.size();	  int    sz    =    this.lookupMap.size()    -    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	replace
93	[BUG]  [BUGGY]  _longest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  _longest  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _longest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_longest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;	          _shortest    =    Integer.MAX_VALUE;    _shortest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	42	None	replace
94	[BUG]  [BUGGY]  int  _longest  =  0;  this.lookupMap.put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  seq  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  0;  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  0;  this.lookupMap.put(seq[0],  seq[1]);	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	23	None	replace
95	[BUG]  [BUGGY]  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  seq  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	23	None	replace
96	[BUG]  [BUGGY]  int  _longest  =  this.lookupMap.get(seq[0],  seq[1]);  [CE]  cannot  find  symbol  seq  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  this.lookupMap.get(seq[0],  seq[1]);  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  this.lookupMap.get(seq[0],  seq[1]);	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	23	None	replace
97	[BUG]  [BUGGY]  this.lookupMap.put(siq[0],  seq[1]);  [CE]  cannot  find  symbol  siq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  this.lookupMap.put(siq[0],  seq[1]);  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(siq[0],  seq[1]);	  this.lookupMap.put(seq[0],    siq[1]);    	non-compiled	[CE]  cannot  find  symbol  siq	59	None	replace
98	[BUG]  [BUGGY]  _shortest  =  Integer.MAX_VALUE  /  1;  [CE]  cannot  find  symbol  _longest  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _shortest  =  Integer.MAX_VALUE  /  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_shortest  =  Integer.MAX_VALUE  /  1;	  _shortest    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  cannot  find  symbol  _longest	53	None	replace
99	[BUG]  [BUGGY]  _shortest  =  Integer.MAX_VALUE  -  2;  [CE]  cannot  find  symbol  _longest  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _shortest  =  Integer.MAX_VALUE  -  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_shortest  =  Integer.MAX_VALUE  -  2;	  _shortest    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  cannot  find  symbol  _longest	53	None	replace
100	[BUG]  [BUGGY]  Integer  _longest  =  0L;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Integer  _longest  =  0L;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	Integer  _longest  =  0L;	  long    _longest    =    0L;    	non-compiled	[CE]  incompatible  types	2	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  _longest  =  Integer.MAX_VALUE;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  Integer.MIN_VALUE;  _longest  =  Integer.MAX_VALUE;	  int    _longest    =    Integer.MAX_VALUE;    _longest    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	37	1	replace
102	[BUG]  [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  _longest  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  _longest  =  Integer.MAX_VALUE;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  Integer.MIN_VALUE;  _longest  =  Integer.MAX_VALUE;	  int    _longest    =    Integer.MAX_VALUE;    _longest    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	37	1	replace
103	[BUG]  [BUGGY]  _shortest  =  Integer.MIN_VALUE  +  1;  [CE]  cannot  find  symbol  _longest  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _shortest  =  Integer.MIN_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_shortest  =  Integer.MIN_VALUE  +  1;	  _shortest    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  cannot  find  symbol  _longest	28	None	replace
104	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]));  [CE]  cannot  find  symbol  seq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]));  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]));	  this.lookupMap.put(sz[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	39	None	replace
105	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  |  Integer.MIN_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  |  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MAX_VALUE  |  Integer.MIN_VALUE;	  int    _shortest    =    Integer.MIN_VALUE    |    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	19	None	replace
106	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  sz1);  [CE]  cannot  find  symbol  seq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  this.lookupMap.put(seq[0],  sz1);  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(seq[0],  sz1);	  this.lookupMap.put(seq[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  seq	55	None	replace
107	[BUG]  [BUGGY]  int  _longest  =  0;  Integer  _longest  =  0;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  0;  Integer  _longest  =  0;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  0;  Integer  _longest  =  0;	  int    _longest    =    1;    Integer    _longest    =    1;    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	49	None	replace
108	[BUG]  [BUGGY]  int  _longest  =  0;  Integer  _longest  =  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  0;  Integer  _longest  =  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  0;  Integer  _longest  =  1;	  int    _longest    =    1;    Integer    _longest    =    1;    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	49	None	replace
109	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MAX_VALUE  -  2;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	46	None	replace
110	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MIN_VALUE  -  1;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	46	None	replace
111	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _shortest  +  1);  [CE]  cannot  find  symbol  seq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  this.lookupMap.put(seq[0],  _shortest  +  1);  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(seq[0],  _shortest  +  1);	  this.lookupMap.put(seq[0],    _shortest);    	non-compiled	[CE]  cannot  find  symbol  seq	38	None	replace
112	[BUG]  [BUGGY]  if(lookupMap!=  null)  {  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  }  [CE]  cannot  find  symbol  _longest  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(lookupMap!=  null)  {  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  }  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(lookupMap!=  null)  {  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  }	          _shortest    =    Integer.MAX_VALUE;    _shortest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	44	None	replace
113	[BUG]  [BUGGY]  final  int  _longest  =  Integer.MAX_VALUE;  [CE]  cannot  assign  a  value  to  final  variable  _longest  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  final  int  _longest  =  Integer.MAX_VALUE;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	final  int  _longest  =  Integer.MAX_VALUE;	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    final    int    _longest    =    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _longest	24	None	replace
114	[BUG]  [BUGGY]  int  sz  =(this.lookupMap!=  null)?  this.lookupMap.length()  :  _shortest;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  sz  =(this.lookupMap!=  null)?  this.lookupMap.length()  :  _shortest;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =(this.lookupMap!=  null)?  this.lookupMap.length()  :  _shortest;	  int    sz    =    this.lookupMap.length();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
115	[BUG]  [BUGGY]  int  sz  =(this.lookupMap!=  null)?  this.lookupMap.length()  :  0;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  sz  =(this.lookupMap!=  null)?  this.lookupMap.length()  :  0;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =(this.lookupMap!=  null)?  this.lookupMap.length()  :  0;	  int    sz    =    this.lookupMap.length();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
116	[BUG]  [BUGGY]  char  _longest  =  0;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  char  _longest  =  0;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	char  _longest  =  0;	  char    _longest    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
117	[BUG]  [BUGGY]  _longest  =  1;  [CE]  cannot  find  symbol  _longest  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _longest  =  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_longest  =  1;	  _longest    =    0;    	non-compiled	[CE]  cannot  find  symbol  _longest	4	None	replace
118	[BUG]  [BUGGY]  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  _longest  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;	          _shortest    =    Integer.MAX_VALUE;    _shortest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	42	None	replace
119	[BUG]  [BUGGY]  _shortest  =  Long.MAX_VALUE;  _shortest  =  Long.MAX_VALUE;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _shortest  =  Long.MAX_VALUE;  _shortest  =  Long.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_shortest  =  Long.MAX_VALUE;  _shortest  =  Long.MAX_VALUE;	          _shortest    =    Integer.MAX_VALUE;    _shortest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
120	[BUG]  [BUGGY]  int  longest  =  Integer.MIN_VALUE  +  1;  [CE]  cannot  find  symbol  _longest  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  longest  =  Integer.MIN_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  longest  =  Integer.MIN_VALUE  +  1;	  int    longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	11	None	replace
121	[BUG]  [BUGGY]  if(lookupMap  ==  null)  {  int  _longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [CE]  cannot  find  symbol  _longest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(lookupMap  ==  null)  {  int  _longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(lookupMap  ==  null)  {  int  _longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }	  int    _longest    =    Integer.MAX_VALUE;    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol  _longest	20	None	replace
122	[BUG]  [BUGGY]  if(seq.length  ==  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  }  [CE]  cannot  find  symbol  seq  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq.length  ==  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq.length  ==  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  }	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	23	None	replace
123	[BUG]  [BUGGY]  if(seq.length  ==  1)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  }  [CE]  cannot  find  symbol  seq  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq.length  ==  1)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq.length  ==  1)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  }	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	23	None	replace
124	[BUG]  [BUGGY]  if(seq.length  ==  1)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  seq  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq.length  ==  1)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq.length  ==  1)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	23	None	replace
125	[BUG]  [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  Integer  _longest  =  Integer.MAX_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  Integer  _longest  =  Integer.MAX_VALUE;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  Integer.MIN_VALUE;  Integer  _longest  =  Integer.MAX_VALUE;	  int    _longest    =    Integer.MAX_VALUE;    Integer    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	35	None	replace
126	[BUG]  [BUGGY]  if(seq.length  ==  1)  {  int  _longest  =  1;  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }  [CE]  cannot  find  symbol  seq  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq.length  ==  1)  {  int  _longest  =  1;  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq.length  ==  1)  {  int  _longest  =  1;  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }	  int    _longest    =    1;    int    _longest    =    1;    }    else    {    this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	25	None	replace
127	[BUG]  [BUGGY]  if(seq.length!=  1)  {  int  _longest  =  1;  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }  [CE]  cannot  find  symbol  seq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq.length!=  1)  {  int  _longest  =  1;  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq.length!=  1)  {  int  _longest  =  1;  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }	  int    _longest    =    1;    int    _longest    =    1;    }    else    {    this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	25	None	replace
128	[BUG]  [BUGGY]  if(seq.length  ==  1)  {  int  _longest  =  1;  int  _longest  =  2;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }  [CE]  cannot  find  symbol  seq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq.length  ==  1)  {  int  _longest  =  1;  int  _longest  =  2;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq.length  ==  1)  {  int  _longest  =  1;  int  _longest  =  2;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }	  int    _longest    =    1;    int    _longest    =    1;    }    else    {    this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	25	None	replace
129	[BUG]  [BUGGY]  int  _longest  =  1;  int  _longest  =  0;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  1;  int  _longest  =  0;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  1;  int  _longest  =  0;	  int    _longest    =    1;    int    _longest    =    2;    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	50	None	replace
130	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  1;  int  _longest  =  Integer.MIN_VALUE  -  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  1;  int  _longest  =  Integer.MIN_VALUE  -  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MAX_VALUE    -    1;    int  _longest  =  Integer.MIN_VALUE  -  1;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	16	None	add
131	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  1;  int  _longest  =  Integer.MAX_VALUE  -  2;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  1;  int  _longest  =  Integer.MAX_VALUE  -  2;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MAX_VALUE    -    1;    int  _longest  =  Integer.MAX_VALUE  -  2;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	16	None	add
132	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  sq[1]);  [CE]  cannot  find  symbol  seq  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  this.lookupMap.put(seq[0],  sq[1]);  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(seq[0],  sq[1]);	  this.lookupMap.put(sq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	40	None	replace
133	[BUG]  [BUGGY]  int  _longest  =  2;  Integer  _longest  =  2;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  2;  Integer  _longest  =  2;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    2;    Integer  _longest  =  2;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	30	None	add
134	[BUG]  [BUGGY]  int  _longest  =  2;  int  _longest  =  3;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  2;  int  _longest  =  3;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    2;    int  _longest  =  3;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	30	None	add
135	[BUG]  [BUGGY]  int  _longest  =  2;  Int  _longest  =  2;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  2;  Int  _longest  =  2;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    2;    Int  _longest  =  2;	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
136	[BUG]  [BUGGY]  _shortest  =  Integer.MIN_VALUE  -  1;  [CE]  cannot  find  symbol  _longest  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  _shortest  =  Integer.MIN_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_shortest  =  Integer.MIN_VALUE  -  1;	  _shortest    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  cannot  find  symbol  _longest	53	None	replace
137	[BUG]  [BUGGY]  if(seq.length  <  1)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  }  [CE]  cannot  find  symbol  seq  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq.length  <  1)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq.length  <  1)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  }	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	23	None	replace
138	[BUG]  [BUGGY]  Integer  sz  =  this.lookupMap.size();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  Integer  sz  =  this.lookupMap.size();  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	Integer  sz  =  this.lookupMap.size();	  int    sz    =    this.lookupMap.size()    +    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	13	None	replace
139	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  2;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MAX_VALUE  +  2;	  int    _shortest    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	32	None	replace
140	[BUG]  [BUGGY]  char  _longest  =  Integer.MIN_VALUE;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  char  _longest  =  Integer.MIN_VALUE;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	char  _longest  =  Integer.MIN_VALUE;	  int    _longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  possible  loss  of  precision	6	None	replace
141	[BUG]  [BUGGY]  char  _longest  =  1;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  char  _longest  =  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	char  _longest  =  1;	  int    _longest    =    1;    int    _longest    =    1;    	non-compiled	[CE]  possible  loss  of  precision	22	None	replace
142	[BUG]  [BUGGY]  if(_shortest  ==  null)  {  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  }  [CE]  incomparable  types:  int  and  <null>  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(_shortest  ==  null)  {  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  }  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(_shortest  ==  null)  {  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  }	          _shortest    =    Integer.MAX_VALUE;    _shortest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  incomparable  types:  int  and  <null>	44	None	replace
143	[BUG]  [BUGGY]  int  _longest  =  2;  Int  _longest  =  1;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  2;  Int  _longest  =  1;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  2;  Int  _longest  =  1;	  int    _longest    =    1;    Int    _longest    =    1;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
144	[BUG]  [BUGGY]  if(sz  >  _longest)  {  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }  [CE]  cannot  find  symbol  sz  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(sz  >  _longest)  {  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(sz  >  _longest)  {  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }	  int    _longest    =    1;    int    _longest    =    1;    }    else    {    this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sz	25	None	replace
145	[BUG]  [BUGGY]  if(seq.length  <  2)  {  int  _longest  =  1;  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }  [CE]  cannot  find  symbol  seq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq.length  <  2)  {  int  _longest  =  1;  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq.length  <  2)  {  int  _longest  =  1;  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  }	  int    _longest    =    1;    int    _longest    =    1;    }    else    {    this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	25	None	replace
146	[BUG]  [BUGGY]  int  _sz  =  this.lookupMap.size();  [CE]  cannot  find  symbol  _longest  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _sz  =  this.lookupMap.size();  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _sz  =  this.lookupMap.size();	  int    sz    =    this.lookupMap.size()    -    1;    	non-compiled	[CE]  cannot  find  symbol  _longest	12	None	replace
147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  3;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  3;	  int    _longest    =    1;    int    _longest    =    2;    	compilable	  [FE]  AssertionError  	50	1	replace
148	[BUG]  [BUGGY]  int  _longest  =  3;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _longest  =  3;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  3;	  int    _longest    =    1;    int    _longest    =    2;    	compilable	  [FE]  AssertionError  	50	1	replace
149	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MAX_VALUE  +  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	33	None	replace
150	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _shortest1);  [CE]  cannot  find  symbol  seq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  this.lookupMap.put(seq[0],  _shortest1);  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(seq[0],  _shortest1);	  this.lookupMap.put(seq[0],    _shortest);    	non-compiled	[CE]  cannot  find  symbol  seq	38	None	replace
151	[BUG]  [BUGGY]  long  _longest  =  0;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  long  _longest  =  0;  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	long  _longest  =  0;	  long    _longest    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
152	[BUG]  [BUGGY]  if(seq.length  <  2)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  }  [CE]  cannot  find  symbol  seq  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq.length  <  2)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq.length  <  2)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  }	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    final    int    _longest    =    1;    	non-compiled	[CE]  cannot  find  symbol  seq	24	None	replace
153	[BUG]  [BUGGY]  if(seq.length  <  =  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq.length  <  =  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq.length  <  =  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  }	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    final    int    _longest    =    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
154	[BUG]  [BUGGY]  if(seq[0].length()  ==  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  }  [CE]  cannot  find  symbol  seq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq[0].length()  ==  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq[0].length()  ==  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  }	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    final    int    _longest    =    1;    	non-compiled	[CE]  cannot  find  symbol  seq	24	None	replace
155	[BUG]  [BUGGY]  if(seq[0].length()  ==  _longest)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  }  [CE]  cannot  find  symbol  seq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq[0].length()  ==  _longest)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq[0].length()  ==  _longest)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  }	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    final    int    _longest    =    1;    	non-compiled	[CE]  cannot  find  symbol  seq	24	None	replace
156	[BUG]  [BUGGY]  if(seq.length  <  2)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  }  [CE]  cannot  find  symbol  seq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq.length  <  2)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq.length  <  2)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  }	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    final    int    _longest    =    2;    	non-compiled	[CE]  cannot  find  symbol  seq	26	None	replace
157	[BUG]  [BUGGY]  if(seq.length  <  =  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq.length  <  =  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq.length  <  =  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  }	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    final    int    _longest    =    2;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
158	[BUG]  [BUGGY]  if(seq[0].length()  ==  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  }  [CE]  cannot  find  symbol  seq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq[0].length()  ==  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq[0].length()  ==  0)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  }	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    final    int    _longest    =    2;    	non-compiled	[CE]  cannot  find  symbol  seq	26	None	replace
159	[BUG]  [BUGGY]  if(seq[0].length()  ==  _longest)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  }  [CE]  cannot  find  symbol  seq  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;      [BUGGY]  if(seq[0].length()  ==  _longest)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  }  [BUGGY]      if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	if(seq[0].length()  ==  _longest)  {  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  }	  int    _longest    =    1;    int    _longest    =    1;    this.lookupMap.put(seq[0],    seq[1]);    final    int    _longest    =    2;    	non-compiled	[CE]  cannot  find  symbol  seq	26	None	replace
