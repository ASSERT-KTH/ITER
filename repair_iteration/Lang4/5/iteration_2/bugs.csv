bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  _longest  =  0L;  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  char  _longest  =  0L;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	char  _longest  =  0L;	  int    _longest    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
2	[BUG]  [BUGGY]  long  _longest  =  0L;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  long  _longest  =  0L;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	long  _longest  =  0L;	  int    _longest    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
3	[BUG]  [BUGGY]  float  _longest  =  0L;  [CE]  possible  loss  of  precision  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  float  _longest  =  0L;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	float  _longest  =  0L;	  int    _longest    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
4	[BUG]  [BUGGY]  _longest  =  0;  [CE]  cannot  find  symbol  _longest  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  _longest  =  0;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_longest  =  0;	  int    _longest    =    0L;    	non-compiled	[CE]  cannot  find  symbol  _longest	3	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  Integer.MIN_VALUE;	      	compilable	  [FE]  AssertionError  	6	1	replace
6	[BUG]  [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  Integer.MIN_VALUE;	      	compilable	  [FE]  AssertionError  	6	1	replace
7	[BUG]  [BUGGY]  int  sz  =  lookupMap.size()  -  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  sz  =  lookupMap.size()  -  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =  lookupMap.size()  -  1;	      int    sz    =    lookupMap.size();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	13	None	replace
8	[BUG]  [BUGGY]  int  sz  =  lookupMap.size()  -  2;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  sz  =  lookupMap.size()  -  2;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =  lookupMap.size()  -  2;	      int    sz    =    lookupMap.size();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	13	None	replace
9	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  -  1;  [CE]  cannot  find  symbol  _longest  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  longest  =  Integer.MAX_VALUE  -  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  longest  =  Integer.MAX_VALUE  -  1;	      int    longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	12	None	replace
10	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  +  1;  [CE]  cannot  find  symbol  _longest  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  longest  =  Integer.MAX_VALUE  +  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  longest  =  Integer.MAX_VALUE  +  1;	      int    longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	12	None	replace
11	[BUG]  [BUGGY]  int  longest  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  _longest  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  longest  =  Integer.MIN_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  longest  =  Integer.MIN_VALUE;	      int    longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	12	None	replace
12	[BUG]  [BUGGY]  int  sz  =  this.lookupMap.size()  -  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  sz  =  this.lookupMap.size()  -  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =  this.lookupMap.size()  -  1;	      int    sz    =    this.lookupMap.size();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	14	None	replace
13	[BUG]  [BUGGY]  int  sz  =  this.lookupMap.size()  +  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  sz  =  this.lookupMap.size()  +  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =  this.lookupMap.size()  +  1;	      int    sz    =    this.lookupMap.size();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	14	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  Integer.MAX_VALUE  +  1;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  Integer.MAX_VALUE  +  1;	  int    _longest    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	2	1	replace
15	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  Integer.MAX_VALUE  +  1;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  Integer.MAX_VALUE  +  1;	  int    _longest    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	2	1	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  1;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  Integer.MAX_VALUE  -  1;	  int    _longest    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	2	1	replace
17	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  Integer.MAX_VALUE  -  1;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  Integer.MAX_VALUE  -  1;	  int    _longest    =    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	2	1	replace
18	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MIN_VALUE  +  1;	      int    _shortest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	10	None	replace
19	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;	      int    _shortest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	10	None	replace
20	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	      int    _shortest    =    Integer.MAX_VALUE;    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	15	None	replace
21	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MIN_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	      int    _shortest    =    Integer.MAX_VALUE;    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	15	None	replace
22	[BUG]  [BUGGY]  int  _longest  =  1;  int  _longest  =  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  1;  int  _longest  =  1;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    1;    int  _longest  =  1;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	4	None	add
23	[BUG]  [BUGGY]  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    1;    int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	4	None	add
24	[BUG]  [BUGGY]  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    1;    int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  1;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	4	None	add
25	[BUG]  [BUGGY]  int  _longest  =  1;  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  1;  int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    1;    int  _longest  =  1;  }  else  {  this.lookupMap.put(seq[0],  seq[1]);	  	non-compiled	[CE]  illegal  start  of  type	4	None	add
26	[BUG]  [BUGGY]  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  1;  int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    1;    int  _longest  =  1;  this.lookupMap.put(seq[0],  seq[1]);  final  int  _longest  =  2;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	4	None	add
27	[BUG]  [BUGGY]  _shortest  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  _longest  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  _shortest  =  Integer.MIN_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_shortest  =  Integer.MIN_VALUE;	      _shortest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	9	None	replace
28	[BUG]  [BUGGY]  _shortest  =  Integer.MAX_VALUE  +  1;  [CE]  cannot  find  symbol  _longest  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  _shortest  =  Integer.MAX_VALUE  +  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_shortest  =  Integer.MAX_VALUE  +  1;	      _shortest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	9	None	replace
29	[BUG]  [BUGGY]  _shortest  =  Long.MAX_VALUE;  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  _shortest  =  Long.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_shortest  =  Long.MAX_VALUE;	      _shortest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  2;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	int  _longest  =  2;	  int    _longest    =    1;    	compilable	  [FE]  AssertionError  	5	1	replace
31	[BUG]  [BUGGY]  int  _longest  =  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  2;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _longest  =  2;	  int    _longest    =    1;    	compilable	  [FE]  AssertionError  	5	1	replace
32	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MAX_VALUE  +  1;	      int    _shortest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	7	None	replace
33	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;	      int    _shortest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	7	None	replace
34	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  int  _longest  =  Integer.MAX_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  int  _longest  =  Integer.MAX_VALUE;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MAX_VALUE;    int  _longest  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	1	None	add
35	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  Integer  _longest  =  Integer.MAX_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  Integer  _longest  =  Integer.MAX_VALUE;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MAX_VALUE;    Integer  _longest  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	1	None	add
36	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  int  _longest  =  Integer.MIN_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  int  _longest  =  Integer.MIN_VALUE;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MAX_VALUE;    int  _longest  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	1	None	add
37	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  _longest  =  Integer.MAX_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  _longest  =  Integer.MAX_VALUE;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    Integer.MAX_VALUE;    _longest  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	1	None	add
38	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _shortest);  [CE]  cannot  find  symbol  seq  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  this.lookupMap.put(seq[0],  _shortest);  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(seq[0],  _shortest);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	11	None	replace
39	[BUG]  [BUGGY]  this.lookupMap.put(sz[0],  seq[1]);  [CE]  cannot  find  symbol  sz  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  this.lookupMap.put(sz[0],  seq[1]);  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(sz[0],  seq[1]);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sz	11	None	replace
40	[BUG]  [BUGGY]  this.lookupMap.put(sq[0],  seq[1]);  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  this.lookupMap.put(sq[0],  seq[1]);  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(sq[0],  seq[1]);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	11	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]      _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	        _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;	  	compilable	  [FE]  AssertionError  	8	1	add
42	[BUG]  [BUGGY]      _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]      _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	        _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MAX_VALUE;	  	compilable	  [FE]  AssertionError  	8	1	add
43	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]      _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	add	        _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	add
44	[BUG]  [BUGGY]      _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]      _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	        _shortest    =    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	add
45	[BUG]  [BUGGY]      _shortest  =  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]      _shortest  =  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	        _shortest    =    Integer.MAX_VALUE;    int  _shortest  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	8	None	add
46	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  _shortest  =  Integer.MAX_VALUE  -  1;	      int    _shortest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	7	None	replace
47	[BUG]  [BUGGY]  int  sz  =  lookupMap.length();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  sz  =  lookupMap.length();  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =  lookupMap.length();	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
48	[BUG]  [BUGGY]  int  lookup  =  this.lookupMap.get(_shortest);  [CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  lookup  =  this.lookupMap.get(_shortest);  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  lookup  =  this.lookupMap.get(_shortest);	      	non-compiled	[CE]  variable  lookup  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	6	None	replace
49	[BUG]  [BUGGY]  int  _longest  =  1;  Integer  _longest  =  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  1;  Integer  _longest  =  1;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    1;    Integer  _longest  =  1;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	4	None	add
50	[BUG]  [BUGGY]  int  _longest  =  1;  int  _longest  =  2;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  1;  int  _longest  =  2;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    1;    int  _longest  =  2;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	4	None	add
51	[BUG]  [BUGGY]  int  _longest  =  1;  Integer  _longest  =  2;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  1;  Integer  _longest  =  2;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    1;    Integer  _longest  =  2;	  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	4	None	add
52	[BUG]  [BUGGY]  int  sz  =  lookupMap.size()  +  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  sz  =  lookupMap.size()  +  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =  lookupMap.size()  +  1;	      int    sz    =    lookupMap.size();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	13	None	replace
53	[BUG]  [BUGGY]  _shortest  =  Integer.MAX_VALUE  -  1;  [CE]  cannot  find  symbol  _longest  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	_shortest  =  Integer.MAX_VALUE  -  1;	      _shortest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	9	None	replace
54	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  lookup[1]);  [CE]  cannot  find  symbol  seq  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  this.lookupMap.put(seq[0],  lookup[1]);  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(seq[0],  lookup[1]);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	11	None	replace
55	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  sz);  [CE]  cannot  find  symbol  seq  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  this.lookupMap.put(seq[0],  sz);  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(seq[0],  sz);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	11	None	replace
56	[BUG]  [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	Integer  _shortest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	      int    _shortest    =    Integer.MAX_VALUE;    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	15	None	replace
57	[BUG]  [BUGGY]  int  _longest  =  1;  Int  _longest  =  1;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  _longest  =  1;  Int  _longest  =  1;  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int    _longest    =    1;    Int  _longest  =  1;	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
58	[BUG]  [BUGGY]  int  sz  =  this.lookupMap.size()  -  2;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  sz  =  this.lookupMap.size()  -  2;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =  this.lookupMap.size()  -  2;	      int    sz    =    this.lookupMap.size();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	14	None	replace
59	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  siq[1]);  [CE]  cannot  find  symbol  seq  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  this.lookupMap.put(seq[0],  siq[1]);  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	this.lookupMap.put(seq[0],  siq[1]);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	11	None	replace
60	[BUG]  [BUGGY]  int  sz  =  this.lookupMap.length();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;    [BUGGY]  int  sz  =  this.lookupMap.length();  [BUGGY]    if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	48	48	1	replace	int  sz  =  this.lookupMap.length();	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
