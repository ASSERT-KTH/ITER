bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.lookupMap  =  lookup;  [CE]  incompatible  types  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  lookup;  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  lookup;	      	non-compiled	[CE]  incompatible  types	6	None	replace
2	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,Integer>();  [CE]  incompatible  types  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,Integer>();  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,Integer>();	      	non-compiled	[CE]  incompatible  types	6	None	replace
3	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence>();  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                  AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence>();  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence>();	      	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	6	None	replace
4	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
5	[BUG]  [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookupMap);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookupMap);	  lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
6	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	4	None	add
7	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [CE]  cannot  find  symbol  LookupMap  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);	  	non-compiled	[CE]  cannot  find  symbol  LookupMap	4	None	add
8	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	4	None	add
9	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	4	None	add
10	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  0;  [CE]  cannot  find  symbol  _shortest  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  0;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  0;	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    0;    	non-compiled	[CE]  cannot  find  symbol  _shortest	17	None	replace
11	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  0;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  0;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  0;	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    0;    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	17	None	replace
12	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	13	None	add
13	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [CE]  cannot  find  symbol  LookupMap  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);	  	non-compiled	[CE]  cannot  find  symbol  LookupMap	13	None	add
14	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	13	None	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	14	1	replace
16	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	14	1	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	14	1	replace
18	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	14	1	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	3	1	replace
20	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	3	1	replace
21	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);  [CE]  cannot  find  symbol  lookup  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  cannot  find  symbol  lookup	3	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	3	1	replace
23	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	3	1	replace
24	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup);  [CE]  no  suitable  method  found  for  get(int,CharSequence[][])  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup);	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    0);    	non-compiled	[CE]  no  suitable  method  found  for  get(int,CharSequence[][])	21	None	replace
25	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    0);    	compilable	  [FE]  NullPointerException  	21	2	replace
26	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  [FE]  NullPointerException  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    0);    	compilable	  [FE]  NullPointerException  	21	2	replace
27	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  _longest);  [CE]  cannot  find  symbol  _longest  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  _longest);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  _longest);	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    0);    	non-compiled	[CE]  cannot  find  symbol  _longest	21	None	replace
28	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length);  [CE]  no  suitable  method  found  for  get(int,int,int)  [FE]                  AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length);	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    0);    	non-compiled	[CE]  no  suitable  method  found  for  get(int,int,int)	21	None	replace
29	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[1],  Integer.MAX_VALUE;  [CE]  ']'  expected  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[1],  Integer.MAX_VALUE;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[1],  Integer.MAX_VALUE;	      this.lookupMap    =    new    HashMap    <    CharSequence[0],    Integer.MAX_VALUE;    	non-compiled	[CE]  ']'  expected	18	None	replace
30	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  +  1;  [CE]  ']'  expected  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  +  1;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  +  1;	      this.lookupMap    =    new    HashMap    <    CharSequence[0],    Integer.MAX_VALUE;    	non-compiled	[CE]  ']'  expected	18	None	replace
31	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MIN_VALUE;  [CE]  ']'  expected  [FE]                  AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MIN_VALUE;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MIN_VALUE;	      this.lookupMap    =    new    HashMap    <    CharSequence[0],    Integer.MAX_VALUE;    	non-compiled	[CE]  ']'  expected	18	None	replace
32	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest  -  1);  [CE]  cannot  find  symbol  _longest  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest  -  1);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest  -  1);	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest);    	non-compiled	[CE]  cannot  find  symbol  _longest	20	None	replace
33	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest  +  1);  [CE]  cannot  find  symbol  _longest  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest  +  1);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest  +  1);	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest);    	non-compiled	[CE]  cannot  find  symbol  _longest	20	None	replace
34	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_shortest);  [CE]  cannot  find  symbol  _shortest  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_shortest);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_shortest);	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest);    	non-compiled	[CE]  cannot  find  symbol  _shortest	20	None	replace
35	[BUG]  [BUGGY]  super(lookup,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  super(lookup,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookup,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	      super(null,    null);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	19	None	replace
36	[BUG]  [BUGGY]  super(null,  lookup);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  super(null,  lookup);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(null,  lookup);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	      super(null,    null);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	19	None	replace
37	[BUG]  [BUGGY]  super(lookup,  null);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  super(lookup,  null);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookup,  null);	      super(null,    null);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	19	None	replace
38	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(lookup);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][])  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(lookup);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(lookup);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence[]>();    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][])	9	None	replace
39	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup.clone();  [CE]  inconvertible  types  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup.clone();  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup.clone();	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup;    	non-compiled	[CE]  inconvertible  types	8	None	replace
40	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup;    	compilable	  [FE]  NullPointerException  	8	2	replace
41	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  [FE]  NullPointerException  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup;    	compilable	  [FE]  NullPointerException  	8	2	replace
42	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MAX_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MAX_VALUE;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MAX_VALUE;	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	16	None	replace
43	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  _longest  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MIN_VALUE;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MIN_VALUE;	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _longest	16	None	replace
44	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	2	None	add
45	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  cannot  find  symbol  LookupMap  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  	non-compiled	[CE]  cannot  find  symbol  LookupMap	2	None	add
46	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	2	None	add
47	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup);    	compilable	  [FE]  NullPointerException  	1	2	replace
48	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup);    	compilable	  [FE]  NullPointerException  	1	2	replace
49	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(sz);  [CE]  cannot  find  symbol  sz  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(sz);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(sz);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup);    	non-compiled	[CE]  cannot  find  symbol  sz	1	None	replace
50	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup);  [CE]  cannot  find  symbol  lookup  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup);    	non-compiled	[CE]  cannot  find  symbol  lookup	1	None	replace
51	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],<null>)  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],<null>)	1	None	replace
52	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][])  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][])	7	None	replace
53	[BUG]  [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
54	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest);  [CE]  cannot  find  symbol  _shortest  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest);    	non-compiled	[CE]  cannot  find  symbol  _shortest	10	None	replace
55	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1);  [CE]  cannot  find  symbol  _longest  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest);    	non-compiled	[CE]  cannot  find  symbol  _longest	10	None	replace
56	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(lookup);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(lookup);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[][]>(lookup);	      this.lookupMap    =    new    HashMap    <    CharSequence[][]>();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	11	None	replace
57	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(1);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                  AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(1);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[][]>(1);	      this.lookupMap    =    new    HashMap    <    CharSequence[][]>();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	11	None	replace
58	[BUG]  [BUGGY]  super(null,  lookup);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  super(null,  lookup);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(null,  lookup);	      super(lookup);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	15	None	replace
59	[BUG]  [BUGGY]  super(this.lookupMap);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  super(this.lookupMap);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(this.lookupMap);	      super(lookup);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	15	None	replace
60	[BUG]  [BUGGY]  super(this.lookupMap,  lookup);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  super(this.lookupMap,  lookup);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(this.lookupMap,  lookup);	      super(lookup);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	15	None	replace
61	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  cannot  find  symbol  looksupMap  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  	non-compiled	[CE]  cannot  find  symbol  looksupMap	2	None	add
62	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  -  1;  [CE]  ']'  expected  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  -  1;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  -  1;	      this.lookupMap    =    new    HashMap    <    CharSequence[0],    Integer.MAX_VALUE;    	non-compiled	[CE]  ']'  expected	18	None	replace
63	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0];  [CE]  inconvertible  types  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0];  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0];	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup;    	non-compiled	[CE]  inconvertible  types	8	None	replace
64	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupList;  [CE]  cannot  find  symbol  lookupList  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupList;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupList;	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup;    	non-compiled	[CE]  cannot  find  symbol  lookupList	8	None	replace
65	[BUG]  [BUGGY]  this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence[]>();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence[]>();  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence[]>();	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence[]>();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
66	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest);    	compilable	  [FE]  NullPointerException  	20	2	replace
67	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  [FE]  NullPointerException  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest);    	compilable	  [FE]  NullPointerException  	20	2	replace
68	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [CE]  cannot  find  symbol  LookupMap  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);	  	non-compiled	[CE]  cannot  find  symbol  LookupMap	4	None	add
69	[BUG]  [BUGGY]  super(false,  lookup);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  super(false,  lookup);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(false,  lookup);	      super(lookup);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	15	None	replace
70	[BUG]  [BUGGY]  super(lookup,  false);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  super(lookup,  false);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookup,  false);	      super(lookup);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	15	None	replace
71	[BUG]  [BUGGY]  this.lookupMap  =  new  LinkedHashMap  <  CharSequence[][]>();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  LinkedHashMap  <  CharSequence[][]>();  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  LinkedHashMap  <  CharSequence[][]>();	      this.lookupMap    =    new    HashMap    <    CharSequence[][]>();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
72	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap;  [CE]  variable  lookupMap  might  not  have  been  initialized  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  lookupMap;  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  lookupMap;	      	non-compiled	[CE]  variable  lookupMap  might  not  have  been  initialized	6	None	replace
73	[BUG]  [BUGGY]  this.lookupMap  =  LookupMap.newHashMap();  [CE]  cannot  find  symbol  LookupMap  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  LookupMap.newHashMap();  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  LookupMap.newHashMap();	      	non-compiled	[CE]  cannot  find  symbol  LookupMap	6	None	replace
74	[BUG]  [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(lookup);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(lookup);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(lookup);	  lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
75	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	14	1	replace
76	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	14	1	replace
77	[BUG]  [BUGGY]  this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	14	1	replace
79	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	14	1	replace
80	[BUG]  [BUGGY]  super(null,  null,  lookup);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  super(null,  null,  lookup);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(null,  null,  lookup);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	      super(null,    null);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	19	None	replace
81	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false);  [CE]  no  suitable  constructor  found  for  HashMap(boolean)  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(boolean)	10	None	replace
82	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    LookupMap  <  CharSequence,  CharSequence>(lookup.length);	  	non-compiled	[CE]  not  a  statement	2	None	add
83	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap.this  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap.this  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    LookupMap.this  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
84	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest);	      this.lookupMap    =    new    HashMap    <    CharSequence[][]>();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	11	None	replace
85	[BUG]  [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookup);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookup);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookup);	  lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
86	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookup;  [CE]  cannot  find  symbol  lookup  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookup;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookup;	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup;    	non-compiled	[CE]  cannot  find  symbol  lookup	8	None	replace
87	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [CE]  cannot  find  symbol  looksupMap  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);	  	non-compiled	[CE]  cannot  find  symbol  looksupMap	13	None	add
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	3	1	replace
89	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	3	1	replace
90	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest);    	compilable	  [FE]  NullPointerException  	20	2	replace
91	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  [FE]  NullPointerException  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);	      this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest);    	compilable	  [FE]  NullPointerException  	20	2	replace
92	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {    [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
