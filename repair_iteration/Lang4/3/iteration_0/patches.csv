bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][])  [FE]    AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][])	5	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	compilable	  [FE]  AssertionError  	5	1	replace
3	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	compilable	  [FE]  AssertionError  	5	1	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	compilable	  [FE]  AssertionError  	5	1	replace
5	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	compilable	  [FE]  AssertionError  	5	1	replace
6	[BUG]  [BUGGY]    [CE]  variable  lookupMap  might  not  have  been  initialized  [FE]          AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	  	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	non-compiled	[CE]  variable  lookupMap  might  not  have  been  initialized	5	None	replace
7	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();		non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	6	None	add
8	[BUG]  [BUGGY]    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup;  [CE]  inconvertible  types  [FE]      AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup;  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup;		non-compiled	[CE]  inconvertible  types	6	None	add
9	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>();  [CE]  incompatible  types  [FE]        AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>();  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>();		non-compiled	[CE]  incompatible  types	6	None	add
10	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest);  [CE]  cannot  find  symbol  _longest  [FE]          AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest);		non-compiled	[CE]  cannot  find  symbol  _longest	6	None	add
11	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence[][]>();  [CE]  wrong  number  of  type  arguments;  required  2  [FE]            AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence[][]>();  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence[][]>();		non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	6	None	add
12	[BUG]  [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	compilable	  [FE]  AssertionError  	5	1	replace
14	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);	lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  	compilable	  [FE]  AssertionError  	5	1	replace
15	[BUG]  [BUGGY]    super(lookup);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    super(lookup);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    super(lookup);		non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	6	None	add
16	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  _longest  [FE]      AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;		non-compiled	[CE]  cannot  find  symbol  _longest	6	None	add
17	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  0;  [CE]  cannot  find  symbol  _longest  [FE]        AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  0;  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  0;		non-compiled	[CE]  cannot  find  symbol  _longest	6	None	add
18	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE;  [CE]  ']'  expected  [FE]          AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE;  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE;		non-compiled	[CE]  ']'  expected	6	None	add
19	[BUG]  [BUGGY]    super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();		non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	6	None	add
20	[BUG]  [BUGGY]    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest);  [CE]  cannot  find  symbol  _longest  [FE]      AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest);		non-compiled	[CE]  cannot  find  symbol  _longest	6	None	add
21	[BUG]  [BUGGY]    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0);  [CE]  no  suitable  method  found  for  get(int,int)  [FE]        AssertionError  [CONTEXT]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  [BUGGY]    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0);		non-compiled	[CE]  no  suitable  method  found  for  get(int,int)	6	None	add
