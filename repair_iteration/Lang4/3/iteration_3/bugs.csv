bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0);    	compilable	  [FE]  NullPointerException  	26	2	replace
2	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(1);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0);    	compilable	  [FE]  NullPointerException  	26	2	replace
3	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],<null>)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],<null>)	52	None	replace
4	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  _longest);  [CE]  cannot  find  symbol  _longest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  _longest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup);    	non-compiled	[CE]  cannot  find  symbol  _longest	52	None	replace
5	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(null);    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	90	None	add
6	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(null);    LookupMap  <  CharSequence,  CharSequence>  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);	  	non-compiled	[CE]  cannot  find  symbol	90	None	add
7	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  This.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  [CE]  cannot  find  symbol  This  [FE]        NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  This.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(null);    This.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);	  	non-compiled	[CE]  cannot  find  symbol  This	90	None	add
8	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]          NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(null);    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	90	None	add
9	[BUG]  [BUGGY]  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [CE]  cannot  find  symbol  LookupMap  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    LookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    	non-compiled	[CE]  cannot  find  symbol  LookupMap	68	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    LookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    	compilable	  [FE]  AssertionError  	68	1	replace
11	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    LookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    	compilable	  [FE]  AssertionError  	68	1	replace
12	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookup);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookup);	  lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>(this.lookup);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
13	[BUG]  [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this);	  lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>(this.lookup);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
14	[BUG]  [BUGGY]  super(lookup,  null,  null);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(lookup,  null,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookup,  null,  null);	  super(lookup,    null);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	37	None	replace
15	[BUG]  [BUGGY]  super(lookup,  null,  _longest);  [CE]  cannot  find  symbol  _longest  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(lookup,  null,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookup,  null,  _longest);	  super(lookup,    null);    	non-compiled	[CE]  cannot  find  symbol  _longest	37	None	replace
16	[BUG]  [BUGGY]  super(lookup,  null,  false);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(lookup,  null,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookup,  null,  false);	  super(lookup,    null);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	37	None	replace
17	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[1],  Integer.MIN_VALUE;  [CE]  ']'  expected  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[1],  Integer.MIN_VALUE;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[1],  Integer.MIN_VALUE;	  this.lookupMap    =    new    HashMap    <    CharSequence[0],    Integer.MIN_VALUE;    	non-compiled	[CE]  ']'  expected	31	None	replace
18	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MIN_VALUE  +  1;  [CE]  ']'  expected  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MIN_VALUE  +  1;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MIN_VALUE  +  1;	  this.lookupMap    =    new    HashMap    <    CharSequence[0],    Integer.MIN_VALUE;    	non-compiled	[CE]  ']'  expected	31	None	replace
19	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  this);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],LookupTranslator)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  this);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  this);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],LookupTranslator)	51	None	replace
20	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap,  null);  [CE]  no  suitable  constructor  found  for  HashMap(HashMap<CharSequence,CharSequence>,<null>)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap,  null);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap,  null);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(HashMap<CharSequence,CharSequence>,<null>)	51	None	replace
21	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null,  null);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],<null>,<null>)  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null,  null);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null,  null);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],<null>,<null>)	51	None	replace
22	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	46	None	replace
23	[BUG]  [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	46	None	replace
24	[BUG]  [BUGGY]  null  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  unexpected  type  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  null  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	null  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  unexpected  type	46	None	replace
25	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  +  1];  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  +  1];  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  +  1];	  this.lookupMap    =    new    HashMap    <    CharSequence[0],    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  ']'  expected	30	None	replace
26	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  +  2;  [CE]  ']'  expected  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  +  2;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  +  2;	  this.lookupMap    =    new    HashMap    <    CharSequence[0],    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  ']'  expected	30	None	replace
27	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  /  1;  [CE]  ']'  expected  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  /  1;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  /  1;	  this.lookupMap    =    new    HashMap    <    CharSequence[0],    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  ']'  expected	30	None	replace
28	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);	  LookupMap    <    CharSequence,    CharSequence>    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
29	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);	  LookupMap    <    CharSequence,    CharSequence>    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
30	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  LookupMap    <    CharSequence,    CharSequence>    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
31	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence>(lookup);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence>(lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence>(lookup);	  this.lookupMap    =    new    HashMap    <    CharSequence>();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	3	None	replace
32	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence>(1);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence>(1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence>(1);	  this.lookupMap    =    new    HashMap    <    CharSequence>();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	3	None	replace
33	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup,  null);  [CE]  no  suitable  method  found  for  get(int,CharSequence[][],<null>)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup,  null);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    lookup);    	non-compiled	[CE]  no  suitable  method  found  for  get(int,CharSequence[][],<null>)	24	None	replace
34	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup,  _longest);  [CE]  cannot  find  symbol  _longest  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup,  _longest);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    lookup);    	non-compiled	[CE]  cannot  find  symbol  _longest	24	None	replace
35	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup,  1);  [CE]  no  suitable  method  found  for  get(int,CharSequence[][],int)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup,  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup,  1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    lookup);    	non-compiled	[CE]  no  suitable  method  found  for  get(int,CharSequence[][],int)	24	None	replace
36	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length  -  1,  lookup.length);  [CE]  no  suitable  method  found  for  get(int,int,int,int)  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length  -  1,  lookup.length);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length  -  1,  lookup.length);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    0,    lookup.length);    	non-compiled	[CE]  no  suitable  method  found  for  get(int,int,int,int)	28	None	replace
37	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length  -  1);  [CE]  no  suitable  method  found  for  get(int,int,int)  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length  -  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length  -  1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    0,    lookup.length);    	non-compiled	[CE]  no  suitable  method  found  for  get(int,int,int)	28	None	replace
38	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length,  _longest);  [CE]  cannot  find  symbol  _longest  [FE]                          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length,  _longest);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    0,    lookup.length);    	non-compiled	[CE]  cannot  find  symbol  _longest	28	None	replace
39	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  _shortest);  [CE]  cannot  find  symbol  _shortest  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  _shortest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  _shortest);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    _longest);    	non-compiled	[CE]  cannot  find  symbol  _shortest	27	None	replace
40	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(7);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	75	None	add
41	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  [CE]  cannot  find  symbol  LookupMap  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(7);    LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);	  	non-compiled	[CE]  cannot  find  symbol  LookupMap	75	None	add
42	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(7);    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	75	None	add
43	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap;  [CE]  variable  lookupMap  might  not  have  been  initialized  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap;	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap;    	non-compiled	[CE]  variable  lookupMap  might  not  have  been  initialized	41	None	replace
44	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MIN_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MIN_VALUE;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MIN_VALUE;	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	43	None	replace
45	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.clone();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.clone();	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup.clone();    	compilable	  [FE]  NullPointerException  	39	2	replace
46	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.clone();  [FE]  NullPointerException  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.clone();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.clone();	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup.clone();    	compilable	  [FE]  NullPointerException  	39	2	replace
47	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0].clone();  [CE]  inconvertible  types  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0].clone();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0].clone();	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup.clone();    	non-compiled	[CE]  inconvertible  types	39	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    	compilable	  [FE]  AssertionError  	6	1	replace
49	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    	compilable	  [FE]  AssertionError  	6	1	replace
50	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [CE]  variable  lookupMap  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    	non-compiled	[CE]  variable  lookupMap  might  not  have  been  initialized	6	None	replace
51	[BUG]  [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence[][]>();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence[][]>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  TreeMap  <  CharSequence[][]>();	  this.lookupMap    =    new    LinkedHashMap    <    CharSequence[][]>();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
52	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  1;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  1;	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    int    _longest    =    0;    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	11	None	replace
53	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap,  lookup);  [CE]  no  suitable  constructor  found  for  HashMap(HashMap<CharSequence,CharSequence>,CharSequence[][])  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap,  lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap,  lookup);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookupMap);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(HashMap<CharSequence,CharSequence>,CharSequence[][])	48	None	replace
54	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MAX_VALUE  +  1;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MAX_VALUE  +  1;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MAX_VALUE  +  1;	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    int    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	42	None	replace
55	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(lookup);    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	66	None	add
56	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(lookup);    LookupMap  <  CharSequence,  CharSequence>  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
57	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  This.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  [CE]  cannot  find  symbol  This  [FE]        NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  This.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(lookup);    This.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);	  	non-compiled	[CE]  cannot  find  symbol  This	66	None	add
58	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  if(lookup!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]          NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  if(lookup!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(lookup);    if(lookup!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  }	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	66	None	add
59	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	17	None	add
60	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [CE]  cannot  find  symbol  LookupMap  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);	  	non-compiled	[CE]  cannot  find  symbol  LookupMap	17	None	add
61	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	17	None	add
62	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup);  [CE]  cannot  find  symbol  lookup  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookup);    	non-compiled	[CE]  cannot  find  symbol  lookup	50	None	replace
63	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupList;  [CE]  cannot  find  symbol  lookupList  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupList;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupList;	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookupList;    	non-compiled	[CE]  cannot  find  symbol  lookupList	64	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	89	1	replace
65	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	89	1	replace
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	89	1	replace
67	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	89	1	replace
68	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  2);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  2);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  IllegalArgumentException  	89	2	replace
69	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  2);  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  2);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  2);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  IllegalArgumentException  	89	2	replace
70	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_length);  [CE]  cannot  find  symbol  _length  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_length);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_length);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_shortest);    	non-compiled	[CE]  cannot  find  symbol  _length	54	None	replace
71	[BUG]  [BUGGY]  super(lookupMap);  [CE]  cannot  reference  lookupMap  before  supertype  constructor  has  been  called  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(lookupMap);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookupMap);	  super(this.lookupMap);    	non-compiled	[CE]  cannot  reference  lookupMap  before  supertype  constructor  has  been  called	59	None	replace
72	[BUG]  [BUGGY]  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [CE]  cannot  find  symbol  LookupMap  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    LookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	non-compiled	[CE]  cannot  find  symbol  LookupMap	13	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    LookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	13	1	replace
74	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    LookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	13	1	replace
75	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest);  [CE]  cannot  find  symbol  _longest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(sz);    	non-compiled	[CE]  cannot  find  symbol  _longest	49	None	replace
76	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(sz);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
77	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest);  [CE]  cannot  find  symbol  _shortest  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(sz);    	non-compiled	[CE]  cannot  find  symbol  _shortest	49	None	replace
78	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[1];  [CE]  inconvertible  types  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[1];  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[1];	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup[0];    	non-compiled	[CE]  inconvertible  types	63	None	replace
79	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0],  lookup[1];  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0],  lookup[1];  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0],  lookup[1];	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup[0];    	non-compiled	[CE]  ';'  expected	63	None	replace
80	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0],  null;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0],  null;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0],  null;	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup[0];    	non-compiled	[CE]  ';'  expected	63	None	replace
81	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,Integer>(_longest);  [CE]  cannot  find  symbol  _longest  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,Integer>(_longest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,Integer>(_longest);	  this.lookupMap    =    new    HashMap    <    CharSequence,Integer>();    	non-compiled	[CE]  cannot  find  symbol  _longest	2	None	replace
82	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[1],  Integer.MAX_VALUE  +  1;  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[1],  Integer.MAX_VALUE  +  1;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[1],  Integer.MAX_VALUE  +  1;	  this.lookupMap    =    new    HashMap    <    CharSequence[1],    Integer.MAX_VALUE;    	non-compiled	[CE]  ']'  expected	29	None	replace
83	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  2);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  2);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    -    1);    	compilable	  [FE]  IllegalArgumentException  	20	2	replace
84	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  2);  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  2);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  2);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    -    1);    	compilable	  [FE]  IllegalArgumentException  	20	2	replace
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =  new  HashMap();	  this.lookupMap    =    lookup;    	compilable	  [FE]  AssertionError  	1	1	replace
86	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap();  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap();	  this.lookupMap    =    lookup;    	compilable	  [FE]  AssertionError  	1	1	replace
87	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,Object>();  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,Object>();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,Object>();	  this.lookupMap    =    lookup;    	non-compiled	[CE]  incompatible  types	1	None	replace
88	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(4);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	15	None	add
89	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [CE]  cannot  find  symbol  LookupMap  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(4);    LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);	  	non-compiled	[CE]  cannot  find  symbol  LookupMap	15	None	add
90	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(4);    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	15	None	add
91	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_shortest  -  1);  [CE]  cannot  find  symbol  _shortest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_shortest  -  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_shortest  -  1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest    -    1);    	non-compiled	[CE]  cannot  find  symbol  _shortest	32	None	replace
92	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_length  -  1);  [CE]  cannot  find  symbol  _length  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_length  -  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_length  -  1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest    -    1);    	non-compiled	[CE]  cannot  find  symbol  _length	32	None	replace
93	[BUG]  [BUGGY]  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [CE]  cannot  find  symbol  LookupMap  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    LookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    	non-compiled	[CE]  cannot  find  symbol  LookupMap	7	None	replace
94	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    -    1);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	19	None	add
95	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [CE]  cannot  find  symbol  LookupMap  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    -    1);    LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);	  	non-compiled	[CE]  cannot  find  symbol  LookupMap	19	None	add
96	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1));  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1));  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    -    1);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1));	  	non-compiled	[CE]  ';'  expected	19	None	add
97	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_shortest  +  1);  [CE]  cannot  find  symbol  _shortest  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_shortest  +  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_shortest  +  1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest    +    1);    	non-compiled	[CE]  cannot  find  symbol  _shortest	33	None	replace
98	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest  /  1);  [CE]  cannot  find  symbol  _longest  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest  /  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest  /  1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest    +    1);    	non-compiled	[CE]  cannot  find  symbol  _longest	33	None	replace
99	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest,  lookup);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest,  lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest,  lookup);	  this.lookupMap    =    new    HashMap    <    CharSequence[][]>(_longest);    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	84	None	replace
100	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest,  _longest);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest,  _longest);	  this.lookupMap    =    new    HashMap    <    CharSequence[][]>(_longest);    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	84	None	replace
101	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest,  _shortest);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest,  _shortest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest,  _shortest);	  this.lookupMap    =    new    HashMap    <    CharSequence[][]>(_longest);    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	84	None	replace
102	[BUG]  [BUGGY]  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  cannot  find  symbol  LookupMap  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    LookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  cannot  find  symbol  LookupMap	45	None	replace
103	[BUG]  [BUGGY]  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);  [CE]  cannot  find  symbol  LookupMap  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    LookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  cannot  find  symbol  LookupMap	45	None	replace
104	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_length);  [CE]  cannot  find  symbol  _length  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_length);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_length);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_shortest);    	non-compiled	[CE]  cannot  find  symbol  _length	34	None	replace
105	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_short);  [CE]  cannot  find  symbol  _short  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_short);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_short);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_shortest);    	non-compiled	[CE]  cannot  find  symbol  _short	34	None	replace
106	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookupMap);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	47	None	add
107	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupMap  <  CharSequence,  CharSequence>(this.lookupMap);  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookupMap);    LookupMap  <  CharSequence,  CharSequence>(this.lookupMap);	  	non-compiled	[CE]  not  a  statement	47	None	add
108	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [CE]  cannot  find  symbol  LookupMap  [FE]        NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookupMap);    LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);	  	non-compiled	[CE]  cannot  find  symbol  LookupMap	47	None	add
109	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupTranslator  <  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [CE]  type  LookupTranslator  does  not  take  parameters  [FE]          NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupTranslator  <  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookupMap);    LookupTranslator  <  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);	  	non-compiled	[CE]  type  LookupTranslator  does  not  take  parameters	47	None	add
110	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupMap  <  CharSequence,  CharSequence>(lookupMap);  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupMap  <  CharSequence,  CharSequence>(lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookupMap);    LookupMap  <  CharSequence,  CharSequence>(lookupMap);	  	non-compiled	[CE]  not  a  statement	47	None	add
111	[BUG]  [BUGGY]  this.lookupMap  =  Maps.newHashMap();  [CE]  cannot  find  symbol  Maps  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  Maps.newHashMap();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  Maps.newHashMap();	  this.lookupMap    =    lookupMap;    	non-compiled	[CE]  cannot  find  symbol  Maps	72	None	replace
112	[BUG]  [BUGGY]  super(lookupMap,  this.lookup);  [CE]  cannot  reference  lookupMap  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(lookupMap,  this.lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookupMap,  this.lookup);	  super(this.lookupMap,    lookup);    	non-compiled	[CE]  cannot  reference  lookupMap  before  supertype  constructor  has  been  called	60	None	replace
113	[BUG]  [BUGGY]  super(lookup,  this.lookupMap);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(lookup,  this.lookupMap);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookup,  this.lookupMap);	  super(this.lookupMap,    lookup);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	60	None	replace
114	[BUG]  [BUGGY]  super(this.lookupMap,  lookup,  null);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(this.lookupMap,  lookup,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(this.lookupMap,  lookup,  null);	  super(this.lookupMap,    lookup);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	60	None	replace
115	[BUG]  [BUGGY]  super(this.lookupMap,  lookup,  _longest);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(this.lookupMap,  lookup,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(this.lookupMap,  lookup,  _longest);	  super(this.lookupMap,    lookup);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	60	None	replace
116	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	14	None	replace
117	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	14	None	replace
118	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	14	1	replace
119	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	14	1	replace
120	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap;    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	40	None	add
121	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  else  {  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]      NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  else  {  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap;    if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  else  {  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	40	None	add
122	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  else  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]        NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  else  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap;    if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  else  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	40	None	add
123	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]          NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap;    if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	40	None	add
124	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	8	None	replace
125	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	8	None	replace
126	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    	compilable	  [FE]  AssertionError  	8	1	replace
127	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    	compilable	  [FE]  AssertionError  	8	1	replace
128	[BUG]  [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence[]>();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence[]>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence[]>();	  this.lookupMap    =    new    LinkedHashMap    <    CharSequence,    CharSequence[]>();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
129	[BUG]  [BUGGY]  super(true,  lookup);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(true,  lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(true,  lookup);	  super(false,    lookup);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	69	None	replace
130	[BUG]  [BUGGY]  super(false,  lookup,  null);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(false,  lookup,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(false,  lookup,  null);	  super(false,    lookup);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	69	None	replace
131	[BUG]  [BUGGY]  super(false,  null,  lookup);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(false,  null,  lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(false,  null,  lookup);	  super(false,    lookup);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	69	None	replace
132	[BUG]  [BUGGY]  super(false,  lookup,  _longest);  [CE]  cannot  find  symbol  _longest  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(false,  lookup,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(false,  lookup,  _longest);	  super(false,    lookup);    	non-compiled	[CE]  cannot  find  symbol  _longest	69	None	replace
133	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);  [CE]  cannot  find  symbol  lookup  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookup.length);    	non-compiled	[CE]  cannot  find  symbol  lookup	21	None	replace
134	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap.length);  [CE]  cannot  find  symbol  length  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap.length);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookup.length);    	non-compiled	[CE]  cannot  find  symbol  length	21	None	replace
135	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length  -  1);  [CE]  cannot  find  symbol  lookup  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length  -  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length  -  1);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookup.length);    	non-compiled	[CE]  cannot  find  symbol  lookup	21	None	replace
136	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	9	None	replace
137	[BUG]  [BUGGY]  null  =  new  HashMap  <  CharSequence,  CharSequence>(1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [CE]  unexpected  type  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  null  =  new  HashMap  <  CharSequence,  CharSequence>(1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	null  =  new  HashMap  <  CharSequence,  CharSequence>(1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    	non-compiled	[CE]  unexpected  type	9	None	replace
138	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest  +  1);  [CE]  cannot  find  symbol  _shortest  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest  +  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest  +  1);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest    +    1);    	non-compiled	[CE]  cannot  find  symbol  _shortest	55	None	replace
139	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  /  1);  [CE]  cannot  find  symbol  _longest  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  /  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  /  1);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest    +    1);    	non-compiled	[CE]  cannot  find  symbol  _longest	55	None	replace
140	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    looksupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
141	[BUG]  [BUGGY]  null  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [CE]  unexpected  type  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  null  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	null  =  new  HashMap  <  CharSequence,  CharSequence>(8);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    looksupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	non-compiled	[CE]  unexpected  type	87	None	replace
142	[BUG]  [BUGGY]  super(lookup,  null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(lookup,  null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookup,  null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  super(lookup,    null);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	35	None	replace
143	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup,  lookup);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup,  lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup,  lookup);	  LookupMap    <    CharSequence,    CharSequence>    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookup);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
144	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this);	  LookupMap    <    CharSequence,    CharSequence>    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookup);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
145	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	44	1	replace
146	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	44	1	replace
147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	44	1	replace
148	[BUG]  [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	44	1	replace
149	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(lookup,  null);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(lookup,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[][]>(lookup,  null);	  this.lookupMap    =    new    HashMap    <    CharSequence[][]>(lookup);    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	56	None	replace
150	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)_lookup;  [CE]  cannot  find  symbol  _lookup  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)_lookup;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)_lookup;	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookup;    	non-compiled	[CE]  cannot  find  symbol  _lookup	86	None	replace
151	[BUG]  [BUGGY]  super(lookup,  true);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(lookup,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookup,  true);	  super(lookup,    false);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	70	None	replace
152	[BUG]  [BUGGY]  super(lookup,  false,  null);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(lookup,  false,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookup,  false,  null);	  super(lookup,    false);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	70	None	replace
153	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    +    1);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	22	None	add
154	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [CE]  cannot  find  symbol  LookupMap  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    +    1);    LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);	  	non-compiled	[CE]  cannot  find  symbol  LookupMap	22	None	add
155	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [CE]  cannot  find  symbol  looksupMap  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    +    1);    looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);	  	non-compiled	[CE]  cannot  find  symbol  looksupMap	22	None	add
156	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _shortest  =  0;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _shortest  =  0;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _shortest  =  0;	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _shortest    =    0;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	10	None	replace
157	[BUG]  [BUGGY]  super(null,  null,  lookup,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(null,  null,  lookup,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(null,  null,  lookup,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  super(null,    null,    lookup);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	80	None	replace
158	[BUG]  [BUGGY]  this.lookupMap  =  LookupMap.newHashMap(_longest);  [CE]  cannot  find  symbol  _longest  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  LookupMap.newHashMap(_longest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  LookupMap.newHashMap(_longest);	  this.lookupMap    =    LookupMap.newHashMap();    	non-compiled	[CE]  cannot  find  symbol  _longest	73	None	replace
159	[BUG]  [BUGGY]  this.lookupMap  =  lookup.newHashMap();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  lookup.newHashMap();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  lookup.newHashMap();	  this.lookupMap    =    LookupMap.newHashMap();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
160	[BUG]  [BUGGY]  null  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  unexpected  type  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  null  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	null  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    looksupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  unexpected  type	61	None	replace
161	[BUG]  [BUGGY]  super(null,  lookup,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(null,  lookup,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(null,  lookup,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  super(null,    lookup);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	36	None	replace
162	[BUG]  [BUGGY]  super(false,  lookup);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(false,  lookup);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(false,  lookup);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  super(null,    lookup);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	36	None	replace
163	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(6);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	78	None	add
164	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  [CE]  cannot  find  symbol  LookupMap  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(6);    LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);	  	non-compiled	[CE]  cannot  find  symbol  LookupMap	78	None	add
165	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(6);    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	78	None	add
166	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(6);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	78	None	add
167	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE,  lookup.length  -  1;  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE,  lookup.length  -  1;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE,  lookup.length  -  1;	  this.lookupMap    =    new    HashMap    <    CharSequence[0],    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  ']'  expected	62	None	replace
168	[BUG]  [BUGGY]  LookupMap.this  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap.this  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap.this  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    LookupMap.this    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
169	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  <  CharSequence,  CharSequence>(lookup.length);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    LookupMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  not  a  statement	82	None	replace
170	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true);  [CE]  no  suitable  constructor  found  for  HashMap(boolean)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(boolean)	81	None	replace
171	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup);  [CE]  no  suitable  constructor  found  for  HashMap(boolean,CharSequence[][])  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(boolean,CharSequence[][])	81	None	replace
172	[BUG]  [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookupMap,  lookup);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookupMap,  lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookupMap,  lookup);	  lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>(this.lookupMap);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
173	[BUG]  [BUGGY]  super(null,  lookup,  null);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(null,  lookup,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(null,  lookup,  null);	  super(null,    lookup);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	58	None	replace
174	[BUG]  [BUGGY]  super(null,  lookup,  false);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(null,  lookup,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(null,  lookup,  false);	  super(null,    lookup);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	58	None	replace
175	[BUG]  [BUGGY]  super(null,  null,  lookup);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(null,  null,  lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(null,  null,  lookup);	  super(null,    lookup);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	58	None	replace
176	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  2);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  2);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    +    1);    	compilable	  [FE]  AssertionError  	23	1	replace
177	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  2);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  2);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    +    1);    	compilable	  [FE]  AssertionError  	23	1	replace
178	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(lookup,  null);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],<null>)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(lookup,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(lookup,  null);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence[]>(lookup);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],<null>)	38	None	replace
179	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(lookup,  _longest);  [CE]  cannot  find  symbol  _longest  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(lookup,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(lookup,  _longest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence[]>(lookup);    	non-compiled	[CE]  cannot  find  symbol  _longest	38	None	replace
180	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(lookup,  lookup);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],CharSequence[][])  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(lookup,  lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(lookup,  lookup);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence[]>(lookup);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],CharSequence[][])	38	None	replace
181	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	88	None	add
182	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  This.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  This.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    This.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  	non-compiled	[CE]  cannot  find  symbol  This	88	None	add
183	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	88	None	add
184	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0);    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	25	None	add
185	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(1);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]      NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0);    this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(1);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	25	None	add
186	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0);    LookupMap  <  CharSequence,  CharSequence>  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
187	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]          NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0);    if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  }	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	25	None	add
188	[BUG]  [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	14	None	replace
189	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0],  null);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0],  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookup[0],  null);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup[0];    	non-compiled	[CE]  ';'  expected	63	None	replace
190	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[1],  Integer.MAX_VALUE  -  1;  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[1],  Integer.MAX_VALUE  -  1;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[1],  Integer.MAX_VALUE  -  1;	  this.lookupMap    =    new    HashMap    <    CharSequence[1],    Integer.MAX_VALUE;    	non-compiled	[CE]  ']'  expected	29	None	replace
191	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null  +  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null  +  1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	33	None	replace
192	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup.length  -  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup.length  -  1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest    -    1);    	compilable	  [FE]  NullPointerException  	32	2	replace
193	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup.length  -  1);  [FE]  NullPointerException  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup.length  -  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup.length  -  1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest    -    1);    	compilable	  [FE]  NullPointerException  	32	2	replace
194	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null  -  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null  -  1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	32	None	replace
195	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest  +  1,  _longest);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest  +  1,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest  +  1,  _longest);	  this.lookupMap    =    new    HashMap    <    CharSequence[][]>(_longest);    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	84	None	replace
196	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest  +  1,  lookup);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest  +  1,  lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[][]>(_longest  +  1,  lookup);	  this.lookupMap    =    new    HashMap    <    CharSequence[][]>(_longest);    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	84	None	replace
197	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	12	1	replace
198	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	12	1	replace
199	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	12	1	replace
200	[BUG]  [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	compilable	  [FE]  AssertionError  	12	1	replace
201	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [CE]  variable  lookupMap  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	non-compiled	[CE]  variable  lookupMap  might  not  have  been  initialized	12	None	replace
202	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(0);  [CE]  variable  lookupMap  might  not  have  been  initialized  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(0);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(0);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0);    	non-compiled	[CE]  variable  lookupMap  might  not  have  been  initialized	26	None	replace
203	[BUG]  [BUGGY]  this.lookupMap  =  new  LinkedHashMap  <  CharSequence>();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  LinkedHashMap  <  CharSequence>();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  LinkedHashMap  <  CharSequence>();	  this.lookupMap    =    new    HashMap    <    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
204	[BUG]  [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence>();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence>();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  TreeMap  <  CharSequence>();	  this.lookupMap    =    new    HashMap    <    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
205	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup  +  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup  +  1);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	55	None	replace
206	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    +    1);    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	22	None	add
207	[BUG]  [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	8	None	replace
208	[BUG]  [BUGGY]  this.lookupMap  =  new  ArrayHashMap  <  CharSequence,  CharSequence[]>();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  ArrayHashMap  <  CharSequence,  CharSequence[]>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  ArrayHashMap  <  CharSequence,  CharSequence[]>();	  this.lookupMap    =    new    LinkedHashMap    <    CharSequence,    CharSequence[]>();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
209	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(0,  0,  lookup.length);  [CE]  no  suitable  method  found  for  get(int,int,int)  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(0,  0,  lookup.length);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(0,  0,  lookup.length);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    0,    lookup.length);    	non-compiled	[CE]  no  suitable  method  found  for  get(int,int,int)	28	None	replace
210	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(0,  0,  lookup.length  -  1);  [CE]  no  suitable  method  found  for  get(int,int,int)  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(0,  0,  lookup.length  -  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(0,  0,  lookup.length  -  1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    0,    lookup.length);    	non-compiled	[CE]  no  suitable  method  found  for  get(int,int,int)	28	None	replace
211	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(lookup,  _longest);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(lookup,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[][]>(lookup,  _longest);	  this.lookupMap    =    new    HashMap    <    CharSequence[][]>(lookup);    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	56	None	replace
212	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(lookup,  lookup);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(lookup,  lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[][]>(lookup,  lookup);	  this.lookupMap    =    new    HashMap    <    CharSequence[][]>(lookup);    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	56	None	replace
213	[BUG]  [BUGGY]  super(LookupTranslator.getInstance());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(LookupTranslator.getInstance());  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(LookupTranslator.getInstance());	  super(this.lookupMap);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
214	[BUG]  [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	9	None	replace
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    	compilable	  [FE]  AssertionError  	9	1	replace
216	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    	compilable	  [FE]  AssertionError  	9	1	replace
217	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    -    1);    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	19	None	add
218	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  <  CharSequence,  CharSequence>  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  <  CharSequence,  CharSequence>  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    LookupMap  <  CharSequence,  CharSequence>  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  	non-compiled	[CE]  not  a  statement	88	None	add
219	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence[0],  CharSequence>(lookup.length);  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence[0],  CharSequence>(lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    this.lookupMap  =  new  HashMap  <  CharSequence[0],  CharSequence>(lookup.length);	  	non-compiled	[CE]  ']'  expected	88	None	add
220	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookupMap);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookupMap);	  lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>(this.lookupMap);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
221	[BUG]  [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(lookupMap);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(lookupMap);	  lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>(this.lookupMap);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
222	[BUG]  [BUGGY]  this.lookupMap  =  LookupTranslator.newInstance();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  LookupTranslator.newInstance();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  LookupTranslator.newInstance();	  this.lookupMap    =    lookupMap;    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
223	[BUG]  [BUGGY]  this.lookupMap  =  LookupTranslator.create(lookup);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  LookupTranslator.create(lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  LookupTranslator.create(lookup);	  this.lookupMap    =    lookupMap;    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
224	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  if(lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  }  else  {  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(  [CE]  ')'  expected  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  if(lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  }  else  {  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(null);    if(lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  }  else  {  lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(	  	non-compiled	[CE]  ')'  expected	90	None	add
225	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  if(lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]      NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  if(lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(null);    if(lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  }	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	90	None	add
226	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,Integer>(lookup);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][])  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,Integer>(lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,Integer>(lookup);	  this.lookupMap    =    new    HashMap    <    CharSequence,Integer>();    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][])	2	None	replace
227	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.clone();  [CE]  variable  lookupMap  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.clone();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.clone();	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup.clone();    	non-compiled	[CE]  variable  lookupMap  might  not  have  been  initialized	39	None	replace
228	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupList.clone();  [CE]  cannot  find  symbol  lookupList  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupList.clone();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupList.clone();	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookup.clone();    	non-compiled	[CE]  cannot  find  symbol  lookupList	39	None	replace
229	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  if(lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  if(lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap;    if(lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	40	None	add
230	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  This.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  [CE]  cannot  find  symbol  This  [FE]      NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  This.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap;    This.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;	  	non-compiled	[CE]  cannot  find  symbol  This	40	None	add
231	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  -  1);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    -    1);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
232	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  *  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  *  1);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    -    1);    	compilable	  [FE]  AssertionError  	20	1	replace
233	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  *  1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  *  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  *  1);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    -    1);    	compilable	  [FE]  AssertionError  	20	1	replace
234	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  -  1];  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  -  1];  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MAX_VALUE  -  1];	  this.lookupMap    =    new    HashMap    <    CharSequence[0],    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  ']'  expected	62	None	replace
235	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupTranslator  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [CE]  type  LookupTranslator  does  not  take  parameters  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupTranslator  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookupMap);    LookupTranslator  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);	  	non-compiled	[CE]  type  LookupTranslator  does  not  take  parameters	47	None	add
236	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupRoot;  [CE]  cannot  find  symbol  lookupRoot  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupRoot;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupRoot;	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)lookupList;    	non-compiled	[CE]  cannot  find  symbol  lookupRoot	64	None	replace
237	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  _shortest  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _shortest  =  Integer.MAX_VALUE;	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _shortest    =    0;    	non-compiled	[CE]  cannot  find  symbol  _shortest	10	None	replace
238	[BUG]  [BUGGY]  super(lookup,  false,  _longest);  [CE]  cannot  find  symbol  _longest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(lookup,  false,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookup,  false,  _longest);	  super(lookup,    false);    	non-compiled	[CE]  cannot  find  symbol  _longest	70	None	replace
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(5);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(5);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(6);    	compilable	  [FE]  AssertionError  	79	1	replace
240	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(5);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(5);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(5);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(6);    	compilable	  [FE]  AssertionError  	79	1	replace
241	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(0,  lookup);  [CE]  no  suitable  method  found  for  get(int,CharSequence[][])  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(0,  lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(0,  lookup);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    lookup);    	non-compiled	[CE]  no  suitable  method  found  for  get(int,CharSequence[][])	24	None	replace
242	[BUG]  [BUGGY]  this.lookupMap  =  LookupMap.newHashMap(lookup);  [CE]  cannot  find  symbol  LookupMap  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  LookupMap.newHashMap(lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  LookupMap.newHashMap(lookup);	  this.lookupMap    =    LookupMap.newHashMap();    	non-compiled	[CE]  cannot  find  symbol  LookupMap	73	None	replace
243	[BUG]  [BUGGY]  this.lookupMap  =  LookupMap.newLinkedHashMap();  [CE]  cannot  find  symbol  LookupMap  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  LookupMap.newLinkedHashMap();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  LookupMap.newLinkedHashMap();	  this.lookupMap    =    LookupMap.newHashMap();    	non-compiled	[CE]  cannot  find  symbol  LookupMap	73	None	replace
244	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  <  CharSequence,  CharSequence>(lookup.length);  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  <  CharSequence,  CharSequence>(lookup.length);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  <  CharSequence,  CharSequence>(lookup.length);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    LookupMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  not  a  statement	82	None	replace
245	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>(this.lookup);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>(this.lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>(this.lookup);	  LookupMap    <    CharSequence,    CharSequence>    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookup);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
246	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(lookup);    if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(lookup);  }	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	66	None	add
247	[BUG]  [BUGGY]  super(null,  lookup,  _longest);  [CE]  cannot  find  symbol  _longest  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(null,  lookup,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(null,  lookup,  _longest);	  super(null,    lookup);    	non-compiled	[CE]  cannot  find  symbol  _longest	58	None	replace
248	[BUG]  [BUGGY]  super(LookupTranslator.class,  lookup);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(LookupTranslator.class,  lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(LookupTranslator.class,  lookup);	  super(null,    lookup);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	58	None	replace
249	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [CE]  cannot  find  symbol  LookupMap  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    LookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  cannot  find  symbol  LookupMap	45	None	replace
250	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookup.length);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
251	[BUG]  [BUGGY]  this.lookupMap  =  new  ArrayHashMap  <  CharSequence,  CharSequence>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  ArrayHashMap  <  CharSequence,  CharSequence>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  ArrayHashMap  <  CharSequence,  CharSequence>();	  this.lookupMap    =    new    LinkedHashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
252	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(null);  [CE]  variable  lookupMap  might  not  have  been  initialized  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)lookupMap.get(null);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(null);    	non-compiled	[CE]  variable  lookupMap  might  not  have  been  initialized	91	None	replace
253	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    	compilable	  [FE]  AssertionError  	6	1	replace
254	[BUG]  [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    	compilable	  [FE]  AssertionError  	6	1	replace
255	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null,  _longest);  [CE]  cannot  find  symbol  _longest  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null,  _longest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null,  _longest);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup,    null);    	non-compiled	[CE]  cannot  find  symbol  _longest	51	None	replace
256	[BUG]  [BUGGY]  super(lookup,  null,  0);  [CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(lookup,  null,  0);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(lookup,  null,  0);	  super(lookup,    null);    	non-compiled	[CE]  constructor  CharSequenceTranslator  in  class  CharSequenceTranslator  cannot  be  applied  to  given  types;	37	None	replace
257	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  if(lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  if(lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0);    if(lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  }	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	25	None	add
258	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  This.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  [CE]  cannot  find  symbol  This  [FE]      NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  This.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0);    This.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0);	  	non-compiled	[CE]  cannot  find  symbol  This	25	None	add
259	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(2);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>(2);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[][]>(2);	  this.lookupMap    =    new    HashMap    <    CharSequence[][]>(1);    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	57	None	replace
260	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();	  LookupMap    <    CharSequence,    CharSequence>    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
261	[BUG]  [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();	  LookupMap    <    CharSequence,    CharSequence>    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
262	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  ';'  expected	46	None	replace
263	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  else  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.look  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  else  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.look  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap;    if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap;  }  else  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.look	  	non-compiled	[CE]  ';'  expected	40	None	add
264	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(null);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_shortest);    	compilable	  [FE]  NullPointerException  	54	2	replace
265	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(null);  [FE]  NullPointerException  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(null);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_shortest);    	compilable	  [FE]  NullPointerException  	54	2	replace
266	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _longest);  [CE]  cannot  find  symbol  _longest  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _longest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false);    	non-compiled	[CE]  cannot  find  symbol  _longest	81	None	replace
267	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  super(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  super(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    super(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	88	None	add
268	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length).length;  [CE]  cannot  find  symbol  length  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length).length;  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length).length;	  	non-compiled	[CE]  cannot  find  symbol  length	88	None	add
269	[BUG]  [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(lookup);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(lookup);	  this.lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
270	[BUG]  [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  <  CharSequence,  CharSequence>(lookup.length);  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  <  CharSequence,  CharSequence>(lookup.length);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  LookupMap  <  CharSequence,  CharSequence>(lookup.length);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    LookupMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  not  a  statement	82	None	replace
271	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [CE]  cannot  find  symbol  looksupMap  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);	  	non-compiled	[CE]  cannot  find  symbol  looksupMap	17	None	add
272	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  this.lookupMap);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],HashMap<CharSequence,CharSequence>)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  this.lookupMap);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],HashMap<CharSequence,CharSequence>)	51	None	replace
273	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    	compilable	  [FE]  AssertionError  	9	1	replace
274	[BUG]  [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  }  else  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    	compilable	  [FE]  AssertionError  	9	1	replace
275	[BUG]  [BUGGY]  this.lookupMap  =  LookupMap.createHashMap();  [CE]  cannot  find  symbol  LookupMap  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  LookupMap.createHashMap();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  LookupMap.createHashMap();	  this.lookupMap    =    lookupMap;    	non-compiled	[CE]  cannot  find  symbol  LookupMap	72	None	replace
276	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  *  1);  [CE]  cannot  find  symbol  _longest  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  *  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  *  1);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest    +    1);    	non-compiled	[CE]  cannot  find  symbol  _longest	55	None	replace
277	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(this.lookup);  [CE]  cannot  find  symbol  lookup  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(this.lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence[]>(this.lookup);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence[]>(lookup);    	non-compiled	[CE]  cannot  find  symbol  lookup	38	None	replace
278	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_null);  [CE]  cannot  find  symbol  _null  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_null);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_shortest);    	non-compiled	[CE]  cannot  find  symbol  _null	34	None	replace
279	[BUG]  [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [CE]  variable  lookupMap  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	non-compiled	[CE]  variable  lookupMap  might  not  have  been  initialized	44	None	replace
280	[BUG]  [BUGGY]  if(lookup!=  null)  {  super(null,  null,  lookup);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup!=  null)  {  super(null,  null,  lookup);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup!=  null)  {  super(null,  null,  lookup);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }	  super(null,    null,    lookup);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	80	None	replace
281	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup1);  [CE]  cannot  find  symbol  lookup1  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  lookup1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    lookup);    	non-compiled	[CE]  cannot  find  symbol  lookup1	24	None	replace
282	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    int    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	42	None	replace
283	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }  [CE]  cannot  find  symbol  LookupMap  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  LookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    LookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(2);    	non-compiled	[CE]  cannot  find  symbol  LookupMap	68	None	replace
284	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  }  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(null);    if(this.lookupMap!=  null)  {  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(null);  }	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	90	None	add
285	[BUG]  [BUGGY]  LookupMap  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookupMap);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookupMap);	  lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>(this.lookupMap);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
286	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this;  [CE]  inconvertible  types  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this;	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap;    	non-compiled	[CE]  inconvertible  types	41	None	replace
287	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length  -  2);  [CE]  no  suitable  method  found  for  get(int,int,int)  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length  -  2);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(0,  0,  lookup.length  -  2);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(0,    0,    lookup.length);    	non-compiled	[CE]  no  suitable  method  found  for  get(int,int,int)	28	None	replace
288	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.shortest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.shortest);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(sz);    	compilable	  [FE]  AssertionError  	49	1	replace
289	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.shortest);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.shortest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.shortest);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(sz);    	compilable	  [FE]  AssertionError  	49	1	replace
290	[BUG]  [BUGGY]  LookupMap  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookup);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(this.lookup);	  lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>(this.lookup);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
291	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [CE]  cannot  find  symbol  looksupMap  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(4);    looksupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);	  	non-compiled	[CE]  cannot  find  symbol  looksupMap	15	None	add
292	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(7);    lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	75	None	add
293	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence>(4);  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence>(4);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence>(4);	  this.lookupMap    =    new    HashMap    <    CharSequence>();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	3	None	replace
294	[BUG]  [BUGGY]  LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookupMap);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
295	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookupMap);    	compilable	  [FE]  NullPointerException  	48	2	replace
296	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookupMap);    	compilable	  [FE]  NullPointerException  	48	2	replace
297	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookupMap);    LookupMap  <  CharSequence,  CharSequence>  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);	  	non-compiled	[CE]  cannot  find  symbol	47	None	add
298	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookupMap);    LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);	  	non-compiled	[CE]  cannot  find  symbol	47	None	add
299	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [CE]  variable  lookupMap  might  already  have  been  assigned  [FE]        NullPointerException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookupMap);    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookupMap);	  	non-compiled	[CE]  variable  lookupMap  might  already  have  been  assigned	47	None	add
300	[BUG]  [BUGGY]  super(null,  lookupMap);  [CE]  cannot  reference  lookupMap  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  super(null,  lookupMap);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	super(null,  lookupMap);	  super(null,    lookup);    	non-compiled	[CE]  cannot  reference  lookupMap  before  supertype  constructor  has  been  called	58	None	replace
301	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	add	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	46	1	replace
302	[BUG]  [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	if(lookup  ==  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }  else  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length);  }	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length);    	compilable	  [FE]  AssertionError  	46	1	replace
303	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MIN_VALUE,  1;  [CE]  ']'  expected  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MIN_VALUE,  1;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[0],  Integer.MIN_VALUE,  1;	  this.lookupMap    =    new    HashMap    <    CharSequence[0],    Integer.MIN_VALUE;    	non-compiled	[CE]  ']'  expected	31	None	replace
304	[BUG]  [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest  /  2  +  1);  [CE]  cannot  find  symbol  _longest  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest  /  2  +  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	this.lookupMap  =(HashMap  <  CharSequence,  CharSequence>)this.lookupMap.get(_longest  /  2  +  1);	  this.lookupMap    =(HashMap    <    CharSequence,    CharSequence>)this.lookupMap.get(_longest    +    1);    	non-compiled	[CE]  cannot  find  symbol  _longest	33	None	replace
305	[BUG]  [BUGGY]  LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	LookupMap  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup.length);	  lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(this.lookup.length);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
306	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  LookupMap.this  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  LookupMap.this  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    +    1);    LookupMap.this  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
307	[BUG]  [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  LookupMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {      [BUGGY]  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  LookupMap  <  CharSequence,  CharSequence>(lookup.length  +  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	46	46	1	replace	lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup.length    +    1);    LookupMap  <  CharSequence,  CharSequence>(lookup.length  +  1);	  	non-compiled	[CE]  not  a  statement	22	None	add
