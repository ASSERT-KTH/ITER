bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  long  longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  long  longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	long  longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  int    longest    =    Integer.MAX_VALUE;    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
2	[BUG]  [BUGGY]  int  longest  =  Integer.MIN_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  int  longest  =  Integer.MIN_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	int  longest  =  Integer.MIN_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  int    longest    =    Integer.MAX_VALUE;    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
3	[BUG]  [BUGGY]  Integer  longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  Integer  longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	Integer  longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  int    longest    =    Integer.MAX_VALUE;    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
4	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  new  Integer(0));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  new  Integer(0));  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  new  Integer(0));	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    final    int    length)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
5	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  /  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  int  longest  =  Integer.MAX_VALUE  /  1;  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	int  longest  =  Integer.MAX_VALUE  /  1;	  int    longest    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
6	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _length  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _length  -  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _length  -  1);	  this.lookupMap    =    lookupMap.get(_longest,    _length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _length  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _length  +  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _length  +  1);	  this.lookupMap    =    lookupMap.get(_longest,    _length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
8	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  super(lookup);  }  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  super(lookup);  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookup)  {  super(lookup);  }	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    super(lookup);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
9	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  seq)  {  super(seq);  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  seq)  {  super(seq);  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  seq)  {  super(seq);  }	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    super(lookup);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
10	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  seq)  {  super(sz);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  seq)  {  super(sz);  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  seq)  {  super(sz);  }	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    super(lookup);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
11	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1,  _shortest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1,  _shortest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1,  _shortest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest    +    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
12	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  2);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  2);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  2);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest    +    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
13	[BUG]  [BUGGY]  this(false,  new  HashMap  <  CharSequence,  CharSequence>(),  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(false,  new  HashMap  <  CharSequence,  CharSequence>(),  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(false,  new  HashMap  <  CharSequence,  CharSequence>(),  true);	  this(null,    new    HashMap    <    CharSequence,    CharSequence>(),    true);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
14	[BUG]  [BUGGY]  this(null,  null,  new  HashMap  <  CharSequence,  CharSequence>(),  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  new  HashMap  <  CharSequence,  CharSequence>(),  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  null,  new  HashMap  <  CharSequence,  CharSequence>(),  true);	  this(null,    new    HashMap    <    CharSequence,    CharSequence>(),    true);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
15	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  lookupMap);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  lookupMap);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  lookupMap);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    seq);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  null);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    seq);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  false);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    seq);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    seq);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  1);	  this.lookupMap    =    lookupMap.get(_longest,    0);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  0,  _longest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  0,  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  0,  _longest);	  this.lookupMap    =    lookupMap.get(_longest,    0);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  int  types)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  int  types)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  int  types)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    int    types)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
22	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  int  types);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  int  types);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  int  types);	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    int    types)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
23	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  null,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  null,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  null,  null);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    null);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
24	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  null,  lookupMap);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  null,  lookupMap);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  null,  lookupMap);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    null);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
25	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  null,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  null,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  null,  false);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    null);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
26	[BUG]  [BUGGY]  _longest  =  Integer.MAX_VALUE  /  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  _longest  =  Integer.MAX_VALUE  /  1;  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	_longest  =  Integer.MAX_VALUE  /  1;	  _longest    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
27	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  lookupMap,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  lookupMap,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  lookupMap,  null);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    lookupMap);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  lookupMap,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  lookupMap,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  lookupMap,  false);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    lookupMap);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
29	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null,  false);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    false);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
30	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  false,  lookupMap);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  false,  lookupMap);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  false,  lookupMap);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    false);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
31	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  null,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  null,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  null,  false);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    false);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
32	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(0);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(0);	  this.lookupMap    =    lookupMap.get(0,    _longest);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(0,  _longest  -  _longest);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(0,  _longest  -  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(0,  _longest  -  _longest);	  this.lookupMap    =    lookupMap.get(0,    _longest);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(0,  _longest  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(0,  _longest  +  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(0,  _longest  +  1);	  this.lookupMap    =    lookupMap.get(0,    _longest);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
35	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(0,  _longest  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(0,  _longest  -  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(0,  _longest  -  1);	  this.lookupMap    =    lookupMap.get(0,    _longest);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
36	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest,  _longest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest,  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest,  _longest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_shortest);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
37	[BUG]  [BUGGY]  this(new  CharSequence[][]  {  },  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(new  CharSequence[][]  {  },  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  CharSequence[][]  {  },  null);	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    longest)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
38	[BUG]  [BUGGY]  super(lookup,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(lookup,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(lookup,  null);	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    longest)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
39	[BUG]  [BUGGY]  this(new  CharSequence[][]  {  },  null,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  CharSequence[][]  {  },  null,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  CharSequence[][]  {  },  null,  null);	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    longest)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
40	[BUG]  [BUGGY]  super(LookupMap.class,  null);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  super(LookupMap.class,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(LookupMap.class,  null);	  super(LookupMap.class);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
41	[BUG]  [BUGGY]  super(LookupMap.class,  lookupMap);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  super(LookupMap.class,  lookupMap);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(LookupMap.class,  lookupMap);	  super(LookupMap.class);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
42	[BUG]  [BUGGY]  super(LookupMap.class,  this.lookupMap);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(LookupMap.class,  this.lookupMap);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(LookupMap.class,  this.lookupMap);	  super(LookupMap.class);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
43	[BUG]  [BUGGY]  super(this.lookupMap);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  super(this.lookupMap);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(this.lookupMap);	  super(lookupMap);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
44	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  lookup);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  lookup);	  super(lookupMap);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
45	[BUG]  [BUGGY]  super(lookupMap,  null);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  super(lookupMap,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(lookupMap,  null);	  super(lookupMap);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
46	[BUG]  [BUGGY]  super(null,  null,  _longest,  _shortest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  _longest,  _shortest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  _longest,  _shortest);	  super(null,    null,    _longest);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
47	[BUG]  [BUGGY]  super(_longest,  null,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(_longest,  null,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(_longest,  null,  null);	  super(null,    null,    _longest);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
48	[BUG]  [BUGGY]  super(null,  null,  _longest,  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  _longest,  Long.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  _longest,  Long.MAX_VALUE);	  super(null,    null,    _longest);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
49	[BUG]  [BUGGY]  super(null,  null,  _longest,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  _longest,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  _longest,  false);	  super(null,    null,    _longest);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
50	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MAX_VALUE;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MAX_VALUE;	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    int    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
51	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MIN_VALUE;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MIN_VALUE;	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    int    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
52	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _lengthest  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _lengthest  =  Integer.MAX_VALUE;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _lengthest  =  Integer.MAX_VALUE;	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    int    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
53	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  int  length,  _longest);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  int  length,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  int  length,  _longest);	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    int    length)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
54	[BUG]  [BUGGY]  super(null,  null,  null,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  null,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  null,  null);	  super(null,    null,    null);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
55	[BUG]  [BUGGY]  super(null,  null,  null,  _longest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  null,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  null,  _longest);	  super(null,    null,    null);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
56	[BUG]  [BUGGY]  super(null,  null,  null,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  null,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  null,  false);	  super(null,    null,    null);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
57	[BUG]  [BUGGY]  final  int  _longest  =  Integer.MIN_VALUE;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  final  int  _longest  =  Integer.MIN_VALUE;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	final  int  _longest  =  Integer.MIN_VALUE;	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    int    _longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
58	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _lengthest  =  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _lengthest  =  Integer.MIN_VALUE;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _lengthest  =  Integer.MIN_VALUE;	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    int    _longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
59	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(null,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(null,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookup).put(null,  null);	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(null,    null);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
60	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(0,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(0,  0);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(0,  0);	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(null,    null);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
61	[BUG]  [BUGGY]  super(_longest);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  super(_longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(_longest);	  super(lookup);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
62	[BUG]  [BUGGY]  super(_longest,  lookup);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  super(_longest,  lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(_longest,  lookup);	  super(lookup);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
63	[BUG]  [BUGGY]  this.lookupMap.put(_longest,  lookup);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(_longest,  lookup);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(_longest,  lookup);	  super(lookup);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
64	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MIN_VALUE;  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MIN_VALUE;	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
65	[BUG]  [BUGGY]  if(_longest  ==  Integer.MAX_VALUE)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  if(_longest  ==  Integer.MAX_VALUE)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  }  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(_longest  ==  Integer.MAX_VALUE)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  }	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
66	[BUG]  [BUGGY]  super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    super(null,    null);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
67	[BUG]  [BUGGY]  final  int  _longest  =  this.lookupMap.size();  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  final  int  _longest  =  this.lookupMap.size();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	final  int  _longest  =  this.lookupMap.size();	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    super(null,    null);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
68	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  false);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    lookupMap);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
69	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    lookupMap);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
70	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null,  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    true);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
71	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  null,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  null,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  null,  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    true);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
72	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  0,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  0,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  0,  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    true);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
73	[BUG]  [BUGGY]  this.lookupMap.put(siq[0],  seq[1]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(siq[0],  seq[1]);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(siq[0],  seq[1]);	  this.lookupMap.put(seq[0],    siq[1]);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
74	[BUG]  [BUGGY]  this.lookupMap.put(siq[0],  siq[1]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(siq[0],  siq[1]);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(siq[0],  siq[1]);	  this.lookupMap.put(seq[0],    siq[1]);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
75	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null,  null);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    lookupMap,    null);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
76	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  null,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  null,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  null,  null);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    false,    null);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
77	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _shortest,  _length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _shortest,  _length);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _shortest,  _length);	  this.lookupMap    =    lookupMap.get(_longest,    _shortest);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
78	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _shortest  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _shortest  +  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _shortest  +  1);	  this.lookupMap    =    lookupMap.get(_longest,    _shortest);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
79	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _shortest,  _longest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _shortest,  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _shortest,  _longest);	  this.lookupMap    =    lookupMap.get(_longest,    _shortest);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
80	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _shortest,  _shortest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _shortest,  _shortest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _shortest,  _shortest);	  this.lookupMap    =    lookupMap.get(_longest,    _shortest);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
81	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  false);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    false,    true);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
82	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  false);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    false,    true);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
83	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    false,    true);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
84	[BUG]  [BUGGY]  super(true,  Integer.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(true,  Integer.MIN_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(true,  Integer.MIN_VALUE);	  super(false,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
85	[BUG]  [BUGGY]  super(false,  Integer.MIN_VALUE,  _longest);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(false,  Integer.MIN_VALUE,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  Integer.MIN_VALUE,  _longest);	  super(false,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
86	[BUG]  [BUGGY]  super(false,  Integer.MIN_VALUE,  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(false,  Integer.MIN_VALUE,  Long.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  Integer.MIN_VALUE,  Long.MAX_VALUE);	  super(false,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
87	[BUG]  [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(_longest);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(_longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(_longest);	  this.lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
88	[BUG]  [BUGGY]  super(true,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(true,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(true,  false);	  super(false,    true);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
89	[BUG]  [BUGGY]  super(true,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(true,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(true,  true);	  super(false,    true);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
90	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  _shortest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  _shortest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest  -  _shortest);	  this.lookupMap    =    lookupMap.get(_longest    -    _longest);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
91	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  *  _longest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  *  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest  *  _longest);	  this.lookupMap    =    lookupMap.get(_longest    -    _longest);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
92	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  _longest  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  _longest  +  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest  -  _longest  +  1);	  this.lookupMap    =    lookupMap.get(_longest    -    _longest);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
93	[BUG]  [BUGGY]  super(lookupMap,  _longest);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(lookupMap,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(lookupMap,  _longest);	  public    LookupTranslator(final    CharSequence[][]    lookupMap,    final    int    _longest)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
94	[BUG]  [BUGGY]  this(final  CharSequence[][]  lookupMap,  final  int  _longest)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[][]  lookupMap,  final  int  _longest)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[][]  lookupMap,  final  int  _longest)  {	  public    LookupTranslator(final    CharSequence[][]    lookupMap,    final    int    _longest)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
95	[BUG]  [BUGGY]  this(final  CharSequence[][]  lookupMap,  final  int  _longest,  _longest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[][]  lookupMap,  final  int  _longest,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[][]  lookupMap,  final  int  _longest,  _longest);	  public    LookupTranslator(final    CharSequence[][]    lookupMap,    final    int    _longest)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
96	[BUG]  [BUGGY]  if(_longest  ==  Integer.MIN_VALUE)  {  if(lookupMap!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  if(_longest  ==  Integer.MIN_VALUE)  {  if(lookupMap!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(_longest  ==  Integer.MIN_VALUE)  {  if(lookupMap!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    for(int    i    =    0,    len    =    seq.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
97	[BUG]  [BUGGY]  if(_longest  ==  Integer.MIN_VALUE)  {  if(lookupMap!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  if(_longest  ==  Integer.MIN_VALUE)  {  if(lookupMap!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(_longest  ==  Integer.MIN_VALUE)  {  if(lookupMap!=  null)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  }	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    for(int    i    =    0,    len    =    seq.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
98	[BUG]  [BUGGY]  if(lookupMap  ==  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  if(lookupMap  ==  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(lookupMap  ==  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    for(int    i    =    0,    len    =    seq.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
99	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(0);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(0);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(true);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
100	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
101	[BUG]  [BUGGY]  super(true,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(true,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(true,  null);	  super(false,    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
102	[BUG]  [BUGGY]  super(false,  null,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(false,  null,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  null,  null);	  super(false,    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
103	[BUG]  [BUGGY]  super(false,  null,  _longest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(false,  null,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  null,  _longest);	  super(false,    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
104	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _hortest,  _shortest);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _hortest,  _shortest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _hortest,  _shortest);	  this.lookupMap    =    lookupMap.get(_longest,    _hortest);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
105	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _hortest  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _hortest  +  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _hortest  +  1);	  this.lookupMap    =    lookupMap.get(_longest,    _hortest);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
106	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  true,  _longest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  true,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  true,  _longest);	  this(final    CharSequence[]...    lookupMap,    true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
107	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  true,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  true,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  true,  null);	  this(final    CharSequence[]...    lookupMap,    true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
108	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true,  _longest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true,  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true,  _longest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false,    _longest);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
109	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _longest,  _shortest);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _longest,  _shortest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _longest,  _shortest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false,    _longest);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
110	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _longest  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _longest  +  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _longest  +  1);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false,    _longest);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
111	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _shortest);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _shortest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _shortest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false,    _longest);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
112	[BUG]  [BUGGY]  super(true,  _longest);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  super(true,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(true,  _longest);	  super(false,    _longest);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
113	[BUG]  [BUGGY]  super(false,  _longest,  _shortest);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(false,  _longest,  _shortest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  _longest,  _shortest);	  super(false,    _longest);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
114	[BUG]  [BUGGY]  super(false,  _longest,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(false,  _longest,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  _longest,  null);	  super(false,    _longest);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
115	[BUG]  [BUGGY]  this.lookupMap.put(seq[1],  seq[1]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[1],  seq[1]);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[1],  seq[1]);	  this.lookupMap.put(seq[1],    seq[0]);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
116	[BUG]  [BUGGY]  this(final  CharSequence[][]  lookupMap,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[][]  lookupMap,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[][]  lookupMap,  false);	  public    LookupTranslator(final    CharSequence[][]    lookupMap)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
117	[BUG]  [BUGGY]  this(new  TreeMap  <  CharSequence,  CharSequence>(),  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  TreeMap  <  CharSequence,  CharSequence>(),  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  TreeMap  <  CharSequence,  CharSequence>(),  false);	  this(new    TreeMap    <    CharSequence,    CharSequence>(),    true);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
118	[BUG]  [BUGGY]  this(new  TreeMap  <  CharSequence,  CharSequence>(),  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(new  TreeMap  <  CharSequence,  CharSequence>(),  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  TreeMap  <  CharSequence,  CharSequence>(),  null);	  this(new    TreeMap    <    CharSequence,    CharSequence>(),    true);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
119	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  false,  _longest);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  false,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  false,  _longest);	  this(final    CharSequence[]...    lookupMap,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
120	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  false,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  false,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  false,  null);	  this(final    CharSequence[]...    lookupMap,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
121	[BUG]  [BUGGY]  super(null,  null,  0,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  0,  0);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  0,  0);	  super(null,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
122	[BUG]  [BUGGY]  super(null,  null,  0,  _longest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  0,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  0,  _longest);	  super(null,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
123	[BUG]  [BUGGY]  super(null,  null,  0,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  0,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  0,  null);	  super(null,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
124	[BUG]  [BUGGY]  This.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  This.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  1;  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	This.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  1;	  This.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    0;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
125	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  /  1,  _longest);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  /  1,  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  /  1,  _longest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest    +    1,    _longest);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
126	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1,  _longest  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1,  _longest  +  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1,  _longest  +  1);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest    +    1,    _longest);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
127	[BUG]  [BUGGY]  super(null,  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(null,  Integer.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  Integer.MAX_VALUE);	  super(null,    Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
128	[BUG]  [BUGGY]  super(null,  Long.MAX_VALUE,  _longest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(null,  Long.MAX_VALUE,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  Long.MAX_VALUE,  _longest);	  super(null,    Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
129	[BUG]  [BUGGY]  super(null,  Long.MAX_VALUE,  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(null,  Long.MAX_VALUE,  Integer.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  Long.MAX_VALUE,  Integer.MAX_VALUE);	  super(null,    Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
130	[BUG]  [BUGGY]  super(_longest,  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(_longest,  Long.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(_longest,  Long.MAX_VALUE);	  super(null,    Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
131	[BUG]  [BUGGY]  int  longest  =  Integer.MIN_VALUE  -  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  int  longest  =  Integer.MIN_VALUE  -  1;  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	int  longest  =  Integer.MIN_VALUE  -  1;	  int    longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
132	[BUG]  [BUGGY]  long  longest  =  Integer.MIN_VALUE;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  long  longest  =  Integer.MIN_VALUE;  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	long  longest  =  Integer.MIN_VALUE;	  int    longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
133	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest,  _shortest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest,  _shortest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest,  _shortest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest,    _shortest);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
134	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest,  _length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest,  _length);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest,  _length);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest,    _shortest);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
135	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest,  _longest);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest,  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest,  _longest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest,    _shortest);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
136	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest  +  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest  +  1);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest,    _shortest);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
137	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_shortest,  _longest);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_shortest,  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_shortest,  _longest);	  this.lookupMap    =    lookupMap.get(_shortest);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
138	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  null,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  null,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  null,  null);	  this(final    CharSequence[]...    lookupMap,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
139	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  null,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  null,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  null,  false);	  this(final    CharSequence[]...    lookupMap,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
140	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  null,  _longest);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  null,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  null,  _longest);	  this(final    CharSequence[]...    lookupMap,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
141	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  null,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  null,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  null,  true);	  this(final    CharSequence[]...    lookupMap,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
142	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getValue(),  lookup);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getValue(),  lookup);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  seq[1].getValue(),  lookup);	  this.lookupMap.put(seq[0],    seq[1].getValue());    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
143	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getValue()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getValue()  +  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  seq[1].getValue()  +  1);	  this.lookupMap.put(seq[0],    seq[1].getValue());    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
144	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence[][]>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence[][]>();	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    long    _longest)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
145	[BUG]  [BUGGY]  this(null,  null,  null);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  null,  null);	  this(null,    null);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
146	[BUG]  [BUGGY]  this(null,  null,  _longest);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  null,  _longest);	  this(null,    null);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
147	[BUG]  [BUGGY]  this(null,  null,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  null,  false);	  this(null,    null);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
148	[BUG]  [BUGGY]  this(null,  null,  CharSequence[][]  lookup)  {  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  CharSequence[][]  lookup)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  null,  CharSequence[][]  lookup)  {	  this(null,    CharSequence[][]    lookup)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
149	[BUG]  [BUGGY]  this(false,  CharSequence[][]  lookup)  {  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  this(false,  CharSequence[][]  lookup)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(false,  CharSequence[][]  lookup)  {	  this(null,    CharSequence[][]    lookup)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
150	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookup)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookup)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  lookup)  {	  this(null,    CharSequence[][]    lookup)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
151	[BUG]  [BUGGY]  this(null,  CharSequence[][]  lookup,  _longest)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(null,  CharSequence[][]  lookup,  _longest)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  CharSequence[][]  lookup,  _longest)  {	  this(null,    CharSequence[][]    lookup)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
152	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  final  int  types)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  final  int  types)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  final  int  types)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    final    int    types)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
153	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  final  int  types);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  final  int  types);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  final  int  types);	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    final    int    types)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
154	[BUG]  [BUGGY]  super(_longest,  Longest.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(_longest,  Longest.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(_longest,  Longest.MAX_VALUE);	  super(null,    Longest.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
155	[BUG]  [BUGGY]  super(null,  Longest.MAX_VALUE,  _longest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(null,  Longest.MAX_VALUE,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  Longest.MAX_VALUE,  _longest);	  super(null,    Longest.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
156	[BUG]  [BUGGY]  super(null,  Longest.MAX_VALUE,  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(null,  Longest.MAX_VALUE,  Integer.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  Longest.MAX_VALUE,  Integer.MAX_VALUE);	  super(null,    Longest.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
157	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  lookupMap);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  lookupMap);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  lookupMap);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    false,    lookupMap);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
158	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  lookupMap,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  lookupMap,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  lookupMap,  null);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    false,    lookupMap);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
159	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  lookupMap,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  lookupMap,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  lookupMap,  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    false,    lookupMap);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
160	[BUG]  [BUGGY]  super(null,  _longest,  _shortest);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(null,  _longest,  _shortest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  _longest,  _shortest);	  super(null,    _longest);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
161	[BUG]  [BUGGY]  super(_longest,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(_longest,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(_longest,  null);	  super(null,    _longest);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
162	[BUG]  [BUGGY]  super(null,  _longest,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(null,  _longest,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  _longest,  null);	  super(null,    _longest);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
163	[BUG]  [BUGGY]  this(null,  null,  new  HashMap  <  CharSequence,  CharSequence>(),  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  new  HashMap  <  CharSequence,  CharSequence>(),  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  null,  new  HashMap  <  CharSequence,  CharSequence>(),  false);	  this(null,    new    HashMap    <    CharSequence,    CharSequence>(),    false);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
164	[BUG]  [BUGGY]  this(false,  new  HashMap  <  CharSequence,  CharSequence>(),  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(false,  new  HashMap  <  CharSequence,  CharSequence>(),  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(false,  new  HashMap  <  CharSequence,  CharSequence>(),  false);	  this(null,    new    HashMap    <    CharSequence,    CharSequence>(),    false);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
165	[BUG]  [BUGGY]  this(new  CharSequence[][]  {  _longest,  _shortest  }  );  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  CharSequence[][]  {  _longest,  _shortest  }  );  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  CharSequence[][]  {  _longest,  _shortest  }  );	  this(new    CharSequence[][]    {    _longest,    _longest    }    );    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
166	[BUG]  [BUGGY]  this(new  CharSequence[][]  {  _longest,  _longest,  _shortest  }  );  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  CharSequence[][]  {  _longest,  _longest,  _shortest  }  );  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  CharSequence[][]  {  _longest,  _longest,  _shortest  }  );	  this(new    CharSequence[][]    {    _longest,    _longest    }    );    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
167	[BUG]  [BUGGY]  this(new  CharSequence[][]  {  _longest,  _longest  },  _shortest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(new  CharSequence[][]  {  _longest,  _longest  },  _shortest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  CharSequence[][]  {  _longest,  _longest  },  _shortest);	  this(new    CharSequence[][]    {    _longest,    _longest    }    );    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
168	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  *  _longest  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  *  _longest  -  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest  *  _longest  -  1);	  this.lookupMap    =    lookupMap.get(_longest    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
169	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _shortest  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _shortest  -  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _shortest  -  1);	  this.lookupMap    =    lookupMap.get(_longest    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
170	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  String>();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  String>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  String>();	  this.lookupMap    =    new    HashMap    <    CharSequence,    Object>();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
171	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  Integer>();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  Integer>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  Integer>();	  this.lookupMap    =    new    HashMap    <    CharSequence,    Object>();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
172	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  0;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  0;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  0;	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    int    _longest    =    0;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
173	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  1;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  1;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  1;	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    int    _longest    =    0;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
174	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _lengthest  =  0;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _lengthest  =  0;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _lengthest  =  0;	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    int    _longest    =    0;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
175	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  int  type,  _longest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[]...  lookupMap,  int  type,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  int  type,  _longest);	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    int    type)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
176	[BUG]  [BUGGY]  super(null,  null,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  true);	  super(null,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
177	[BUG]  [BUGGY]  super(null,  null,  false,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  false,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  false,  null);	  super(null,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
178	[BUG]  [BUGGY]  super(null,  null,  false,  _longest);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  false,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  false,  _longest);	  super(null,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
179	[BUG]  [BUGGY]  this(null,  null,  CharSequence[][]  lookup));  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  CharSequence[][]  lookup));  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  null,  CharSequence[][]  lookup));	  this(null,    CharSequence[][]    lookup));    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
180	[BUG]  [BUGGY]  this(false,  CharSequence[][]  lookup));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(false,  CharSequence[][]  lookup));  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(false,  CharSequence[][]  lookup));	  this(null,    CharSequence[][]    lookup));    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
181	[BUG]  [BUGGY]  this(null,  CharSequence[][]  lookup,  null));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(null,  CharSequence[][]  lookup,  null));  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  CharSequence[][]  lookup,  null));	  this(null,    CharSequence[][]    lookup));    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
182	[BUG]  [BUGGY]  this(null,  CharSequence[][]  lookup,  false));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(null,  CharSequence[][]  lookup,  false));  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  CharSequence[][]  lookup,  false));	  this(null,    CharSequence[][]    lookup));    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
183	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  lookup);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  lookup);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  lookup);	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]));    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
184	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(sz[1]));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(sz[1]));  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(sz[1]));	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]));    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
185	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _longest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _longest);	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]));    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
186	[BUG]  [BUGGY]  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
187	[BUG]  [BUGGY]  if(_longest  ==  Integer.MIN_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  if(_longest  ==  Integer.MIN_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(_longest  ==  Integer.MIN_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
188	[BUG]  [BUGGY]  if(_longest  ==  Integer.MAX_VALUE  ||  _longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  if(_longest  ==  Integer.MAX_VALUE  ||  _longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(_longest  ==  Integer.MAX_VALUE  ||  _longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
189	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  /  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  /  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest  /  1);	  this.lookupMap    =    lookupMap.get(_longest    +    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
190	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  +  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  +  2);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest  +  2);	  this.lookupMap    =    lookupMap.get(_longest    +    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
191	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  +  1,  _shortest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  +  1,  _shortest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest  +  1,  _shortest);	  this.lookupMap    =    lookupMap.get(_longest    +    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
192	[BUG]  [BUGGY]  super(true,  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(true,  Integer.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(true,  Integer.MAX_VALUE);	  super(false,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
193	[BUG]  [BUGGY]  super(false,  Integer.MAX_VALUE,  _longest);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(false,  Integer.MAX_VALUE,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  Integer.MAX_VALUE,  _longest);	  super(false,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
194	[BUG]  [BUGGY]  super(false,  Integer.MIN_VALUE,  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(false,  Integer.MIN_VALUE,  Integer.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  Integer.MIN_VALUE,  Integer.MAX_VALUE);	  super(false,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
195	[BUG]  [BUGGY]  super(false,  Integer.MAX_VALUE,  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(false,  Integer.MAX_VALUE,  Long.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  Integer.MAX_VALUE,  Long.MAX_VALUE);	  super(false,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
196	[BUG]  [BUGGY]  super(lookup,  _longest,  _shortest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(lookup,  _longest,  _shortest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(lookup,  _longest,  _shortest);	  super(lookup,    _longest);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
197	[BUG]  [BUGGY]  super(this.lookupMap,  _longest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(this.lookupMap,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(this.lookupMap,  _longest);	  super(lookup,    _longest);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
198	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  char  sz)  {  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[][],char)  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  char  sz)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookup,  final  char  sz)  {	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    char    _longest)    {    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[][],char)	70	None	replace
199	[BUG]  [BUGGY]  final  int  _longest  =  Integer.MAX_VALUE  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  final  int  _longest  =  Integer.MAX_VALUE  +  1;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	final  int  _longest  =  Integer.MAX_VALUE  +  1;	  final    int    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
200	[BUG]  [BUGGY]  final  int  _longest  =  Integer.MAX_VALUE  -  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  final  int  _longest  =  Integer.MAX_VALUE  -  1;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	final  int  _longest  =  Integer.MAX_VALUE  -  1;	  final    int    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
201	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  null,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  null,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  null,  null);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    true,    null);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
202	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  2);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  2);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  seq[1]  +  2);	  this.lookupMap.put(seq[0],    seq[1]    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
203	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  0);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  seq[1]  +  0);	  this.lookupMap.put(seq[0],    seq[1]    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
204	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(_longest,  _longest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(_longest,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(_longest,  _longest);	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
205	[BUG]  [BUGGY]  super(_longest,  _longest);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  super(_longest,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(_longest,  _longest);	  super(lookup);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
206	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  *  1,  _longest);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  *  1,  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  *  1,  _longest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest    +    1,    _longest);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
207	[BUG]  [BUGGY]  this(null,  final  CharSequence[]...  lookupMap,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(null,  final  CharSequence[]...  lookupMap,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  final  CharSequence[]...  lookupMap,  null);	  this(final    CharSequence[]...    lookupMap,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
208	[BUG]  [BUGGY]  this(null,  CharSequence[]...  lookupMap,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(null,  CharSequence[]...  lookupMap,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  CharSequence[]...  lookupMap,  null);	  this(final    CharSequence[]...    lookupMap,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
209	[BUG]  [BUGGY]  this.lookupMap.put(seq[1],  seq[2]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[1],  seq[2]);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[1],  seq[2]);	  this.lookupMap.put(seq[1],    seq[0]);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
210	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  _length)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	add	public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  _length)  {	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    sz)    {    	compilable	timeout	7	1	replace
211	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  _length)  {  timeout  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  _length)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  _length)  {	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    sz)    {    	compilable	timeout	7	1	replace
212	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  seq,  final  int  longest)  {  [CE]  cannot  find  symbol  lookup  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  seq,  final  int  longest)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  seq,  final  int  longest)  {	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    longest)    {    	non-compiled	[CE]  cannot  find  symbol  lookup	79	None	replace
213	[BUG]  [BUGGY]  this(new  CharSequence[][]  {  lookup,  _longest  }  );  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  CharSequence[][]  {  lookup,  _longest  }  );  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  CharSequence[][]  {  lookup,  _longest  }  );	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    longest)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
214	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  long)  {  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  long)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  long)  {	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    longest)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
215	[BUG]  [BUGGY]  super(null,  null);  this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  super(null,  null);  this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null);  this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    super(null,    null);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
216	[BUG]  [BUGGY]  this.lookupMap  =  new  ArrayHashMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  ArrayHashMap  <  CharSequence,  CharSequence>();  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  ArrayHashMap  <  CharSequence,  CharSequence>();	  this.lookupMap    =    new    LinkedHashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
217	[BUG]  [BUGGY]  super(null,  null,  null,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  null,  0);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  null,  0);	  super(null,    null,    null);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
218	[BUG]  [BUGGY]  this(null,  new  CharSequence[][]  {  lookup  }  ));  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  this(null,  new  CharSequence[][]  {  lookup  }  ));  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  new  CharSequence[][]  {  lookup  }  ));	  this(null,    CharSequence[][]    lookup));    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
219	[BUG]  [BUGGY]  this(null,  CharSequence[][]  lookup,  _longest));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(null,  CharSequence[][]  lookup,  _longest));  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  CharSequence[][]  lookup,  _longest));	  this(null,    CharSequence[][]    lookup));    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
220	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookupMap,  final  int  longest)  {  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookupMap,  final  int  longest)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookupMap,  final  int  longest)  {	  public    LookupTranslator(final    CharSequence[][]    lookupMap,    final    int    _longest)    {    	non-compiled	[CE]  incompatible  types	88	None	replace
221	[BUG]  [BUGGY]  public  LookupTranslator(final  int[][]  lookupMap,  final  int  _longest)  {  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  int[][]  lookupMap,  final  int  _longest)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  int[][]  lookupMap,  final  int  _longest)  {	  public    LookupTranslator(final    CharSequence[][]    lookupMap,    final    int    _longest)    {    	non-compiled	[CE]  incompatible  types	88	None	replace
222	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookupMap,  final  int  sz)  {  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookupMap,  final  int  sz)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookupMap,  final  int  sz)  {	  public    LookupTranslator(final    CharSequence[][]    lookupMap,    final    int    _longest)    {    	non-compiled	[CE]  incompatible  types	88	None	replace
223	[BUG]  [BUGGY]  _longest  =  Integer.MAX_VALUE  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  _longest  =  Integer.MAX_VALUE  +  2;  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	_longest  =  Integer.MAX_VALUE  +  2;	  _longest    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
224	[BUG]  [BUGGY]  this(new  char[][]  {  _longest,  _longest  }  );  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  char[][]  {  _longest,  _longest  }  );  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  char[][]  {  _longest,  _longest  }  );	  this(new    CharSequence[][]    {    _longest,    _longest    }    );    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
225	[BUG]  [BUGGY]  this(new  String[][]  {  _longest,  _longest  }  );  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  String[][]  {  _longest,  _longest  }  );  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  String[][]  {  _longest,  _longest  }  );	  this(new    CharSequence[][]    {    _longest,    _longest    }    );    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
226	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  _longest)  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  _longest)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  _longest)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    int    type)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
227	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  sz)  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  sz)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  sz)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    int    type)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
228	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  type)  {  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  type)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  type)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    int    type)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
229	[BUG]  [BUGGY]  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    for(int    i    =    0,    len    =    seq.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
230	[BUG]  [BUGGY]  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  }	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    for(int    i    =    0,    len    =    seq.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
231	[BUG]  [BUGGY]  AssertionError  <  Integer>  lookupMap  =  new  AssertionError  <  Integer>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  AssertionError  <  Integer>  lookupMap  =  new  AssertionError  <  Integer>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	AssertionError  <  Integer>  lookupMap  =  new  AssertionError  <  Integer>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    for(int    i    =    0,    len    =    seq.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
232	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _shortest);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _shortest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]),  _shortest);	  this.lookupMap.put(seq[0],    new    CharSequence(seq[1]));    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
233	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  -  2;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  int  longest  =  Integer.MAX_VALUE  -  2;  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	int  longest  =  Integer.MAX_VALUE  -  2;	  int    longest    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
234	[BUG]  [BUGGY]  this(null,  new  CharSequence[][]  {  }  ));  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  this(null,  new  CharSequence[][]  {  }  ));  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  new  CharSequence[][]  {  }  ));	  this(null,    CharSequence[][]    lookup)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
235	[BUG]  [BUGGY]  _longest  =  Integer.MAX_VALUE  -  2;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  _longest  =  Integer.MAX_VALUE  -  2;  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	_longest  =  Integer.MAX_VALUE  -  2;	  _longest    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
236	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  long  sz)  {  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[][],long)  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  long  sz)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookup,  final  long  sz)  {	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    long    _longest)    {    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[][],long)	71	None	replace
237	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  3;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  3;  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  3;	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    2;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
238	[BUG]  [BUGGY]  super(LookupMap.class,  _longest);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  super(LookupMap.class,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(LookupMap.class,  _longest);	  super(LookupMap.class);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
239	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  _length)  {  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  _length)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  _length)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    int    length)    {    	non-compiled	[CE]  ')'  expected	67	None	replace
240	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  len)  {  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  len)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  len)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    int    length)    {    	non-compiled	[CE]  ')'  expected	67	None	replace
241	[BUG]  [BUGGY]  if(_longest  ==  Integer.MIN_VALUE)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  if(_longest  ==  Integer.MIN_VALUE)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  }  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(_longest  ==  Integer.MIN_VALUE)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  }	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
242	[BUG]  [BUGGY]  super();  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  super();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super();	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
243	[BUG]  [BUGGY]  _longest  =  Integer.MIN_VALUE  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  _longest  =  Integer.MIN_VALUE  +  1;  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	_longest  =  Integer.MIN_VALUE  +  1;	  _longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
244	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  Long.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  Long.MAX_VALUE);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    false,    true);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
245	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
246	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _longest  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _longest  +  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _longest  +  1);	  this.lookupMap    =    lookupMap.get(_longest    +    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
247	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  *  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  *  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest  *  1);	  this.lookupMap    =    lookupMap.get(_longest    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
248	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  1L);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  1L);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest  -  1L);	  this.lookupMap    =    lookupMap.get(_longest    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
249	[BUG]  [BUGGY]  public  LookupTranslator(final  char[]...  lookupMap,  final  int  length)  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  char[]...  lookupMap,  final  int  length)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  char[]...  lookupMap,  final  int  length)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    final    int    length)    {    	non-compiled	[CE]  ')'  expected	89	None	replace
250	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  longest)  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  longest)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  longest)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    final    int    length)    {    	non-compiled	[CE]  ')'  expected	89	None	replace
251	[BUG]  [BUGGY]  public  LookupTranslator(final  int...  lookupMap,  final  int  length)  {  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  int...  lookupMap,  final  int  length)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  int...  lookupMap,  final  int  length)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    final    int    length)    {    	non-compiled	[CE]  ')'  expected	89	None	replace
252	[BUG]  [BUGGY]  super(null,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(null,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  false);	  super(false,    false);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
253	[BUG]  [BUGGY]  super(false,  null,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(false,  null,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  null,  false);	  super(null,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
254	[BUG]  [BUGGY]  public  LookupTranslator(final  char[]...  lookupMap,  final  int  types)  {  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  char[]...  lookupMap,  final  int  types)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  char[]...  lookupMap,  final  int  types)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    final    int    types)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
255	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  2);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest  -  2);	  this.lookupMap    =    lookupMap.get(_longest    -    _longest);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
256	[BUG]  [BUGGY]  int  longest  =  Integer.MIN_VALUE  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  int  longest  =  Integer.MIN_VALUE  +  1;  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	int  longest  =  Integer.MIN_VALUE  +  1;	  int    longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
257	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  new  HashMap  <  CharSequence,  CharSequence>(),  null,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  new  HashMap  <  CharSequence,  CharSequence>(),  null,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  new  HashMap  <  CharSequence,  CharSequence>(),  null,  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    true);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
258	[BUG]  [BUGGY]  int  longest  =  0;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  int  longest  =  0;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	int  longest  =  0;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  int    longest    =    Integer.MAX_VALUE;    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
259	[BUG]  [BUGGY]  super(null,  Long.MAX_VALUE,  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(null,  Long.MAX_VALUE,  Long.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  Long.MAX_VALUE,  Long.MAX_VALUE);	  super(null,    Longest.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
260	[BUG]  [BUGGY]  super(null,  Longest.MAX_VALUE,  Longest.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(null,  Longest.MAX_VALUE,  Longest.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  Longest.MAX_VALUE,  Longest.MAX_VALUE);	  super(null,    Longest.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
261	[BUG]  [BUGGY]  super(this,  _longest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(this,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(this,  _longest);	  super(lookup,    _longest);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
262	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  0L);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  0L);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  0L);	  this.lookupMap    =    lookupMap.get(_longest,    0);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
263	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_shortest  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_shortest  -  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_shortest  -  1);	  this.lookupMap    =    lookupMap.get(_shortest);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
264	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_shortest  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_shortest  +  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_shortest  +  1);	  this.lookupMap    =    lookupMap.get(_shortest);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
265	[BUG]  [BUGGY]  super(null,  null,  _shortest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  _shortest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  _shortest);	  super(null,    null,    _longest);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
266	[BUG]  [BUGGY]  super(null,  null,  _longest  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  _longest  +  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  _longest  +  1);	  super(null,    null,    _longest);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
267	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookupMap,  final  int  length)  {  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookupMap,  final  int  length)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookupMap,  final  int  length)  {	  public    LookupTranslator(final    CharSequence[][]    lookupMap)    {    	non-compiled	[CE]  incompatible  types	64	None	replace
268	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookupMap,  int  length)  {  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookupMap,  int  length)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookupMap,  int  length)  {	  public    LookupTranslator(final    CharSequence[][]    lookupMap)    {    	non-compiled	[CE]  incompatible  types	64	None	replace
269	[BUG]  [BUGGY]  if(lookupMap  ==  null)  {  This.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  0;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  if(lookupMap  ==  null)  {  This.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  0;  }  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(lookupMap  ==  null)  {  This.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  0;  }	  This.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    0;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
270	[BUG]  [BUGGY]  super(null,  null,  0L);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  0L);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  0L);	  super(null,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
271	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(null,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(null,  0);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookup).put(null,  0);	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(null,    null);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
272	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  length);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  length);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    lookupMap);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
273	[BUG]  [BUGGY]  this(null,  final  CharSequence[]...  lookupMap,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(null,  final  CharSequence[]...  lookupMap,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  final  CharSequence[]...  lookupMap,  true);	  this(final    CharSequence[]...    lookupMap,    true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
274	[BUG]  [BUGGY]  this(false,  CharSequence[]...  lookupMap,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(false,  CharSequence[]...  lookupMap,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(false,  CharSequence[]...  lookupMap,  true);	  this(final    CharSequence[]...    lookupMap,    true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
275	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  length);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  length);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    seq);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
276	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length());  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  seq[1].length());	  this.lookupMap.put(sq[0],    seq[1]);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
277	[BUG]  [BUGGY]  super(false,  _longest  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  super(false,  _longest  +  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  _longest  +  1);	  super(false,    _longest);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
278	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap;	  super(lookupMap);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
279	[BUG]  [BUGGY]  this(null,  new  TreeMap  <  CharSequence,  CharSequence>(),  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(null,  new  TreeMap  <  CharSequence,  CharSequence>(),  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  new  TreeMap  <  CharSequence,  CharSequence>(),  true);	  this(new    TreeMap    <    CharSequence,    CharSequence>(),    true);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
280	[BUG]  [BUGGY]  this(null,  final  CharSequence[]...  lookupMap,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(null,  final  CharSequence[]...  lookupMap,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  final  CharSequence[]...  lookupMap,  false);	  this(final    CharSequence[]...    lookupMap,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
281	[BUG]  [BUGGY]  this(false,  final  CharSequence[]...  lookupMap,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(false,  final  CharSequence[]...  lookupMap,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(false,  final  CharSequence[]...  lookupMap,  false);	  this(final    CharSequence[]...    lookupMap,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
282	[BUG]  [BUGGY]  this(false,  CharSequence[]...  lookupMap,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(false,  CharSequence[]...  lookupMap,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(false,  CharSequence[]...  lookupMap,  false);	  this(final    CharSequence[]...    lookupMap,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
283	[BUG]  [BUGGY]  this(null,  CharSequence[][]  lookup,  final  int  longest)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(null,  CharSequence[][]  lookup,  final  int  longest)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  CharSequence[][]  lookup,  final  int  longest)  {	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    longest)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
284	[BUG]  [BUGGY]  _longest  =  0;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  _longest  =  0;  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	_longest  =  0;	  This.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    0;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
285	[BUG]  [BUGGY]  _longest  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  _longest  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	_longest  =  new  HashMap  <  CharSequence,  CharSequence>();	  This.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    0;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
286	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  null,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  null,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  null,  false);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    true,    null);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
287	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  longest)  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  longest)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  longest)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    int    type)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
288	[BUG]  [BUGGY]  super(false,  true,  _longest);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(false,  true,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  true,  _longest);	  super(false,    true);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
289	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _shortest  =  0;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _shortest  =  0;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _shortest  =  0;	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    int    _longest    =    0;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
290	[BUG]  [BUGGY]  super(false,  false,  _longest);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(false,  false,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  false,  _longest);	  super(false,    false);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
291	[BUG]  [BUGGY]  this(final  CharSequence[][]  lookupMap,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[][]  lookupMap,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[][]  lookupMap,  null);	  this(final    CharSequence[]...    lookupMap,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
292	[BUG]  [BUGGY]  this(final  CharSequence[][]...  lookupMap,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[][]...  lookupMap,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[][]...  lookupMap,  null);	  this(final    CharSequence[]...    lookupMap,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
293	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getKey());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getKey());  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  seq[1].getKey());	  this.lookupMap.put(seq[0],    seq[1].getValue());    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
294	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  seq[1].toString());  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  seq[1].toString());	  this.lookupMap.put(seq[0],    seq[1].getValue());    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
295	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getValue(),  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getValue(),  null);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  seq[1].getValue(),  null);	  this.lookupMap.put(seq[0],    seq[1].getValue());    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
296	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  _longest)  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  _longest)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  _longest)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    final    int    length)    {    	non-compiled	[CE]  ')'  expected	89	None	replace
297	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  sz)  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  sz)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  sz)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    final    int    length)    {    	non-compiled	[CE]  ')'  expected	89	None	replace
298	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(siq[1]));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(siq[1]));  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(siq[1]));	  this.lookupMap.put(seq[0],    siq[1]);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
299	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  /  2,  _longest);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  /  2,  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  /  2,  _longest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest    +    1,    _longest);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
300	[BUG]  [BUGGY]  super(null,  null,  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(null,  null,  Integer.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  Integer.MAX_VALUE);	  super(null,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
301	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(0,  _hortest);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(0,  _hortest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(0,  _hortest);	  this.lookupMap    =    lookupMap.get(_longest,    _hortest);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
302	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  1);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  seq,  1);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    seq);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
303	[BUG]  [BUGGY]  if(lookupMap!=  null)  {  public  LookupTranslator(final  CharSequence[][]  lookup)  {  super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  if(lookupMap!=  null)  {  public  LookupTranslator(final  CharSequence[][]  lookup)  {  super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(lookupMap!=  null)  {  public  LookupTranslator(final  CharSequence[][]  lookup)  {  super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    super(null,    null);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
304	[BUG]  [BUGGY]  if(lookupMap!=  null)  {  public  LookupTranslator(final  CharSequence[][]  seq)  {  super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  if(lookupMap!=  null)  {  public  LookupTranslator(final  CharSequence[][]  seq)  {  super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(lookupMap!=  null)  {  public  LookupTranslator(final  CharSequence[][]  seq)  {  super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    super(null,    null);    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
305	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(0,  _shortest);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(0,  _shortest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(0,  _shortest);	  this.lookupMap    =    lookupMap.get(0,    _longest);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
306	[BUG]  [BUGGY]  super(null,  _shortest);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(null,  _shortest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  _shortest);	  super(null,    _longest);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
307	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  new  HashMap  <  CharSequence,  CharSequence>(),  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  new  HashMap  <  CharSequence,  CharSequence>(),  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  new  HashMap  <  CharSequence,  CharSequence>(),  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    true);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
308	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  0,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  0,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  0,  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    true);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
309	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[0]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  seq[0]);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  seq[0]);	  this.lookupMap.put(seq[1],    seq[0]);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
310	[BUG]  [BUGGY]  if(lookup!=  null)  {  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  if(lookup!=  null)  {  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(lookup!=  null)  {  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  }	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
311	[BUG]  [BUGGY]  if(lookup  ==  null)  {  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  if(lookup  ==  null)  {  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(lookup  ==  null)  {  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  }	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
312	[BUG]  [BUGGY]  boolean  longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  boolean  longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	boolean  longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  int    longest    =    Integer.MAX_VALUE;    this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
313	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  _length)  {  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  _length)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  _length)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap,    final    int    types)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
314	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  false,  true);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  false,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  false,  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    false);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
315	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  seq[1].length);	  this.lookupMap.put(sq[0],    seq[1]);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
316	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  sq[1]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  sq[1]);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  sq[1]);	  this.lookupMap.put(sq[0],    seq[1]);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
317	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null,  _longest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null,  _longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null,  _longest);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    lookupMap,    null);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
318	[BUG]  [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(false);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(false);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>(false);	  this.lookupMap    =    new    TreeMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
319	[BUG]  [BUGGY]  this(final  CharSequence[][]...  lookupMap,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[][]...  lookupMap,  false);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[][]...  lookupMap,  false);	  this(final    CharSequence[]...    lookupMap,    true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
320	[BUG]  [BUGGY]  this(final  CharSequence[][]  lookupMap,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[][]  lookupMap,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[][]  lookupMap,  true);	  this(final    CharSequence[]...    lookupMap,    true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
321	[BUG]  [BUGGY]  this(new  CharSequence[][]  {  _longest,  _length  }  );  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(new  CharSequence[][]  {  _longest,  _length  }  );  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  CharSequence[][]  {  _longest,  _length  }  );	  this(new    CharSequence[][]    {    _longest,    _longest    }    );    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
322	[BUG]  [BUGGY]  if(seq[i]!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  if(seq[i]!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(seq[i]!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    for(int    i    =    0,    len    =    seq.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
323	[BUG]  [BUGGY]  if(seq[i]  ==  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  if(seq[i]  ==  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(seq[i]  ==  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    for(int    i    =    0,    len    =    seq.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
324	[BUG]  [BUGGY]  if(seq[i]!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  if(seq[i]!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(seq[i]!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    for(int    i    =    0,    len    =    seq.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
325	[BUG]  [BUGGY]  if(seq[i]!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]        [BUGGY]  if(seq[i]!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(seq[i]!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    for(int    i    =    0,    len    =    seq.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
326	[BUG]  [BUGGY]  this(null,  new  HashMap  <  CharSequence,  CharSequence>(),  false,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(null,  new  HashMap  <  CharSequence,  CharSequence>(),  false,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  new  HashMap  <  CharSequence,  CharSequence>(),  false,  null);	  this(null,    new    HashMap    <    CharSequence,    CharSequence>(),    false);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
327	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  -  _shortest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  -  _shortest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  -  _shortest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_shortest);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
328	[BUG]  [BUGGY]  this(false,  null);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(false,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(false,  null);	  this(null,    null);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
329	[BUG]  [BUGGY]  this(null,  null,  0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  0);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  null,  0);	  this(null,    null);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
330	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  long  longest)  {  [CE]  final  parameter  longest  may  not  be  assigned  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  long  longest)  {  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookup,  final  long  longest)  {	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    long    _longest)    {    	non-compiled	[CE]  final  parameter  longest  may  not  be  assigned	71	None	replace
331	[BUG]  [BUGGY]  super(_longest,  lookup.length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(_longest,  lookup.length);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(_longest,  lookup.length);	  super(lookup,    _longest);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
332	[BUG]  [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  int  _longest  =  Integer.MAX_VALUE;  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	int  _longest  =  Integer.MAX_VALUE;	  if(lookupMap!=    null)    {    if(_longest    ==    Integer.MAX_VALUE)    {    lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
333	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_length,  _longest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_length,  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_length,  _longest);	  this.lookupMap    =    lookupMap.get(_longest,    _length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
334	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _length  -  2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _length  -  2);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _length  -  2);	  this.lookupMap    =    lookupMap.get(_longest,    _length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
335	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  /  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  /  1);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  /  1);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest    +    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
336	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  lookupMap,  longest);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  lookupMap,  longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  lookupMap,  longest);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    false,    lookupMap);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
337	[BUG]  [BUGGY]  this(null,  CharSequence[][]  lookup,  null);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  this(null,  CharSequence[][]  lookup,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  CharSequence[][]  lookup,  null);	  this(null,    CharSequence[][]    lookup)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
338	[BUG]  [BUGGY]  final  HashMap  <  CharSequence,  CharSequence>  lookup  =  lookupMap.get(null);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  final  HashMap  <  CharSequence,  CharSequence>  lookup  =  lookupMap.get(null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	final  HashMap  <  CharSequence,  CharSequence>  lookup  =  lookupMap.get(null);	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(null,    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
339	[BUG]  [BUGGY]  final  HashMap  <  CharSequence,  CharSequence>  lookup  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  final  HashMap  <  CharSequence,  CharSequence>  lookup  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	final  HashMap  <  CharSequence,  CharSequence>  lookup  =  new  HashMap  <  CharSequence,  CharSequence>();	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(null,    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
340	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  0,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  0,  null);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  0,  null);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null,    null);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
341	[BUG]  [BUGGY]  super(false,  _shortest);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  super(false,  _shortest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  _shortest);	  super(false,    _longest);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
342	[BUG]  [BUGGY]  this(final  CharSequence[][]...  lookupMap,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(final  CharSequence[][]...  lookupMap,  true);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[][]...  lookupMap,  true);	  this(final    CharSequence[]...    lookupMap,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
343	[BUG]  [BUGGY]  super(LookupMap.class,  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  super(LookupMap.class,  Long.MAX_VALUE);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(LookupMap.class,  Long.MAX_VALUE);	  super(LookupMap.class);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
344	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  Object>(_longest);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  Object>(_longest);  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  Object>(_longest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    Object>();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
345	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  super(this.lookupMap);  }  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  super(this.lookupMap);  }  [BUGGY]      lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookup)  {  super(this.lookupMap);  }	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    super(lookup);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
346	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  _longest);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  _longest);  [BUGGY]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  seq[1]  +  _longest);	  this.lookupMap.put(seq[0],    seq[1]    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
