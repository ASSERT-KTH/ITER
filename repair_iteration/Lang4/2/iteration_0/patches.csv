bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>());  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]    [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>());  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>());	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]    [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null);	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]    [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  false);	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true);  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]    [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  true);	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionError  [CONTEXT]    [BUGGY]    [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	  	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  <identifier>  expected	3	None	replace
6	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]    [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();		non-compiled	[CE]  illegal  start  of  type	4	None	add
7	[BUG]  [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]    [BUGGY]    this.lookupMap.put(seq[0],  seq[1]);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    this.lookupMap.put(seq[0],  seq[1]);		non-compiled	[CE]  illegal  start  of  type	4	None	add
8	[BUG]  [BUGGY]    _longest  =  Integer.MAX_VALUE;  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]    [BUGGY]    _longest  =  Integer.MAX_VALUE;  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    _longest  =  Integer.MAX_VALUE;		non-compiled	[CE]  <identifier>  expected	4	None	add
9	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest);  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]    [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest);		non-compiled	[CE]  illegal  start  of  type	4	None	add
10	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false);  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]    [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false);		non-compiled	[CE]  illegal  start  of  type	4	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]    [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	add	public  LookupTranslator(final  CharSequence[][]  lookup)  {	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	compilable	  [FE]  AssertionError  	3	1	replace
12	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]    [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookup)  {	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	compilable	  [FE]  AssertionError  	3	1	replace
13	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  _longest)  {  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[][],int)  [FE]      AssertionError  [CONTEXT]    [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  _longest)  {  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  _longest)  {	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[][],int)	3	None	replace
14	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap)  {  [CE]  incompatible  types  [FE]        AssertionError  [CONTEXT]    [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap)  {  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap)  {	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  incompatible  types	3	None	replace
15	[BUG]  [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  0;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]    [BUGGY]    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  0;  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  0;		non-compiled	[CE]  illegal  start  of  type	4	None	add
16	[BUG]  [BUGGY]    this.lookupMap  =  lookupMap.get(_longest);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]    [BUGGY]    this.lookupMap  =  lookupMap.get(_longest);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    this.lookupMap  =  lookupMap.get(_longest);		non-compiled	[CE]  illegal  start  of  type	4	None	add
17	[BUG]  [BUGGY]  super(false);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]    [BUGGY]  super(false);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false);	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  super(true);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]    [BUGGY]  super(true);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(true);	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  super(null);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]    [BUGGY]  super(null);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null);	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  super(null,  null);  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]    [BUGGY]  super(null,  null);  [BUGGY]  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null);	public  LookupTranslator(final  CharSequence[]...  lookup)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]    int  longest  =  Integer.MAX_VALUE;  [CE]  variable  longest  is  already  defined  in  class  LookupTranslator  [FE]    AssertionError  [CONTEXT]    [BUGGY]    int  longest  =  Integer.MAX_VALUE;  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    int  longest  =  Integer.MAX_VALUE;		non-compiled	[CE]  variable  longest  is  already  defined  in  class  LookupTranslator	4	None	add
22	[BUG]  [BUGGY]    this.lookupMap  =  lookupMap.get(_longest,  _longest);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]    [BUGGY]    this.lookupMap  =  lookupMap.get(_longest,  _longest);  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	    this.lookupMap  =  lookupMap.get(_longest,  _longest);		non-compiled	[CE]  illegal  start  of  type	4	None	add
