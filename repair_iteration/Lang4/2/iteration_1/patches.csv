bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  _longest  =  Integer.MAX_VALUE;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  final  int  _longest  =  Integer.MAX_VALUE;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	final  int  _longest  =  Integer.MAX_VALUE;	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  Object>();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  Object>();  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  Object>();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  false);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(final  CharSequence[]...  lookupMap,  false);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  false);	  public    LookupTranslator(final    CharSequence[]...    lookupMap)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
4	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(final  CharSequence[]...  lookupMap,  null);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  null);	  public    LookupTranslator(final    CharSequence[]...    lookupMap)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
5	[BUG]  [BUGGY]  this(final  CharSequence[]...  lookupMap,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  this(final  CharSequence[]...  lookupMap,  true);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(final  CharSequence[]...  lookupMap,  true);	  public    LookupTranslator(final    CharSequence[]...    lookupMap)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
6	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  types)  {  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  types)  {  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  types)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
7	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  sz)  {  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[][],int)  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  sz)  {  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  sz)  {	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    _longest)    {    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[][],int)	13	None	replace
8	[BUG]  [BUGGY]  this(new  CharSequence[][]  {  _longest,  _longest  }  );  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(new  CharSequence[][]  {  _longest,  _longest  }  );  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  CharSequence[][]  {  _longest,  _longest  }  );	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    _longest)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  super(lookup,  _longest);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  super(lookup,  _longest);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(lookup,  _longest);	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    _longest)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  lookupMap);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  lookupMap);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  lookupMap);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  lookupMap,  null);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  seq);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  seq);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _shortest);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _shortest);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _shortest);	      this.lookupMap    =    lookupMap.get(_longest,    _longest);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
15	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  0);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  0);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  0);	      this.lookupMap    =    lookupMap.get(_longest,    _longest);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
16	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _length);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _length);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _length);	      this.lookupMap    =    lookupMap.get(_longest,    _longest);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
17	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(0,  _longest);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  lookupMap.get(0,  _longest);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(0,  _longest);	      this.lookupMap    =    lookupMap.get(_longest,    _longest);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
18	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
19	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
20	[BUG]  [BUGGY]  _longest  =  Integer.MIN_VALUE;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  _longest  =  Integer.MIN_VALUE;  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	_longest  =  Integer.MIN_VALUE;	      _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
21	[BUG]  [BUGGY]  _longest  =  Integer.MAX_VALUE  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  _longest  =  Integer.MAX_VALUE  +  1;  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	_longest  =  Integer.MAX_VALUE  +  1;	      _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
22	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  null);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  true,  null);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    true);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap.put(seq[0],  seq[1]  +  1);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  seq[1]  +  1);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  this.lookupMap.put(sq[0],  seq[1]);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap.put(sq[0],  seq[1]);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(sq[0],  seq[1]);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  super(null,  _longest);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  super(null,  _longest);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  _longest);	  super(null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
26	[BUG]  [BUGGY]  super(lookup);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  super(lookup);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(lookup);	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
27	[BUG]  [BUGGY]  super(false,  _longest);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  super(false,  _longest);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  _longest);	  super(false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
28	[BUG]  [BUGGY]  super(false,  null);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  super(false,  null);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  null);	  super(false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
29	[BUG]  [BUGGY]  super(false,  true);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  super(false,  true);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  true);	  super(false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
30	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  -  1;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  int  longest  =  Integer.MAX_VALUE  -  1;  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	int  longest  =  Integer.MAX_VALUE  -  1;	      int    longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
31	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  +  1;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  int  longest  =  Integer.MAX_VALUE  +  1;  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	int  longest  =  Integer.MAX_VALUE  +  1;	      int    longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
32	[BUG]  [BUGGY]  int  longest  =  Integer.MIN_VALUE;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  int  longest  =  Integer.MIN_VALUE;  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	int  longest  =  Integer.MIN_VALUE;	      int    longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
33	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  +  1);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest  +  1);	      this.lookupMap    =    lookupMap.get(_longest);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
34	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  1);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest  -  1);	      this.lookupMap    =    lookupMap.get(_longest);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
35	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  _longest);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  _longest);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest  -  _longest);	      this.lookupMap    =    lookupMap.get(_longest);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
36	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest,  _shortest);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1,  _longest);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1,  _longest);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_longest  +  1,  _longest);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
39	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  1;  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  1;	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
40	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
41	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  2;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  2;  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  2;	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
42	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  null);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  null);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  null);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
43	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  lookupMap);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  lookupMap);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  lookupMap);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  true);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  false,  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
45	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
46	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MAX_VALUE;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
47	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
48	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MIN_VALUE;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MIN_VALUE;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
49	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(null,  null);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(null,  null);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public    LookupTranslator(final    CharSequence[][]    lookup)    {    ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(null,  null);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
50	[BUG]  [BUGGY]  super(false,  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  super(false,  Integer.MAX_VALUE);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  Integer.MAX_VALUE);	  super(true);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
51	[BUG]  [BUGGY]  super(false,  false);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  super(false,  false);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  false);	  super(true);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
52	[BUG]  [BUGGY]  super(null,  null,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  super(null,  null,  null);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  null);	  super(null,    null);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
53	[BUG]  [BUGGY]  super(null,  null,  _longest);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  super(null,  null,  _longest);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  _longest);	  super(null,    null);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
54	[BUG]  [BUGGY]  super(null,  null,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  super(null,  null,  false);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  false);	  super(null,    null);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
55	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  false);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  false);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  false);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
56	[BUG]  [BUGGY]  this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
57	[BUG]  [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  this(null,  CharSequence[][]  lookup)  {  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  this(null,  CharSequence[][]  lookup)  {  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  CharSequence[][]  lookup)  {	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
59	[BUG]  [BUGGY]  this(null,  CharSequence[][]  lookup));  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  this(null,  CharSequence[][]  lookup));  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  CharSequence[][]  lookup));	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
60	[BUG]  [BUGGY]  this(null,  null);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this(null,  null);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  null);	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
61	[BUG]  [BUGGY]  super(false,  Integer.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  super(false,  Integer.MIN_VALUE);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(false,  Integer.MIN_VALUE);	  super(true);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
62	[BUG]  [BUGGY]  if(lookupMap!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  if(lookupMap!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(lookupMap!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
63	[BUG]  [BUGGY]  if(lookupMap!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  if(lookupMap!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	if(lookupMap!=  null)  {  if(_longest  ==  Integer.MAX_VALUE)  {  lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  for(int  i  =  0,  len  =  seq.length;  i  <  len;  ++i)  {	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
64	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookupMap)  {  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookupMap)  {  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookupMap)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap)    {    	non-compiled	[CE]  incompatible  types	14	None	replace
65	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  type)  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  type)  {  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  type)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
66	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  types)  {  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  types)  {  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  types)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
67	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  length)  {  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  length)  {  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  int  length)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
68	[BUG]  [BUGGY]  super(null,  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  super(null,  Long.MAX_VALUE);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  Long.MAX_VALUE);	  super(null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
69	[BUG]  [BUGGY]  _longest  =  Integer.MAX_VALUE  -  1;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  _longest  =  Integer.MAX_VALUE  -  1;  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	_longest  =  Integer.MAX_VALUE  -  1;	      _longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
70	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  char  _longest)  {  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[][],char)  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  char  _longest)  {  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookup,  final  char  _longest)  {	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    _longest)    {    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[][],char)	13	None	replace
71	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  long  _longest)  {  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[][],long)  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  long  _longest)  {  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookup,  final  long  _longest)  {	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    _longest)    {    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[][],long)	13	None	replace
72	[BUG]  [BUGGY]  this.lookupMap.put(seq[1],  seq[0]);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap.put(seq[1],  seq[0]);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[1],  seq[0]);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
73	[BUG]  [BUGGY]  this(null,  new  HashMap  <  CharSequence,  CharSequence>(),  true);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(null,  new  HashMap  <  CharSequence,  CharSequence>(),  true);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  new  HashMap  <  CharSequence,  CharSequence>(),  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    true);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
74	[BUG]  [BUGGY]  this(null,  new  HashMap  <  CharSequence,  CharSequence>(),  false);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(null,  new  HashMap  <  CharSequence,  CharSequence>(),  false);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(null,  new  HashMap  <  CharSequence,  CharSequence>(),  false);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
75	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  0;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  0;  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public    LookupTranslator(final    CharSequence[][]    lookup)    {    this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  int  _longest  =  0;	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
76	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  super(lookup);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  super(lookup);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public    LookupTranslator(final    CharSequence[][]    lookup)    {    super(lookup);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
77	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_shortest);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  lookupMap.get(_shortest);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_shortest);	      this.lookupMap    =    lookupMap.get(_longest);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
78	[BUG]  [BUGGY]  super(null,  null,  0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  super(null,  null,  0);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  null,  0);	  super(null,    null);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
79	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  longest)  {  [CE]  final  parameter  longest  may  not  be  assigned  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  longest)  {  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookup,  final  int  longest)  {	  public    LookupTranslator(final    CharSequence[][]    lookup,    final    int    _longest)    {    	non-compiled	[CE]  final  parameter  longest  may  not  be  assigned	13	None	replace
80	[BUG]  [BUGGY]  super(lookupMap);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  super(lookupMap);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(lookupMap);	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
81	[BUG]  [BUGGY]  super(LookupMap.class);  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  super(LookupMap.class);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(LookupMap.class);	  public    LookupTranslator(final    CharSequence[][]    lookup)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
82	[BUG]  [BUGGY]  This.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  0;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  This.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  0;  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	This.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  _longest  =  0;	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    _longest    =    0;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
83	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(_shortest);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(_longest);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
84	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookup)  {  super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public    LookupTranslator(final    CharSequence[][]    lookup)    {    super(null,  null);  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
85	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap.put(seq[0],  new  CharSequence(seq[1]));  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  new  CharSequence(seq[1]));	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
86	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getValue());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].getValue());  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  seq[1].getValue());	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
87	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  siq[1]);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap.put(seq[0],  siq[1]);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap.put(seq[0],  siq[1]);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
88	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookupMap,  final  int  _longest)  {  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[][]  lookupMap,  final  int  _longest)  {  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[][]  lookupMap,  final  int  _longest)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap)    {    	non-compiled	[CE]  incompatible  types	14	None	replace
89	[BUG]  [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  length)  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  length)  {  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	public  LookupTranslator(final  CharSequence[]...  lookupMap,  final  int  length)  {	  public    LookupTranslator(final    CharSequence[]...    lookupMap)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
90	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  int  longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	int  longest  =  Integer.MAX_VALUE;  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
91	[BUG]  [BUGGY]  this(new  TreeMap  <  CharSequence,  CharSequence>(),  true);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(new  TreeMap  <  CharSequence,  CharSequence>(),  true);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  TreeMap  <  CharSequence,  CharSequence>(),  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    true);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
92	[BUG]  [BUGGY]  super(null,  Longest.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  super(null,  Longest.MAX_VALUE);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	super(null,  Longest.MAX_VALUE);	  super(null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
93	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _hortest);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _hortest);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _hortest);	      this.lookupMap    =    lookupMap.get(_longest,    _longest);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
94	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _longest);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _longest);  [BUGGY]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  _longest);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
95	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  null);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  null);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  null);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
96	[BUG]  [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  true);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  true);  [BUGGY]    lookupMap  =  new  HashMap<CharSequence,  CharSequence>();  int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	45	45	1	replace	this(new  HashMap  <  CharSequence,  CharSequence>(),  null,  true);	  this(new    HashMap    <    CharSequence,    CharSequence>(),    null);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
