bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MIN_VALUE  -  1;	  int    _shortest    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	7	1	replace
2	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  [FE]  AssertionError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MIN_VALUE  -  1;	  int    _shortest    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	7	1	replace
3	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MIN_VALUE  +  1;	  int    _shortest    =    Integer.MIN_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
4	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MIN_VALUE  +  1;	  int    _shortest    =    Integer.MIN_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
5	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
6	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
7	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    int  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	10	None	add
8	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	10	None	add
9	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	10	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  /  1;	  int    _shortest    =    Integer.MAX_VALUE    +    1;    	compilable	  [FE]  AssertionError  	9	1	replace
11	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  [FE]  AssertionError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  /  1;	  int    _shortest    =    Integer.MAX_VALUE    +    1;    	compilable	  [FE]  AssertionError  	9	1	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  -  2;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	13	1	replace
13	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  -  2;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	13	1	replace
14	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sz[0],  seq[1]);  [CE]  cannot  find  symbol  sz  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sz[0],  seq[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sz[0],  seq[1]);	      ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sz	4	None	replace
15	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sq[0],  seq[1]);  [CE]  cannot  find  symbol  sq  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sq[0],  seq[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sq[0],  seq[1]);	      ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	4	None	replace
16	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sq[0],  sq[1]);  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sq[0],  sq[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sq[0],  sq[1]);	      ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	4	None	replace
17	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(seq[0]);  [CE]  cannot  find  symbol  seq  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap  =  lookupMap.get(seq[0]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  lookupMap.get(seq[0]);	      this.lookupMap    =    lookupMap.get(seq);    	non-compiled	[CE]  cannot  find  symbol  seq	16	None	replace
18	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(seq[1]);  [CE]  cannot  find  symbol  seq  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap  =  lookupMap.get(seq[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  lookupMap.get(seq[1]);	      this.lookupMap    =    lookupMap.get(seq);    	non-compiled	[CE]  cannot  find  symbol  seq	16	None	replace
19	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest);  [CE]  cannot  find  symbol  _longest  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap  =  lookupMap.get(_longest);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  lookupMap.get(_longest);	      this.lookupMap    =    lookupMap.get(seq);    	non-compiled	[CE]  cannot  find  symbol  _longest	16	None	replace
20	[BUG]  [BUGGY]  int  longest  =  lookupMap.size();  [CE]  cannot  find  symbol  _shortest  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  longest  =  lookupMap.size();  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  lookupMap.size();	      int    longest    =    this.lookupMap.size();    	non-compiled	[CE]  cannot  find  symbol  _shortest	14	None	replace
21	[BUG]  [BUGGY]  int  longest  =  this.lookupMap.size()  -  1;  [CE]  cannot  find  symbol  _shortest  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  longest  =  this.lookupMap.size()  -  1;  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  this.lookupMap.size()  -  1;	      int    longest    =    this.lookupMap.size();    	non-compiled	[CE]  cannot  find  symbol  _shortest	14	None	replace
22	[BUG]  [BUGGY]  int  longest  =  this.lookupMap.size()  -  2;  [CE]  cannot  find  symbol  _shortest  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  longest  =  this.lookupMap.size()  -  2;  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  this.lookupMap.size()  -  2;	      int    longest    =    this.lookupMap.size();    	non-compiled	[CE]  cannot  find  symbol  _shortest	14	None	replace
23	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  int  _shortest  =  Integer.MIN_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  int  _shortest  =  Integer.MIN_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE;    int  _shortest  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	6	None	add
24	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  Integer  _shortest  =  Integer.MIN_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  Integer  _shortest  =  Integer.MIN_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE;    Integer  _shortest  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	6	None	add
25	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MIN_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MIN_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE;    _shortest  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	6	None	add
26	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  Int  _shortest  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  Int  _shortest  =  Integer.MIN_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE;    Int  _shortest  =  Integer.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
27	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  -  1;  [CE]  cannot  find  symbol  _shortest  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  longest  =  Integer.MAX_VALUE  -  1;  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  Integer.MAX_VALUE  -  1;	      int    longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _shortest	15	None	replace
28	[BUG]  [BUGGY]  int  longest  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  _shortest  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  longest  =  Integer.MIN_VALUE;  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  Integer.MIN_VALUE;	      int    longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _shortest	15	None	replace
29	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  +  1;  [CE]  cannot  find  symbol  _shortest  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  longest  =  Integer.MAX_VALUE  +  1;  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  Integer.MAX_VALUE  +  1;	      int    longest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _shortest	15	None	replace
30	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  1;  int  _shortest  =  Integer.MAX_VALUE  +  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  1;  int  _shortest  =  Integer.MAX_VALUE  +  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    +    1;    int  _shortest  =  Integer.MAX_VALUE  +  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	8	None	add
31	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  1;  Integer  _shortest  =  Integer.MAX_VALUE  +  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  1;  Integer  _shortest  =  Integer.MAX_VALUE  +  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    +    1;    Integer  _shortest  =  Integer.MAX_VALUE  +  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	8	None	add
32	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  1;  int  _shortest  =  Integer.MIN_VALUE  +  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  1;  int  _shortest  =  Integer.MIN_VALUE  +  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    +    1;    int  _shortest  =  Integer.MIN_VALUE  +  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	8	None	add
33	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  1;  _shortest  =  Integer.MAX_VALUE  +  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  1;  _shortest  =  Integer.MAX_VALUE  +  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    +    1;    _shortest  =  Integer.MAX_VALUE  +  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	8	None	add
34	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  seq[1]);  [CE]  cannot  find  symbol  sz  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  seq[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  seq[1]);	      ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(seq[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  sz	5	None	replace
35	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  sz);  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  sz);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  sz);	      ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(seq[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  sq	5	None	replace
36	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  sz);  [CE]  cannot  find  symbol  sz  [FE]                    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  sz);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  sz);	      ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(seq[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  sz	5	None	replace
37	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  seq[1);  [CE]  ']'  expected  [FE]                      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  seq[1);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  seq[1);	      ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(seq[0],    sz);    	non-compiled	[CE]  ']'  expected	5	None	replace
38	[BUG]  [BUGGY]  int  sz  =  this.lookupMap.size()  -  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  sz  =  this.lookupMap.size()  -  1;  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  sz  =  this.lookupMap.size()  -  1;	      int    sz    =    this.lookupMap.size();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	18	None	replace
39	[BUG]  [BUGGY]  int  sz  =  lookupMap.size();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  sz  =  lookupMap.size();  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  sz  =  lookupMap.size();	      int    sz    =    this.lookupMap.size();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	18	None	replace
40	[BUG]  [BUGGY]  int  sz  =  this.lookupMap.size()  +  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  sz  =  this.lookupMap.size()  +  1;  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  sz  =  this.lookupMap.size()  +  1;	      int    sz    =    this.lookupMap.size();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	18	None	replace
41	[BUG]  [BUGGY]  int  longest  =  lookupMap.get(seq[0].length());  [CE]  cannot  find  symbol  seq  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  longest  =  lookupMap.get(seq[0].length());  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  lookupMap.get(seq[0].length());	      int    longest    =    this.lookupMap.get(seq[0].length());    	non-compiled	[CE]  cannot  find  symbol  seq	17	None	replace
42	[BUG]  [BUGGY]  int  longest  =  this.lookupMap.get(seq[0].length()  -  1);  [CE]  cannot  find  symbol  seq  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  longest  =  this.lookupMap.get(seq[0].length()  -  1);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  this.lookupMap.get(seq[0].length()  -  1);	      int    longest    =    this.lookupMap.get(seq[0].length());    	non-compiled	[CE]  cannot  find  symbol  seq	17	None	replace
43	[BUG]  [BUGGY]  int  longest  =  this.lookupMap.get(sq[0].length());  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  longest  =  this.lookupMap.get(sq[0].length());  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  this.lookupMap.get(sq[0].length());	      int    longest    =    this.lookupMap.get(seq[0].length());    	non-compiled	[CE]  cannot  find  symbol  sq	17	None	replace
44	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][])  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][])	1	None	replace
45	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [CE]  cannot  find  symbol  _shortest  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(1);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol  _shortest	1	None	replace
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
47	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
49	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
51	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
53	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	11	1	replace
54	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  seq[1]);  [CE]  cannot  find  symbol  sq  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  seq[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  seq[1]);	      ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	3	None	replace
55	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  sq[1]);  [CE]  cannot  find  symbol  sq  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  sq[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  sq[1]);	      ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	3	None	replace
56	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  int  _shortest  =  Integer.MAX_VALUE  -  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  int  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    1;    int  _shortest  =  Integer.MAX_VALUE  -  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	add
57	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  Integer  _shortest  =  Integer.MAX_VALUE  -  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  Integer  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    1;    Integer  _shortest  =  Integer.MAX_VALUE  -  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	add
58	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  int  _shortest  =  Integer.MIN_VALUE  -  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  int  _shortest  =  Integer.MIN_VALUE  -  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    1;    int  _shortest  =  Integer.MIN_VALUE  -  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	add
59	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  _shortest  =  Integer.MAX_VALUE  -  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    1;    _shortest  =  Integer.MAX_VALUE  -  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	add
60	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true);  [CE]  no  suitable  constructor  found  for  HashMap(boolean)  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(boolean)	19	None	replace
61	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup);  [CE]  no  suitable  constructor  found  for  HashMap(boolean,CharSequence[][])  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(boolean,CharSequence[][])	19	None	replace
62	[BUG]  [BUGGY]  this.lookupMap.put(sq[0],  seq[1]);  [CE]  cannot  find  symbol  sq  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap.put(sq[0],  seq[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(sq[0],  seq[1]);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	2	None	replace
63	[BUG]  [BUGGY]  this.lookupMap.put(sz[0],  seq[1]);  [CE]  cannot  find  symbol  sz  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap.put(sz[0],  seq[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(sz[0],  seq[1]);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sz	2	None	replace
64	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _seq[1]);  [CE]  cannot  find  symbol  seq  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap.put(seq[0],  _seq[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(seq[0],  _seq[1]);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	2	None	replace
65	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  lookup[1]);  [CE]  cannot  find  symbol  seq  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap.put(seq[0],  lookup[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(seq[0],  lookup[1]);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	2	None	replace
66	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  sz);  [CE]  cannot  find  symbol  seq  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap.put(seq[0],  sz);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(seq[0],  sz);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	2	None	replace
67	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  seq);  [CE]  cannot  find  symbol  sz  [FE]                AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  seq);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  seq);	      ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(seq[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  sz	5	None	replace
68	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  sz[1]);  [CE]  cannot  find  symbol  seq  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  sz[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  sz[1]);	      ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	3	None	replace
69	[BUG]  [BUGGY]  int  longest  =  this.lookupMap.get(seq[1].length());  [CE]  cannot  find  symbol  seq  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  longest  =  this.lookupMap.get(seq[1].length());  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  this.lookupMap.get(seq[1].length());	      int    longest    =    this.lookupMap.get(seq[0].length());    	non-compiled	[CE]  cannot  find  symbol  seq	17	None	replace
70	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  int  _shortest  =  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  int  _shortest  =  Integer.MAX_VALUE;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE;    int  _shortest  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	6	None	add
71	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(seq[0],  sz[1]);  [CE]  cannot  find  symbol  seq  [FE]              AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(seq[0],  sz[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookup).put(seq[0],  sz[1]);	      ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	4	None	replace
72	[BUG]  [BUGGY]  this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  LinkedHashMap  <  CharSequence,  CharSequence>();	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
73	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [CE]  cannot  find  symbol  _shortest  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(8);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol  _shortest	1	None	replace
74	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  siq[1]);  [CE]  cannot  find  symbol  seq  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap.put(seq[0],  siq[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(seq[0],  siq[1]);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	2	None	replace
75	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length);  [CE]  cannot  find  symbol  seq  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(seq[0],  seq[1].length);	      this.lookupMap.put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	2	None	replace
76	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(null);  [CE]  cannot  find  symbol  _shortest  [FE]          AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(null);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(null);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false);    	non-compiled	[CE]  cannot  find  symbol  _shortest	19	None	replace
77	[BUG]  [BUGGY]  int  sz  =  this.lookupMap.size()  -  2;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  sz  =  this.lookupMap.size()  -  2;  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  sz  =  this.lookupMap.size()  -  2;	      int    sz    =    this.lookupMap.size();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	18	None	replace
78	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  1;  int  _shortest  =  Integer.MAX_VALUE  +  2;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  1;  int  _shortest  =  Integer.MAX_VALUE  +  2;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    +    1;    int  _shortest  =  Integer.MAX_VALUE  +  2;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	8	None	add
79	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  seq  [FE]            AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(seq[0],  seq[1]);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(seq[0],  seq[1]);	      ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	3	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  *  1;	  int    _shortest    =    Integer.MAX_VALUE    +    1;    	compilable	  [FE]  AssertionError  	9	1	replace
81	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  1;  [FE]  AssertionError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  1;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  *  1;	  int    _shortest    =    Integer.MAX_VALUE    +    1;    	compilable	  [FE]  AssertionError  	9	1	replace
82	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  int  _shortest  =  Integer.MAX_VALUE  -  2;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  1;  int  _shortest  =  Integer.MAX_VALUE  -  2;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    1;    int  _shortest  =  Integer.MAX_VALUE  -  2;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	add
83	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [CE]  cannot  find  symbol  _shortest  [FE]        AssertionError    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);  [BUGGY]    int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(4);	      this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol  _shortest	1	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  0;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  0;	  int    _shortest    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	7	1	replace
85	[BUG]  [BUGGY]  int  _shortest  =  0;  [FE]  AssertionError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();    [BUGGY]  int  _shortest  =  0;  [BUGGY]    int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  0;	  int    _shortest    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	7	1	replace
