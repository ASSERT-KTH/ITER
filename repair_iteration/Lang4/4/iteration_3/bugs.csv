bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    |    Integer.MAX_VALUE;    int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	5	None	add
2	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    |    Integer.MAX_VALUE;    Integer  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	5	None	add
3	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    |    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	5	None	add
4	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE);  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE);  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    |    Integer.MAX_VALUE;    int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE);	  	non-compiled	[CE]  ';'  expected	5	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  /  2;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    int    _shortest    =    Integer.MAX_VALUE    -    2;    	compilable	  [FE]  AssertionError  	82	1	replace
6	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  2;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  /  2;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    int    _shortest    =    Integer.MAX_VALUE    -    2;    	compilable	  [FE]  AssertionError  	82	1	replace
7	[BUG]  [BUGGY]  _shortest  =  Integer.MAX_VALUE  -  1;  [CE]  cannot  find  symbol  _shortest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	_shortest  =  Integer.MAX_VALUE  -  1;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    _shortest    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  cannot  find  symbol  _shortest	59	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    _shortest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	59	1	replace
9	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    _shortest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	59	1	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MIN_VALUE  -  1;  _shortest  =  Integer.MAX_VALUE  -  1;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    _shortest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	59	1	replace
11	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  _shortest  =  Integer.MAX_VALUE  -  1;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MIN_VALUE  -  1;  _shortest  =  Integer.MAX_VALUE  -  1;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    _shortest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	59	1	replace
12	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  _longest);  [CE]  cannot  find  symbol  sz  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  _longest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  _longest);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  sz	36	None	replace
13	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  _shortest);  [CE]  cannot  find  symbol  sz  [FE]                          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  _shortest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  _shortest);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  sz	36	None	replace
14	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(_longest[0],  _longest);  [CE]  cannot  find  symbol  _longest  [FE]                            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(_longest[0],  _longest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(_longest[0],  _longest);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  _longest	36	None	replace
15	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  /  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MIN_VALUE  /  1;	  int    _shortest    =    Integer.MIN_VALUE    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
16	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  /  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  /  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MIN_VALUE  /  1;	  int    _shortest    =    Integer.MIN_VALUE    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
17	[BUG]  [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  TreeMap  <  CharSequence,  CharSequence>();	  this.lookupMap    =    new    LinkedHashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	7	1	replace
19	[BUG]  [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	7	1	replace
20	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  seq);  [CE]  cannot  find  symbol  seq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  seq);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  seq);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    seq);    	non-compiled	[CE]  cannot  find  symbol  seq	67	None	replace
21	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  _longest);  [CE]  cannot  find  symbol  seq  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  _longest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  _longest);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    seq);    	non-compiled	[CE]  cannot  find  symbol  seq	67	None	replace
22	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  null);  [CE]  cannot  find  symbol  seq  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  null);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  null);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    seq);    	non-compiled	[CE]  cannot  find  symbol  seq	67	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE  +  1;	  int    _shortest    =    Integer.MAX_VALUE    -    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	47	1	replace
24	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE  +  1;	  int    _shortest    =    Integer.MAX_VALUE    -    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	47	1	replace
25	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  -  Integer.MIN_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    -    Integer.MAX_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	47	1	replace
26	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MIN_VALUE;  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  -  Integer.MIN_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    -    Integer.MAX_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	47	1	replace
27	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  +  2;	  int    _shortest    =    Integer.MAX_VALUE    +    1;    int    _shortest    =    Integer.MAX_VALUE    +    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
28	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  +  2;	  int    _shortest    =    Integer.MAX_VALUE    +    1;    int    _shortest    =    Integer.MAX_VALUE    +    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
29	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	Integer  _shortest  =  Integer.MAX_VALUE  +  1;	  int    _shortest    =    Integer.MAX_VALUE    +    1;    int    _shortest    =    Integer.MAX_VALUE    +    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
30	[BUG]  [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	Integer  _shortest  =  Integer.MAX_VALUE  +  1;	  int    _shortest    =    Integer.MAX_VALUE    +    1;    int    _shortest    =    Integer.MAX_VALUE    +    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
31	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  int  _shortest  =  Integer.MAX_VALUE  /  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  int  _shortest  =  Integer.MAX_VALUE  /  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    /    1;    int  _shortest  =  Integer.MAX_VALUE  /  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	10	None	add
32	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  int  _shortest  =  Integer.MAX_VALUE  /  2;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  int  _shortest  =  Integer.MAX_VALUE  /  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    /    1;    int  _shortest  =  Integer.MAX_VALUE  /  2;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	10	None	add
33	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  Integer  _shortest  =  Integer.MAX_VALUE  /  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  Integer  _shortest  =  Integer.MAX_VALUE  /  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    /    1;    Integer  _shortest  =  Integer.MAX_VALUE  /  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	10	None	add
34	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  _shortest  =  Integer.MAX_VALUE  /  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  _shortest  =  Integer.MAX_VALUE  /  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    /    1;    _shortest  =  Integer.MAX_VALUE  /  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	10	None	add
35	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this);  [CE]  no  suitable  constructor  found  for  HashMap(LookupTranslator)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(null);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(LookupTranslator)	76	None	replace
36	[BUG]  [BUGGY]  this.lookupMap.put(sq[0],  sz);  [CE]  cannot  find  symbol  sq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap.put(sq[0],  sz);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(sq[0],  sz);	  this.lookupMap.put(seq[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  sq	66	None	replace
37	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],<null>)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  null);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],<null>)	44	None	replace
38	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  lookup);  [CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],CharSequence[][])  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(lookup,  lookup);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(CharSequence[][],CharSequence[][])	44	None	replace
39	[BUG]  [BUGGY]  int  longest  =  lookupMap.size()  -  1;  [CE]  cannot  find  symbol  _shortest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  longest  =  lookupMap.size()  -  1;  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  lookupMap.size()  -  1;	  int    longest    =    this.lookupMap.size()    -    1;    	non-compiled	[CE]  cannot  find  symbol  _shortest	21	None	replace
40	[BUG]  [BUGGY]  int  longest  =  lookupMap.get(seq[0].length()  -  1);  [CE]  cannot  find  symbol  seq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  longest  =  lookupMap.get(seq[0].length()  -  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  lookupMap.get(seq[0].length()  -  1);	  int    longest    =    lookupMap.get(seq[0].length());    	non-compiled	[CE]  cannot  find  symbol  seq	41	None	replace
41	[BUG]  [BUGGY]  int  longest  =  lookupMap.get(sq[0].length());  [CE]  cannot  find  symbol  sq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  longest  =  lookupMap.get(sq[0].length());  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  lookupMap.get(sq[0].length());	  int    longest    =    lookupMap.get(seq[0].length());    	non-compiled	[CE]  cannot  find  symbol  sq	41	None	replace
42	[BUG]  [BUGGY]  _shortest  =  Integer.MIN_VALUE;  [CE]  cannot  find  symbol  _shortest  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  _shortest  =  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	_shortest  =  Integer.MIN_VALUE;	  int    _shortest    =    Integer.MIN_VALUE;    int    _shortest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _shortest	23	None	replace
43	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  Integer  _shortest  =  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	Integer  _shortest  =  Integer.MIN_VALUE;	  int    _shortest    =    Integer.MIN_VALUE;    int    _shortest    =    Integer.MIN_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	23	1	replace
44	[BUG]  [BUGGY]  Integer  _shortest  =  Integer.MIN_VALUE;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  Integer  _shortest  =  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	Integer  _shortest  =  Integer.MIN_VALUE;	  int    _shortest    =    Integer.MIN_VALUE;    int    _shortest    =    Integer.MIN_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	23	1	replace
45	[BUG]  [BUGGY]  long  _shortest  =  Integer.MIN_VALUE;  [CE]  possible  loss  of  precision  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  long  _shortest  =  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	long  _shortest  =  Integer.MIN_VALUE;	  int    _shortest    =    Integer.MIN_VALUE;    int    _shortest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
46	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  int  _shortest  =  Integer.MIN_VALUE  -  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  int  _shortest  =  Integer.MIN_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    -    1;    int  _shortest  =  Integer.MIN_VALUE  -  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	1	None	add
47	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  Integer  _shortest  =  Integer.MIN_VALUE  -  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  Integer  _shortest  =  Integer.MIN_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    -    1;    Integer  _shortest  =  Integer.MIN_VALUE  -  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	1	None	add
48	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  _shortest  =  Integer.MIN_VALUE  -  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  _shortest  =  Integer.MIN_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    -    1;    _shortest  =  Integer.MIN_VALUE  -  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	1	None	add
49	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  int  _hort  =  Integer.MIN_VALUE  -  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  int  _hort  =  Integer.MIN_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    -    1;    int  _hort  =  Integer.MIN_VALUE  -  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	1	None	add
50	[BUG]  [BUGGY]  int  sz  =  lookupMap.size()  -  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  sz  =  lookupMap.size()  -  1;  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  sz  =  lookupMap.size()  -  1;	  int    sz    =    lookupMap.size();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	39	None	replace
51	[BUG]  [BUGGY]  int  sz  =  lookupMap.size()  +  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  sz  =  lookupMap.size()  +  1;  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  sz  =  lookupMap.size()  +  1;	  int    sz    =    lookupMap.size();    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	39	None	replace
52	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  seq[1];  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  seq[1];  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  seq[1];	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    seq[1);    	non-compiled	[CE]  ')'  expected	37	None	replace
53	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  seq[1];  [CE]  ')'  expected  [FE]                            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  seq[1];  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  seq[1];	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    seq[1);    	non-compiled	[CE]  ')'  expected	37	None	replace
54	[BUG]  [BUGGY]  this.lookupMap.put(siq[0],  seq[1]);  [CE]  cannot  find  symbol  siq  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap.put(siq[0],  seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(siq[0],  seq[1]);	  this.lookupMap.put(seq[0],    siq[1]);    	non-compiled	[CE]  cannot  find  symbol  siq	74	None	replace
55	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    Integer.MAX_VALUE;    int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	46	None	add
56	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    Integer.MAX_VALUE;    Integer  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	46	None	add
57	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE);  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    Integer.MAX_VALUE;    int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE);	  	non-compiled	[CE]  ';'  expected	46	None	add
58	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  sz[1]);  [CE]  cannot  find  symbol  sz  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  sz[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  sz[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(seq[0],    sz[1]);    	non-compiled	[CE]  cannot  find  symbol  sz	68	None	replace
59	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  sz[1]);  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  sz[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  sz[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(seq[0],    sz[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	68	None	replace
60	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(seq[0],  seq[1]);  [CE]  cannot  find  symbol  seq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  lookupMap.get(seq[0],  seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  lookupMap.get(seq[0],  seq[1]);	  this.lookupMap    =    lookupMap.get(seq[0]);    	non-compiled	[CE]  cannot  find  symbol  seq	17	None	replace
61	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(sq[0]);  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  lookupMap.get(sq[0]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  lookupMap.get(sq[0]);	  this.lookupMap    =    lookupMap.get(seq[0]);    	non-compiled	[CE]  cannot  find  symbol  sq	17	None	replace
62	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  sq[1]);  [CE]  cannot  find  symbol  seq  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap.put(seq[0],  sq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(seq[0],  sq[1]);	  this.lookupMap.put(sq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	62	None	replace
63	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  /  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MIN_VALUE  /  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE    -    Integer.MAX_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	replace
64	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  /  Integer.MAX_VALUE;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  /  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MIN_VALUE  /  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE    -    Integer.MAX_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE  +  1;	  int    _shortest    =    Integer.MIN_VALUE    -    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	53	1	replace
66	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE  +  1;	  int    _shortest    =    Integer.MIN_VALUE    -    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	53	1	replace
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE  +  1;	  int    _shortest    =    Integer.MAX_VALUE    /    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	49	1	replace
68	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE  +  1;	  int    _shortest    =    Integer.MAX_VALUE    /    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	49	1	replace
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  *  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    /    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	49	1	replace
70	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  *  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    /    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	49	1	replace
71	[BUG]  [BUGGY]  int  _shortest  =  Long.MAX_VALUE  /  Integer.MAX_VALUE;  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Long.MAX_VALUE  /  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Long.MAX_VALUE  /  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    /    Integer.MAX_VALUE;    	non-compiled	[CE]  possible  loss  of  precision	49	None	replace
72	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true,  lookup);  [CE]  no  suitable  constructor  found  for  HashMap(boolean,CharSequence[][])  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true,  lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(true,  lookup);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false,    lookup);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(boolean,CharSequence[][])	61	None	replace
73	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup,  null);  [CE]  no  suitable  constructor  found  for  HashMap(boolean,CharSequence[][],<null>)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup,  null);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup,  null);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false,    lookup);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(boolean,CharSequence[][],<null>)	61	None	replace
74	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup,  false);  [CE]  no  suitable  constructor  found  for  HashMap(boolean,CharSequence[][],boolean)  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup,  false);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup,  false);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false,    lookup);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(boolean,CharSequence[][],boolean)	61	None	replace
75	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup,  _longest);  [CE]  cannot  find  symbol  _longest  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup,  _longest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(false,  lookup,  _longest);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false,    lookup);    	non-compiled	[CE]  cannot  find  symbol  _longest	61	None	replace
76	[BUG]  [BUGGY]  _shortest  =  Integer.MAX_VALUE  +  1;  [CE]  cannot  find  symbol  _shortest  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  _shortest  =  Integer.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	_shortest  =  Integer.MAX_VALUE  +  1;	  int    _shortest    =    Integer.MAX_VALUE    +    1;    int    _shortest    =    Integer.MIN_VALUE    +    1;    	non-compiled	[CE]  cannot  find  symbol  _shortest	32	None	replace
77	[BUG]  [BUGGY]  int  _sz  =  this.lookupMap.size();  [CE]  cannot  find  symbol  _shortest  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _sz  =  this.lookupMap.size();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _sz  =  this.lookupMap.size();	  int    sz    =    this.lookupMap.size()    -    1;    	non-compiled	[CE]  cannot  find  symbol  _shortest	38	None	replace
78	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  1;  int  _shortest  =  Integer.MAX_VALUE  *  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  1;  int  _shortest  =  Integer.MAX_VALUE  *  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    *    1;    int  _shortest  =  Integer.MAX_VALUE  *  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	80	None	add
79	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  1;  Integer  _shortest  =  Integer.MAX_VALUE  *  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  1;  Integer  _shortest  =  Integer.MAX_VALUE  *  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    *    1;    Integer  _shortest  =  Integer.MAX_VALUE  *  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	80	None	add
80	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  1;  int  _shortest  =  Integer.MAX_VALUE  *  2;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  1;  int  _shortest  =  Integer.MAX_VALUE  *  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    *    1;    int  _shortest  =  Integer.MAX_VALUE  *  2;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	80	None	add
81	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  1;  _shortest  =  Integer.MAX_VALUE  *  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  1;  _shortest  =  Integer.MAX_VALUE  *  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    *    1;    _shortest  =  Integer.MAX_VALUE  *  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	80	None	add
82	[BUG]  [BUGGY]  int  longest  =  Integer.MIN_VALUE  -  1;  [CE]  cannot  find  symbol  _shortest  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  longest  =  Integer.MIN_VALUE  -  1;  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  Integer.MIN_VALUE  -  1;	  int    longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _shortest	28	None	replace
83	[BUG]  [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  [CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _longest  =  Integer.MIN_VALUE;  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _longest  =  Integer.MIN_VALUE;	  int    longest    =    Integer.MIN_VALUE;    	non-compiled	[CE]  variable  _longest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	28	None	replace
84	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    &    Integer.MAX_VALUE;    int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	50	None	add
85	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    &    Integer.MAX_VALUE;    Integer  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	50	None	add
86	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  &  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  &  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    &    Integer.MAX_VALUE;    int  _shortest  =  Integer.MIN_VALUE  &  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	50	None	add
87	[BUG]  [BUGGY]  long  _shortest  =  Integer.MIN_VALUE;  long  _shortest  =  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  long  _shortest  =  Integer.MIN_VALUE;  long  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	long  _shortest  =  Integer.MIN_VALUE;  long  _shortest  =  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE;    int    _shortest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	70	None	replace
88	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [CE]  cannot  find  symbol  _shortest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(2);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	non-compiled	[CE]  cannot  find  symbol  _shortest	73	None	replace
89	[BUG]  [BUGGY]  int  longest  =  this.lookupMap.get(sq[0].length()  -  1);  [CE]  cannot  find  symbol  sq  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  longest  =  this.lookupMap.get(sq[0].length()  -  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  this.lookupMap.get(sq[0].length()  -  1);	  int    longest    =    this.lookupMap.get(sq[0].length());    	non-compiled	[CE]  cannot  find  symbol  sq	43	None	replace
90	[BUG]  [BUGGY]  int  longest  =  lookupMap.size()  -  2;  [CE]  cannot  find  symbol  _shortest  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  longest  =  lookupMap.size()  -  2;  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  lookupMap.size()  -  2;	  int    longest    =    lookupMap.size();    	non-compiled	[CE]  cannot  find  symbol  _shortest	20	None	replace
91	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  _longest);  [CE]  cannot  find  symbol  seq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap.put(seq[0],  _longest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(seq[0],  _longest);	  this.lookupMap.put(sz[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	63	None	replace
92	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  /  1;  [CE]  cannot  find  symbol  _shortest  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  longest  =  Integer.MAX_VALUE  /  1;  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  Integer.MAX_VALUE  /  1;	  int    longest    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  cannot  find  symbol  _shortest	29	None	replace
93	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  +  2;  [CE]  cannot  find  symbol  _shortest  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  longest  =  Integer.MAX_VALUE  +  2;  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  Integer.MAX_VALUE  +  2;	  int    longest    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  cannot  find  symbol  _shortest	29	None	replace
94	[BUG]  [BUGGY]  int  _shortest  =  0;  int  _shortest  =  0;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  0;  int  _shortest  =  0;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    0;    int  _shortest  =  0;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	84	None	add
95	[BUG]  [BUGGY]  int  _shortest  =  0;  Int  _shortest  =  0;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  0;  Int  _shortest  =  0;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    0;    Int  _shortest  =  0;	  	non-compiled	[CE]  cannot  find  symbol	84	None	add
96	[BUG]  [BUGGY]  int  _shortest  =  0;  _shortest  =  0;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  0;  _shortest  =  0;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    0;    _shortest  =  0;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	84	None	add
97	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  _longest);  [CE]  cannot  find  symbol  sq  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  _longest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  _longest);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sq[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  sq	35	None	replace
98	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(sq[1]);  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  lookupMap.get(sq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  lookupMap.get(sq[1]);	  this.lookupMap    =    lookupMap.get(seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	18	None	replace
99	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	Integer  _shortest  =  Integer.MAX_VALUE  -  1;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    Integer    _shortest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	57	1	replace
100	[BUG]  [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE  -  1;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	Integer  _shortest  =  Integer.MAX_VALUE  -  1;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    Integer    _shortest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	57	1	replace
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	Integer  _shortest  =  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    Integer    _shortest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	57	1	replace
102	[BUG]  [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  Integer  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	Integer  _shortest  =  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    Integer    _shortest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	57	1	replace
103	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  int  _shortest  =  Integer.MIN_VALUE  +  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  int  _shortest  =  Integer.MIN_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    +    1;    int  _shortest  =  Integer.MIN_VALUE  +  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	3	None	add
104	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  Integer  _shortest  =  Integer.MIN_VALUE  +  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  Integer  _shortest  =  Integer.MIN_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    +    1;    Integer  _shortest  =  Integer.MIN_VALUE  +  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	3	None	add
105	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  _shortest  =  Integer.MIN_VALUE  +  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  _shortest  =  Integer.MIN_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    +    1;    _shortest  =  Integer.MIN_VALUE  +  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	3	None	add
106	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  Int  _shortest  =  Integer.MIN_VALUE  +  1;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  Int  _shortest  =  Integer.MIN_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    +    1;    Int  _shortest  =  Integer.MIN_VALUE  +  1;	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
107	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  1;	  int    _shortest    =    0;    	compilable	  [FE]  AssertionError  	85	1	replace
108	[BUG]  [BUGGY]  int  _shortest  =  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  1;	  int    _shortest    =    0;    	compilable	  [FE]  AssertionError  	85	1	replace
109	[BUG]  [BUGGY]  int  _shortest  =  0L;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  0L;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  0L;	  int    _shortest    =    0;    	non-compiled	[CE]  possible  loss  of  precision	85	None	replace
110	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  -1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  -1;	  int    _shortest    =    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	85	1	replace
111	[BUG]  [BUGGY]  int  _shortest  =  -1;  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  -1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  -1;	  int    _shortest    =    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	85	1	replace
112	[BUG]  [BUGGY]  int  longest  =  lookupMap.get(seq[1].length());  [CE]  cannot  find  symbol  seq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  longest  =  lookupMap.get(seq[1].length());  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  lookupMap.get(seq[1].length());	  int    longest    =    this.lookupMap.get(seq[1].length());    	non-compiled	[CE]  cannot  find  symbol  seq	69	None	replace
113	[BUG]  [BUGGY]  int  longest  =  this.lookupMap.get(seq[1].length()  -  1);  [CE]  cannot  find  symbol  seq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  longest  =  this.lookupMap.get(seq[1].length()  -  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  this.lookupMap.get(seq[1].length()  -  1);	  int    longest    =    this.lookupMap.get(seq[1].length());    	non-compiled	[CE]  cannot  find  symbol  seq	69	None	replace
114	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    /    Integer.MAX_VALUE;    int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	48	None	add
115	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    /    Integer.MAX_VALUE;    Integer  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	48	None	add
116	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MIN_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    /    Integer.MAX_VALUE;    int  _shortest  =  Integer.MAX_VALUE  /  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	48	None	add
117	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  /  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  /  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    /    Integer.MAX_VALUE;    int  _shortest  =  Integer.MIN_VALUE  /  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	48	None	add
118	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  1);  [CE]  cannot  find  symbol  _longest  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  -  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  lookupMap.get(_longest  -  1);	  this.lookupMap    =    lookupMap.get(_longest);    	non-compiled	[CE]  cannot  find  symbol  _longest	19	None	replace
119	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _longest);  [CE]  cannot  find  symbol  _longest  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  lookupMap.get(_longest,  _longest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  lookupMap.get(_longest,  _longest);	  this.lookupMap    =    lookupMap.get(_longest);    	non-compiled	[CE]  cannot  find  symbol  _longest	19	None	replace
120	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  +  1);  [CE]  cannot  find  symbol  _longest  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  lookupMap.get(_longest  +  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  lookupMap.get(_longest  +  1);	  this.lookupMap    =    lookupMap.get(_longest);    	non-compiled	[CE]  cannot  find  symbol  _longest	19	None	replace
121	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    -    Integer.MAX_VALUE;    int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	52	None	add
122	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    -    Integer.MAX_VALUE;    Integer  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	52	None	add
123	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    -    Integer.MAX_VALUE;    _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	52	None	add
124	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE);  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    -    Integer.MAX_VALUE;    int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE);	  	non-compiled	[CE]  ';'  expected	52	None	add
125	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length());  [CE]  cannot  find  symbol  seq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length());  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(seq[0],  seq[1].length());	  this.lookupMap.put(seq[0],    seq[1].length);    	non-compiled	[CE]  cannot  find  symbol  seq	75	None	replace
126	[BUG]  [BUGGY]  this.lookupMap.put(sq[0],  seq[1].length);  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap.put(sq[0],  seq[1].length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(sq[0],  seq[1].length);	  this.lookupMap.put(seq[0],    seq[1].length);    	non-compiled	[CE]  cannot  find  symbol  sq	75	None	replace
127	[BUG]  [BUGGY]  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  _shortest  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	_shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    Integer    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _shortest	8	None	replace
128	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  int  _shortest  =  Integer.MAX_VALUE  -  2;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  int  _shortest  =  Integer.MAX_VALUE  -  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    2;    int  _shortest  =  Integer.MAX_VALUE  -  2;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	add
129	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  Integer  _shortest  =  Integer.MAX_VALUE  -  2;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  Integer  _shortest  =  Integer.MAX_VALUE  -  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    2;    Integer  _shortest  =  Integer.MAX_VALUE  -  2;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	add
130	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  _shortest  =  Integer.MAX_VALUE  -  2;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]        AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  _shortest  =  Integer.MAX_VALUE  -  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    2;    _shortest  =  Integer.MAX_VALUE  -  2;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	add
131	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  int  _shortest  =  Integer.MAX_VALUE  -  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  int  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    2;    int  _shortest  =  Integer.MAX_VALUE  -  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	add
132	[BUG]  [BUGGY]  this.lookupMap.put(_seq[0],  seq[1]);  [CE]  cannot  find  symbol  _seq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap.put(_seq[0],  seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(_seq[0],  seq[1]);	  this.lookupMap.put(seq[0],    _seq[1]);    	non-compiled	[CE]  cannot  find  symbol  _seq	64	None	replace
133	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sz[0],  sz[1]);  [CE]  cannot  find  symbol  sz  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sz[0],  sz[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sz[0],  sz[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(seq[0],    sz[1]);    	non-compiled	[CE]  cannot  find  symbol  sz	71	None	replace
134	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sq[0],  sz[1]);  [CE]  cannot  find  symbol  sq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sq[0],  sz[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sq[0],  sz[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(seq[0],    sz[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	71	None	replace
135	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  &  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MIN_VALUE  &  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	6	1	replace
136	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  &  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  &  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MIN_VALUE  &  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	6	1	replace
137	[BUG]  [BUGGY]  int  longest  =  Integer.MAX_VALUE  -  2;  [CE]  cannot  find  symbol  _shortest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  longest  =  Integer.MAX_VALUE  -  2;  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  Integer.MAX_VALUE  -  2;	  int    longest    =    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  cannot  find  symbol  _shortest	27	None	replace
138	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE  +  1;	  int    _shortest    =    Integer.MAX_VALUE    +    1;    _shortest    =    Integer.MAX_VALUE    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	33	1	replace
139	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE;  _shortest  =  Integer.MAX_VALUE  +  1;	  int    _shortest    =    Integer.MAX_VALUE    +    1;    _shortest    =    Integer.MAX_VALUE    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	33	1	replace
140	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(sz[0],  seq[1]);  [CE]  cannot  find  symbol  sz  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(sz[0],  seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(sz[0],  seq[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)this.lookupMap).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sz	79	None	replace
141	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(sq[0],  seq[1]);  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(sq[0],  seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(sq[0],  seq[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)this.lookupMap).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	79	None	replace
142	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    Integer    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	8	None	replace
143	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  Integer  _shortest  =  Integer.MAX_VALUE  |  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    Integer    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	8	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE  +  1;	  int    _shortest    =    Integer.MAX_VALUE    &    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	51	1	replace
145	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE  +  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE  +  1;	  int    _shortest    =    Integer.MAX_VALUE    &    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	51	1	replace
146	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  1;  int  _shortest  =  Integer.MIN_VALUE  *  1;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  1;  int  _shortest  =  Integer.MIN_VALUE  *  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    *    1;    int  _shortest  =  Integer.MIN_VALUE  *  1;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	80	None	add
147	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  long  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  long  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    -    Integer.MAX_VALUE;    long  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	52	None	add
148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MIN_VALUE  -  2;	  int    _shortest    =    Integer.MIN_VALUE    -    1;    	compilable	  [FE]  AssertionError  	2	1	replace
149	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MIN_VALUE  -  2;	  int    _shortest    =    Integer.MIN_VALUE    -    1;    	compilable	  [FE]  AssertionError  	2	1	replace
150	[BUG]  [BUGGY]  this.lookupMap  =  new  ArrayHashMap  <  CharSequence,  CharSequence>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  ArrayHashMap  <  CharSequence,  CharSequence>();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  ArrayHashMap  <  CharSequence,  CharSequence>();	  this.lookupMap    =    new    LinkedHashMap    <    CharSequence,    CharSequence>();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
151	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(sz);  [CE]  cannot  find  symbol  sz  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  lookupMap.get(sz);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  lookupMap.get(sz);	  this.lookupMap    =    lookupMap.get(_longest);    	non-compiled	[CE]  cannot  find  symbol  sz	19	None	replace
152	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  siq[1]);  [CE]  cannot  find  symbol  seq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  siq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  siq[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	34	None	replace
153	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  sz1);  [CE]  cannot  find  symbol  seq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap.put(seq[0],  sz1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(seq[0],  sz1);	  this.lookupMap.put(seq[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  seq	66	None	replace
154	[BUG]  [BUGGY]  char  _shortest  =  0;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  char  _shortest  =  0;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	char  _shortest  =  0;	  int    _shortest    =    0;    	non-compiled	[CE]  possible  loss  of  precision	85	None	replace
155	[BUG]  [BUGGY]  ((  Map  <  CharSequence,  CharSequence>)lookup).put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  seq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  Map  <  CharSequence,  CharSequence>)lookup).put(seq[0],  seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  Map  <  CharSequence,  CharSequence>)lookup).put(seq[0],  seq[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(sq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	15	None	replace
156	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MIN_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  &  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    &    Integer.MAX_VALUE;    int  _shortest  =  Integer.MAX_VALUE  &  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	50	None	add
157	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  4;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  /  4;	  int    _shortest    =    Integer.MAX_VALUE    /    1;    	compilable	  [FE]  AssertionError  	11	1	replace
158	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  4;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  4;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  /  4;	  int    _shortest    =    Integer.MAX_VALUE    /    1;    	compilable	  [FE]  AssertionError  	11	1	replace
159	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  long  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  long  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    |    Integer.MAX_VALUE;    long  _shortest  =  Integer.MIN_VALUE  |  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	5	None	add
160	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  [CE]  cannot  find  symbol  _shortest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(7);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	non-compiled	[CE]  cannot  find  symbol  _shortest	73	None	replace
161	[BUG]  [BUGGY]  int  longest  =  Integer.MIN_VALUE  +  1;  [CE]  cannot  find  symbol  _shortest  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  longest  =  Integer.MIN_VALUE  +  1;  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  longest  =  Integer.MIN_VALUE  +  1;	  int    longest    =    Integer.MAX_VALUE    +    1;    	non-compiled	[CE]  cannot  find  symbol  _shortest	29	None	replace
162	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  this.sq[1]);  [CE]  cannot  find  symbol  sq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  this.sq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sq[0],  this.sq[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sq[0],    sq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	55	None	replace
163	[BUG]  [BUGGY]  This.lookupMap  =  lookupMap.get(seq[1]);  [CE]  cannot  find  symbol  This  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  This.lookupMap  =  lookupMap.get(seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	This.lookupMap  =  lookupMap.get(seq[1]);	  this.lookupMap    =    lookupMap.get(seq[1]);    	non-compiled	[CE]  cannot  find  symbol  This	18	None	replace
164	[BUG]  [BUGGY]  Integer  sz  =  this.lookupMap.size();  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  Integer  sz  =  this.lookupMap.size();  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	Integer  sz  =  this.lookupMap.size();	  int    sz    =    this.lookupMap.size()    +    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	40	None	replace
165	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length,  lookup);  [CE]  cannot  find  symbol  seq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap.put(seq[0],  seq[1].length,  lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(seq[0],  seq[1].length,  lookup);	  this.lookupMap.put(seq[0],    seq[1].length);    	non-compiled	[CE]  cannot  find  symbol  seq	75	None	replace
166	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  int  _shortest  =  Integer.MIN_VALUE  +  2;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  +  1;  int  _shortest  =  Integer.MIN_VALUE  +  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    +    1;    int  _shortest  =  Integer.MIN_VALUE  +  2;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	3	None	add
167	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)seq).put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  seq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)seq).put(seq[0],  seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)seq).put(seq[0],  seq[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	54	None	replace
168	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  *  2;	  int    _shortest    =    Integer.MAX_VALUE    *    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	81	1	replace
169	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  2;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  *  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  *  2;	  int    _shortest    =    Integer.MAX_VALUE    *    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	81	1	replace
170	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  int  _shortest  =  Integer.MIN_VALUE  -  2;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  int  _shortest  =  Integer.MIN_VALUE  -  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    -    1;    int  _shortest  =  Integer.MIN_VALUE  -  2;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	1	None	add
171	[BUG]  [BUGGY]  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  _shortest  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	_shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE;    int    _shortest    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  _shortest	70	None	replace
172	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  lookup);  [CE]  cannot  find  symbol  seq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  lookup);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    seq);    	non-compiled	[CE]  cannot  find  symbol  seq	67	None	replace
173	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  int  _shortest  =  Integer.MIN_VALUE  -  2;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  2;  int  _shortest  =  Integer.MIN_VALUE  -  2;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    2;    int  _shortest  =  Integer.MIN_VALUE  -  2;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	12	None	add
174	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    Integer.MAX_VALUE;    int  _shortest  =  Integer.MIN_VALUE  -  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	46	None	add
175	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MIN_VALUE;  [CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MAX_VALUE;  int  _shortest  =  Integer.MAX_VALUE  -  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    -    Integer.MAX_VALUE;    int  _shortest  =  Integer.MAX_VALUE  -  Integer.MIN_VALUE;	  	non-compiled	[CE]  variable  _shortest  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	46	None	add
176	[BUG]  [BUGGY]  This.lookupMap  =  lookupMap.get(seq[0]);  [CE]  cannot  find  symbol  This  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  This.lookupMap  =  lookupMap.get(seq[0]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	This.lookupMap  =  lookupMap.get(seq[0]);	  this.lookupMap    =    lookupMap.get(seq[0]);    	non-compiled	[CE]  cannot  find  symbol  This	17	None	replace
177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE;    _shortest    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	25	1	replace
178	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MIN_VALUE;  _shortest  =  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE;    _shortest    =    Integer.MIN_VALUE;    	compilable	  [FE]  AssertionError  	25	1	replace
179	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(seq[0],  sz[1]);  [CE]  cannot  find  symbol  seq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(seq[0],  sz[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(seq[0],  sz[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)this.lookupMap).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	79	None	replace
180	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup);  [CE]  cannot  find  symbol  lookup  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(this.lookup);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(lookup);    	non-compiled	[CE]  cannot  find  symbol  lookup	44	None	replace
181	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(null,  lookup);  [CE]  no  suitable  constructor  found  for  HashMap(<null>,CharSequence[][])  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(null,  lookup);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(null,  lookup);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(false,    lookup);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(<null>,CharSequence[][])	61	None	replace
182	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(seq[0],  siq[1]);  [CE]  cannot  find  symbol  seq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(seq[0],  siq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookup).put(seq[0],  siq[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(sz[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	14	None	replace
183	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  %  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MIN_VALUE  %  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
184	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  %  Integer.MAX_VALUE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  %  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MIN_VALUE  %  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MIN_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
185	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  /  1;  _shortest  =  Integer.MAX_VALUE  -  1;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    _shortest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	59	1	replace
186	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  _shortest  =  Integer.MAX_VALUE  -  1;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  _shortest  =  Integer.MAX_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  /  1;  _shortest  =  Integer.MAX_VALUE  -  1;	  int    _shortest    =    Integer.MAX_VALUE    -    1;    _shortest    =    Integer.MAX_VALUE    -    1;    	compilable	  [FE]  AssertionError  	59	1	replace
187	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  +  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
188	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  Integer.MAX_VALUE;  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  +  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  +  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    int    _shortest    =    Integer.MAX_VALUE    |    Integer.MAX_VALUE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
189	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  this.seq[1]);  [CE]  cannot  find  symbol  seq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  this.seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  this.seq[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	34	None	replace
190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  /  Integer.MIN_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    /    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	49	1	replace
191	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MIN_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  Integer.MIN_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  /  Integer.MIN_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    /    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	49	1	replace
192	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  this.sz[1]);  [CE]  cannot  find  symbol  sz  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  this.sz[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  this.sz[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(seq[0],    sz[1]);    	non-compiled	[CE]  cannot  find  symbol  sz	68	None	replace
193	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(seq[0],  this.seq[1]);  [CE]  cannot  find  symbol  seq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(seq[0],  this.seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(seq[0],  this.seq[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)this.lookupMap).put(seq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	79	None	replace
194	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(_shortest);  [CE]  cannot  find  symbol  _shortest  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  lookupMap.get(_shortest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  lookupMap.get(_shortest);	  this.lookupMap    =    lookupMap.get(_longest);    	non-compiled	[CE]  cannot  find  symbol  _shortest	19	None	replace
195	[BUG]  [BUGGY]  this.lookupMap.put(_seq[0],  _seq[1]);  [CE]  cannot  find  symbol  _seq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap.put(_seq[0],  _seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(_seq[0],  _seq[1]);	  this.lookupMap.put(seq[0],    _seq[1]);    	non-compiled	[CE]  cannot  find  symbol  _seq	64	None	replace
196	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  [CE]  cannot  find  symbol  _shortest  [FE]              AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(6);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(8);    	non-compiled	[CE]  cannot  find  symbol  _shortest	73	None	replace
197	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup1).put(seq[0],  seq[1]);  [CE]  cannot  find  symbol  seq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup1).put(seq[0],  seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookup1).put(seq[0],  seq[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(sq[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	15	None	replace
198	[BUG]  [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  Int  _shortest  =  Integer.MIN_VALUE  -  1;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MIN_VALUE  -  1;  Int  _shortest  =  Integer.MIN_VALUE  -  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MIN_VALUE    -    1;    Int  _shortest  =  Integer.MIN_VALUE  -  1;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
199	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  1);  [CE]  cannot  find  symbol  seq  [FE]                    AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  1);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    seq);    	non-compiled	[CE]  cannot  find  symbol  seq	67	None	replace
200	[BUG]  [BUGGY]  this.lookupMap.put(seq[0],  seq);  [CE]  cannot  find  symbol  seq  [FE]                AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap.put(seq[0],  seq);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap.put(seq[0],  seq);	  this.lookupMap.put(seq[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  seq	66	None	replace
201	[BUG]  [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(5);  [CE]  cannot  find  symbol  _shortest  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(5);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  new  HashMap  <  CharSequence,  CharSequence>(5);	  this.lookupMap    =    new    HashMap    <    CharSequence,    CharSequence>(4);    	non-compiled	[CE]  cannot  find  symbol  _shortest	83	None	replace
202	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  Int  _shortest  =  Integer.MAX_VALUE  /  1;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  /  1;  Int  _shortest  =  Integer.MAX_VALUE  /  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int    _shortest    =    Integer.MAX_VALUE    /    1;    Int  _shortest  =  Integer.MAX_VALUE  /  1;	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
203	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  %  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	add	int  _shortest  =  Integer.MAX_VALUE  %  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    &    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	51	1	replace
204	[BUG]  [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  %  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =  Integer.MAX_VALUE  %  Integer.MAX_VALUE;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =  Integer.MAX_VALUE  %  Integer.MAX_VALUE;	  int    _shortest    =    Integer.MAX_VALUE    &    Integer.MAX_VALUE;    	compilable	  [FE]  AssertionError  	51	1	replace
205	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  seq[1].length);  [CE]  cannot  find  symbol  seq  [FE]                          AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  seq[1].length);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(seq[0],  seq[1].length);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    seq[1);    	non-compiled	[CE]  cannot  find  symbol  seq	37	None	replace
206	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(sz[0],  seq[1);  [CE]  ']'  expected  [FE]                            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(sz[0],  seq[1);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)this.lookupMap).put(sz[0],  seq[1);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    seq[1);    	non-compiled	[CE]  ']'  expected	37	None	replace
207	[BUG]  [BUGGY]  this.lookupMap  =  lookupMap.get(seq[1],  seq[1]);  [CE]  cannot  find  symbol  seq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  this.lookupMap  =  lookupMap.get(seq[1],  seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	this.lookupMap  =  lookupMap.get(seq[1],  seq[1]);	  this.lookupMap    =    lookupMap.get(seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	18	None	replace
208	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(seq[0],  this.seq[1]);  [CE]  cannot  find  symbol  seq  [FE]                  AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(seq[0],  this.seq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookup).put(seq[0],  this.seq[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(sz[0],    seq[1]);    	non-compiled	[CE]  cannot  find  symbol  seq	14	None	replace
209	[BUG]  [BUGGY]  int  _shortest  =(sz  >  0)?  0  :  sz;  [CE]  cannot  find  symbol  sz  [FE]    AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =(sz  >  0)?  0  :  sz;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =(sz  >  0)?  0  :  sz;	  int    _shortest    =    0;    	non-compiled	[CE]  cannot  find  symbol  sz	85	None	replace
210	[BUG]  [BUGGY]  int  _shortest  =(sz  >  0)?  0  :  1;  [CE]  cannot  find  symbol  sz  [FE]      AssertionError    [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  _shortest  =(sz  >  0)?  0  :  1;  [BUGGY]      int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  _shortest  =(sz  >  0)?  0  :  1;	  int    _shortest    =    0;    	non-compiled	[CE]  cannot  find  symbol  sz	85	None	replace
211	[BUG]  [BUGGY]  int  sz  =(this.lookupMap!=  null)?  this.lookupMap.size()  :  1;  [CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)  [FE]            AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  int  sz  =(this.lookupMap!=  null)?  this.lookupMap.size()  :  1;  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	int  sz  =(this.lookupMap!=  null)?  this.lookupMap.size()  :  1;	  int    sz    =    this.lookupMap.size()    -    1;    	non-compiled	[CE]  variable  sz  is  already  defined  in  constructor  LookupTranslator(CharSequence[]...)	38	None	replace
212	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sq[0],  this.sq[1]);  [CE]  cannot  find  symbol  sq  [FE]                      AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sq[0],  this.sq[1]);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookup).put(sq[0],  this.sq[1]);	  ((    HashMap    <    CharSequence,    CharSequence>)lookup).put(sq[0],    sq[1]);    	non-compiled	[CE]  cannot  find  symbol  sq	16	None	replace
213	[BUG]  [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  longest);  [CE]  cannot  find  symbol  sz  [FE]                        AssertionError      [CONTEXT]      public  LookupTranslator(final  CharSequence[]...  lookup)  {  lookupMap  =  new  HashMap<CharSequence,  CharSequence>();      [BUGGY]  ((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  longest);  [BUGGY]      int  _shortest  =  Integer.MAX_VALUE;  int  _longest  =  0;  if  (lookup  !=  null)  {  for  (final  CharSequence[]  seq  :  lookup)  {  this.lookupMap.put(seq[0],  seq[1]);  final  int  sz  =  seq[0].length();  if  (sz  <  _shortest)  {  _shortest  =  sz;  }  if  (sz  >  _longest)  {  _longest  =  sz;  [CLASS]  LookupTranslator  [METHOD]  <init>  [RETURN_TYPE]  CharSequence[][])  lookup  [VARIABLES]  CharSequence[]  seq  boolean  HashMap  lookupMap  int  _longest  _shortest  longest  shortest  sz  CharSequence[][]  lookup  	projects/Lang4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java	0.7071067811865475	47	47	1	replace	((  HashMap  <  CharSequence,  CharSequence>)lookupMap).put(sz[0],  longest);	  ((    HashMap    <    CharSequence,    CharSequence>)lookupMap).put(sz[0],    sz);    	non-compiled	[CE]  cannot  find  symbol  sz	36	None	replace
