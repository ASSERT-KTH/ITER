bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
8	[BUG] [BUGGY] break generationLoop; [FE] AssertionError [CONTEXT] double bestFitness = fitness[arindex[0]]; double worstFitness = fitness[arindex[arindex.length-1]]; if (bestValue > bestFitness) { bestValue = bestFitness; lastResult = optimum; optimum = new PointValuePair( fitfun.repairAndDecode(bestArx.getColumn(0)), isMinimize ? bestFitness : -bestFitness); if (getConvergenceChecker() != null && lastResult != null) { if (getConvergenceChecker().converged(iterations, optimum, lastResult)) { [BUGGY] break generationLoop; [BUGGY] } } }   if (stopFitness != 0) { // only if stopFitness is defined if (bestFitness < (isMinimize ? stopFitness : -stopFitness)) { break generationLoop; } } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean DEFAULT_ISACTIVECMA generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random PointValuePair current lastResult optimum  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	1.0	423	423	1	replace	
9	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double bestFitness = fitness[arindex[0]]; double worstFitness = fitness[arindex[arindex.length-1]]; if (bestValue > bestFitness) { bestValue = bestFitness; lastResult = optimum; optimum = new PointValuePair( fitfun.repairAndDecode(bestArx.getColumn(0)), isMinimize ? bestFitness : -bestFitness); if (getConvergenceChecker() != null && lastResult != null) { if (getConvergenceChecker().converged(iterations, optimum, lastResult)) { [BUGGY] [BUGGY] break generationLoop; } } }   if (stopFitness != 0) { // only if stopFitness is defined if (bestFitness < (isMinimize ? stopFitness : -stopFitness)) { break generationLoop; } } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean DEFAULT_ISACTIVECMA generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random PointValuePair current lastResult optimum  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	1.0	423	423	1	add	
