bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
40	[BUG] [BUGGY] double bestValue = fitfun.value(guess); [FE] AssertionError [CONTEXT] protected PointValuePair doOptimize() { checkParameters();  isMinimize = getGoalType().equals(GoalType.MINIMIZE); final FitnessFunction fitfun = new FitnessFunction(); final double[] guess = fitfun.encode(getStartPoint());  dimension = guess.length; initializeCMA(guess); iterations = 0; [BUGGY] double bestValue = fitfun.value(guess); [BUGGY] push(fitnessHistory, bestValue); PointValuePair optimum = new PointValuePair(getStartPoint(), isMinimize ? bestValue : -bestValue); PointValuePair lastResult = null;   generationLoop: for (iterations = 1; iterations <= maxIterations; iterations++) {  [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean DEFAULT_ISACTIVECMA generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random PointValuePair current lastResult optimum  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2773500981126146	359	359	1	replace	
41	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] protected PointValuePair doOptimize() { checkParameters();  isMinimize = getGoalType().equals(GoalType.MINIMIZE); final FitnessFunction fitfun = new FitnessFunction(); final double[] guess = fitfun.encode(getStartPoint());  dimension = guess.length; initializeCMA(guess); iterations = 0; [BUGGY] [BUGGY] double bestValue = fitfun.value(guess); push(fitnessHistory, bestValue); PointValuePair optimum = new PointValuePair(getStartPoint(), isMinimize ? bestValue : -bestValue); PointValuePair lastResult = null;   generationLoop: for (iterations = 1; iterations <= maxIterations; iterations++) {  [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] doOptimize [RETURN_TYPE] PointValuePair  [VARIABLES] TooManyEvaluationsException e boolean DEFAULT_ISACTIVECMA generateStatistics hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess inputSigma pcCol sqrtDiagC RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory FitnessFunction fitfun int[] arindex int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random PointValuePair current lastResult optimum  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2773500981126146	359	359	1	add	
