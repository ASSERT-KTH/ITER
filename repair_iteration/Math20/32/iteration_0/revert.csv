projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java378arxk=xmean.add(BD.multiply(arz.getColumnMatrix(k)).scalarMultiply(sigma));//m+sig*Normal(0,C)}else{
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java378arxk=xmean.add(times(diagD,arz.getColumnMatrix(k)).scalarMultiply(sigma));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java378Arxk=xmean.add(times(diagD,arz.getColumnMatrix(k)).scalarMultiply(sigma));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java378
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java378Fitfunfitfun=Fitfun.getInstance();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java378Fitfunfitfun=Fitfun.getInstance(dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java378Fitfunfitfun=Fitfun.getFunction(i);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java378sig=xmean.add(times(diagD,arz.getRowMatrix(k)));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java378sig=xmean.add(times(diagD,arz.getRowMatrix(i)));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java378sig=xmean.add(times(diagD,arz.getDiagC()));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java378sig=xmean.add(times(diagD,arz.getColumnMatrix(k)).scalarMultiply(sigma));
