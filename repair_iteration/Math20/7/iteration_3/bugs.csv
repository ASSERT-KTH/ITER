bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  lB  =(double[])Math.rint((  double[])null);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  lB  =(double[])Math.rint((  double[])null);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	double  lB  =(double[])Math.rint((  double[])null);	  float    lB    =(float)Math.rint((    double[])null);    	non-compiled	[CE]  	3	None	replace
2	[BUG]  [BUGGY]  double  lB  =(double)Math.rint(generateStatistics,  hasFiniteBounds);  [CE]  [FE]              AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  lB  =(double)Math.rint(generateStatistics,  hasFiniteBounds);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	double  lB  =(double)Math.rint(generateStatistics,  hasFiniteBounds);	  double    lB    =(double)Math.rint(generateStatistics);    	non-compiled	[CE]  	13	None	replace
3	[BUG]  [BUGGY]  păterBounds  =  hasInfiniteBounds?  boundaries[0]  :  null;  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  păterBounds  =  hasInfiniteBounds?  boundaries[0]  :  null;  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	păterBounds  =  hasInfiniteBounds?  boundaries[0]  :  null;	  if(hasInfiniteBounds)    {    throw    new    MathUnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  	27	None	replace
4	[BUG]  [BUGGY]  păterBounds  =  hasInfiniteBounds?  boundaries[0]  :  1;  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  păterBounds  =  hasInfiniteBounds?  boundaries[0]  :  1;  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	păterBounds  =  hasInfiniteBounds?  boundaries[0]  :  1;	  if(hasInfiniteBounds)    {    throw    new    MathUnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  	27	None	replace
5	[BUG]  [BUGGY]  int  uB  =  getInputSigma().length  -  1;  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getInputSigma().length  -  1;  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  uB  =  getInputSigma().length  -  1;	  int    uB    =    getInputSigma().length;    	non-compiled	[CE]  	5	None	replace
6	[BUG]  [BUGGY]  int  uB  =  getInputSigma().length  +  1;  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getInputSigma().length  +  1;  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  uB  =  getInputSigma().length  +  1;	  int    uB    =    getInputSigma().length;    	non-compiled	[CE]  	5	None	replace
7	[BUG]  [BUGGY]  Integer  uB  =  getFiniteBounds(true);  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  Integer  uB  =  getFiniteBounds(true);  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	Integer  uB  =  getFiniteBounds(true);	  Integer    uB    =    getFiniteBounds(false);    	non-compiled	[CE]  	19	None	replace
8	[BUG]  [BUGGY]  Integer  uB  =  getFiniteBounds(0);  [CE]  [FE]                    AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  Integer  uB  =  getFiniteBounds(0);  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	Integer  uB  =  getFiniteBounds(0);	  Integer    uB    =    getFiniteBounds(false);    	non-compiled	[CE]  	19	None	replace
9	[BUG]  [BUGGY]  lB  =  Math.min(2,  lB.length);  [CE]  [FE]            AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  lB  =  Math.min(2,  lB.length);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	lB  =  Math.min(2,  lB.length);	  lB    =    Math.min(1,    lB.length);    	non-compiled	[CE]  	23	None	replace
10	[BUG]  [BUGGY]  int  lB  =  getInfiniteBounds()  +  1;  [CE]  [FE]              AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  getInfiniteBounds()  +  1;  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =  getInfiniteBounds()  +  1;	  int    lB    =    getInfiniteBounds();    	non-compiled	[CE]  	9	None	replace
11	[BUG]  [BUGGY]  int  lB  =  getInputSigma().length  -  2;  [CE]  [FE]              AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  getInputSigma().length  -  2;  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =  getInputSigma().length  -  2;	  int    lB    =    getInputSigma().length    -    1;    	non-compiled	[CE]  	15	None	replace
12	[BUG]  [BUGGY]  int  lB  =(int)Math.rint((  double[])null,  boundaries[1]);  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =(int)Math.rint((  double[])null,  boundaries[1]);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =(int)Math.rint((  double[])null,  boundaries[1]);	  int    lB    =(int)Math.rint((    double[])null,    boundaries[0]);    	non-compiled	[CE]  	4	None	replace
13	[BUG]  [BUGGY]  int  lB  =  getFitness()  +  1;  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  getFitness()  +  1;  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =  getFitness()  +  1;	  int    lB    =    getFitness();    	non-compiled	[CE]  	10	None	replace
14	[BUG]  [BUGGY]  double  lB  =  getFitness();  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  lB  =  getFitness();  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	double  lB  =  getFitness();	  int    lB    =    getFitness();    	non-compiled	[CE]  	10	None	replace
15	[BUG]  [BUGGY]  safeFitness(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeFitness(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	safeFitness(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }	  if(hasInfiniteBounds)    {    throw    new    MathUnsupportedOperationException();    }    	non-compiled	[CE]  	28	None	replace
16	[BUG]  [BUGGY]  păterBounds  =  hasInfiniteBounds;  [CE]  [FE]                    AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  păterBounds  =  hasInfiniteBounds;  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	păterBounds  =  hasInfiniteBounds;	  if(hasInfiniteBounds)    {    throw    new    MathUnsupportedOperationException();    }    	non-compiled	[CE]  	28	None	replace
17	[BUG]  [BUGGY]  uB  =  Math.max(0,  Math.min(2,  boundaries.length));  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  uB  =  Math.max(0,  Math.min(2,  boundaries.length));  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	uB  =  Math.max(0,  Math.min(2,  boundaries.length));	  uB    =    Math.max(0,    Math.min(1,    boundaries.length));    	non-compiled	[CE]  	6	None	replace
18	[BUG]  [BUGGY]  uB  =  Math.max(0,  Math.min(1,  boundaries.length  +  1));  [CE]  [FE]                    AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  uB  =  Math.max(0,  Math.min(1,  boundaries.length  +  1));  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	uB  =  Math.max(0,  Math.min(1,  boundaries.length  +  1));	  uB    =    Math.max(0,    Math.min(1,    boundaries.length));    	non-compiled	[CE]  	6	None	replace
19	[BUG]  [BUGGY]  boundaries[2]  =  uB;  [CE]  [FE]              AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  boundaries[2]  =  uB;  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	boundaries[2]  =  uB;	  boundaries[1]    =    uB;    	non-compiled	[CE]  	22	None	replace
20	[BUG]  [BUGGY]  int  uB  =  getFiniteBounds(false);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFiniteBounds(false);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  uB  =  getFiniteBounds(false);	  int    uB    =    getFiniteBounds(true);    	non-compiled	[CE]  	24	None	replace
21	[BUG]  [BUGGY]  int  uB  =  getFiniteBounds(false,  true);  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFiniteBounds(false,  true);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  uB  =  getFiniteBounds(false,  true);	  int    uB    =    getFiniteBounds(true);    	non-compiled	[CE]  	24	None	replace
22	[BUG]  [BUGGY]  Integer  uB  =  getFitness()  +  1;  [CE]  [FE]              AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  Integer  uB  =  getFitness()  +  1;  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	Integer  uB  =  getFitness()  +  1;	  Integer    uB    =    getFitness();    	non-compiled	[CE]  	2	None	replace
23	[BUG]  [BUGGY]  float  lB  =(float)Math.rint((  float)generateStatistics);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  float  lB  =(float)Math.rint((  float)generateStatistics);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	float  lB  =(float)Math.rint((  float)generateStatistics);	  int    lB    =(int)Math.rint((    int)generateStatistics);    	non-compiled	[CE]  	21	None	replace
24	[BUG]  [BUGGY]  int  lB  =(int)Math.rint((  double[])null,  dataArea,  boundaries);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =(int)Math.rint((  double[])null,  dataArea,  boundaries);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =(int)Math.rint((  double[])null,  dataArea,  boundaries);	  int    lB    =(int)Math.rint((    double[])null,    boundaries);    	non-compiled	[CE]  	17	None	replace
25	[BUG]  [BUGGY]  int  lB  =(int)Math.rint((  double[])null,  0,  boundaries);  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =(int)Math.rint((  double[])null,  0,  boundaries);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =(int)Math.rint((  double[])null,  0,  boundaries);	  int    lB    =(int)Math.rint((    double[])null,    boundaries);    	non-compiled	[CE]  	17	None	replace
26	[BUG]  [BUGGY]  double  lB  =(double)Math.rint((  double[])null,  boundaries[0]);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  lB  =(double)Math.rint((  double[])null,  boundaries[0]);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	double  lB  =(double)Math.rint((  double[])null,  boundaries[0]);	  double    lB    =(double)Math.rint((    double[])null);    	non-compiled	[CE]  	26	None	replace
27	[BUG]  [BUGGY]  int  lB  =  getFiniteBounds(2);  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  getFiniteBounds(2);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =  getFiniteBounds(2);	  int    lB    =    getFiniteBounds(0);    	non-compiled	[CE]  	12	None	replace
28	[BUG]  [BUGGY]  int  lB  =  getFiniteBounds(1);  [CE]  [FE]                    AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  getFiniteBounds(1);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =  getFiniteBounds(1);	  int    lB    =    getFiniteBounds(0);    	non-compiled	[CE]  	12	None	replace
29	[BUG]  [BUGGY]  int  lB  =  getFiniteBounds(false,  true);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  getFiniteBounds(false,  true);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =  getFiniteBounds(false,  true);	  int    lB    =    getFiniteBounds(true);    	non-compiled	[CE]  	11	None	replace
30	[BUG]  [BUGGY]  int  lB  =  getFitnessBounds(false);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  getFitnessBounds(false);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =  getFitnessBounds(false);	  int    lB    =    getFitnessBounds(true);    	non-compiled	[CE]  	25	None	replace
31	[BUG]  [BUGGY]  int  lB  =  getFitnessBounds(false,  false);  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  getFitnessBounds(false,  false);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =  getFitnessBounds(false,  false);	  int    lB    =    getFitnessBounds(true);    	non-compiled	[CE]  	25	None	replace
32	[BUG]  [BUGGY]  int  uB  =  getFitness();  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFitness();  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  uB  =  getFitness();	  int    uB    =    getFiniteBounds();    	non-compiled	[CE]  	18	None	replace
33	[BUG]  [BUGGY]  int  uB  =  getInfiniteBounds();  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getInfiniteBounds();  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  uB  =  getInfiniteBounds();	  int    uB    =    getFiniteBounds();    	non-compiled	[CE]  	18	None	replace
34	[BUG]  [BUGGY]  int  lB  =  getInputSigma().length  +  2;  [CE]  [FE]            AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  getInputSigma().length  +  2;  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =  getInputSigma().length  +  2;	  int    lB    =    getInputSigma().length    +    1;    	non-compiled	[CE]  	14	None	replace
35	[BUG]  [BUGGY]  safeThan  <  Math.min(0,  boundaries.length  -  1))  {  throw  new  MathUnsupportedOperationException( " ");  }  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeThan  <  Math.min(0,  boundaries.length  -  1))  {  throw  new  MathUnsupportedOperationException( " ");  }  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	safeThan  <  Math.min(0,  boundaries.length  -  1))  {  throw  new  MathUnsupportedOperationException( " ");  }	  if(hasInfiniteBounds)    {    throw    new    MathUnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  	27	None	replace
36	[BUG]  [BUGGY]  safeThan  <  Math.min(0,  boundaries.length  -  1))  {  throw  new  MathUnsupportedOperationException();  }  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeThan  <  Math.min(0,  boundaries.length  -  1))  {  throw  new  MathUnsupportedOperationException();  }  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	safeThan  <  Math.min(0,  boundaries.length  -  1))  {  throw  new  MathUnsupportedOperationException();  }	  if(hasInfiniteBounds)    {    throw    new    MathUnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  	27	None	replace
37	[BUG]  [BUGGY]  lB  =  Math.min(0,  lB.length  -  2);  [CE]  [FE]            AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  lB  =  Math.min(0,  lB.length  -  2);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	lB  =  Math.min(0,  lB.length  -  2);	  lB    =    Math.min(0,    lB.length    -    1);    	non-compiled	[CE]  	7	None	replace
38	[BUG]  [BUGGY]  int  lB  =  getFiniteBounds(false,  false);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  getFiniteBounds(false,  false);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =  getFiniteBounds(false,  false);	  int    lB    =    getFiniteBounds(true);    	non-compiled	[CE]  	11	None	replace
39	[BUG]  [BUGGY]  float  lB  =(float)Math.rint((  double[])null,  boundaries);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  float  lB  =(float)Math.rint((  double[])null,  boundaries);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	float  lB  =(float)Math.rint((  double[])null,  boundaries);	  float    lB    =(float)Math.rint((    double[])null);    	non-compiled	[CE]  	3	None	replace
40	[BUG]  [BUGGY]  Integer  uB  =  getFitness(lB);  [CE]  [FE]              AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  Integer  uB  =  getFitness(lB);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	Integer  uB  =  getFitness(lB);	  Integer    uB    =    getFitness();    	non-compiled	[CE]  	2	None	replace
41	[BUG]  [BUGGY]  double  lB  =(double)Math.rint((  double[])null,  boundaries);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  lB  =(double)Math.rint((  double[])null,  boundaries);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	double  lB  =(double)Math.rint((  double[])null,  boundaries);	  double    lB    =(double)Math.rint((    double[])null);    	non-compiled	[CE]  	26	None	replace
42	[BUG]  [BUGGY]  float  lB  =(float)Math.rint(generateStatistics,  hasFiniteBounds);  [CE]  [FE]              AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  float  lB  =(float)Math.rint(generateStatistics,  hasFiniteBounds);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	float  lB  =(float)Math.rint(generateStatistics,  hasFiniteBounds);	  float    lB    =(float)Math.rint(generateStatistics);    	non-compiled	[CE]  	20	None	replace
43	[BUG]  [BUGGY]  safeThan  <  Math.max(0,  boundaries.length  -  1))  {  throw  new  MathUnsupportedOperationException();  }  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeThan  <  Math.max(0,  boundaries.length  -  1))  {  throw  new  MathUnsupportedOperationException();  }  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	safeThan  <  Math.max(0,  boundaries.length  -  1))  {  throw  new  MathUnsupportedOperationException();  }	  if(hasInfiniteBounds)    {    throw    new    MathUnsupportedOperationException();    }    	non-compiled	[CE]  	28	None	replace
44	[BUG]  [BUGGY]  int  uB  =  getFiniteBounds(false,  false);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFiniteBounds(false,  false);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  uB  =  getFiniteBounds(false,  false);	  int    uB    =    getFiniteBounds(true);    	non-compiled	[CE]  	24	None	replace
45	[BUG]  [BUGGY]  float  lB  =(float)Math.rint((  double[])null,  boundaries[0]);  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  float  lB  =(float)Math.rint((  double[])null,  boundaries[0]);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	float  lB  =(float)Math.rint((  double[])null,  boundaries[0]);	  int    lB    =(int)Math.rint((    double[])null,    boundaries[0]);    	non-compiled	[CE]  	4	None	replace
46	[BUG]  [BUGGY]  int  uB  =  getFiniteBounds()  +  1;  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFiniteBounds()  +  1;  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  uB  =  getFiniteBounds()  +  1;	  int    uB    =    getFiniteBounds();    	non-compiled	[CE]  	18	None	replace
47	[BUG]  [BUGGY]  int  lB  =  getStandardFitness();  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  getStandardFitness();  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =  getStandardFitness();	  int    lB    =    getFitness();    	non-compiled	[CE]  	10	None	replace
48	[BUG]  [BUGGY]  Städten  uB  =  StatisticsFunction.getInstance(DateTimeUtils.currentTimeMillis());  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  Städten  uB  =  StatisticsFunction.getInstance(DateTimeUtils.currentTimeMillis());  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	Städten  uB  =  StatisticsFunction.getInstance(DateTimeUtils.currentTimeMillis());	  if(hasInfiniteBounds)    {    throw    new    MathUnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  	27	None	replace
49	[BUG]  [BUGGY]  Städten  uB  =  StatisticsFunction.getInstance( "FiniteBounds ");  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  Städten  uB  =  StatisticsFunction.getInstance( "FiniteBounds ");  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	Städten  uB  =  StatisticsFunction.getInstance( "FiniteBounds ");	  if(hasInfiniteBounds)    {    throw    new    MathUnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  	27	None	replace
50	[BUG]  [BUGGY]  Integer  uB  =  getFitnessBounds(true);  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  Integer  uB  =  getFitnessBounds(true);  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	Integer  uB  =  getFitnessBounds(true);	  Integer    uB    =    getFiniteBounds(false);    	non-compiled	[CE]  	19	None	replace
51	[BUG]  [BUGGY]  double  uB  =  getFiniteBounds();  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  uB  =  getFiniteBounds();  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	double  uB  =  getFiniteBounds();	  int    uB    =    getFiniteBounds();    	non-compiled	[CE]  	18	None	replace
52	[BUG]  [BUGGY]  double  lB  =  getInfiniteBounds();  [CE]  [FE]              AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  lB  =  getInfiniteBounds();  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	double  lB  =  getInfiniteBounds();	  int    lB    =    getInfiniteBounds();    	non-compiled	[CE]  	9	None	replace
53	[BUG]  [BUGGY]  double  lB  =(double)Math.rint((  double[])null,  dataArea);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  lB  =(double)Math.rint((  double[])null,  dataArea);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	double  lB  =(double)Math.rint((  double[])null,  dataArea);	  double    lB    =(double)Math.rint((    double[])null);    	non-compiled	[CE]  	26	None	replace
54	[BUG]  [BUGGY]  float  lB  =(float)Math.rint((  double[])null,  dataArea);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  float  lB  =(float)Math.rint((  double[])null,  dataArea);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	float  lB  =(float)Math.rint((  double[])null,  dataArea);	  float    lB    =(float)Math.rint((    double[])null);    	non-compiled	[CE]  	3	None	replace
55	[BUG]  [BUGGY]  double  lB  =  getFiniteBounds(1);  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  lB  =  getFiniteBounds(1);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	double  lB  =  getFiniteBounds(1);	  int    lB    =    getFiniteBounds(0);    	non-compiled	[CE]  	12	None	replace
56	[BUG]  [BUGGY]  int  lB  =  getInfiniteBounds(1);  [CE]  [FE]                    AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  getInfiniteBounds(1);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	int  lB  =  getInfiniteBounds(1);	  int    lB    =    getFiniteBounds(0);    	non-compiled	[CE]  	12	None	replace
57	[BUG]  [BUGGY]  double  lB  =  getFitnessBounds(true);  [CE]  [FE]                AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  lB  =  getFitnessBounds(true);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	double  lB  =  getFitnessBounds(true);	  int    lB    =    getFitnessBounds(true);    	non-compiled	[CE]  	25	None	replace
58	[BUG]  [BUGGY]  if(hasFiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  if(hasFiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	if(hasFiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }	  if(hasInfiniteBounds)    {    throw    new    MathUnsupportedOperationException();    }    	non-compiled	[CE]  	28	None	replace
59	[BUG]  [BUGGY]  if(hasInfiniteBounds  ||  hasFiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [CE]  [FE]                    AssertionError      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  if(hasInfiniteBounds  ||  hasFiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	530	530	1	replace	if(hasInfiniteBounds  ||  hasFiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }	  if(hasInfiniteBounds)    {    throw    new    MathUnsupportedOperationException();    }    	non-compiled	[CE]  	28	None	replace
