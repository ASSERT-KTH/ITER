projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357initializeCMA(guess);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357checkParameters();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357ensureCapacity(dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357if(dimension==0){for(inti=0;i<dimension.length;++i){checkParameters();}
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357if(dimension!=0){for(inti=0;i<dimension.length;++i){checkParameters();}
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357if(dimension==0){for(inti=0;i<dimension.length;i++){checkParameters();}
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357if(dimension!=0){for(inti=0;i<dimensions.length;++i){checkParameters(i,dimension);}
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357if(dimension!=0){for(inti=0;i<dimensions.length;++i){checkParameters();}
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357if(dimension!=0){for(inti=0;i<dimensions.length;++i){checkParameters(i);}
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357validate(guess);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357if(dimension!=0){for(inti=0;i<dimension.length;++i){addFitness(fitfun.value(dimension[i]));}
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357if(dimension==0){thrownewIllegalArgumentException("");}
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357if(dimension!=0){for(inti=0;i<dimensions.length;++i){addFitness(fitfun.value(dimension);}
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357luate();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357dimension=dimension.length;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357luate(dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357ensureCapacity(dimension-1);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Injectables.checkState(dimension!=0);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Injectables.checkNotNull(guess);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Dimensiondimension=dimension.length;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357checkStatistics();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Injectables.checkState(dimension==0);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357nested=true;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357validate(dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357validate(guess,dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Dimensiondimension=dimension.getWidth();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357IntegerinitializeCMA(dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357IntegerbestValue=getStandardValue();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357IntegerbestValue=getMinimumValue();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Integeri=getInitialValue();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357intdimensions=getDimensions();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357intdimension=dimension.length;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357checkParameter(dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Integeri=addFitness(fitfun.value(dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Integer[]dimensions=fitfun.getDimensions();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357if(dimension!=0){validate(guess);}else{checkParameters();}
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357if(dimension==0){validate(guess);}else{checkParameters();}
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357MutableFitnessHistory.checkState(dimension==0);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357MutableFitnessHistory.checkState(dimension!=0);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357MutableFitnessHistory.this.addFitness(fitfun.value(dimension[i]));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357MutableFitnessHistory.this.addFitness(fitfun.value(dimension[0]));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357doublebestValue=fitfun.value(dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357if(dimension!=0){for(inti=0;i<dimension.length;++i){ensureCapacity(i,dimension[i]);}
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357MutableFitnessHistory.this.addFitness(fitfun.value(dimension,guess[i]));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Injectables.checkState(dimension==1);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Injectables.checkNotNull(dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Injectables.checkArgument(dimension!=null);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357validate(guess,dimension,iterations);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Integeri=getInitialValue().doubleValue();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357MutableFitnessHistory.this.addFitness(fitfun.value(dimension[1]));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357MutableFitnessHistory.checkState(dimension==1);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357luate(guess);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357IntegerbestValue=getMaximumValue();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357ensureCapacity(dimension-2);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357doublebestValue=fitfun.value(dimension-1);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357intdimensions=getDimensions()-1;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357intdimensions=getDimensions()+1;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357intdimension=guess.length;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357doubledimension=dimension.length;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357IntegerbestValue=getStandardValue()-dimension;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357checkParameter(guess);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Dimensiondimension=fitfun.getWidth();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Dimensiondimension=guess.getWidth();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357ensureCapacity(dimension,dimension[i]);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357ensureCapacity(dimension,dimension[0]);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Dimensiondimension=guess.length;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Dimensiondimension=fitfun.length;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Integer[]dimensions=fitfun.encode(getDimensions());
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357dimension=guess.length;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357dimension-=dimension.length;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357IntegerinitializeCMA(guess);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357IntegerinitializeCMA(guess,dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Integeri=addFitness(fitfun.value(dimension));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Integeri=addFitness(fitfun.value(dimension+1));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357nested=false;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Injectables.checkArgument(dimension!=0);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357luate(dimension,guess);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357intdimensions=getDimensions()+dimension;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357intdimensions=getDimensions()-dimension;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357luate(guess,dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357IntegerinitializeCMA(dimension,guess);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Dimensiondimension=dimension.length-1;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Integeri=getInitialValue()+dimension;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357MutableFitnessHistory.this.addFitness(fitfun.value(dimension,dimension[i]));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357MutableFitnessHistory.this.addFitness(fitfun.value(dimension,dimension[0]));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357MutableFitnessHistory.this.addFitness(fitfun.value(dimension,guess[0]));
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Dimensiondimension=data.getWidth();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357validate(dimension,guess);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357dimension=dimension.length-1;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357IntegerbestValue=getStandardValue()+dimension;
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357ensureCapacity(dimension*1);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357IntegerbestValue=getStandardValue(dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357checkInputStatistics();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Dimensiondimension=dimension.getHeight();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357validate(guess,dimension,0);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357checkParameters(dimension);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357if(dimension!=1){thrownewIllegalArgumentException("");}
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357MutableFitnessHistory.checkState(dimension!=1);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Iterator<Dimension>iterations=dimension.iterator();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357Iterations=dimension.iterator().next();
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357luate(dimension,true);
projects/Math20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java357dimension=dimension!=null?dimension.length:1;
