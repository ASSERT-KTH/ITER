bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] coefficients[i] = 0; [FE] AssertionError testMath286 [CONTEXT] protected RealPointValuePair getSolution() { double[] coefficients = new double[getOriginalNumDecisionVariables()]; Integer negativeVarBasicRow = getBasicRow(getNegativeDecisionVariableOffset()); double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset()); Set<Integer> basicRows = new HashSet<Integer>(); for (int i = 0; i < coefficients.length; i++) { Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i); if (basicRows.contains(basicRow)) {   [BUGGY] coefficients[i] = 0; [BUGGY] } else { basicRows.add(basicRow); coefficients[i] = (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative); } } return new RealPointValuePair(coefficients, f.getValue(coefficients)); } [CLASS] SimplexTableau [METHOD] getSolution [RETURN_TYPE] RealPointValuePair  [VARIABLES] Integer basicRow negativeVarBasicRow boolean ignoreObjectiveRows maximize restrictToNonNegative Set basicRows RealMatrix tableau double[] coefficients double coefficient epsilon mostNegative sum LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar col count destPos height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.5	349	349	1	replace	
2	[BUG] [BUGGY] [FE] AssertionError testMath286 [CONTEXT] protected RealPointValuePair getSolution() { double[] coefficients = new double[getOriginalNumDecisionVariables()]; Integer negativeVarBasicRow = getBasicRow(getNegativeDecisionVariableOffset()); double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset()); Set<Integer> basicRows = new HashSet<Integer>(); for (int i = 0; i < coefficients.length; i++) { Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i); if (basicRows.contains(basicRow)) {   [BUGGY] [BUGGY] coefficients[i] = 0; } else { basicRows.add(basicRow); coefficients[i] = (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative); } } return new RealPointValuePair(coefficients, f.getValue(coefficients)); } [CLASS] SimplexTableau [METHOD] getSolution [RETURN_TYPE] RealPointValuePair  [VARIABLES] Integer basicRow negativeVarBasicRow boolean ignoreObjectiveRows maximize restrictToNonNegative Set basicRows RealMatrix tableau double[] coefficients double coefficient epsilon mostNegative sum LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar col count destPos height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.5	349	349	1	add	
3	[BUG] [BUGGY] return null; [FE] AssertionError testMath286 [CONTEXT] private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) { Integer row = null; int start = getNumObjectiveFunctions(); for (int i = start; i < getHeight(); i++) { if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) { row = i; } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) { [BUGGY] return null; [BUGGY] } } return row; } [CLASS] SimplexTableau [METHOD] getBasicRow [RETURN_TYPE] Integer  final int col boolean ignoreObjectiveRows [VARIABLES] Integer row boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar col count height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	
4	[BUG] [BUGGY] [FE] AssertionError testMath286 [CONTEXT] private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) { Integer row = null; int start = getNumObjectiveFunctions(); for (int i = start; i < getHeight(); i++) { if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) { row = i; } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) { [BUGGY] [BUGGY] return null; } } return row; } [CLASS] SimplexTableau [METHOD] getBasicRow [RETURN_TYPE] Integer  final int col boolean ignoreObjectiveRows [VARIABLES] Integer row boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar col count height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	add	
5	[BUG] [BUGGY] int width = getWidth() - numArtificialVariables - 1; [FE] AssertionError testMath286 [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { return; } [BUGGY] int width = getWidth() - numArtificialVariables - 1; [BUGGY] int height = getHeight() - 1; double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	310	310	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError testMath286 [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { return; } [BUGGY] [BUGGY] int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	310	310	1	add	
7	[BUG] [BUGGY] int height = getHeight() - 1; [FE] AssertionError testMath286 [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { return; } int width = getWidth() - numArtificialVariables - 1; [BUGGY] int height = getHeight() - 1; [BUGGY] double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	311	311	1	replace	
8	[BUG] [BUGGY] [FE] AssertionError testMath286 [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { return; } int width = getWidth() - numArtificialVariables - 1; [BUGGY] [BUGGY] int height = getHeight() - 1; double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	311	311	1	add	
9	[BUG] [BUGGY] double[][] matrix = new double[height][width]; [FE] AssertionError testMath286 [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { return; } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; [BUGGY] double[][] matrix = new double[height][width]; [BUGGY] for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	312	312	1	replace	
10	[BUG] [BUGGY] [FE] AssertionError testMath286 [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { return; } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; [BUGGY] [BUGGY] double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	312	312	1	add	
11	[BUG] [BUGGY] for (int i = 0; i < height; i++) { [FE] AssertionError testMath286 [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { return; } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; double[][] matrix = new double[height][width]; [BUGGY] for (int i = 0; i < height; i++) { [BUGGY] for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	313	313	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError testMath286 [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { return; } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; double[][] matrix = new double[height][width]; [BUGGY] [BUGGY] for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	313	313	1	add	
13	[BUG] [BUGGY] for (int j = 0; j < width - 1; j++) { [FE] AssertionError testMath286 [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { return; } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { [BUGGY] for (int j = 0; j < width - 1; j++) { [BUGGY] matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	314	314	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError testMath286 [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { return; } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { [BUGGY] [BUGGY] for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	314	314	1	add	
15	[BUG] [BUGGY] matrix[i][j] = getEntry(i + 1, j + 1); [FE] AssertionError testMath286 [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { return; } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { [BUGGY] matrix[i][j] = getEntry(i + 1, j + 1); [BUGGY] } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	315	315	1	replace	
16	[BUG] [BUGGY] [FE] AssertionError testMath286 [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { return; } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { [BUGGY] [BUGGY] matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	315	315	1	add	
17	[BUG] [BUGGY] matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); [FE] AssertionError testMath286 [CONTEXT] if (numArtificialVariables == 0) { return; } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } [BUGGY] matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); [BUGGY] } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	
18	[BUG] [BUGGY] [FE] AssertionError testMath286 [CONTEXT] if (numArtificialVariables == 0) { return; } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } [BUGGY] [BUGGY] matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	add	
19	[BUG] [BUGGY] this.tableau = new Array2DRowRealMatrix(matrix); [FE] AssertionError testMath286 [CONTEXT] } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } [BUGGY] this.tableau = new Array2DRowRealMatrix(matrix); [BUGGY] this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	319	319	1	replace	
20	[BUG] [BUGGY] [FE] AssertionError testMath286 [CONTEXT] } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } [BUGGY] [BUGGY] this.tableau = new Array2DRowRealMatrix(matrix); this.numArtificialVariables = 0; } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean ignoreObjectiveRows maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar start width zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	319	319	1	add	
