bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;	  int    zIndex    =(getNumObjectiveFunctions()    <    1)?    0    :    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2	[BUG]  [BUGGY]  Integer  zIndex  =  getNumObjectiveFunctions().size();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Integer  zIndex  =  getNumObjectiveFunctions().size();  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	Integer  zIndex  =  getNumObjectiveFunctions().size();	  int    zIndex    =    getNumObjectiveFunctions().size()    +    2;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
3	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length  -  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().length  -  1;	  int    zIndex    =    getNumObjectiveFunctions().length;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
4	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length  -  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length  -  2;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().length  -  2;	  int    zIndex    =    getNumObjectiveFunctions().length;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
5	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length  +  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().length  +  1;	  int    zIndex    =    getNumObjectiveFunctions().length;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
6	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length  +  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length  +  2;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().length  +  2;	  int    zIndex    =    getNumObjectiveFunctions().length;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
7	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  +  1;  matrix[0][0]  =  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  +  1;  matrix[0][0]  =  0;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().size()  +  1;  matrix[0][0]  =  0;	  int    zIndex    =    getNumObjectiveFunctions().size();    matrix[0][0]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
8	[BUG]  [BUGGY]  Matrix[0][0]  =  -1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Matrix[0][0]  =  -1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	Matrix[0][0]  =  -1;	  int    zIndex    =    getNumObjectiveFunctions().size()    +    1;    matrix[0][0]    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
9	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions(1)  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions(1)  +  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions(1)  +  1;	  int    zIndex    =    getNumObjectiveFunctions(1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
10	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions(4);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions(4);  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions(4);	  int    zIndex    =    getNumObjectiveFunctions(1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
11	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions(3);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions(3);  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions(3);	  int    zIndex    =    getNumObjectiveFunctions(1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
12	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions(2)  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions(2)  +  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions(2)  +  1;	  int    zIndex    =    getNumObjectiveFunctions(2);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
13	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions(0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions(0);  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions(0);	  int    zIndex    =    getNumObjectiveFunctions(2);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
14	[BUG]  [BUGGY]  matrix[0][width  -  1]  =  getNumObjectiveFunctions()  +  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][width  -  1]  =  getNumObjectiveFunctions()  +  2;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][width  -  1]  =  getNumObjectiveFunctions()  +  2;	  matrix[0][width    -    1]    =    getNumObjectiveFunctions()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
15	[BUG]  [BUGGY]  matrix[0][width  -  1]  =  getNumObjectiveFunctions().length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][width  -  1]  =  getNumObjectiveFunctions().length;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][width  -  1]  =  getNumObjectiveFunctions().length;	  matrix[0][width    -    1]    =    getNumObjectiveFunctions()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
16	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length;  matrix[0][0]  =  -1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length;  matrix[0][0]  =  -1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().length;  matrix[0][0]  =  -1;	  int    zIndex    =    getNumObjectiveFunctions()    +    1;    matrix[0][0]    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
17	[BUG]  [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions()  +  1;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][0]  =  getNumObjectiveFunctions()  +  1;	  matrix[0][0]    =    getNumObjectiveFunctions()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
18	[BUG]  [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions().length  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions().length  -  1;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][0]  =  getNumObjectiveFunctions().length  -  1;	  matrix[0][0]    =    getNumObjectiveFunctions()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
19	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  +  1;  matrix[0][0]  =  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  +  1;  matrix[0][0]  =  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().size()  +  1;  matrix[0][0]  =  1;	  int    zIndex    =    getNumObjectiveFunctions().size();    matrix[0][0]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
20	[BUG]  [BUGGY]  matrix[0][height  -  1]  =  getNumObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][height  -  1]  =  getNumObjectiveFunctions();  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][height  -  1]  =  getNumObjectiveFunctions();	  matrix[0][width    -    1]    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
21	[BUG]  [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions()  +  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions()  +  2;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][0]  =  getNumObjectiveFunctions()  +  2;	  matrix[0][0]    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  +  1)?  0  :  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  +  1)?  0  :  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =(getNumObjectiveFunctions()  +  1)?  0  :  1;	  int    zIndex    =(getNumObjectiveFunctions()    ==    1)?    0    :    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
23	[BUG]  [BUGGY]  matrix[0][0]  =  constraint?  1  :  -1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][0]  =  constraint?  1  :  -1;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][0]  =  constraint?  1  :  -1;	  matrix[0][0]    =    constraint?    1    :    0;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
24	[BUG]  [BUGGY]  matrix[0][0]  =  width?  1  :  0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][0]  =  width?  1  :  0;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][0]  =  width?  1  :  0;	  matrix[0][0]    =    constraint?    1    :    0;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
25	[BUG]  [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions()  +  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions()  +  2;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[zIndex][0]  =  getNumObjectiveFunctions()  +  2;	  matrix[zIndex][0]    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions()  -  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions()  -  2;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[zIndex][0]  =  getNumObjectiveFunctions()  -  2;	  matrix[zIndex][0]    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  Integer  zIndex  =  getNumObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Integer  zIndex  =  getNumObjectiveFunctions();  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	Integer  zIndex  =  getNumObjectiveFunctions();	  int    zIndex    =    getNumObjectiveFunctions()    +    2;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
28	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  *  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  *  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions()  *  1;	  int    zIndex    =    getNumObjectiveFunctions()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
29	[BUG]  [BUGGY]  matrix[0][height  -  1]  =  getNumObjectiveFunctions().doubleValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][height  -  1]  =  getNumObjectiveFunctions().doubleValue();  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][height  -  1]  =  getNumObjectiveFunctions().doubleValue();	  matrix[0][width    -    1]    =    getNumObjectiveFunctions().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
30	[BUG]  [BUGGY]  matrix[0][width  -  1]  =  getNumObjectiveFunctions().doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][width  -  1]  =  getNumObjectiveFunctions().doubleValue()  +  1;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][width  -  1]  =  getNumObjectiveFunctions().doubleValue()  +  1;	  matrix[0][width    -    1]    =    getNumObjectiveFunctions().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
31	[BUG]  [BUGGY]  matrix[0][width  -  1]  =  getNumObjectiveFunctions().doubleValue()  +  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][width  -  1]  =  getNumObjectiveFunctions().doubleValue()  +  2;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][width  -  1]  =  getNumObjectiveFunctions().doubleValue()  +  2;	  matrix[0][width    -    1]    =    getNumObjectiveFunctions().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
32	[BUG]  [BUGGY]  matrix[0][1]  =  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][1]  =  1;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][1]  =  1;	  matrix[0][1]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
33	[BUG]  [BUGGY]  matrix[0][1]  =  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][1]  =  2;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][1]  =  2;	  matrix[0][1]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
34	[BUG]  [BUGGY]  matrix[0][2]  =  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][2]  =  0;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][2]  =  0;	  matrix[0][1]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
35	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  +  1;  matrix[0][0]  =  0;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  +  1;  matrix[0][0]  =  0;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions()  +  1;  matrix[0][0]  =  0;	  int    zIndex    =    getNumObjectiveFunctions();    matrix[0][0]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
36	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  -  1;  matrix[0][0]  =  0;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  -  1;  matrix[0][0]  =  0;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions()  -  1;  matrix[0][0]  =  0;	  int    zIndex    =    getNumObjectiveFunctions();    matrix[0][0]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
37	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions();  matrix[0][0]  =  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions();  matrix[0][0]  =  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions();  matrix[0][0]  =  1;	  int    zIndex    =    getNumObjectiveFunctions();    matrix[0][0]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
38	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  1)?  getNumObjectiveFunctions()  :  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  1)?  getNumObjectiveFunctions()  :  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =(getNumObjectiveFunctions()  >  1)?  getNumObjectiveFunctions()  :  1;	  int    zIndex    =(getNumObjectiveFunctions()    ==    1)?    getNumObjectiveFunctions()    :    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
39	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  <  1)?  getNumObjectiveFunctions()  :  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  <  1)?  getNumObjectiveFunctions()  :  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =(getNumObjectiveFunctions()  <  1)?  getNumObjectiveFunctions()  :  1;	  int    zIndex    =(getNumObjectiveFunctions()    ==    1)?    getNumObjectiveFunctions()    :    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
40	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  getNumObjectiveFunctions()  :  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  getNumObjectiveFunctions()  :  2;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  getNumObjectiveFunctions()  :  2;	  int    zIndex    =(getNumObjectiveFunctions()    ==    1)?    getNumObjectiveFunctions()    :    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
41	[BUG]  [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions()  /  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions()  /  1;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[zIndex][0]  =  getNumObjectiveFunctions()  /  1;	  matrix[zIndex][0]    =    getNumObjectiveFunctions()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions().length  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions().length  -  1;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[zIndex][0]  =  getNumObjectiveFunctions().length  -  1;	  matrix[zIndex][0]    =    getNumObjectiveFunctions()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length  -  1;  matrix[0][0]  =  -1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length  -  1;  matrix[0][0]  =  -1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().length  -  1;  matrix[0][0]  =  -1;	  int    zIndex    =    getNumObjectiveFunctions()    -    1;    matrix[0][0]    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size();  matrix[1][0]  =  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size();  matrix[1][0]  =  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().size();  matrix[1][0]  =  1;	  int    zIndex    =    getNumObjectiveFunctions().size();    matrix[0][0]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
45	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size();  matrix[1][0]  =  -1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size();  matrix[1][0]  =  -1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().size();  matrix[1][0]  =  -1;	  int    zIndex    =    getNumObjectiveFunctions().size()    +    1;    matrix[0][0]    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
46	[BUG]  [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions(2);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions(2);  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][0]  =  getNumObjectiveFunctions(2);	  matrix[0][0]    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions(1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions(1);  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][0]  =  getNumObjectiveFunctions(1);	  matrix[0][0]    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  matrix[1][0]  =  getNumObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[1][0]  =  getNumObjectiveFunctions();  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[1][0]  =  getNumObjectiveFunctions();	  matrix[0][0]    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  matrix[0][width  -  1]  =  getNumObjectiveFunctions(2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][width  -  1]  =  getNumObjectiveFunctions(2);  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][width  -  1]  =  getNumObjectiveFunctions(2);	  matrix[0][width    -    1]    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
50	[BUG]  [BUGGY]  matrix[0][width  -  1]  =  getNumObjectiveFunctions(1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][width  -  1]  =  getNumObjectiveFunctions(1);  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][width  -  1]  =  getNumObjectiveFunctions(1);	  matrix[0][width    -    1]    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
51	[BUG]  [BUGGY]  Int  zIndex  =  getNumObjectiveFunctions().size();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Int  zIndex  =  getNumObjectiveFunctions().size();  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	Int  zIndex  =  getNumObjectiveFunctions().size();	  int    zIndex    =    getNumObjectiveFunctions().size()    +    2;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
52	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions();  matrix[1][0]  =  0;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions();  matrix[1][0]  =  0;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions();  matrix[1][0]  =  0;	  int    zIndex    =    getNumObjectiveFunctions();    matrix[0][0]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
53	[BUG]  [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions(1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions(1);  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[zIndex][0]  =  getNumObjectiveFunctions(1);	  matrix[zIndex][0]    =    getNumObjectiveFunctions()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  matrix[1][0]  =  constraint?  1  :  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[1][0]  =  constraint?  1  :  0;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[1][0]  =  constraint?  1  :  0;	  matrix[0][0]    =    constraint?    1    :    0;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
55	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >=  1)?  0  :  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >=  1)?  0  :  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =(getNumObjectiveFunctions()  >=  1)?  0  :  1;	  int    zIndex    =(getNumObjectiveFunctions()    <    1)?    0    :    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
56	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  constraints.get(3);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  constraints.get(3);  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	LinearObjectiveFunction  f  =  constraints.get(3);	  LinearObjectiveFunction    f    =    constraints.get(2);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
57	[BUG]  [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions(2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions(2);  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[zIndex][0]  =  getNumObjectiveFunctions(2);	  matrix[zIndex][0]    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  2)?  getNumObjectiveFunctions()  :  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  2)?  getNumObjectiveFunctions()  :  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =(getNumObjectiveFunctions()  ==  2)?  getNumObjectiveFunctions()  :  1;	  int    zIndex    =(getNumObjectiveFunctions()    ==    1)?    getNumObjectiveFunctions()    :    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
59	[BUG]  [BUGGY]  matrix[0][height  -  1]  =  getNumObjectiveFunctions()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][height  -  1]  =  getNumObjectiveFunctions()  +  1;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][height  -  1]  =  getNumObjectiveFunctions()  +  1;	  matrix[0][width    -    1]    =    getNumObjectiveFunctions()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
60	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  *  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  *  2;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().size()  *  2;	  int    zIndex    =    getNumObjectiveFunctions().size()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
61	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  constraint.get(1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  constraint.get(1);  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	LinearObjectiveFunction  f  =  constraint.get(1);	  LinearObjectiveFunction    f    =    constraints.get(1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  matrix[0][0]  =  height?  1  :  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[0][0]  =  height?  1  :  0;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[0][0]  =  height?  1  :  0;	  matrix[0][0]    =    constraint?    1    :    0;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
63	[BUG]  [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions()  *  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions()  *  1;  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[zIndex][0]  =  getNumObjectiveFunctions()  *  1;	  matrix[zIndex][0]    =    getNumObjectiveFunctions()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
64	[BUG]  [BUGGY]  matrix[1][width  -  1]  =  getNumObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  matrix[1][width  -  1]  =  getNumObjectiveFunctions();  [BUGGY]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	matrix[1][width  -  1]  =  getNumObjectiveFunctions();	  matrix[0][width    -    1]    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
65	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  <  <  2)?  0  :  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  <  <  2)?  0  :  1;  [BUGGY]      matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	134	134	1	replace	int  zIndex  =(getNumObjectiveFunctions()  <  <  2)?  0  :  1;	  int    zIndex    =(getNumObjectiveFunctions()    {    2)?    0    :    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
