bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(basicRows);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(basicRows);	  Set    <    Integer>    basicRows    =    new    TreeSet    <    Integer>(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
2	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(mostNegative,  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(mostNegative,  coefficients);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(mostNegative,  coefficients);	  Set    <    Integer>    basicRows    =    new    TreeSet    <    Integer>(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
3	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(lowerNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(lowerNegative);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(lowerNegative);	  Set    <    Integer>    basicRows    =    new    TreeSet    <    Integer>(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
4	[BUG]  [BUGGY]  ArrayList  <  Integer>  basicRows  =  new  ArrayList  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  ArrayList  <  Integer>  basicRows  =  new  ArrayList  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	ArrayList  <  Integer>  basicRows  =  new  ArrayList  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>();    for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  final  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  final  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	final  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>();    for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  LinkedHashSet  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  LinkedHashSet  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  LinkedHashSet  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>();    for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  mostNegative);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
8	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative,  getRhsOffset());  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(mostNegative,  getRhsOffset());	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
9	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  mostNegative);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  mostNegative);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
10	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  mostNegative);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  mostNegative);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  {	  for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(basicRows[i]    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
12	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumberVariables()];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumberVariables()];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  int[getOriginalNumberVariables()];	  Integer[]    coefficients    =    new    int[getNegativeDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNegativeDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  double[getNegativeDecisionVariables()];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  double[getNegativeDecisionVariables()];	  Integer[]    coefficients    =    new    int[getNegativeDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNegativeFunctions()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  double[getNegativeFunctions()  ];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  double[getNegativeFunctions()  ];	  Integer[]    coefficients    =    new    int[getNegativeFunctions()    ];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
15	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumberFunctions()];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumberFunctions()];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  int[getOriginalNumberFunctions()];	  Integer[]    coefficients    =    new    int[getNegativeFunctions()    ];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
16	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeFunctions()  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeFunctions()  +  1];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  int[getNegativeFunctions()  +  1];	  Integer[]    coefficients    =    new    int[getNegativeFunctions()    ];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
17	[BUG]  [BUGGY]  Collection  <  Integer>  basicRows  =  Sets.newHashSet(mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Collection  <  Integer>  basicRows  =  Sets.newHashSet(mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Collection  <  Integer>  basicRows  =  Sets.newHashSet(mostNegative);	  Collection    <    Integer>    basicRows    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <	  for(int    i    =    0;    i    <    getNumObjectiveFunctions();    i++)    {    double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <	  for(int    i    =    0;    i    <    getNumObjectiveFunctions();    i++)    {    double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getNumDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getNumDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.	  for(int    i    =    0;    i    <    getNumObjectiveFunctions();    i++)    {    double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
21	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  LinkedList  <  Integer>();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  LinkedList  <  Integer>();  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  LinkedList  <  Integer>();	  Set    <    Integer>    basicRows    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length  +  mostNegative;  i++)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length  +  mostNegative;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  coefficients.length  +  mostNegative;  i++)  {	  for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length  -  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length  -  1;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  coefficients.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length  -  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length  -  2;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  coefficients.length  -  2;  i++)  {	  for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basicRows,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basicRows,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet(basicRows,  mostNegative);	  Set    <    Integer>    basicRows    =    Sets.newHashSet(mostNegative,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basic,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basic,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet(basic,  mostNegative);	  Set    <    Integer>    basicRows    =    Sets.newHashSet(mostNegative,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(mostNegative,  coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(mostNegative,  coefficients,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet(mostNegative,  coefficients,  mostNegative);	  Set    <    Integer>    basicRows    =    Sets.newHashSet(mostNegative,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  /  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  /  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  /  mostNegative);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
29	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  mostNegative  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  mostNegative  +  1);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  mostNegative  +  1);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
30	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(mostNegative,  coefficients);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(mostNegative,  coefficients);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(mostNegative,  coefficients);	  Set    <    Integer>    basicRows    =    Sets.newHashSetWithCapacity(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
31	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(mostNegative  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(mostNegative  +  1);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(mostNegative  +  1);	  Set    <    Integer>    basicRows    =    Sets.newHashSetWithCapacity(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
32	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow,  mostNegative);	  int    baseRow    =    getBasicRow(negativeVarBasicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
33	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  mostNegative);	  int    baseRow    =    getBasicRow(negativeVarBasicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
34	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  LinkedHashSet  <  Integer>(lowerNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  LinkedHashSet  <  Integer>(lowerNegative);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  LinkedHashSet  <  Integer>(lowerNegative);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(lowerNegative);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
35	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  LinkedHashSet  <  Integer>(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  LinkedHashSet  <  Integer>(negativeVarBasicRow);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  LinkedHashSet  <  Integer>(negativeVarBasicRow);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
36	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumberVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumberVariables().size()  ];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  int[getOriginalNumberVariables().size()  ];	  Integer[]    coefficients    =    new    int[getNegativeDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
37	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNegativeDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  double[getNegativeDecisionVariables().size()  ];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  double[getNegativeDecisionVariables().size()  ];	  Integer[]    coefficients    =    new    int[getNegativeDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  {  continue;  }  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRows[i]    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
39	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(mostNegative,  getRhsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(mostNegative,  getRhsOffset()  +  1);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(mostNegative,  getRhsOffset()  +  1);	  int    baseRow    =    getBasicRow(mostNegative,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
40	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(mostNegative,  getRhsOffset(),  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(mostNegative,  getRhsOffset(),  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(mostNegative,  getRhsOffset(),  mostNegative);	  int    baseRow    =    getBasicRow(mostNegative,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
41	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basicRow,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet(basicRow,  mostNegative);	  Set    <    Integer>    basicRows    =    Sets.newHashSet(basicNegative);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
42	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basicNegative,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basicNegative,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet(basicNegative,  mostNegative);	  Set    <    Integer>    basicRows    =    Sets.newHashSet(basicNegative);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
43	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(mostNegative  /  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(mostNegative  /  1);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(mostNegative  /  1);	  int    baseRow    =    getBasicRow(mostNegative    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative  +  1);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(mostNegative  +  1);	  int    baseRow    =    getBasicRow(mostNegative    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(mostNegative  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(mostNegative  -  1);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(mostNegative  -  1);	  int    baseRow    =    getBasicRow(mostNegative    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  *  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  *  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  *  mostNegative);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    +    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
47	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  1);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  1);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    +    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions().length  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions().length  +  1;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getNumObjectiveFunctions().length  +  1;  i++)  {	  for(int    i    =    0;    i    <    getNumObjectiveFunctions().length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getOriginalNumberFunctions().length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getOriginalNumberFunctions().length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getOriginalNumberFunctions().length;  i++)  {	  for(int    i    =    0;    i    <    getNumObjectiveFunctions().length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions().length  +  i;  i++)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions().length  +  i;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getNumObjectiveFunctions().length  +  i;  i++)  {	  for(int    i    =    0;    i    <    getNumObjectiveFunctions().length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
51	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {	  for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    double[]    coefficients    =    new    double[getNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
52	[BUG]  [BUGGY]  Number[]  coefficients  =  new  Number[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Number[]  coefficients  =  new  Number[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Number[]  coefficients  =  new  Number[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {	  for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    double[]    coefficients    =    new    double[getNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
53	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getOriginalNumDecisionVariables().size()  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  double[getOriginalNumDecisionVariables().size()  +  1];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  double[getOriginalNumDecisionVariables().size()  +  1];	  Integer[]    coefficients    =    new    double[getOriginalNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
54	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNumDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  double[getNumDecisionVariables().size()  ];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  double[getNumDecisionVariables().size()  ];	  Integer[]    coefficients    =    new    double[getOriginalNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
55	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative,  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(mostNegative,  mostNegative);	  int    baseRow    =    getBasicRow(mostNegative,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
56	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
57	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  i);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  i);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  i);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
58	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
59	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  mostNegative);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  mostNegative);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  mostNegative);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
60	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  new  HashSet  <  Integer>(mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  baseRows  =  new  HashSet  <  Integer>(mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  baseRows  =  new  HashSet  <  Integer>(mostNegative);	  Set    <    Integer>    baseRows    =    new    HashSet    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
61	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  new  LinkedHashSet  <  Integer>();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  baseRows  =  new  LinkedHashSet  <  Integer>();  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  baseRows  =  new  LinkedHashSet  <  Integer>();	  Set    <    Integer>    baseRows    =    new    HashSet    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
62	[BUG]  [BUGGY]  ArrayList  <  Integer>  baseRows  =  new  ArrayList  <  Integer>();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  ArrayList  <  Integer>  baseRows  =  new  ArrayList  <  Integer>();  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	ArrayList  <  Integer>  baseRows  =  new  ArrayList  <  Integer>();	  Set    <    Integer>    baseRows    =    new    HashSet    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
63	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  double[getNumDecisionVariables()];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  double[getNumDecisionVariables()];	  Integer[]    coefficients    =    new    int[getNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
64	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalVariables()  ];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalVariables()  ];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  int[getOriginalVariables()  ];	  Integer[]    coefficients    =    new    int[getNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
65	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(0);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(0);	  Set    <    Integer>    basicRows    =    new    TreeSet    <    Integer>(4);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
66	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(1);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(1);	  Set    <    Integer>    basicRows    =    new    TreeSet    <    Integer>(4);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
67	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(mostNegative  -  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(mostNegative  -  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(mostNegative  -  mostNegative);	  int    baseRow    =    getBasicRow(mostNegative    -    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
68	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(mostNegative  /  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(mostNegative  /  negativeVarBasicRow);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(mostNegative  /  negativeVarBasicRow);	  int    baseRow    =    getBasicRow(mostNegative    -    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
69	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(negativeVarBasicRow  -  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(negativeVarBasicRow  -  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(negativeVarBasicRow  -  mostNegative);	  int    baseRow    =    getBasicRow(mostNegative    -    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
70	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow  -  mostNegative);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow  -  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow  -  mostNegative);	  int    baseRow    =    getBasicRow(mostNegative    -    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
71	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
72	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
73	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
74	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  mostNegative);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  mostNegative);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  mostNegative);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mostNegative.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  {  continue  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  mostNegative.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  {  continue  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  mostNegative.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  {  continue	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRows[i]    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  {  continue  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  {  continue  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  {  continue	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRows[i]    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
77	[BUG]  [BUGGY]  ArrayList  <  Integer>  basicRows  =  Lists.newArrayList();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  ArrayList  <  Integer>  basicRows  =  Lists.newArrayList();  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	ArrayList  <  Integer>  basicRows  =  Lists.newArrayList();	  ArrayList    <    Integer>    basicRows    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
78	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  mostNegative,  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  mostNegative,  coefficients);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  mostNegative,  coefficients);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset(),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
79	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  mostNegative,  coefficients.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  mostNegative,  coefficients.length);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  mostNegative,  coefficients.length);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset(),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
80	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRows,  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRows,  mostNegative);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRows,  mostNegative);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
81	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRows.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRows.length);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRows.length);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
82	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRows.size());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRows.size());  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRows.size());	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
83	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  coefficients.length  +  mostNegative;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  For(int  i  =  0;  i  <  coefficients.length  +  mostNegative;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	For(int  i  =  0;  i  <  coefficients.length  +  mostNegative;  ++i)  {	  For(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
84	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  coefficients.length  -  mostNegative;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  For(int  i  =  0;  i  <  coefficients.length  -  mostNegative;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	For(int  i  =  0;  i  <  coefficients.length  -  mostNegative;  ++i)  {	  For(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
85	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  mostNegative.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  For(int  i  =  0;  i  <  mostNegative.length;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	For(int  i  =  0;  i  <  mostNegative.length;  ++i)  {	  For(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
86	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(coefficients,  mostNegative);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(coefficients,  mostNegative);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(mostNegative,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
87	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(mostNegative,  coefficients.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(mostNegative,  coefficients.length);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(mostNegative,  coefficients.length);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(mostNegative,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
88	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumberDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  int[getNumberDecisionVariables().size()  ];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  int[getNumberDecisionVariables().size()  ];	  Integer[]    coefficients    =    new    int[getOriginalNumberDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
89	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumberDecisionVariables().size()  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumberDecisionVariables().size()  +  1];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  int[getOriginalNumberDecisionVariables().size()  +  1];	  Integer[]    coefficients    =    new    int[getOriginalNumberDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
90	[BUG]  [BUGGY]  List  <  Integer>  basicRows  =  new  ArrayList  <  Integer>();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  List  <  Integer>  basicRows  =  new  ArrayList  <  Integer>();  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	List  <  Integer>  basicRows  =  new  ArrayList  <  Integer>();	  ArrayList    <    Integer>    basicRows    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length  +  mostNegative;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length  +  mostNegative;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  coefficients.length  +  mostNegative;  ++i)  {	  for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length  -  1;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length  -  1;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  coefficients.length  -  1;  ++i)  {	  for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length  -  2;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length  -  2;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  coefficients.length  -  2;  ++i)  {	  for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
94	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicNegative);	  int    baseRow    =    getBasicRow(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
95	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative  -  1);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(mostNegative  -  1);	  Integer    baseRow    =    getBasicRow(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
96	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative)+  1;  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(mostNegative)+  1;	  Integer    baseRow    =    getBasicRow(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
97	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(basicRow);	  int    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
98	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRow);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRow);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(basicNegative);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
99	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicNegative,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicNegative,  mostNegative);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicNegative,  mostNegative);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(basicNegative);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
100	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRow,  mostNegative);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicRow,  mostNegative);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(basicNegative);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
101	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getOriginalNumberFunctions();  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getOriginalNumberFunctions();  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getOriginalNumberFunctions();  i++)  {	  for(int    i    =    0;    i    <    getNumObjectiveFunctions();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions()  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions()  +  1;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getNumObjectiveFunctions()  +  1;  i++)  {	  for(int    i    =    0;    i    <    getNumObjectiveFunctions();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
103	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalVariables().size()  ];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  int[getOriginalVariables().size()  ];	  Integer[]    coefficients    =    new    int[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
104	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables().size()  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables().size()  +  1];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  int[getNumDecisionVariables().size()  +  1];	  Integer[]    coefficients    =    new    int[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
105	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i))  {  continue  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i))  {  continue  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i))  {  continue	  for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(basicRows[i]    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
106	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getOriginalNumberDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  double[getOriginalNumberDecisionVariables().size()  ];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  double[getOriginalNumberDecisionVariables().size()  ];	  Integer[]    coefficients    =    new    int[getOriginalNumberDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
107	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(negativeVarBasicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(negativeVarBasicRow,  getRhsOffset());  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(negativeVarBasicRow,  getRhsOffset());	  int    baseRow    =    getBasicRow(mostNegative,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
108	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicVarBasicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicVarBasicRow,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicVarBasicRow,  mostNegative);	  int    baseRow    =    getBasicRow(negativeVarBasicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)	  for(int    i    =    0;    i    <    coefficients.length;    i++)    {    double[]    coefficients    =    new    double[getNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    ++i)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
110	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  negativeVarBasicRow);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  negativeVarBasicRow);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
111	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeFunctions()  +  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeFunctions()  +  ];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  int[getNegativeFunctions()  +  ];	  Integer[]    coefficients    =    new    int[getNegativeFunctions()    ];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
112	[BUG]  [BUGGY]  ArrayList  <  Integer>  basicRows  =  new  ArrayList  <  Integer>(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  ArrayList  <  Integer>  basicRows  =  new  ArrayList  <  Integer>(negativeVarBasicRow);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	ArrayList  <  Integer>  basicRows  =  new  ArrayList  <  Integer>(negativeVarBasicRow);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
113	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(lowerNegative,  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(lowerNegative,  coefficients);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(lowerNegative,  coefficients);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(mostNegative,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
114	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(coefficients);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(coefficients);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(mostNegative,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
115	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  new  TreeSet  <  Integer>();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  baseRows  =  new  TreeSet  <  Integer>();  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  baseRows  =  new  TreeSet  <  Integer>();	  Set    <    Integer>    baseRows    =    new    HashSet    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
116	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(negativeVarBasicRow);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(negativeVarBasicRow);	  Integer    baseRow    =    getBasicRow(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
117	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative  -  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative  -  negativeVarBasicRow);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(mostNegative  -  negativeVarBasicRow);	  Integer    baseRow    =    getBasicRow(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mostNegative.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  mostNegative.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  mostNegative.length;  i++)  {	  for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  negativeVarBasicRow.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  negativeVarBasicRow.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  negativeVarBasicRow.length;  i++)  {	  for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
120	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(negativeVarBasicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(negativeVarBasicRow  +  1);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(negativeVarBasicRow  +  1);	  int    baseRow    =    getBasicRow(mostNegative    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
121	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow  +  1);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow  +  1);	  int    baseRow    =    getBasicRow(mostNegative    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
122	[BUG]  [BUGGY]  ArrayList  <  Integer>  basicRows  =  Sets.newHashSet(mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  ArrayList  <  Integer>  basicRows  =  Sets.newHashSet(mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	ArrayList  <  Integer>  basicRows  =  Sets.newHashSet(mostNegative);	  ArrayList    <    Integer>    basicRows    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
123	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(negativeVarBasicRow);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(negativeVarBasicRow);	  Set    <    Integer>    basicRows    =    new    TreeSet    <    Integer>(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
124	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(mostNegative,  negativeVarBasicRow);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(mostNegative,  negativeVarBasicRow);	  int    baseRow    =    getBasicRow(mostNegative,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
125	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basicRow  +  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basicRow  +  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet(basicRow  +  mostNegative);	  Set    <    Integer>    basicRows    =    Sets.newHashSet(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
126	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(negativeVarBasicRow);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(negativeVarBasicRow);	  Set    <    Integer>    basicRows    =    Sets.newHashSetWithCapacity(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
127	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(lowerNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(lowerNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(lowerNegative);	  Set    <    Integer>    basicRows    =    Sets.newHashSetWithCapacity(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
128	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(basicRow);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(basicRow);	  Set    <    Integer>    basicRows    =    Sets.newHashSetWithCapacity(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  {  continue  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  {  continue  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  {  continue	  for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(basicRows[i]    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
130	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[mostNegative  +  getOriginalNumDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  double[mostNegative  +  getOriginalNumDecisionVariables()  ];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  double[mostNegative  +  getOriginalNumDecisionVariables()  ];	  Integer[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
131	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[negativeVarBasicRow.getOriginalNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  double[negativeVarBasicRow.getOriginalNumDecisionVariables()];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  double[negativeVarBasicRow.getOriginalNumDecisionVariables()];	  Integer[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
132	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  1);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  1);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
133	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(5);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(5);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(5);	  Set    <    Integer>    basicRows    =    new    TreeSet    <    Integer>(4);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
134	[BUG]  [BUGGY]  ArrayList  <  Integer>  basicRows  =  new  ArrayList  <  Integer>(lowerNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  ArrayList  <  Integer>  basicRows  =  new  ArrayList  <  Integer>(lowerNegative);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	ArrayList  <  Integer>  basicRows  =  new  ArrayList  <  Integer>(lowerNegative);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(lowerNegative);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
135	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(largestNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(largestNegative);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(largestNegative);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(lowerNegative);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
136	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
137	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(mostNegative  -  negativeVarBasicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(mostNegative  -  negativeVarBasicRow,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(mostNegative  -  negativeVarBasicRow,  mostNegative);	  int    baseRow    =    getBasicRow(mostNegative    -    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
138	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow  +  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow  +  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow  +  mostNegative);	  int    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions()  +  i;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions()  +  i;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getNumObjectiveFunctions()  +  i;  i++)  {	  for(int    i    =    0;    i    <    getNumObjectiveFunctions();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
140	[BUG]  [BUGGY]  ArrayList  <  Integer>  basicRows  =  new  ArrayList  <  Integer>(basicNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  ArrayList  <  Integer>  basicRows  =  new  ArrayList  <  Integer>(basicNegative);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	ArrayList  <  Integer>  basicRows  =  new  ArrayList  <  Integer>(basicNegative);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(basicNegative);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
141	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  negativeVarBasicRow.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  For(int  i  =  0;  i  <  negativeVarBasicRow.length;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	For(int  i  =  0;  i  <  negativeVarBasicRow.length;  ++i)  {	  For(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
142	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  coefficients.length  -  1;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  For(int  i  =  0;  i  <  coefficients.length  -  1;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	For(int  i  =  0;  i  <  coefficients.length  -  1;  ++i)  {	  For(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
143	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  negativeVarBasicRow);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  negativeVarBasicRow);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    +    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i))  {  continue  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i))  {  continue  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i))  {  continue	  for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(basicRows[i]    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mostNegative.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  mostNegative.length;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  mostNegative.length;  ++i)  {	  for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  negativeVarBasicRow.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  negativeVarBasicRow.length;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  negativeVarBasicRow.length;  ++i)  {	  for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
147	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(negativeVarBasicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(negativeVarBasicRow,  coefficients);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet(negativeVarBasicRow,  coefficients);	  Set    <    Integer>    basicRows    =    Sets.newHashSet(mostNegative,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
148	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(negativeVarBasicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(negativeVarBasicRow,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet(negativeVarBasicRow,  mostNegative);	  Set    <    Integer>    basicRows    =    Sets.newHashSet(mostNegative,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
149	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(coefficients,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet(coefficients,  mostNegative);	  Set    <    Integer>    basicRows    =    Sets.newHashSet(mostNegative,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
150	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>();    for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
151	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables().size()  *  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables().size()  *  1];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables().size()  *  1];	  Integer[]    coefficients    =    new    int[getOriginalNumDecisionVariables().size()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
152	[BUG]  [BUGGY]  Collection  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Collection  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Collection  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(mostNegative);	  Collection    <    Integer>    basicRows    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
153	[BUG]  [BUGGY]  List  <  Integer>  basicRows  =  Sets.newHashSet(mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  List  <  Integer>  basicRows  =  Sets.newHashSet(mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	List  <  Integer>  basicRows  =  Sets.newHashSet(mostNegative);	  List    <    Integer>    basicRows    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
154	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  negativeVarBasicRow);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  negativeVarBasicRow);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset(),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
155	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnOffset(),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnOffset(),  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicRow,  getColumnOffset(),  mostNegative);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset(),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
156	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNegativeDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getNegativeDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getNegativeDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <	  for(int    i    =    0;    i    <    getNumObjectiveFunctions();    i++)    {    double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNegativeDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getNegativeDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getNegativeDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.	  for(int    i    =    0;    i    <    getNumObjectiveFunctions();    i++)    {    double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
159	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicNegative,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicNegative,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicNegative,  mostNegative);	  int    baseRow    =    getBasicRow(mostNegative,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
160	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeFunctions()  +  mostNegative];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeFunctions()  +  mostNegative];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  int[getNegativeFunctions()  +  mostNegative];	  Integer[]    coefficients    =    new    int[getNegativeFunctions()    ];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
161	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicNegative,  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicNegative,  coefficients);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicNegative,  coefficients);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(mostNegative,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
162	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(mostNegative  *  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(mostNegative  *  1);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(mostNegative  *  1);	  int    baseRow    =    getBasicRow(mostNegative    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
163	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNegativeFunctions()))  {  continue  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNegativeFunctions()))  {  continue  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNegativeFunctions()))  {  continue	  for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(basicRows[i]    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
164	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getNumDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getNumDecisionVariables();  i++)  {  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  i);  for(int  i  =  0;  i  <  coefficients.length;  ++i	  for(int    i    =    0;    i    <    coefficients.length;    i++)    {    double[]    coefficients    =    new    double[getNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    ++i)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
165	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumberDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumberDecisionVariables()  ];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  int[getOriginalNumberDecisionVariables()  ];	  Integer[]    coefficients    =    new    int[getNegativeDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
166	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer  baseRow  =  getBasicRow(basicNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer  baseRow  =  getBasicRow(basicNegative);	  int    baseRow    =    getBasicRow(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
167	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNegativeDecimalVariables()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Integer[]  coefficients  =  new  double[getNegativeDecimalVariables()  ];  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Integer[]  coefficients  =  new  double[getNegativeDecimalVariables()  ];	  Integer[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
168	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumDecisionVariables();  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getNumDecisionVariables();  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getNumDecisionVariables();  ++i)  {	  for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    double[]    coefficients    =    new    double[getNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
169	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNegativeFunctions()))  {  continue  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNegativeFunctions()))  {  continue  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows[i]  ==  null?  0  :  getEntry(basicRow,  getNegativeFunctions()))  {  continue	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRows[i]    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
170	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(7);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(7);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(7);	  Set    <    Integer>    basicRows    =    new    TreeSet    <    Integer>(8);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
171	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicPos,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(basicPos,  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(basicPos,  mostNegative);	  int    baseRow    =    getBasicRow(negativeVarBasicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
172	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicNegative  +  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicNegative  +  mostNegative);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(basicNegative  +  mostNegative);	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>(basicNegative);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
173	[BUG]  [BUGGY]  List  <  Integer>  basicRows  =  new  ArrayList  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  List  <  Integer>  basicRows  =  new  ArrayList  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	List  <  Integer>  basicRows  =  new  ArrayList  <  Integer>();  for(int  i  =  0;  i  <  coefficients.length;  i++)  {	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>();    for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
174	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(mostNegative);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(mostNegative);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  HashSet  <  Integer>(mostNegative);  for(int  i  =  0;  i  <  coefficients.length;  i++)  {	  Set    <    Integer>    basicRows    =    new    HashSet    <    Integer>();    for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
175	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getOriginalNegativeFunctions();  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  for(int  i  =  0;  i  <  getOriginalNegativeFunctions();  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	for(int  i  =  0;  i  <  getOriginalNegativeFunctions();  i++)  {	  for(int    i    =    0;    i    <    getNumObjectiveFunctions();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
176	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basicNegative,  coefficients);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basicNegative,  coefficients);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet(basicNegative,  coefficients);	  Set    <    Integer>    basicRows    =    Sets.newHashSet(mostNegative,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
177	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basic,  coefficients);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(basic,  coefficients);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet(basic,  coefficients);	  Set    <    Integer>    basicRows    =    Sets.newHashSet(mostNegative,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
178	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(mostNegative,  getRhsOffset()  -  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(mostNegative,  getRhsOffset()  -  mostNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(mostNegative,  getRhsOffset()  -  mostNegative);	  int    baseRow    =    getBasicRow(mostNegative,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
179	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(mostNegative,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  int  baseRow  =  getBasicRow(mostNegative,  getRhsOffset()  -  1);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	int  baseRow  =  getBasicRow(mostNegative,  getRhsOffset()  -  1);	  int    baseRow    =    getBasicRow(mostNegative,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
180	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(bigestNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(bigestNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSetWithCapacity(bigestNegative);	  Set    <    Integer>    basicRows    =    Sets.newHashSetWithCapacity(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
181	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i];  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i];  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i];  for(int  i  =  0;  i  <  coefficients.length;  ++i)  {	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
182	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(basicNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(basicNegative);  [BUGGY]      for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  new  TreeSet  <  Integer>(basicNegative);	  Set    <    Integer>    basicRows    =    new    TreeSet    <    Integer>(mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
183	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i];  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i];  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  i];  for(int  i  =  0;  i  <  coefficients.length;  i++)  {	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    i);    for(int    i    =    0;    i    <    coefficients.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
184	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(majorNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());      [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(majorNegative);  [BUGGY]      Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	343	343	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet(majorNegative);	  Set    <    Integer>    basicRows    =    Sets.newHashSet(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
