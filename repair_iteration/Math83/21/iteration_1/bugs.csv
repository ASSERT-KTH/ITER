bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getOffset());  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getOffset());  [BUGGY]  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getOffset());	double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
2	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getLowerOffset());  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getLowerOffset());  [BUGGY]  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getLowerOffset());	double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
3	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getColumnOffset());  [BUGGY]  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getColumnOffset());	double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
4	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getColumnsOffset());  [BUGGY]  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getColumnsOffset());	double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    [BUGGY]  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	  	double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
6	[BUG]  [BUGGY]    Integer  rhsOffset  =  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    Integer  rhsOffset  =  getRhsOffset();  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	    Integer  rhsOffset  =  getRhsOffset();		non-compiled	[CE]  illegal  start  of  expression	42	None	add
7	[BUG]  [BUGGY]    Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalNumDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalNumDecisionVariables()  ];  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	    Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalNumDecisionVariables()  ];		non-compiled	[CE]  illegal  start  of  expression	42	None	add
8	[BUG]  [BUGGY]    Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalNumDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalNumDecisionVariables().size()  ];  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	    Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalNumDecisionVariables().size()  ];		non-compiled	[CE]  illegal  start  of  expression	42	None	add
9	[BUG]  [BUGGY]    Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  ];  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	    Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  ];		non-compiled	[CE]  illegal  start  of  expression	42	None	add
10	[BUG]  [BUGGY]    Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalNumDecisionVariables());  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	    Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalNumDecisionVariables());		non-compiled	[CE]  illegal  start  of  expression	42	None	add
11	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  [BUGGY]  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());	double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
12	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getOriginalNumberOffset());  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getOriginalNumberOffset());  [BUGGY]  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getOriginalNumberOffset());	double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
13	[BUG]  [BUGGY]    Double  negativeVarBasicRow  =  getNegativeDecisionRow(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    Double  negativeVarBasicRow  =  getNegativeDecisionRow(negativeVarBasicRow);  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	    Double  negativeVarBasicRow  =  getNegativeDecisionRow(negativeVarBasicRow);		non-compiled	[CE]  illegal  start  of  expression	42	None	add
14	[BUG]  [BUGGY]    Integer  negativeVarBasicRow  =  getNegativeDecisionRow(getRhsOffset());  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    Integer  negativeVarBasicRow  =  getNegativeDecisionRow(getRhsOffset());  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	    Integer  negativeVarBasicRow  =  getNegativeDecisionRow(getRhsOffset());		non-compiled	[CE]  illegal  start  of  expression	42	None	add
15	[BUG]  [BUGGY]    Integer  negativeVarBasicRow  =  getNegativeDecisionVariableOffset();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    Integer  negativeVarBasicRow  =  getNegativeDecisionVariableOffset();  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	    Integer  negativeVarBasicRow  =  getNegativeDecisionVariableOffset();		non-compiled	[CE]  illegal  start  of  expression	42	None	add
16	[BUG]  [BUGGY]    Double  negativeVarBasicRow  =  getNegativeDecisionRow(getRhsOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    Double  negativeVarBasicRow  =  getNegativeDecisionRow(getRhsOffset());  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	    Double  negativeVarBasicRow  =  getNegativeDecisionRow(getRhsOffset());		non-compiled	[CE]  illegal  start  of  expression	42	None	add
17	[BUG]  [BUGGY]    Integer  rhs  =  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    Integer  rhs  =  getRhsOffset();  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	    Integer  rhs  =  getRhsOffset();		non-compiled	[CE]  illegal  start  of  expression	42	None	add
18	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  <  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  <  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  [BUGGY]  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow  <  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());	double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
19	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getReturnOffset());  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getReturnOffset());  [BUGGY]  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getReturnOffset());	double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
20	[BUG]  [BUGGY]    Double  positiveVarBasicRow  =  getNegativeVarBasicRow();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    Double  positiveVarBasicRow  =  getNegativeVarBasicRow();  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	    Double  positiveVarBasicRow  =  getNegativeVarBasicRow();		non-compiled	[CE]  illegal  start  of  expression	42	None	add
21	[BUG]  [BUGGY]    Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getRhsOffset());  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getRhsOffset());  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	    Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getRhsOffset());		non-compiled	[CE]  illegal  start  of  expression	42	None	add
