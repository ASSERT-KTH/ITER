bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  rhsOffset  =  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  rhsOffset  =  getRhsOffset()  +  1;  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  rhsOffset  =  getRhsOffset()  +  1;	      Integer    rhsOffset    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  Integer  rhsOffset  =  getRhsOffset(getOriginalVarBasicRow());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  rhsOffset  =  getRhsOffset(getOriginalVarBasicRow());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  rhsOffset  =  getRhsOffset(getOriginalVarBasicRow());	      Integer    rhsOffset    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  Integer  rhsOffset  =  getRhsOffset()  +  2;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  rhsOffset  =  getRhsOffset()  +  2;  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  rhsOffset  =  getRhsOffset()  +  2;	      Integer    rhsOffset    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getColumnsOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getColumnsOffset());	  double    mostNegative    =    negativeVarBasicRow    ==    null?    0    :    getEntry(negativeVarBasicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getLowerOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getLowerOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getLowerOffset());	  double    mostNegative    =    negativeVarBasicRow    ==    null?    0    :    getEntry(negativeVarBasicRow,    getLowerOffset());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getOffset());	  double    mostNegative    =    negativeVarBasicRow!=    null?    0    :    getEntry(negativeVarBasicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  Integer[]  coefficients  =  negativeVarBasicRow.getValues();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  negativeVarBasicRow.getValues();  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  negativeVarBasicRow.getValues();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet();  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  Integer[]  coefficients  =  negativeVarBasicRow.getColumns();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  negativeVarBasicRow.getColumns();  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  negativeVarBasicRow.getColumns();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Set  <  Integer>  basicRows  =  Sets.newHashSet(negativeVarBasicRow);  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Set  <  Integer>  basicRows  =  Sets.newHashSet(negativeVarBasicRow);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  Integer  rhs  =  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  rhs  =  getRhsOffset()  +  1;  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  rhs  =  getRhsOffset()  +  1;	      Integer    rhs    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
12	[BUG]  [BUGGY]  Integer  rhs  =  getRhsOffset(getOriginalVarBasicRow());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  rhs  =  getRhsOffset(getOriginalVarBasicRow());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  rhs  =  getRhsOffset(getOriginalVarBasicRow());	      Integer    rhs    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
13	[BUG]  [BUGGY]  Integer  rhs  =  getRhsOffset()  +  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  rhs  =  getRhsOffset()  +  2;  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  rhs  =  getRhsOffset()  +  2;	      Integer    rhs    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(negativeVarBasicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(negativeVarBasicRow,  getRhsOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  negativeVarBasicRow  =  getNegativeDecisionRow(negativeVarBasicRow,  getRhsOffset());	      Double    negativeVarBasicRow    =    getNegativeDecisionRow(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
15	[BUG]  [BUGGY]  Double  negativeVarBasicRow  =  getNegativeVarBasicRow(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  negativeVarBasicRow  =  getNegativeVarBasicRow(negativeVarBasicRow);  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  negativeVarBasicRow  =  getNegativeVarBasicRow(negativeVarBasicRow);	      Double    negativeVarBasicRow    =    getNegativeDecisionRow(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
16	[BUG]  [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(positiveVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(positiveVarBasicRow);  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  negativeVarBasicRow  =  getNegativeDecisionRow(positiveVarBasicRow);	      Double    negativeVarBasicRow    =    getNegativeDecisionRow(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  getOriginalNumDecisionVariables());	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
18	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  +  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  +  getRhsOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  +  getRhsOffset());	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
19	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNegativeDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNegativeDecisionVariables());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNegativeDecisionVariables());	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  getRhsOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  getRhsOffset());	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRow();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRow();  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeVarBasicRow();	      Integer    negativeVarBasicRow    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
22	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarOffset();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarOffset();  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeVarOffset();	      Integer    negativeVarBasicRow    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
23	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRowOffset();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRowOffset();  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeVarBasicRowOffset();	      Integer    negativeVarBasicRow    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeDecisionVariables();  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeDecisionVariables();	      Integer    negativeVarBasicRow    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  Integer  positiveVarBasicRow  =  getNegativeVarBasicRow(getRhsOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  positiveVarBasicRow  =  getNegativeVarBasicRow(getRhsOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  positiveVarBasicRow  =  getNegativeVarBasicRow(getRhsOffset());	      Double    positiveVarBasicRow    =    getNegativeVarBasicRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
26	[BUG]  [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(negativeVarBasicRow);  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  positiveVarBasicRow  =  getNegativeVarBasicRow(negativeVarBasicRow);	      Double    positiveVarBasicRow    =    getNegativeVarBasicRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
27	[BUG]  [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getOriginalVarOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getOriginalVarOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getOriginalVarOffset());	      Double    positiveVarBasicRow    =    getNegativeVarBasicRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
28	[BUG]  [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getOriginalNumberVariableOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getOriginalNumberVariableOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getOriginalNumberVariableOffset());	      Double    positiveVarBasicRow    =    getNegativeVarBasicRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
29	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeDecisionRow(getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeDecisionRow(getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeDecisionRow(getOriginalNumDecisionVariables());	      Integer    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getRhsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getRhsOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getRhsOffset());	      Integer    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getOriginalNumDecisionVariables());	      Integer    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeDecisionRow(getOriginalNumDecisionVariableOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeDecisionRow(getOriginalNumDecisionVariableOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeDecisionRow(getOriginalNumDecisionVariableOffset());	      Integer    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
33	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getOriginalNumberOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getOriginalNumberOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getOriginalNumberOffset());	  double    mostNegative    =    negativeVarBasicRow    ==    null?    0    :    getEntry(negativeVarBasicRow,    getOriginalNumberOffset());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getReturnOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getReturnOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getReturnOffset());	  double    mostNegative    =    negativeVarBasicRow    ==    null?    0    :    getEntry(negativeVarBasicRow,    getReturnOffset());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
35	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getRhsOffset()  ];	      Integer[]    coefficients    =    new    int[getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables()];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getNumDecisionVariables()];	      Integer[]    coefficients    =    new    int[getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeDecisionVariables()];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getNegativeDecisionVariables()];	      Integer[]    coefficients    =    new    int[getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  Double  negativeVarBasicRow  =  getNegativeVarBasicRow(getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  negativeVarBasicRow  =  getNegativeVarBasicRow(getRhsOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  negativeVarBasicRow  =  getNegativeVarBasicRow(getRhsOffset());	      Double    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
39	[BUG]  [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  negativeVarBasicRow  =  getNegativeDecisionRow(getOriginalNumDecisionVariables());	      Double    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
40	[BUG]  [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(getOriginalNumDecisionVariableOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(getOriginalNumDecisionVariableOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  negativeVarBasicRow  =  getNegativeDecisionRow(getOriginalNumDecisionVariableOffset());	      Double    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  getOriginalNumDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  getOriginalNumDecisionVariables()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  getOriginalNumDecisionVariables()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNegativeDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNegativeDecisionVariables()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNegativeDecisionVariables()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getDecisionVariables()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getRhsOffset()  +  getDecisionVariables()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  getRhsOffset()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  getRhsOffset()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  getRhsOffset()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalVarBasicRows().size()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalVarBasicRows().size()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalVarBasicRows().size()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalVariables().size()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalVariables().size()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNumDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNumDecisionVariables().size()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNumDecisionVariables().size()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
48	[BUG]  [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(0);  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  positiveVarBasicRow  =  getNegativeVarBasicRow(0);	      Double    positiveVarBasicRow    =    getNegativeVarBasicRow();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
49	[BUG]  [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getNegativeDecisionVariableOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getNegativeDecisionVariableOffset());	      Double    positiveVarBasicRow    =    getNegativeVarBasicRow();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
50	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getColumnOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow!=  null?  0  :  getEntry(negativeVarBasicRow,  getColumnOffset());	  double    mostNegative    =    negativeVarBasicRow    ==    null?    0    :    getEntry(negativeVarBasicRow,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
51	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getEntry(negativeVarBasicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getEntry(negativeVarBasicRow,  getRhsOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getEntry(negativeVarBasicRow,  getRhsOffset());	      Integer    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
52	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeDecimalRow(getRhsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeDecimalRow(getRhsOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeDecimalRow(getRhsOffset());	      Integer    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
53	[BUG]  [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(negativeVarBasicRow  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(negativeVarBasicRow  +  1);  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  negativeVarBasicRow  =  getNegativeDecisionRow(negativeVarBasicRow  +  1);	      Double    negativeVarBasicRow    =    getNegativeDecisionRow(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(negativeVarBasicRow  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(negativeVarBasicRow  -  1);  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  negativeVarBasicRow  =  getNegativeDecisionRow(negativeVarBasicRow  -  1);	      Double    negativeVarBasicRow    =    getNegativeDecisionRow(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getReturnOffset()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getReturnOffset()));  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getReturnOffset()));	  double    mostNegative    =    negativeVarBasicRow    ==    null?    0    :    getEntry(negativeVarBasicRow,    getReturnOffset());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
56	[BUG]  [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getNegativeVarOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getNegativeVarOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getNegativeVarOffset());	      Double    positiveVarBasicRow    =    getNegativeVarBasicRow();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
57	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getOriginalNumberOffset()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getOriginalNumberOffset()));  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getOriginalNumberOffset()));	  double    mostNegative    =    negativeVarBasicRow    ==    null?    0    :    getEntry(negativeVarBasicRow,    getOriginalNumberOffset());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
58	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  >=  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  double  mostNegative  =  negativeVarBasicRow  >=  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow  >=  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());	  double    mostNegative    =    negativeVarBasicRow    <    null?    0    :    getEntry(negativeVarBasicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
59	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNegativeDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNegativeDecisionVariables().size()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNegativeDecisionVariables().size()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNegativeVarBasicRows().size()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNegativeVarBasicRows().size()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getRhsOffset()  +  getNegativeVarBasicRows().size()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeDecisionVariables().size()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getNegativeDecisionVariables().size()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
62	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset()));  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset()));	  double    mostNegative    =    negativeVarBasicRow!=    null?    0    :    getEntry(negativeVarBasicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
63	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  ];	      Integer[]    coefficients    =    new    int[getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
64	[BUG]  [BUGGY]  Integer  rhs  =  getRhsOffset(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  rhs  =  getRhsOffset(negativeVarBasicRow);  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  rhs  =  getRhsOffset(negativeVarBasicRow);	      Integer    rhs    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  Integer  rhs  =  getRhsOffset()  +  negativeVarBasicRow;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  rhs  =  getRhsOffset()  +  negativeVarBasicRow;  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  rhs  =  getRhsOffset()  +  negativeVarBasicRow;	      Integer    rhs    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
66	[BUG]  [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(getNegativeVarOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  negativeVarBasicRow  =  getNegativeDecisionRow(getNegativeVarOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  negativeVarBasicRow  =  getNegativeDecisionRow(getNegativeVarOffset());	      Double    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
67	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeDecisionVariables()  +  getOriginalNumDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeDecisionVariables()  +  getOriginalNumDecisionVariables()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getNegativeDecisionVariables()  +  getOriginalNumDecisionVariables()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
68	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  +  getRhsOffset()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  +  getRhsOffset()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables()  +  getRhsOffset()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
69	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalVarBasicRows()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalVarBasicRows()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalVarBasicRows()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
70	[BUG]  [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getOriginalNumberVariables());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getOriginalNumberVariables());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getOriginalNumberVariables());	      Double    positiveVarBasicRow    =    getNegativeVarBasicRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
71	[BUG]  [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getPositiveVariableOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getPositiveVariableOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  positiveVarBasicRow  =  getNegativeVarBasicRow(getPositiveVariableOffset());	      Double    positiveVarBasicRow    =    getNegativeVarBasicRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
72	[BUG]  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getOffset()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getOffset()));  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  negativeVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getOffset()));	  double    mostNegative    =    negativeVarBasicRow    ==    null?    0    :    getEntry(negativeVarBasicRow,    getOffset());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
73	[BUG]  [BUGGY]  Integer  coefficients[]  =  negativeVarBasicRow.getValues();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  coefficients[]  =  negativeVarBasicRow.getValues();  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  coefficients[]  =  negativeVarBasicRow.getValues();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  Integer  coefficients[]  =  negativeVarBasicRow.getColumns();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  coefficients[]  =  negativeVarBasicRow.getColumns();  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  coefficients[]  =  negativeVarBasicRow.getColumns();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  int  zIndex  =  negativeVarBasicRow.indexOf(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  int  zIndex  =  negativeVarBasicRow.indexOf(negativeVarBasicRow);  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	int  zIndex  =  negativeVarBasicRow.indexOf(negativeVarBasicRow);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
76	[BUG]  [BUGGY]  Integer  rhsOffset  =  getRhsOffset(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  rhsOffset  =  getRhsOffset(negativeVarBasicRow);  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  rhsOffset  =  getRhsOffset(negativeVarBasicRow);	      Integer    rhsOffset    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
77	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarRow(getNegativeDecisionVariableOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarRow(getNegativeDecisionVariableOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeVarRow(getNegativeDecisionVariableOffset());	      Integer    negativeVarBasicRow    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
78	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarRow(getNegativeVariableOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarRow(getNegativeVariableOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeVarRow(getNegativeVariableOffset());	      Integer    negativeVarBasicRow    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
79	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarRow();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarRow();  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeVarRow();	      Integer    negativeVarBasicRow    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
80	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarRow(getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarRow(getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeVarRow(getOriginalNumDecisionVariables());	      Integer    negativeVarBasicRow    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
81	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeDecisionVariables()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeDecisionVariables()  +  getOriginalNumDecisionVariables());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getNegativeDecisionVariables()  +  getOriginalNumDecisionVariables());	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
82	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeDecisionVariables()  +  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeDecisionVariables()  +  getRhsOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getNegativeDecisionVariables()  +  getRhsOffset());	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
83	[BUG]  [BUGGY]  Double  negativeVarBasicRow  =  getNegativeVarBasicRow(getOriginalVarOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  negativeVarBasicRow  =  getNegativeVarBasicRow(getOriginalVarOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  negativeVarBasicRow  =  getNegativeVarBasicRow(getOriginalVarOffset());	      Double    positiveVarBasicRow    =    getNegativeVarBasicRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
84	[BUG]  [BUGGY]  Double  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeVarOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeVarOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeVarOffset());	      Double    positiveVarBasicRow    =    getNegativeVarBasicRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
85	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalDecisionVariables()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalDecisionVariables()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  Integer  rhs  =  getRhsVisible();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  rhs  =  getRhsVisible();  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  rhs  =  getRhsVisible();	      Integer    rhs    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
87	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeVariableOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeVariableOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeVariableOffset());	      Integer    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
88	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeDecisionRow(getNegativeVariableOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeDecisionRow(getNegativeVariableOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeDecisionRow(getNegativeVariableOffset());	      Integer    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
89	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeVarOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeVarOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeVarOffset());	      Integer    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
90	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeDecisionVariableOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeDecisionVariableOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeDecisionVariableOffset());	      Integer    negativeVarBasicRow    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
91	[BUG]  [BUGGY]  Integer  rhsOffset  =  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  rhsOffset  =  getRhsOffset()  -  1;  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  rhsOffset  =  getRhsOffset()  -  1;	      Integer    rhsOffset    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
92	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalDecisionVariables().size()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalDecisionVariables().size()  ];	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
93	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalVarBasicRows());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalVarBasicRows());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getRhsOffset()  +  getOriginalVarBasicRows());	      Integer[]    coefficients    =    new    int[getRhsOffset()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
94	[BUG]  [BUGGY]  Double  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeVariableOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeVariableOffset());  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  negativeVarBasicRow  =  getNegativeVarBasicRow(getNegativeVariableOffset());	      Double    negativeVarBasicRow    =    getNegativeDecisionRow(getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
95	[BUG]  [BUGGY]  Double  negativeVarBasicRow  =  getNegativeVarBasicRow();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Double  negativeVarBasicRow  =  getNegativeVarBasicRow();  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Double  negativeVarBasicRow  =  getNegativeVarBasicRow();	      Double    positiveVarBasicRow    =    getNegativeVarBasicRow();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
96	[BUG]  [BUGGY]  double  mostNegative  =  positiveVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  double  mostNegative  =  positiveVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	double  mostNegative  =  positiveVarBasicRow  ==  null?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());	  double    mostNegative    =    negativeVarBasicRow!=    null?    0    :    getEntry(negativeVarBasicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
97	[BUG]  [BUGGY]  Integer  coefficients[]  =  negativeVarBasicRow.get(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer  coefficients[]  =  negativeVarBasicRow.get(negativeVarBasicRow);  [BUGGY]    Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer  coefficients[]  =  negativeVarBasicRow.get(negativeVarBasicRow);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
98	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeFunctions()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());    [BUGGY]  Integer[]  coefficients  =  new  int[getNegativeFunctions()  ];  [BUGGY]    double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	342	342	1	replace	Integer[]  coefficients  =  new  int[getNegativeFunctions()  ];	      Integer[]    coefficients    =    new    int[getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
