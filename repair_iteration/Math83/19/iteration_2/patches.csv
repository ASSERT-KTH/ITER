bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double[]  coefficients  =  getSolutionVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getSolutionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  getSolutionVariables();	  double[]    coefficients    =    getOriginalDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
2	[BUG]  [BUGGY]  int[]  coefficients  =  getOriginalDecisionVariables();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getOriginalDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  getOriginalDecisionVariables();	  double[]    coefficients    =    getOriginalDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
3	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(false,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(false,  false);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(false,  false);	  SimplexTableau.this.setSolution(true,    false);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
4	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(false,  true);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(false,  true);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(false,  true);	  SimplexTableau.this.setSolution(true,    false);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]  int[]  coefficients  =  getOriginalNumDecisionVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getOriginalNumDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  getOriginalNumDecisionVariables();	  int[]    coefficients    =    getNegativeDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
6	[BUG]  [BUGGY]  int[]  coefficients  =  getOriginalNumberVariables();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getOriginalNumberVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  getOriginalNumberVariables();	  int[]    coefficients    =    getNegativeDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
7	[BUG]  [BUGGY]  int[]  coefficients  =  getSolutionVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getSolutionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  getSolutionVariables();	  int[]    coefficients    =    getNegativeDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
8	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables()  +  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables()  +  getRhsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables()  +  getRhsOffset());	  double[]    coefficients    =    new    double[getOriginalDecisionVariables()    +    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
9	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberVariables()  +  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberVariables()  +  getRhsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumberVariables()  +  getRhsOffset());	  double[]    coefficients    =    new    double[getOriginalDecisionVariables()    +    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
10	[BUG]  [BUGGY]  Integer  destPos  =  getColumnOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getColumnOffset()  -  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getColumnOffset()  -  1;	  Integer    destPos    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
11	[BUG]  [BUGGY]  Integer  destPos  =  getColumn()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getColumn()  -  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getColumn()  -  1;	  Integer    destPos    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
12	[BUG]  [BUGGY]  Integer  destPos  =  getEntry(destPos,  getRhsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getEntry(destPos,  getRhsOffset()  +  1);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getEntry(destPos,  getRhsOffset()  +  1);	  Integer    destPos    =    getEntry(destPos,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
13	[BUG]  [BUGGY]  Integer  destPos  =  getEntry(destPos,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getEntry(destPos,  getRhsOffset()  -  1);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getEntry(destPos,  getRhsOffset()  -  1);	  Integer    destPos    =    getEntry(destPos,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
14	[BUG]  [BUGGY]  Integer  zIndex  =  getSlackOffset();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  zIndex  =  getSlackOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  zIndex  =  getSlackOffset();	  int    zIndex    =    getSlackOffset();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
15	[BUG]  [BUGGY]  int  zIndex  =  getSlackOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getSlackOffset()  +  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getSlackOffset()  +  1;	  int    zIndex    =    getSlackOffset();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
16	[BUG]  [BUGGY]  double  zIndex  =  getSlackOffset();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double  zIndex  =  getSlackOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double  zIndex  =  getSlackOffset();	  int    zIndex    =    getSlackOffset();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
17	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicRows()  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicRows()  +  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicRows()  +  1];	  double[]    coefficients    =    new    double[getBasicRows()    ];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
18	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicRows().length  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicRows().length  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicRows().length  ];	  double[]    coefficients    =    new    double[getBasicRows()    ];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
19	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getNegativeDecisionVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getNegativeDecisionVariables()  +  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getNegativeDecisionVariables()  +  1];	  int[]    coefficients    =    new    int[getNegativeDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
20	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getRhsOffset()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getRhsOffset()  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getRhsOffset()  ];	  int[]    coefficients    =    new    int[getNegativeDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
21	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getNegativeDecisionVariables().length  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getNegativeDecisionVariables().length  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getNegativeDecisionVariables().length  ];	  int[]    coefficients    =    new    int[getNegativeDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
22	[BUG]  [BUGGY]  double[]  coefficients  =  getNumDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getNumDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  getNumDecisionVariables();	  double[]    coefficients    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getStandardOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getStandardOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getStandardOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getStandardOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
24	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getStandardOffset()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getStandardOffset()  +  getOriginalNumDecisionVariables());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getStandardOffset()  +  getOriginalNumDecisionVariables());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getStandardOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
25	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables()  +  getStandardOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables()  +  getStandardOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeDecisionVariables()  +  getStandardOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getStandardOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
26	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getNumDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getNumDecisionVariables()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getNumDecisionVariables()  ];	  int[]    coefficients    =    new    int[getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
27	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getSolution()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getSolution()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getSolution()  ];	  int[]    coefficients    =    new    int[getOriginalNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
28	[BUG]  [BUGGY]  Integer  destPos  =  getColumnOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getColumnOffset()  +  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getColumnOffset()  +  1;	  Integer    destPos    =    getColumnOffset();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
29	[BUG]  [BUGGY]  Integer  destPos  =  getRowOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getRowOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getRowOffset();	  Integer    destPos    =    getColumnOffset();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
30	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalVariables()  +  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalVariables()  +  getRhsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalVariables()  +  getRhsOffset());	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicRowsOffset()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicRowsOffset()  +  getOriginalNumDecisionVariables());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicRowsOffset()  +  getOriginalNumDecisionVariables());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getBasicRowsOffset());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
32	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getBasicRowsOffset());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getBasicRowsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getBasicRowsOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getBasicRowsOffset());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
33	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  getBasicRowsOffset());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  getBasicRowsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  getBasicRowsOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getBasicRowsOffset());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
34	[BUG]  [BUGGY]  Integer[]  coefficients  =  getBasicRows();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getBasicRows();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer[]  coefficients  =  getBasicRows();	  Integer[]    coefficients    =    getBasicNumDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
35	[BUG]  [BUGGY]  Integer[]  coefficients  =  getBasicVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getBasicVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer[]  coefficients  =  getBasicVariables();	  Integer[]    coefficients    =    getBasicNumDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
36	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSolution()  /  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSolution()  /  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getSolution()  /  1];	  double[]    coefficients    =    new    double[getSolution()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSolution()  *  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSolution()  *  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getSolution()  *  1];	  double[]    coefficients    =    new    double[getSolution()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  getRhsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  getRhsOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    /    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
39	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  /  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  /  getRhsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  /  getRhsOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    /    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
40	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables()  /  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables()  /  getRhsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeDecisionVariables()  /  getRhsOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    /    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  int  zIndex  =  getOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getOffset()  +  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getOffset()  +  1;	  int    zIndex    =    getOffset();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  Integer  zIndex  =  getOffset();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  zIndex  =  getOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  zIndex  =  getOffset();	  int    zIndex    =    getOffset();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  double  zIndex  =  getOffset();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double  zIndex  =  getOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double  zIndex  =  getOffset();	  int    zIndex    =    getOffset();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  Double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().size()];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().size()];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().size()];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables().size()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
45	[BUG]  [BUGGY]  int[]  coefficients  =  getOriginalNumberFunctions();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getOriginalNumberFunctions();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  getOriginalNumberFunctions();	  double[]    coefficients    =    getOriginalNumberFunctions();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().size()  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().size()  +  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicVariables().size()  +  1];	  double[]    coefficients    =    new    double[getBasicVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
47	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getBasicVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getBasicVariables().size()  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getBasicVariables().size()  ];	  double[]    coefficients    =    new    double[getBasicVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
48	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().size()  *  2];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().size()  *  2];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicVariables().size()  *  2];	  double[]    coefficients    =    new    double[getBasicVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
49	[BUG]  [BUGGY]  Integer  zIndex  =  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  zIndex  =  getRhsOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  zIndex  =  getRhsOffset();	  int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
50	[BUG]  [BUGGY]  Integer  destPos  =  getDestinationOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getDestinationOffset()  +  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getDestinationOffset()  +  1;	  Integer    destPos    =    getDestinationOffset();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
51	[BUG]  [BUGGY]  Integer  destPos  =  getDestinationOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getDestinationOffset()  -  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getDestinationOffset()  -  1;	  Integer    destPos    =    getDestinationOffset();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
52	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getNegativeDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getNegativeDecisionVariables().size()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getNegativeDecisionVariables().size()  ];	  double[]    coefficients    =    new    double[getNegativeDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
53	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables().size()  +  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables().size()  +  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeDecisionVariables().size()  +  1];	  double[]    coefficients    =    new    double[getNegativeDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
54	[BUG]  [BUGGY]  Integer[]  coefficients  =  getOriginalNumberVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getOriginalNumberVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer[]  coefficients  =  getOriginalNumberVariables();	  Integer[]    coefficients    =    getNegativeDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
55	[BUG]  [BUGGY]  Integer[]  coefficients  =  getNumberDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getNumberDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer[]  coefficients  =  getNumberDecisionVariables();	  Integer[]    coefficients    =    getOriginalNumberDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
56	[BUG]  [BUGGY]  Integer[]  coefficients  =  getSolution();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getSolution();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer[]  coefficients  =  getSolution();	  Integer[]    coefficients    =    getOriginalNumberDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
57	[BUG]  [BUGGY]  int[]  coefficients  =  getSolution();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getSolution();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  getSolution();	  int[]    coefficients    =    getBasicRows();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
58	[BUG]  [BUGGY]  Integer  destPos  =  getSolution();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getSolution();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getSolution();	  Integer    destPos    =    getDestination();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
59	[BUG]  [BUGGY]  Integer  destPos  =  getDestination()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getDestination()  +  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getDestination()  +  1;	  Integer    destPos    =    getDestination();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
60	[BUG]  [BUGGY]  Integer  zIndex  =  getNegativeDecisionVariableOffset();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  zIndex  =  getNegativeDecisionVariableOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  zIndex  =  getNegativeDecisionVariableOffset();	  int    zIndex    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
61	[BUG]  [BUGGY]  int  zIndex  =  getOriginalNumDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getOriginalNumDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getOriginalNumDecisionVariables();	  int    zIndex    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
62	[BUG]  [BUGGY]  int  zIndex  =  getOriginalNumDecisionVariablesOffset();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getOriginalNumDecisionVariablesOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getOriginalNumDecisionVariablesOffset();	  int    zIndex    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
63	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(new  RealPointValuePair(),  true);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(new  RealPointValuePair(),  true);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(new  RealPointValuePair(),  true);	  SimplexTableau.this.setSolution(new    RealPointValuePair());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
64	[BUG]  [BUGGY]  SimplexTableau.this.addSolution(new  RealPointValuePair());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.addSolution(new  RealPointValuePair());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.addSolution(new  RealPointValuePair());	  SimplexTableau.this.setSolution(new    RealPointValuePair());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
65	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(new  RealPointValuePair(0));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(new  RealPointValuePair(0));  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(new  RealPointValuePair(0));	  SimplexTableau.this.setSolution(new    RealPointValuePair());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
66	[BUG]  [BUGGY]  Integer  destPos  =  getEntry(column,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getEntry(column,  getColumnOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getEntry(column,  getColumnOffset());	  Integer    destPos    =    getEntry(destPos,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
67	[BUG]  [BUGGY]  Integer  destPos  =  getEntry(getRhsOffset(),  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getEntry(getRhsOffset(),  getColumnOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getEntry(getRhsOffset(),  getColumnOffset());	  Integer    destPos    =    getEntry(destPos,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
68	[BUG]  [BUGGY]  Integer  destPos  =  getEntry(destPos,  getColumnOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getEntry(destPos,  getColumnOffset()  -  1);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getEntry(destPos,  getColumnOffset()  -  1);	  Integer    destPos    =    getEntry(destPos,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
69	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(basicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(basicRow);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(basicRow);	  SimplexTableau.this.setSolution(coefficient);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
70	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(mostNegative);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(mostNegative);	  SimplexTableau.this.setSolution(coefficient);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
71	[BUG]  [BUGGY]  int[]  coefficients  =  getOriginalFunctions();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getOriginalFunctions();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  getOriginalFunctions();	  double[]    coefficients    =    getOriginalFunctions();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
72	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicRows().size()  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicRows().size()  +  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicRows().size()  +  1];	  double[]    coefficients    =    new    double[getBasicRows().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
73	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getBasicRows().size()  ];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getBasicRows().size()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getBasicRows().size()  ];	  double[]    coefficients    =    new    double[getBasicRows().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
74	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getNumberDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getNumberDecisionVariables()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getNumberDecisionVariables()  ];	  int[]    coefficients    =    new    int[getOriginalNumberDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
75	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getRhsOffset()  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getRhsOffset()  +  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getRhsOffset()  +  1];	  double[]    coefficients    =    new    double[getRhsOffset()    ];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
76	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables().size()  +  1];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables().size()  +  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getSolutionVariables().size()  +  1];	  double[]    coefficients    =    new    double[getSolutionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
77	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getSolutionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getSolutionVariables().size()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getSolutionVariables().size()  ];	  double[]    coefficients    =    new    double[getSolutionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
78	[BUG]  [BUGGY]  Double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getRhsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getRhsOffset());	  double[]    coefficients    =    new    double[getNegativeDecisionVariables()    +    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
79	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables()  /  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables()  /  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getSolutionVariables()  /  1];	  double[]    coefficients    =    new    double[getSolutionVariables()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
80	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getSolutionVariables().length  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getSolutionVariables().length  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getSolutionVariables().length  ];	  int[]    coefficients    =    new    int[getSolutionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
81	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getNumArtificialVariables()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getNumArtificialVariables()  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getNumArtificialVariables()  ];	  int[]    coefficients    =    new    int[getSolutionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
82	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getColumnsOffset()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getColumnsOffset()  +  getOriginalNumDecisionVariables());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getColumnsOffset()  +  getOriginalNumDecisionVariables());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
83	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getColumnsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getColumnsOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
84	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getRhsOffset()  +  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getRhsOffset()  +  getColumnsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getRhsOffset()  +  getColumnsOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
85	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables().length  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables().length  -  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeDecisionVariables().length  -  1];	  double[]    coefficients    =    new    double[getNegativeDecisionVariables().length    ];    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
86	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables().length  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables().length  +  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeDecisionVariables().length  +  1];	  double[]    coefficients    =    new    double[getNegativeDecisionVariables().length    ];    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
87	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables().length  -  2];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables().length  -  2];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeDecisionVariables().length  -  2];	  double[]    coefficients    =    new    double[getNegativeDecisionVariables().length    ];    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
88	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables().length  /  2];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables().length  /  2];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeDecisionVariables().length  /  2];	  double[]    coefficients    =    new    double[getNegativeDecisionVariables().length    ];    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
89	[BUG]  [BUGGY]  Integer[]  coefficients  =  getOriginalVariables();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getOriginalVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer[]  coefficients  =  getOriginalVariables();	  Integer[]    coefficients    =    getNumDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
90	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getRhsOffset()  /  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getRhsOffset()  /  1);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getRhsOffset()  /  1);	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getRhsOffset()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
91	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getOffset()  +  1);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getOffset()  +  1);	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getRhsOffset()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
92	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberVariables()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberVariables()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumberVariables()  ];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
93	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getNumDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getNumDecisionVariables().size()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getNumDecisionVariables().size()  ];	  int[]    coefficients    =    new    int[getOriginalNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
94	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getOriginalNumDecisionVariables().size()  +  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getOriginalNumDecisionVariables().size()  +  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getOriginalNumDecisionVariables().size()  +  1];	  int[]    coefficients    =    new    int[getOriginalNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
95	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().length  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().length  -  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicVariables().length  -  1];	  double[]    coefficients    =    new    double[getBasicVariables().length    ];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
96	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().length  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().length  +  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicVariables().length  +  1];	  double[]    coefficients    =    new    double[getBasicVariables().length    ];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
97	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getBasicVariables().length  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getBasicVariables().length  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getBasicVariables().length  ];	  double[]    coefficients    =    new    double[getBasicVariables().length    ];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
98	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().length  -  2];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().length  -  2];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicVariables().length  -  2];	  double[]    coefficients    =    new    double[getBasicVariables().length    ];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
99	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariableOffset()  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariableOffset()  +  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeDecisionVariableOffset()  +  1];	  double[]    coefficients    =    new    double[getNegativeDecisionVariableOffset()    ];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
100	[BUG]  [BUGGY]  Double[]  coefficients  =  getNegativeDecisionVariables();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Double[]  coefficients  =  getNegativeDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Double[]  coefficients  =  getNegativeDecisionVariables();	  Double[]    coefficients    =    getOriginalNumDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
101	[BUG]  [BUGGY]  Double[]  coefficients  =  getSolutionVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Double[]  coefficients  =  getSolutionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Double[]  coefficients  =  getSolutionVariables();	  Double[]    coefficients    =    getOriginalNumDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
102	[BUG]  [BUGGY]  Double[]  coefficients  =  getSolution();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Double[]  coefficients  =  getSolution();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Double[]  coefficients  =  getSolution();	  Double[]    coefficients    =    getOriginalNumDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
103	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(basicRows,  basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(basicRows,  basicRows);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(basicRows,  basicRows);	  SimplexTableau.this.setSolution(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
104	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(basicRows,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(basicRows,  mostNegative);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(basicRows,  mostNegative);	  SimplexTableau.this.setSolution(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
105	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(basicRows,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(basicRows,  true);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(basicRows,  true);	  SimplexTableau.this.setSolution(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
106	[BUG]  [BUGGY]  int[]  coefficients  =  getOriginalNumberDecisionVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getOriginalNumberDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  getOriginalNumberDecisionVariables();	  double[]    coefficients    =    getOriginalNumberDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
107	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getRhsIndex()  +  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getRhsIndex()  +  1;	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
108	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getRhsIndex()  -  1;	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
109	[BUG]  [BUGGY]  int  zIndex  =  getColumnIndex();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getColumnIndex();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getColumnIndex();	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
110	[BUG]  [BUGGY]  int[]  coefficients  =  getSolutionRows();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getSolutionRows();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  getSolutionRows();	  double[]    coefficients    =    getSolutionRows();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
111	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberVariables().size()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumberVariables().size()  ];	  double[]    coefficients    =    new    double[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
112	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalVariables().size()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalVariables().size()  ];	  double[]    coefficients    =    new    double[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
113	[BUG]  [BUGGY]  int  zIndex  =  getVisibleOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getVisibleOffset()  +  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getVisibleOffset()  +  1;	  int    zIndex    =    getVisibleOffset();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
114	[BUG]  [BUGGY]  Integer  zIndex  =  getVisibleOffset();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  zIndex  =  getVisibleOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  zIndex  =  getVisibleOffset();	  int    zIndex    =    getVisibleOffset();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
115	[BUG]  [BUGGY]  double  zIndex  =  getVisibleOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double  zIndex  =  getVisibleOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double  zIndex  =  getVisibleOffset();	  int    zIndex    =    getVisibleOffset();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
116	[BUG]  [BUGGY]  Integer  destPos  =  getRhsOffset()  /  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getRhsOffset()  /  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getRhsOffset()  /  1;	  Integer    destPos    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
117	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(basicRows,  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(basicRows,  coefficients);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(basicRows,  coefficients);	  SimplexTableau.this.setSolution(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
118	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(efficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(efficients);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(efficients);	  SimplexTableau.this.setSolution(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
119	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(0);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(0);	  SimplexTableau.this.setSolution(false);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
120	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeFunctions().length  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeFunctions().length  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeFunctions().length  ];	  double[]    coefficients    =    new    double[getNegativeFunctions()    ];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
121	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeFunctions()  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeFunctions()  +  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeFunctions()  +  1];	  double[]    coefficients    =    new    double[getNegativeFunctions()    ];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
122	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicRow().length  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicRow().length  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicRow().length  ];	  double[]    coefficients    =    new    double[getBasicRow()    ];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
123	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicRow()  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicRow()  +  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicRow()  +  1];	  double[]    coefficients    =    new    double[getBasicRow()    ];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
124	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getBasicRow()  ];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getBasicRow()  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getBasicRow()  ];	  double[]    coefficients    =    new    double[getBasicRow()    ];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
125	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getColumns().length  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getColumns().length  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getColumns().length  ];	  double[]    coefficients    =    new    double[getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
126	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getRows()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getRows()  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getRows()  ];	  double[]    coefficients    =    new    double[getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
127	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getColumns()  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getColumns()  +  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getColumns()  +  1];	  double[]    coefficients    =    new    double[getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
128	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getBasicVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getBasicVariables()  +  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getBasicVariables()  +  1];	  int[]    coefficients    =    new    int[getBasicVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
129	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getBasicVariables()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  new  int[getBasicVariables()  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer[]  coefficients  =  new  int[getBasicVariables()  ];	  int[]    coefficients    =    new    int[getBasicVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
130	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getSize());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getSize());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getSize());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getSize());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
131	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  getSize());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  getSize());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  getSize());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getSize());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
132	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  getSize());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  getSize());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  getSize());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getSize());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
133	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getZIndex()  +  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getZIndex()  +  1;	  int    zIndex    =    getZIndex();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
134	[BUG]  [BUGGY]  int  zIndex  =  getRowIndex();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getRowIndex();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getRowIndex();	  int    zIndex    =    getZIndex();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
135	[BUG]  [BUGGY]  double  zIndex  =  getZIndex();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double  zIndex  =  getZIndex();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double  zIndex  =  getZIndex();	  int    zIndex    =    getZIndex();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
136	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getOriginalDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getOriginalDecisionVariables().size()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getOriginalDecisionVariables().size()  ];	  double[]    coefficients    =    new    double[getOriginalDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
137	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSum()  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSum()  +  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getSum()  +  1];	  double[]    coefficients    =    new    double[getSum()    ];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
138	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSum()  *  getRhsOffset()  ];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSum()  *  getRhsOffset()  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getSum()  *  getRhsOffset()  ];	  double[]    coefficients    =    new    double[getSum()    ];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
139	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables()  /  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables()  /  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeDecisionVariables()  /  1];	  double[]    coefficients    =    new    double[getNegativeDecisionVariables()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
140	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  /  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  /  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicVariables()  /  1];	  double[]    coefficients    =    new    double[getBasicVariables()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
141	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  *  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  *  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicVariables()  *  1];	  double[]    coefficients    =    new    double[getBasicVariables()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
142	[BUG]  [BUGGY]  double  zIndex  =  getRhsIndex();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double  zIndex  =  getRhsIndex();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double  zIndex  =  getRhsIndex();	  double    zIndex    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
143	[BUG]  [BUGGY]  double  zIndex  =  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double  zIndex  =  getRhsOffset()  +  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double  zIndex  =  getRhsOffset()  +  1;	  double    zIndex    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
144	[BUG]  [BUGGY]  double  zIndex  =  getVarOffset();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double  zIndex  =  getVarOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double  zIndex  =  getVarOffset();	  double    zIndex    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
145	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables()  *  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables()  *  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getSolutionVariables()  *  1];	  double[]    coefficients    =    new    double[getSolutionVariables()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
146	[BUG]  [BUGGY]  int  zIndex  =  getVisibleIndex();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getVisibleIndex();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getVisibleIndex();	  int    zIndex    =    getZIndex();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
147	[BUG]  [BUGGY]  SimplexTableau.this.addSolution(true);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.addSolution(true);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.addSolution(true);	  SimplexTableau.this.setSolution(false);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
148	[BUG]  [BUGGY]  int  zIndex  =  getNegativeDecisionVariableOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getNegativeDecisionVariableOffset()  +  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getNegativeDecisionVariableOffset()  +  1;	  int    zIndex    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
149	[BUG]  [BUGGY]  int  zIndex  =  getOriginalNumberDecisionVariableOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getOriginalNumberDecisionVariableOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getOriginalNumberDecisionVariableOffset();	  int    zIndex    =    getNegativeDecisionVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
150	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().size()  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().size()  -  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicVariables().size()  -  1];	  double[]    coefficients    =    new    double[getBasicVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
151	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSize()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSize()  +  getOriginalNumDecisionVariables());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getSize()  +  getOriginalNumDecisionVariables());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getSize());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
152	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables().size()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables().size()  ];	  double[]    coefficients    =    new    double[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
153	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getBasicRows()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getBasicRows()  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getBasicRows()  ];	  int[]    coefficients    =    new    int[getSolutionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
154	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getSolutionVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getSolutionVariables()  +  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getSolutionVariables()  +  1];	  int[]    coefficients    =    new    int[getSolutionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
155	[BUG]  [BUGGY]  Integer[]  coefficients  =  getBasicNumberDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getBasicNumberDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer[]  coefficients  =  getBasicNumberDecisionVariables();	  Integer[]    coefficients    =    getOriginalNumberDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
156	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicRows()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicRows()  +  getOriginalNumDecisionVariables());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicRows()  +  getOriginalNumDecisionVariables());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getBasicRowsOffset());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
157	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables()  +  getBasicRowsOffset());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables()  +  getBasicRowsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeDecisionVariables()  +  getBasicRowsOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getBasicRowsOffset());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
158	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getBasicRowsOffset());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getBasicRowsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getBasicRowsOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getBasicRowsOffset());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
159	[BUG]  [BUGGY]  int  zIndex  =  getNegativeDecisionVariableOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getNegativeDecisionVariableOffset()  -  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getNegativeDecisionVariableOffset()  -  1;	  int    zIndex    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
160	[BUG]  [BUGGY]  int  zIndex  =  getSlideOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getSlideOffset()  -  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getSlideOffset()  -  1;	  int    zIndex    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
161	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(negativeVarBasicRow);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(negativeVarBasicRow);	  SimplexTableau.this.setSolution(coefficient);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
162	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(positiveVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(positiveVarBasicRow);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(positiveVarBasicRow);	  SimplexTableau.this.setSolution(coefficient);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
163	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicRow()  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicRow()  -  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicRow()  -  1];	  double[]    coefficients    =    new    double[getBasicRow()    ];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
164	[BUG]  [BUGGY]  int[]  coefficients  =  getNegativeFunctions();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getNegativeFunctions();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  getNegativeFunctions();	  int[]    coefficients    =    getBasicRows();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
165	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset().length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getRhsOffset().length;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getRhsOffset().length;	  int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
166	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(null,  true);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(null,  true);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(null,  true);	  SimplexTableau.this.setSolution(true,    true);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
167	[BUG]  [BUGGY]  double[]  coefficients  =  getBasicNumDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getBasicNumDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  getBasicNumDecisionVariables();	  double[]    coefficients    =    getOriginalNumDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
168	[BUG]  [BUGGY]  double  zIndex  =  getNegativeDecisionVariableOffset();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double  zIndex  =  getNegativeDecisionVariableOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double  zIndex  =  getNegativeDecisionVariableOffset();	  double    zIndex    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
169	[BUG]  [BUGGY]  double  zIndex  =  getSlideOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double  zIndex  =  getSlideOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double  zIndex  =  getSlideOffset();	  double    zIndex    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
170	[BUG]  [BUGGY]  int  zIndex  =  getVisibleOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getVisibleOffset()  -  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getVisibleOffset()  -  1;	  int    zIndex    =    getVisibleOffset();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
171	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(basicRows,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(basicRows,  negativeVarBasicRow);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(basicRows,  negativeVarBasicRow);	  SimplexTableau.this.setSolution(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
172	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(basicRows,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(basicRows,  false);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(basicRows,  false);	  SimplexTableau.this.setSolution(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
173	[BUG]  [BUGGY]  Integer  destPos  =  getDestination()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getDestination()  -  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getDestination()  -  1;	  Integer    destPos    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
174	[BUG]  [BUGGY]  Integer  destPos  =  getLeftOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getLeftOffset()  +  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getLeftOffset()  +  1;	  Integer    destPos    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
175	[BUG]  [BUGGY]  Integer[]  coefficients  =  getNegativeFunctions();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getNegativeFunctions();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer[]  coefficients  =  getNegativeFunctions();	  Integer[]    coefficients    =    getNegativeDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
176	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getNegativeFunctions()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getNegativeFunctions()  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getNegativeFunctions()  ];	  int[]    coefficients    =    new    int[getNegativeDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
177	[BUG]  [BUGGY]  double[]  coefficients  =  getNumObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getNumObjectiveFunctions();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  getNumObjectiveFunctions();	  double[]    coefficients    =    getOriginalFunctions();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
178	[BUG]  [BUGGY]  Double[]  coefficients  =  getOriginalDecisionVariables();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Double[]  coefficients  =  getOriginalDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Double[]  coefficients  =  getOriginalDecisionVariables();	  Double[]    coefficients    =    getOriginalNumDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
179	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  /  getRhsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  /  getRhsOffset()  +  1);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalDecisionVariables()  /  getRhsOffset()  +  1);	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    /    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
180	[BUG]  [BUGGY]  int  zIndex  =  getVarIndex();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getVarIndex();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getVarIndex();	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
181	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getColumnsVariables()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getColumnsVariables()  +  getOriginalNumDecisionVariables());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getColumnsVariables()  +  getOriginalNumDecisionVariables());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
182	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getColumns()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getColumns()  +  getOriginalNumDecisionVariables());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getColumns()  +  getOriginalNumDecisionVariables());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
183	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getStandardOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getStandardOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getStandardOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getStandardOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
184	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalVariables()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalVariables()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalVariables()  ];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
185	[BUG]  [BUGGY]  int  zIndex  =  getOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getOffset()  -  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getOffset()  -  1;	  int    zIndex    =    getOffset();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
186	[BUG]  [BUGGY]  Integer  destPos  =  getEntry(destPos,  getColumnOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getEntry(destPos,  getColumnOffset()  +  1);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getEntry(destPos,  getColumnOffset()  +  1);	  Integer    destPos    =    getEntry(destPos,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
187	[BUG]  [BUGGY]  Integer  destPos  =  getDestinationPos();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getDestinationPos();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getDestinationPos();	  Integer    destPos    =    getDestinationOffset();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
188	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables().length  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables().length  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getSolutionVariables().length  ];	  double[]    coefficients    =    new    double[getNegativeDecisionVariables().length    ];    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
189	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables()  *  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables()  *  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeDecisionVariables()  *  1];	  double[]    coefficients    =    new    double[getNegativeDecisionVariables()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
190	[BUG]  [BUGGY]  int  zIndex  =  getVarOffset();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getVarOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getVarOffset();	  int    zIndex    =    getSlackOffset();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
191	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getRhsOffset()  ];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getRhsOffset()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getRhsOffset()  ];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getRhsOffset()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
192	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getColumnsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getColumnsOffset()  +  1);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getColumnsOffset()  +  1);	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getRhsOffset()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
193	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(positiveVarBasicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(positiveVarBasicRows);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(positiveVarBasicRows);	  SimplexTableau.this.setSolution(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
194	[BUG]  [BUGGY]  Integer  destPos  =  getDestination().length;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getDestination().length;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getDestination().length;	  Integer    destPos    =    getDestination();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
195	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(new  RealPointValuePair(1));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(new  RealPointValuePair(1));  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(new  RealPointValuePair(1));	  SimplexTableau.this.setSolution(new    RealPointValuePair());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
196	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  /  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  /  getRhsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalDecisionVariables()  /  getRhsOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    /    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
197	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  getStandardOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  getStandardOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  getStandardOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    /    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
198	[BUG]  [BUGGY]  SimplexTableau.this.setBasicRow(basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setBasicRow(basicRows);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setBasicRow(basicRows);	  SimplexTableau.this.setSolution(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
199	[BUG]  [BUGGY]  double[]  coefficients  =  getOriginalStandardNumberFunctions();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getOriginalStandardNumberFunctions();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  getOriginalStandardNumberFunctions();	  double[]    coefficients    =    getOriginalNumberFunctions();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
200	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getStandardOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getStandardOffset()  -  1);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getStandardOffset()  -  1);	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getStandardOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
201	[BUG]  [BUGGY]  Integer  destPos  =  getDestination().getIntValue();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getDestination().getIntValue();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getDestination().getIntValue();	  Integer    destPos    =    getDestination();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
202	[BUG]  [BUGGY]  double  zIndex  =  getSlackVarOffset();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double  zIndex  =  getSlackVarOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double  zIndex  =  getSlackVarOffset();	  double    zIndex    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
203	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getZIndex()  -  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getZIndex()  -  1;	  int    zIndex    =    getZIndex();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
204	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getRhsOffset()  *  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getRhsOffset()  *  1;	  int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
205	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNegativeDecisionVariables()  +  getOriginalNumDecisionVariables());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNegativeDecisionVariables()  +  getOriginalNumDecisionVariables());	  double[]    coefficients    =    new    double[getNegativeDecisionVariables()    +    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
206	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getColumnsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getColumnsOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
207	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getColumnsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getColumnsOffset()  -  1);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getColumnsOffset()  -  1);	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
208	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getOriginalFunctions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getOriginalFunctions());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getOriginalFunctions());	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
209	[BUG]  [BUGGY]  int  zIndex  =  getSlackIndex();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getSlackIndex();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getSlackIndex();	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
210	[BUG]  [BUGGY]  double[]  coefficients  =  getOriginalStandardNumDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getOriginalStandardNumDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  getOriginalStandardNumDecisionVariables();	  double[]    coefficients    =    getOriginalNumDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
211	[BUG]  [BUGGY]  Integer  destPos  =  getDestination().getRhsOffset();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  destPos  =  getDestination().getRhsOffset();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer  destPos  =  getDestination().getRhsOffset();	  Integer    destPos    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
212	[BUG]  [BUGGY]  double[]  coefficients  =  getOriginalStandardNumberDecisionVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getOriginalStandardNumberDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  getOriginalStandardNumberDecisionVariables();	  double[]    coefficients    =    getOriginalNumberDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
213	[BUG]  [BUGGY]  Double[]  coefficients  =  getOriginalStandardNumDecisionVariables();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Double[]  coefficients  =  getOriginalStandardNumDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Double[]  coefficients  =  getOriginalStandardNumDecisionVariables();	  Double[]    coefficients    =    getOriginalNumDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
214	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables().size()  +  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables().size()  +  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables().size()  +  1];	  double[]    coefficients    =    new    double[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
215	[BUG]  [BUGGY]  SimplexTableau.this.setSolution(slackVar);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  SimplexTableau.this.setSolution(slackVar);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	SimplexTableau.this.setSolution(slackVar);	  SimplexTableau.this.setSolution(coefficient);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
216	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getSize()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getSize()  -  1);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getSize()  -  1);	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getSize());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
217	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getSize());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getSize());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getSize());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getSize());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
218	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getNumDecisionVariables());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getNumDecisionVariables());	  double[]    coefficients    =    new    double[getOriginalDecisionVariables()    +    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
219	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getNegativeDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getNegativeDecisionVariables());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalDecisionVariables()  +  getNegativeDecisionVariables());	  double[]    coefficients    =    new    double[getOriginalDecisionVariables()    +    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
220	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getColumnsOffset()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getColumnsOffset()  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getColumnsOffset()  ];	  double[]    coefficients    =    new    double[getRhsOffset()    ];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
221	[BUG]  [BUGGY]  Integer[]  coefficients  =  getOriginalStandardNumberDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getOriginalStandardNumberDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Integer[]  coefficients  =  getOriginalStandardNumberDecisionVariables();	  Integer[]    coefficients    =    getOriginalNumberDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
222	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getStandardOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getStandardOffset()  +  1);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getStandardOffset()  +  1);	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getRhsOffset()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
223	[BUG]  [BUGGY]  int  zIndex  =  getSlackOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int  zIndex  =  getSlackOffset()  -  1;  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int  zIndex  =  getSlackOffset()  -  1;	  int    zIndex    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
224	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicRowCount()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicRowCount()  ];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getBasicRowCount()  ];	  double[]    coefficients    =    new    double[getBasicRow()    ];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
225	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables()  +  getBasicRowsOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables()  +  getBasicRowsOffset());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumberDecisionVariables()  +  getBasicRowsOffset());	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getBasicRowsOffset());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
226	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getBasicRowsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getBasicRowsOffset()  -  1);  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getBasicRowsOffset()  -  1);	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getBasicRowsOffset());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
227	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getBasicNumberDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getBasicNumberDecisionVariables()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	int[]  coefficients  =  new  int[getBasicNumberDecisionVariables()  ];	  int[]    coefficients    =    new    int[getOriginalNumberDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
228	[BUG]  [BUGGY]  Double[]  coefficients  =  new  double[getSolution()  /  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Double[]  coefficients  =  new  double[getSolution()  /  1];  [BUGGY]      Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	340	340	1	replace	Double[]  coefficients  =  new  double[getSolution()  /  1];	  double[]    coefficients    =    new    double[getSolution()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
