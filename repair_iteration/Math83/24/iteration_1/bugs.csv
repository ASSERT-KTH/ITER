bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Set  <  Integer>  basicRows  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]    Set  <  Integer>  basicRows  =  Sets.newHashSet();  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	    Set  <  Integer>  basicRows  =  Sets.newHashSet();		non-compiled	[CE]  illegal  start  of  type	48	None	add
2	[BUG]  [BUGGY]    Set  <  Integer>  basicRows  =  Sets.newHashSet(coefficients[i]);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]    Set  <  Integer>  basicRows  =  Sets.newHashSet(coefficients[i]);  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	    Set  <  Integer>  basicRows  =  Sets.newHashSet(coefficients[i]);		non-compiled	[CE]  illegal  start  of  type	48	None	add
3	[BUG]  [BUGGY]    Integer[]  coefficients  =  new  int[getNumObjectiveFunctions().size()  ];  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]    Integer[]  coefficients  =  new  int[getNumObjectiveFunctions().size()  ];  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	    Integer[]  coefficients  =  new  int[getNumObjectiveFunctions().size()  ];		non-compiled	[CE]  illegal  start  of  type	48	None	add
4	[BUG]  [BUGGY]    Integer[]  coefficients  =  new  int[getNumObjectiveFunctions()  +  i];  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]    Integer[]  coefficients  =  new  int[getNumObjectiveFunctions()  +  i];  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	    Integer[]  coefficients  =  new  int[getNumObjectiveFunctions()  +  i];		non-compiled	[CE]  illegal  start  of  type	48	None	add
5	[BUG]  [BUGGY]    Integer[]  basicRows  =  new  Integer[getNumObjectiveFunctions()  +  i);  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]    Integer[]  basicRows  =  new  Integer[getNumObjectiveFunctions()  +  i);  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	    Integer[]  basicRows  =  new  Integer[getNumObjectiveFunctions()  +  i);		non-compiled	[CE]  illegal  start  of  type	48	None	add
6	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  /  i);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  /  i);  [BUGGY]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  /  i);	Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  	non-compiled	[CE]  illegal  start  of  type	47	None	replace
7	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions(),  i);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions(),  i);  [BUGGY]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions(),  i);	Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  	non-compiled	[CE]  illegal  start  of  type	47	None	replace
8	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  coefficients[i]);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  coefficients[i]);  [BUGGY]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  coefficients[i]);	Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  	non-compiled	[CE]  illegal  start  of  type	47	None	replace
9	[BUG]  [BUGGY]    Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]    Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	    Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);		non-compiled	[CE]  illegal  start  of  type	48	None	add
10	[BUG]  [BUGGY]    Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  -  i);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]    Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  -  i);  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	    Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  -  i);		non-compiled	[CE]  illegal  start  of  type	48	None	add
11	[BUG]  [BUGGY]    Integer  i  =  coefficients[i].doubleValue();  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]    Integer  i  =  coefficients[i].doubleValue();  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	    Integer  i  =  coefficients[i].doubleValue();		non-compiled	[CE]  illegal  start  of  type	48	None	add
12	[BUG]  [BUGGY]    Integer[]  coefficients  =  getNumObjectiveFunctions().toArray(new  Integer[i]);  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]    Integer[]  coefficients  =  getNumObjectiveFunctions().toArray(new  Integer[i]);  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	    Integer[]  coefficients  =  getNumObjectiveFunctions().toArray(new  Integer[i]);		non-compiled	[CE]  illegal  start  of  type	48	None	add
13	[BUG]  [BUGGY]    Integer[]  coefficients  =  getNumObjectiveFunctions(i).toArray(new  Integer[0]);  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]    Integer[]  coefficients  =  getNumObjectiveFunctions(i).toArray(new  Integer[0]);  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	    Integer[]  coefficients  =  getNumObjectiveFunctions(i).toArray(new  Integer[0]);		non-compiled	[CE]  illegal  start  of  type	48	None	add
14	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i  +  1);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i  +  1);  [BUGGY]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i  +  1);	Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  	non-compiled	[CE]  illegal  start  of  type	47	None	replace
15	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  i);  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  i);  [BUGGY]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  i);	Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  	non-compiled	[CE]  ')'  expected	47	None	replace
16	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  *  i);  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  *  i);  [BUGGY]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  *  i);	Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  	non-compiled	[CE]  ')'  expected	47	None	replace
17	[BUG]  [BUGGY]    Integer[]basicRows  =  getBasicRows(i);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]    Integer[]basicRows  =  getBasicRows(i);  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	    Integer[]basicRows  =  getBasicRows(i);		non-compiled	[CE]  illegal  start  of  type	48	None	add
18	[BUG]  [BUGGY]    Integer[]basicRows  =  new  Integer[getNumObjectiveFunctions()  +  i];  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  negativeVarBasicRow  =  getBasicRow(getNegativeDecisionVariableOffset());  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  [BUGGY]    Integer[]basicRows  =  new  Integer[getNumObjectiveFunctions()  +  i];  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	345	345	1	replace	    Integer[]basicRows  =  new  Integer[getNumObjectiveFunctions()  +  i];		non-compiled	[CE]  illegal  start  of  type	48	None	add
