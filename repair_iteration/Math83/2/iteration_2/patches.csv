bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(row  ==  null)?  0  :  row;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  null)?  0  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  null)?  0  :  row;	  return(this.baseRow    ==    null)?    0    :    this.baseRow;    	non-compiled	[CE]  not  a  statement	23	None	replace
2	[BUG]  [BUGGY]  return(row  ==  null)?  0  :  this.baseRow;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  null)?  0  :  this.baseRow;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  null)?  0  :  this.baseRow;	  return(this.baseRow    ==    null)?    0    :    this.baseRow;    	non-compiled	[CE]  not  a  statement	23	None	replace
3	[BUG]  [BUGGY]  return(this.baseRow!=  null)?  0  :  this.baseRow;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(this.baseRow!=  null)?  0  :  this.baseRow;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(this.baseRow!=  null)?  0  :  this.baseRow;	  return(this.baseRow    ==    null)?    0    :    this.baseRow;    	non-compiled	[CE]  not  a  statement	23	None	replace
4	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  col,  epsilon);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i),  col,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  col,  epsilon);	  row    =    Math.floor(getBasicRow(i),    col,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	28	None	replace
5	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  col,  0);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i),  col,  0);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  col,  0);	  row    =    Math.floor(getBasicRow(i),    col,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	28	None	replace
6	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i),  col,  epsilon);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i),  col,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i),  col,  epsilon);	  row    =    Math.floor(getBasicRow(i),    col,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	28	None	replace
7	[BUG]  [BUGGY]  row  =  getRowIndex();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getRowIndex();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getRowIndex();	  row    =    getRow();    	non-compiled	[CE]  not  a  statement	33	None	replace
8	[BUG]  [BUGGY]  row  =  getRowInt();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getRowInt();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getRowInt();	  row    =    getRow();    	non-compiled	[CE]  not  a  statement	33	None	replace
9	[BUG]  [BUGGY]  int  height  =  getWidth()  +  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getWidth()  +  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getWidth()  +  1;	  int    height    =    getWidth();    	non-compiled	[CE]  not  a  statement	51	None	replace
10	[BUG]  [BUGGY]  int  height  =  getWidth()  -  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getWidth()  -  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getWidth()  -  1;	  int    height    =    getWidth();    	non-compiled	[CE]  not  a  statement	51	None	replace
11	[BUG]  [BUGGY]  return  row  ==  0?  null  :  row.intValue();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  0?  null  :  row.intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  null  :  row.intValue();	  return    row    ==    0?    null    :    row;    	non-compiled	[CE]  not  a  statement	78	None	replace
12	[BUG]  [BUGGY]  return  row  ==  0?  null  :  row  +  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  0?  null  :  row  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  null  :  row  +  1;	  return    row    ==    0?    null    :    row;    	non-compiled	[CE]  not  a  statement	78	None	replace
13	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  epsilon,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  epsilon,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col),  epsilon,  ignoreObjectiveRows);	  row    =    Math.floor(getBasicRow(i),    epsilon,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	59	None	replace
14	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i),  col,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i),  col,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i),  col,  ignoreObjectiveRows);	  row    =    Math.floor(getBasicRow(i),    epsilon,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	59	None	replace
15	[BUG]  [BUGGY]  row  =  getNumRangeFunctions().doubleValue();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumRangeFunctions().doubleValue();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRangeFunctions().doubleValue();	  row    =    getNumRangeFunctions().intValue();    	non-compiled	[CE]  not  a  statement	77	None	replace
16	[BUG]  [BUGGY]  row  =  getNumRangeFunctions().floatValue();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumRangeFunctions().floatValue();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRangeFunctions().floatValue();	  row    =    getNumRangeFunctions().intValue();    	non-compiled	[CE]  not  a  statement	77	None	replace
17	[BUG]  [BUGGY]  row  =  getNumRangeFunctions().intValue()  +  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumRangeFunctions().intValue()  +  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRangeFunctions().intValue()  +  1;	  row    =    getNumRangeFunctions().intValue();    	non-compiled	[CE]  not  a  statement	77	None	replace
18	[BUG]  [BUGGY]  return  row  >=  0?  0  :  row.intValue();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  >=  0?  0  :  row.intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  >=  0?  0  :  row.intValue();	  return    row    <    0?    0    :    row.intValue();    	non-compiled	[CE]  not  a  statement	20	None	replace
19	[BUG]  [BUGGY]  return  row  ==  0?  0  :  row.intValue();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  0?  0  :  row.intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  0  :  row.intValue();	  return    row    <    0?    0    :    row.intValue();    	non-compiled	[CE]  not  a  statement	20	None	replace
20	[BUG]  [BUGGY]  return  row!=  0?  0  :  row.intValue();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row!=  0?  0  :  row.intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row!=  0?  0  :  row.intValue();	  return    row    <    0?    0    :    row.intValue();    	non-compiled	[CE]  not  a  statement	20	None	replace
21	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon)&&(row  ==  null));  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon)&&(row  ==  null));  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon)&&(row  ==  null));	  return(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon)&&(row    ==    null));    	non-compiled	[CE]  not  a  statement	80	None	replace
22	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  row)&&(epsilon  ==  null));  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  row)&&(epsilon  ==  null));  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  1.0,  row)&&(epsilon  ==  null));	  return(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon)&&(row    ==    null));    	non-compiled	[CE]  not  a  statement	80	None	replace
23	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(row  <  =  0));  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(row  <  =  0));  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(row  <  =  0));	  return(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon)&&(row    ==    null));    	non-compiled	[CE]  not  a  statement	80	None	replace
24	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  2.0,  epsilon);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  2.0,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  2.0,  epsilon);	  return(int)MathUtils.equals(getEntry(i,    col),    0.0,    epsilon);    	non-compiled	[CE]  not  a  statement	27	None	replace
25	[BUG]  [BUGGY]  return(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);	  return(int)MathUtils.equals(getEntry(i,    col),    0.0,    epsilon);    	non-compiled	[CE]  not  a  statement	27	None	replace
26	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(start,  i);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(start,  i);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(start,  i);	  ((    LinearObjectiveFunction)f).getBasicRow(row,    i);    	non-compiled	[CE]  not  a  statement	19	None	replace
27	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  i  +  1);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  i  +  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(row,  i  +  1);	  ((    LinearObjectiveFunction)f).getBasicRow(row,    i);    	non-compiled	[CE]  not  a  statement	19	None	replace
28	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  0);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  0);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(row,  0);	  ((    LinearObjectiveFunction)f).getBasicRow(row,    i);    	non-compiled	[CE]  not  a  statement	19	None	replace
29	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i),  col);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i),  col);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i),  col);	  row    =    Math.floor(getBasicRow(i),    start);    	non-compiled	[CE]  not  a  statement	79	None	replace
30	[BUG]  [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(Integer)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon);	  row    =(Integer)MathUtils.equals(getEntry(i,    col),    1.0,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	48	None	replace
31	[BUG]  [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  0.0,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  0.0,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(Integer)MathUtils.equals(getEntry(i,  col),  0.0,  ignoreObjectiveRows);	  row    =(Integer)MathUtils.equals(getEntry(i,    col),    1.0,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	48	None	replace
32	[BUG]  [BUGGY]  return  row  =  i  +  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  =  i  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  =  i  +  1;	  return    row    =    i;    	non-compiled	[CE]  not  a  statement	54	None	replace
33	[BUG]  [BUGGY]  return  row  =(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  =(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  =(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon);	  return    row    =    i;    	non-compiled	[CE]  not  a  statement	54	None	replace
34	[BUG]  [BUGGY]  return  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);	  return    row    =    i;    	non-compiled	[CE]  not  a  statement	54	None	replace
35	[BUG]  [BUGGY]  return  row  =  col;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  =  col;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  =  col;	  return    row    =    i;    	non-compiled	[CE]  not  a  statement	54	None	replace
36	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  0.0);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  0.0);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col),  0.0);	  row    =    Math.floor(getBasicRow(i,    col),    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	11	None	replace
37	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i,  col),  epsilon);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i,  col),  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i,  col),  epsilon);	  row    =    Math.floor(getBasicRow(i,    col),    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	11	None	replace
38	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  0);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  0);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col),  0);	  row    =    Math.floor(getBasicRow(i,    col),    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	11	None	replace
39	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(new  Integer(row,  col));  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(new  Integer(row,  col));  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(new  Integer(row,  col));	  ((    LinearObjectiveFunction)f).setBasicRow(new    Integer(start,    col));    	non-compiled	[CE]  not  a  statement	92	None	replace
40	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(new  Integer(i,  col));  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(new  Integer(i,  col));  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(new  Integer(i,  col));	  ((    LinearObjectiveFunction)f).setBasicRow(new    Integer(start,    col));    	non-compiled	[CE]  not  a  statement	92	None	replace
41	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(new  Integer(col,  start));  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(new  Integer(col,  start));  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(new  Integer(col,  start));	  ((    LinearObjectiveFunction)f).setBasicRow(new    Integer(start,    col));    	non-compiled	[CE]  not  a  statement	92	None	replace
42	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(new  Integer(start,  col  +  1));  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(new  Integer(start,  col  +  1));  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(new  Integer(start,  col  +  1));	  ((    LinearObjectiveFunction)f).setBasicRow(new    Integer(start,    col));    	non-compiled	[CE]  not  a  statement	92	None	replace
43	[BUG]  [BUGGY]  return  row  >=  0?  this.baseRow  :  null;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  >=  0?  this.baseRow  :  null;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  >=  0?  this.baseRow  :  null;	  return    row    <    0?    this.baseRow    :    null;    	non-compiled	[CE]  not  a  statement	88	None	replace
44	[BUG]  [BUGGY]  return  row  ==  0?  this.baseRow  :  null;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  0?  this.baseRow  :  null;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  this.baseRow  :  null;	  return    row    <    0?    this.baseRow    :    null;    	non-compiled	[CE]  not  a  statement	88	None	replace
45	[BUG]  [BUGGY]  row  =(int)Math.floor(i);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(i);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(i);	  row    =(int)Math.floor(col);    	non-compiled	[CE]  not  a  statement	74	None	replace
46	[BUG]  [BUGGY]  row  =(int)Math.floor(start);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(start);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(start);	  row    =(int)Math.floor(col);    	non-compiled	[CE]  not  a  statement	74	None	replace
47	[BUG]  [BUGGY]  row  =(int)Math.floor(row);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(row);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(row);	  row    =(int)Math.floor(col);    	non-compiled	[CE]  not  a  statement	74	None	replace
48	[BUG]  [BUGGY]  return  row  <  0?  this.baseRow  :  getBasicRow(i).intValue();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  this.baseRow  :  getBasicRow(i).intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  this.baseRow  :  getBasicRow(i).intValue();	  return    row    <    0?    this.baseRow    :    getBasicRow(i);    	non-compiled	[CE]  not  a  statement	87	None	replace
49	[BUG]  [BUGGY]  return  row  >=  0?  null  :  row.intValue();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  >=  0?  null  :  row.intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  >=  0?  null  :  row.intValue();	  return    row    <    0?    null    :    row.intValue();    	non-compiled	[CE]  not  a  statement	41	None	replace
50	[BUG]  [BUGGY]  return  row!=  0?  null  :  row.intValue();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row!=  0?  null  :  row.intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row!=  0?  null  :  row.intValue();	  return    row    <    0?    null    :    row.intValue();    	non-compiled	[CE]  not  a  statement	41	None	replace
51	[BUG]  [BUGGY]  return  row  >=  0?  0  :  row  +  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  >=  0?  0  :  row  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  >=  0?  0  :  row  +  1;	  return    row    <    0?    0    :    row    +    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
52	[BUG]  [BUGGY]  return  row  <  0?  0  :  row.intValue()  +  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  0  :  row.intValue()  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  0  :  row.intValue()  +  1;	  return    row    <    0?    0    :    row    +    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
53	[BUG]  [BUGGY]  return  row  ==  0?  0  :  row  +  1;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  0?  0  :  row  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  0  :  row  +  1;	  return    row    <    0?    0    :    row    +    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
54	[BUG]  [BUGGY]  return  row!=  null?  this  :  row.intValue();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row!=  null?  this  :  row.intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row!=  null?  this  :  row.intValue();	  return    row    ==    null?    this    :    row.intValue();    	non-compiled	[CE]  not  a  statement	93	None	replace
55	[BUG]  [BUGGY]  return(row  ==  col)?  0  :  this.baseRow;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  col)?  0  :  this.baseRow;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  col)?  0  :  this.baseRow;	  return(this.baseRow    ==    col)?    0    :    this.baseRow;    	non-compiled	[CE]  not  a  statement	24	None	replace
56	[BUG]  [BUGGY]  return(this.baseRow  ==  col)?  0  :  this.baseRow  +  1;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(this.baseRow  ==  col)?  0  :  this.baseRow  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(this.baseRow  ==  col)?  0  :  this.baseRow  +  1;	  return(this.baseRow    ==    col)?    0    :    this.baseRow;    	non-compiled	[CE]  not  a  statement	24	None	replace
57	[BUG]  [BUGGY]  return(col  ==  this.baseRow)?  0  :  this.baseRow;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(col  ==  this.baseRow)?  0  :  this.baseRow;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(col  ==  this.baseRow)?  0  :  this.baseRow;	  return(this.baseRow    ==    col)?    0    :    this.baseRow;    	non-compiled	[CE]  not  a  statement	24	None	replace
58	[BUG]  [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  col,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  col,  ignoreObjectiveRows);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getBasicRow(i),  col,  ignoreObjectiveRows);	  row    =(int)Math.floor(getBasicRow(i),    col);    	non-compiled	[CE]  not  a  statement	76	None	replace
59	[BUG]  [BUGGY]  row  =(int)Math.floor(getBasicRow(i,  col),  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getBasicRow(i,  col),  ignoreObjectiveRows);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getBasicRow(i,  col),  ignoreObjectiveRows);	  row    =(int)Math.floor(getBasicRow(i),    col);    	non-compiled	[CE]  not  a  statement	76	None	replace
60	[BUG]  [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  epsilon);  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getBasicRow(i),  epsilon);	  row    =(int)Math.floor(getBasicRow(i),    col);    	non-compiled	[CE]  not  a  statement	76	None	replace
61	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i),  1.0);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i),  1.0);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i),  1.0);	  row    =    Math.log(getBasicRow(i),    epsilon);    	non-compiled	[CE]  not  a  statement	45	None	replace
62	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i),  0.0);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i),  0.0);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i),  0.0);	  row    =    Math.log(getBasicRow(i),    epsilon);    	non-compiled	[CE]  not  a  statement	45	None	replace
63	[BUG]  [BUGGY]  row  =(start  <  getWidth()?  0  :  col);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(start  <  getWidth()?  0  :  col);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(start  <  getWidth()?  0  :  col);	  row    =(start    <    getWidth()?    0    :    start);    	non-compiled	[CE]  not  a  statement	83	None	replace
64	[BUG]  [BUGGY]  row  =(start  <  getHeight()?  0  :  start);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(start  <  getHeight()?  0  :  start);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(start  <  getHeight()?  0  :  start);	  row    =(start    <    getWidth()?    0    :    start);    	non-compiled	[CE]  not  a  statement	83	None	replace
65	[BUG]  [BUGGY]  row  =(start  <  getWidth()?  0  :  epsilon);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(start  <  getWidth()?  0  :  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(start  <  getWidth()?  0  :  epsilon);	  row    =(start    <    getWidth()?    0    :    start);    	non-compiled	[CE]  not  a  statement	83	None	replace
66	[BUG]  [BUGGY]  row  =(start  <  getWidth()?  0  :  start  +  1);  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(start  <  getWidth()?  0  :  start  +  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(start  <  getWidth()?  0  :  start  +  1);	  row    =(start    <    getWidth()?    0    :    start);    	non-compiled	[CE]  not  a  statement	83	None	replace
67	[BUG]  [BUGGY]  row  =  getRowCount()  -  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getRowCount()  -  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getRowCount()  -  1;	  row    =    getRowCount();    	non-compiled	[CE]  not  a  statement	35	None	replace
68	[BUG]  [BUGGY]  row  =  getRowCount()  +  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getRowCount()  +  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getRowCount()  +  1;	  row    =    getRowCount();    	non-compiled	[CE]  not  a  statement	35	None	replace
69	[BUG]  [BUGGY]  row  =  getColumnCount();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getColumnCount();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getColumnCount();	  row    =    getRowCount();    	non-compiled	[CE]  not  a  statement	35	None	replace
70	[BUG]  [BUGGY]  row  =  getNumObjectiveFunctions().floatValue()  +  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumObjectiveFunctions().floatValue()  +  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumObjectiveFunctions().floatValue()  +  1;	  row    =    getNumObjectiveFunctions().intValue()    +    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
71	[BUG]  [BUGGY]  row  =  getNumObjectiveFunctions().intValue()  /  1;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumObjectiveFunctions().intValue()  /  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumObjectiveFunctions().intValue()  /  1;	  row    =    getNumObjectiveFunctions().intValue()    +    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
72	[BUG]  [BUGGY]  return(row  ==  0)?  0  :  start;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  0  :  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  0  :  start;	  return(start    ==    0)?    0    :    row;    	non-compiled	[CE]  not  a  statement	90	None	replace
73	[BUG]  [BUGGY]  return(start  ==  0)?  0  :  row.intValue();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  ==  0)?  0  :  row.intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  0  :  row.intValue();	  return(start    ==    0)?    0    :    row;    	non-compiled	[CE]  not  a  statement	90	None	replace
74	[BUG]  [BUGGY]  return(i  ==  0)?  0  :  row;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  ==  0)?  0  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  0  :  row;	  return(start    ==    0)?    0    :    row;    	non-compiled	[CE]  not  a  statement	90	None	replace
75	[BUG]  [BUGGY]  return  row  <  0?  0  :  col.intValue();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  0  :  col.intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  0  :  col.intValue();	  return    row    <    0?    0    :    col;    	non-compiled	[CE]  not  a  statement	21	None	replace
76	[BUG]  [BUGGY]  return  row  <  0?  0  :  col  +  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  0  :  col  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  0  :  col  +  1;	  return    row    <    0?    0    :    col;    	non-compiled	[CE]  not  a  statement	21	None	replace
77	[BUG]  [BUGGY]  return  row  >=  0?  0  :  col;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  >=  0?  0  :  col;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  >=  0?  0  :  col;	  return    row    <    0?    0    :    col;    	non-compiled	[CE]  not  a  statement	21	None	replace
78	[BUG]  [BUGGY]  return  row  <  0?  -1  :  row.intValue();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  -1  :  row.intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  -1  :  row.intValue();	  return    row    <    0?    -1    :    row;    	non-compiled	[CE]  not  a  statement	53	None	replace
79	[BUG]  [BUGGY]  return  row  <  0?  -1  :  col;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  -1  :  col;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  -1  :  col;	  return    row    <    0?    -1    :    row;    	non-compiled	[CE]  not  a  statement	53	None	replace
80	[BUG]  [BUGGY]  return  row  <  0?  -1  :  row  +  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  -1  :  row  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  -1  :  row  +  1;	  return    row    <    0?    -1    :    row;    	non-compiled	[CE]  not  a  statement	53	None	replace
81	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  i);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  i);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(row,  i);	  ((    LinearObjectiveFunction)f).setBasicRow(i);    	non-compiled	[CE]  not  a  statement	3	None	replace
82	[BUG]  [BUGGY]  row  =(int)Math.floor(getBasicRow(i,  col),  0.0,  epsilon);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getBasicRow(i,  col),  0.0,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getBasicRow(i,  col),  0.0,  epsilon);	  row    =(int)Math.floor(getBasicRow(i),    0.0,    epsilon);    	non-compiled	[CE]  not  a  statement	99	None	replace
83	[BUG]  [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  1.0,  epsilon);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  1.0,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getBasicRow(i),  1.0,  epsilon);	  row    =(int)Math.floor(getBasicRow(i),    0.0,    epsilon);    	non-compiled	[CE]  not  a  statement	99	None	replace
84	[BUG]  [BUGGY]  row  =(Integer)Math.floor(getBasicRow(i,  col),  0.0,  epsilon);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(Integer)Math.floor(getBasicRow(i,  col),  0.0,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(Integer)Math.floor(getBasicRow(i,  col),  0.0,  epsilon);	  row    =(int)Math.floor(getBasicRow(i),    0.0,    epsilon);    	non-compiled	[CE]  not  a  statement	99	None	replace
85	[BUG]  [BUGGY]  row  =(Integer)Math.floor(getBasicRow(i),  0.0,  epsilon);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(Integer)Math.floor(getBasicRow(i),  0.0,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(Integer)Math.floor(getBasicRow(i),  0.0,  epsilon);	  row    =(int)Math.floor(getBasicRow(i),    0.0,    epsilon);    	non-compiled	[CE]  not  a  statement	99	None	replace
86	[BUG]  [BUGGY]  return(row  ==  0)?  this.baseRow  :  getBasicRow(i);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  this.baseRow  :  getBasicRow(i);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  this.baseRow  :  getBasicRow(i);	  return(i    ==    0)?    this.baseRow    :    getBasicRow(i);    	non-compiled	[CE]  not  a  statement	70	None	replace
87	[BUG]  [BUGGY]  return(i  ==  0)?  this.baseRow  :  getBasicRow(i).intValue();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  ==  0)?  this.baseRow  :  getBasicRow(i).intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.baseRow  :  getBasicRow(i).intValue();	  return(i    ==    0)?    this.baseRow    :    getBasicRow(i);    	non-compiled	[CE]  not  a  statement	70	None	replace
88	[BUG]  [BUGGY]  return(i  ==  0)?  this.baseRow  :  getBasicRow(i,  col);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  ==  0)?  this.baseRow  :  getBasicRow(i,  col);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.baseRow  :  getBasicRow(i,  col);	  return(i    ==    0)?    this.baseRow    :    getBasicRow(i);    	non-compiled	[CE]  not  a  statement	70	None	replace
89	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(col,  epsilon);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(col,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(col,  epsilon);	  ((    LinearObjectiveFunction)f).getBasicRow(row,    epsilon);    	non-compiled	[CE]  not  a  statement	17	None	replace
90	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  1.0);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  1.0);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(row,  1.0);	  ((    LinearObjectiveFunction)f).getBasicRow(row,    epsilon);    	non-compiled	[CE]  not  a  statement	17	None	replace
91	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  epsilon,  sum);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  epsilon,  sum);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(row,  epsilon,  sum);	  ((    LinearObjectiveFunction)f).getBasicRow(row,    epsilon);    	non-compiled	[CE]  not  a  statement	17	None	replace
92	[BUG]  [BUGGY]  return  row  <  0?  1  :  col;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  1  :  col;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  1  :  col;	  return    row    <    0?    1    :    row;    	non-compiled	[CE]  not  a  statement	106	None	replace
93	[BUG]  [BUGGY]  return  row  <  0?  1  :  row.intValue();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  1  :  row.intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  1  :  row.intValue();	  return    row    <    0?    1    :    row;    	non-compiled	[CE]  not  a  statement	106	None	replace
94	[BUG]  [BUGGY]  return  row  <  0?  1  :  row  +  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  1  :  row  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  1  :  row  +  1;	  return    row    <    0?    1    :    row;    	non-compiled	[CE]  not  a  statement	106	None	replace
95	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i,  col),  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i,  col),  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i,  col),  ignoreObjectiveRows);	  row    =    Math.log(getBasicRow(i,    col));    	non-compiled	[CE]  not  a  statement	12	None	replace
96	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i,  col)+  1);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i,  col)+  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i,  col)+  1);	  row    =    Math.log(getBasicRow(i,    col));    	non-compiled	[CE]  not  a  statement	12	None	replace
97	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  0.0,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  0.0,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(i,  col),  0.0,  ignoreObjectiveRows);	  row    =(int)MathUtils.equals(getEntry(i,    col),    2.0,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	13	None	replace
98	[BUG]  [BUGGY]  row  =  getNumRows().doubleValue();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumRows().doubleValue();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRows().doubleValue();	  row    =    getNumObjectiveFunctions().doubleValue();    	non-compiled	[CE]  not  a  statement	7	None	replace
99	[BUG]  [BUGGY]  row  =  getNumObjectiveFunctions().doubleValue()  +  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumObjectiveFunctions().doubleValue()  +  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumObjectiveFunctions().doubleValue()  +  1;	  row    =    getNumObjectiveFunctions().doubleValue();    	non-compiled	[CE]  not  a  statement	7	None	replace
100	[BUG]  [BUGGY]  row  =  getNumObjectiveFunctions().doubleValue()  -  1;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumObjectiveFunctions().doubleValue()  -  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumObjectiveFunctions().doubleValue()  -  1;	  row    =    getNumObjectiveFunctions().doubleValue();    	non-compiled	[CE]  not  a  statement	7	None	replace
101	[BUG]  [BUGGY]  return  row  <  0?  this.base  :  getBasicRow(i,  col);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  this.base  :  getBasicRow(i,  col);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  this.base  :  getBasicRow(i,  col);	  return    row    <    0?    this.base    :    getBasicRow(i);    	non-compiled	[CE]  not  a  statement	105	None	replace
102	[BUG]  [BUGGY]  return  row  >=  0?  this.base  :  getBasicRow(i);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  >=  0?  this.base  :  getBasicRow(i);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  >=  0?  this.base  :  getBasicRow(i);	  return    row    <    0?    this.base    :    getBasicRow(i);    	non-compiled	[CE]  not  a  statement	105	None	replace
103	[BUG]  [BUGGY]  return  row  >=  0?  this.base  :  null;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  >=  0?  this.base  :  null;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  >=  0?  this.base  :  null;	  return    row    <    0?    this.base    :    null;    	non-compiled	[CE]  not  a  statement	103	None	replace
104	[BUG]  [BUGGY]  return  row  ==  0?  this.base  :  null;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  0?  this.base  :  null;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  this.base  :  null;	  return    row    <    0?    this.base    :    null;    	non-compiled	[CE]  not  a  statement	103	None	replace
105	[BUG]  [BUGGY]  return(row  ==  0)?  this.base  :  i;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  this.base  :  i;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  this.base  :  i;	  return(i    ==    0)?    this.base    :    row;    	non-compiled	[CE]  not  a  statement	67	None	replace
106	[BUG]  [BUGGY]  return(i  ==  0)?  this.base  :  row  +  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  ==  0)?  this.base  :  row  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.base  :  row  +  1;	  return(i    ==    0)?    this.base    :    row;    	non-compiled	[CE]  not  a  statement	67	None	replace
107	[BUG]  [BUGGY]  return(this.base  ==  0)?  this.base  :  row;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(this.base  ==  0)?  this.base  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(this.base  ==  0)?  this.base  :  row;	  return(i    ==    0)?    this.base    :    row;    	non-compiled	[CE]  not  a  statement	67	None	replace
108	[BUG]  [BUGGY]  row  =(start  ==  0)?  0  :  col;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(start  ==  0)?  0  :  col;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(start  ==  0)?  0  :  col;	  row    =(start    ==    0)?    0    :    start;    	non-compiled	[CE]  not  a  statement	82	None	replace
109	[BUG]  [BUGGY]  row  =(start  ==  0)?  0  :  start  +  1;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(start  ==  0)?  0  :  start  +  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(start  ==  0)?  0  :  start  +  1;	  row    =(start    ==    0)?    0    :    start;    	non-compiled	[CE]  not  a  statement	82	None	replace
110	[BUG]  [BUGGY]  row  =(start  ==  0)?  0  :  start.intValue();  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(start  ==  0)?  0  :  start.intValue();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(start  ==  0)?  0  :  start.intValue();	  row    =(start    ==    0)?    0    :    start;    	non-compiled	[CE]  not  a  statement	82	None	replace
111	[BUG]  [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  ignoreObjectiveRows);	  row    =(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	57	None	replace
112	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  false);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  false);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  false);	  row    =(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	57	None	replace
113	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  1.0,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  1.0,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col),  1.0,  ignoreObjectiveRows);	  row    =    Math.floor(getBasicRow(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  not  a  statement	39	None	replace
114	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i,  col),  1.0,  epsilon);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i,  col),  1.0,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i,  col),  1.0,  epsilon);	  row    =    Math.floor(getBasicRow(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  not  a  statement	39	None	replace
115	[BUG]  [BUGGY]  Integer  height  =  getHeight();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  Integer  height  =  getHeight();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	Integer  height  =  getHeight();	  int    height    =    getHeight()    +    1;    	non-compiled	[CE]  not  a  statement	49	None	replace
116	[BUG]  [BUGGY]  row  =(Integer)Math.floor(getWidth(),  getHeight());  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(Integer)Math.floor(getWidth(),  getHeight());  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(Integer)Math.floor(getWidth(),  getHeight());	  row    =(int)Math.floor(getWidth(),    getHeight());    	non-compiled	[CE]  not  a  statement	101	None	replace
117	[BUG]  [BUGGY]  row  =(int)Math.floor(getWidth(),  getHeight()  -  1);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getWidth(),  getHeight()  -  1);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getWidth(),  getHeight()  -  1);	  row    =(int)Math.floor(getWidth(),    getHeight());    	non-compiled	[CE]  not  a  statement	101	None	replace
118	[BUG]  [BUGGY]  row  =(int)Math.floor(getWidth(),  getHeight()  -  start);  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getWidth(),  getHeight()  -  start);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getWidth(),  getHeight()  -  start);	  row    =(int)Math.floor(getWidth(),    getHeight());    	non-compiled	[CE]  not  a  statement	101	None	replace
119	[BUG]  [BUGGY]  int  height  =  getHeight()  /  i;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getHeight()  /  i;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  /  i;	  int    height    =    getHeight()    +    i;    	non-compiled	[CE]  not  a  statement	52	None	replace
120	[BUG]  [BUGGY]  int  height  =  getWidth()  +  i;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getWidth()  +  i;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getWidth()  +  i;	  int    height    =    getHeight()    +    i;    	non-compiled	[CE]  not  a  statement	52	None	replace
121	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i),  1.0,  epsilon  +  1);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i),  1.0,  epsilon  +  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i),  1.0,  epsilon  +  1);	  row    =    Math.log(getBasicRow(i),    1.0,    epsilon);    	non-compiled	[CE]  not  a  statement	40	None	replace
122	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i),  0.0,  epsilon);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i),  0.0,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i),  0.0,  epsilon);	  row    =    Math.log(getBasicRow(i),    1.0,    epsilon);    	non-compiled	[CE]  not  a  statement	40	None	replace
123	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  col,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  col,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(row,  col,  ignoreObjectiveRows);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    col);    	non-compiled	[CE]  not  a  statement	2	None	replace
124	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  col  -  1);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  col  -  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(row,  col  -  1);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    col);    	non-compiled	[CE]  not  a  statement	2	None	replace
125	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  col  +  1);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  col  +  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(row,  col  +  1);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    col);    	non-compiled	[CE]  not  a  statement	2	None	replace
126	[BUG]  [BUGGY]  return  row  ==  null?  this.base  :  Integer.MIN_VALUE;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  null?  this.base  :  Integer.MIN_VALUE;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  null?  this.base  :  Integer.MIN_VALUE;	  return    row    ==    null?    this.base    :    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	104	None	replace
127	[BUG]  [BUGGY]  return  row!=  null?  this.base  :  Integer.MAX_VALUE;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row!=  null?  this.base  :  Integer.MAX_VALUE;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row!=  null?  this.base  :  Integer.MAX_VALUE;	  return    row    ==    null?    this.base    :    Integer.MAX_VALUE;    	non-compiled	[CE]  not  a  statement	104	None	replace
128	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  col,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  col,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(row,  col,  ignoreObjectiveRows);	  ((    LinearObjectiveFunction)f).getBasicRow(row,    col);    	non-compiled	[CE]  not  a  statement	16	None	replace
129	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(start,  col);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(start,  col);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(start,  col);	  ((    LinearObjectiveFunction)f).getBasicRow(row,    col);    	non-compiled	[CE]  not  a  statement	16	None	replace
130	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(start,  col),  1.0,  epsilon);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)MathUtils.equals(getEntry(start,  col),  1.0,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(start,  col),  1.0,  epsilon);	  row    =(int)MathUtils.equals(getEntry(start,    col),    0.0,    epsilon);    	non-compiled	[CE]  not  a  statement	85	None	replace
131	[BUG]  [BUGGY]  return  row  -  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  -  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  -  1;	  return    i    -    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
132	[BUG]  [BUGGY]  return  i  /  1;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  i  /  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  i  /  1;	  return    i    -    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
133	[BUG]  [BUGGY]  return  start  -  1;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  start  -  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  start  -  1;	  return    i    -    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
134	[BUG]  [BUGGY]  return(row  >  0)?  this.base  :  i;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  >  0)?  this.base  :  i;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  >  0)?  this.base  :  i;	  return(i    >    0)?    this.base    :    row;    	non-compiled	[CE]  not  a  statement	15	None	replace
135	[BUG]  [BUGGY]  return(i  >  0)?  this.base  :  row  +  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  >  0)?  this.base  :  row  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  >  0)?  this.base  :  row  +  1;	  return(i    >    0)?    this.base    :    row;    	non-compiled	[CE]  not  a  statement	15	None	replace
136	[BUG]  [BUGGY]  return(i  <  0)?  this.base  :  row;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  <  0)?  this.base  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  <  0)?  this.base  :  row;	  return(i    >    0)?    this.base    :    row;    	non-compiled	[CE]  not  a  statement	15	None	replace
137	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	throw  new  IllegalArgumentException( " ");	  return    0;    	non-compiled	[CE]  not  a  statement	31	None	replace
138	[BUG]  [BUGGY]  return  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  1;	  return    0;    	non-compiled	[CE]  not  a  statement	31	None	replace
139	[BUG]  [BUGGY]  row  =  getNumRows().intValue()  +  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumRows().intValue()  +  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRows().intValue()  +  1;	  row    =    getNumRows().intValue();    	non-compiled	[CE]  not  a  statement	6	None	replace
140	[BUG]  [BUGGY]  row  =  getNumRows().intValue()  -  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumRows().intValue()  -  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRows().intValue()  -  1;	  row    =    getNumRows().intValue();    	non-compiled	[CE]  not  a  statement	6	None	replace
141	[BUG]  [BUGGY]  row  =  getNumberRows().intValue();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumberRows().intValue();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumberRows().intValue();	  row    =    getNumRows().intValue();    	non-compiled	[CE]  not  a  statement	6	None	replace
142	[BUG]  [BUGGY]  return(row  ==  0)?  start  :  0;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  start  :  0;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  start  :  0;	  return(start    ==    0)?    row    :    0;    	non-compiled	[CE]  not  a  statement	91	None	replace
143	[BUG]  [BUGGY]  return(i  ==  0)?  row  :  0;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  ==  0)?  row  :  0;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  row  :  0;	  return(start    ==    0)?    row    :    0;    	non-compiled	[CE]  not  a  statement	91	None	replace
144	[BUG]  [BUGGY]  return(row  ==  0)?  row  :  0;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  row  :  0;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  row  :  0;	  return(start    ==    0)?    row    :    0;    	non-compiled	[CE]  not  a  statement	91	None	replace
145	[BUG]  [BUGGY]  return(i  ==  0)?  this.base  :  getBasicRow(i).floatValue();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  ==  0)?  this.base  :  getBasicRow(i).floatValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.base  :  getBasicRow(i).floatValue();	  return(i    ==    0)?    this.base    :    getBasicRow(i).intValue();    	non-compiled	[CE]  not  a  statement	65	None	replace
146	[BUG]  [BUGGY]  return(i  ==  0)?  this.base  :  getBasicRow(i).doubleValue();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  ==  0)?  this.base  :  getBasicRow(i).doubleValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.base  :  getBasicRow(i).doubleValue();	  return(i    ==    0)?    this.base    :    getBasicRow(i).intValue();    	non-compiled	[CE]  not  a  statement	65	None	replace
147	[BUG]  [BUGGY]  return(row  ==  0)?  this.base  :  getBasicRow(i).intValue();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  this.base  :  getBasicRow(i).intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  this.base  :  getBasicRow(i).intValue();	  return(i    ==    0)?    this.base    :    getBasicRow(i).intValue();    	non-compiled	[CE]  not  a  statement	65	None	replace
148	[BUG]  [BUGGY]  row  =  Math.ceil(getBasicRow(i,  col),  1.0,  epsilon);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.ceil(getBasicRow(i,  col),  1.0,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.ceil(getBasicRow(i,  col),  1.0,  epsilon);	  row    =    Math.floor(getBasicRow(i,    col),    0.0,    epsilon);    	non-compiled	[CE]  not  a  statement	38	None	replace
149	[BUG]  [BUGGY]  return(row  ==  0)?  this.base  :  getBasicRow(i);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  this.base  :  getBasicRow(i);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  this.base  :  getBasicRow(i);	  return(i    ==    0)?    this.base    :    getBasicRow(i);    	non-compiled	[CE]  not  a  statement	66	None	replace
150	[BUG]  [BUGGY]  return(i  ==  0)?  this.base  :  getBasicRow(i,  col);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  ==  0)?  this.base  :  getBasicRow(i,  col);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.base  :  getBasicRow(i,  col);	  return(i    ==    0)?    this.base    :    getBasicRow(i);    	non-compiled	[CE]  not  a  statement	66	None	replace
151	[BUG]  [BUGGY]  row  =  getNumObjectiveRows().doubleValue();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumObjectiveRows().doubleValue();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumObjectiveRows().doubleValue();	  row    =    getNumObjectiveRows().intValue();    	non-compiled	[CE]  not  a  statement	96	None	replace
152	[BUG]  [BUGGY]  row  =  getNumObjectiveRows().intValue()  +  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumObjectiveRows().intValue()  +  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumObjectiveRows().intValue()  +  1;	  row    =    getNumObjectiveRows().intValue();    	non-compiled	[CE]  not  a  statement	96	None	replace
153	[BUG]  [BUGGY]  row  =  getRow(i  +  1);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getRow(i  +  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getRow(i  +  1);	  row    =    getRow(i);    	non-compiled	[CE]  not  a  statement	34	None	replace
154	[BUG]  [BUGGY]  row  =  getRow(i,  col);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getRow(i,  col);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getRow(i,  col);	  row    =    getRow(i);    	non-compiled	[CE]  not  a  statement	34	None	replace
155	[BUG]  [BUGGY]  row  =  getRow(i  -  1);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getRow(i  -  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getRow(i  -  1);	  row    =    getRow(i);    	non-compiled	[CE]  not  a  statement	34	None	replace
156	[BUG]  [BUGGY]  row  =  col.intValue();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  col.intValue();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  col.intValue();	  row    =    col;    	non-compiled	[CE]  not  a  statement	97	None	replace
157	[BUG]  [BUGGY]  row  =  col  +  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  col  +  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  col  +  1;	  row    =    col;    	non-compiled	[CE]  not  a  statement	97	None	replace
158	[BUG]  [BUGGY]  row  =  col  +  epsilon;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  col  +  epsilon;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  col  +  epsilon;	  row    =    col;    	non-compiled	[CE]  not  a  statement	97	None	replace
159	[BUG]  [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  -  i);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  -  i);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getNumObjectiveFunctions()  -  i);	  row    =(int)Math.floor(getNumObjectiveFunctions()    -    start);    	non-compiled	[CE]  not  a  statement	75	None	replace
160	[BUG]  [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  *  start);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  *  start);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getNumObjectiveFunctions()  *  start);	  row    =(int)Math.floor(getNumObjectiveFunctions()    -    start);    	non-compiled	[CE]  not  a  statement	75	None	replace
161	[BUG]  [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  /  start);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  /  start);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getNumObjectiveFunctions()  /  start);	  row    =(int)Math.floor(getNumObjectiveFunctions()    -    start);    	non-compiled	[CE]  not  a  statement	75	None	replace
162	[BUG]  [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  -  1);  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  -  1);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getNumObjectiveFunctions()  -  1);	  row    =(int)Math.floor(getNumObjectiveFunctions()    -    start);    	non-compiled	[CE]  not  a  statement	75	None	replace
163	[BUG]  [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(Integer)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon,  ignoreObjectiveRows);	  row    =(int)MathUtils.equals(getEntry(i,    col),    0.0,    epsilon,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	84	None	replace
164	[BUG]  [BUGGY]  return  col;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  col;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  col;	  return    start;    	non-compiled	[CE]  not  a  statement	62	None	replace
165	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  row);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  row);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  1.0,  row);	  return(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  not  a  statement	26	None	replace
166	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  ignoreObjectiveRows);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  1.0,  ignoreObjectiveRows);	  return(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  not  a  statement	26	None	replace
167	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  epsilon,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  epsilon,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(row,  epsilon,  ignoreObjectiveRows);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	4	None	replace
168	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(col,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(col,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(col,  ignoreObjectiveRows);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	4	None	replace
169	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getRow(row);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getRow(row);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getRow(row);	  ((    LinearObjectiveFunction)f).getBasicRow(i);    	non-compiled	[CE]  not  a  statement	18	None	replace
170	[BUG]  [BUGGY]  return  row  >=  0?  this.baseRow  :  getBasicRow(i,  col);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  >=  0?  this.baseRow  :  getBasicRow(i,  col);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  >=  0?  this.baseRow  :  getBasicRow(i,  col);	  return    row    <    0?    this.baseRow    :    getBasicRow(i,    col);    	non-compiled	[CE]  not  a  statement	89	None	replace
171	[BUG]  [BUGGY]  return  row  ==  0?  this.baseRow  :  getBasicRow(i,  col);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  0?  this.baseRow  :  getBasicRow(i,  col);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  this.baseRow  :  getBasicRow(i,  col);	  return    row    <    0?    this.baseRow    :    getBasicRow(i,    col);    	non-compiled	[CE]  not  a  statement	89	None	replace
172	[BUG]  [BUGGY]  row  =  i  +  2;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  i  +  2;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  i  +  2;	  row    =    i    +    1;    	non-compiled	[CE]  not  a  statement	9	None	replace
173	[BUG]  [BUGGY]  row  =  start  +  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  start  +  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  start  +  1;	  row    =    i    +    1;    	non-compiled	[CE]  not  a  statement	9	None	replace
174	[BUG]  [BUGGY]  return  row  >=  0?  null  :  row  +  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  >=  0?  null  :  row  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  >=  0?  null  :  row  +  1;	  return    row    <    0?    null    :    row    +    1;    	non-compiled	[CE]  not  a  statement	42	None	replace
175	[BUG]  [BUGGY]  return  row!=  0?  null  :  row  +  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row!=  0?  null  :  row  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row!=  0?  null  :  row  +  1;	  return    row    <    0?    null    :    row    +    1;    	non-compiled	[CE]  not  a  statement	42	None	replace
176	[BUG]  [BUGGY]  int  height  =  getHeight()  /  start;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getHeight()  /  start;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  /  start;	  int    height    =    getHeight()    -    start;    	non-compiled	[CE]  not  a  statement	73	None	replace
177	[BUG]  [BUGGY]  int  height  =  getHeight()  -  i;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getHeight()  -  i;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  -  i;	  int    height    =    getHeight()    -    start;    	non-compiled	[CE]  not  a  statement	73	None	replace
178	[BUG]  [BUGGY]  int  height  =  getHeight()  -  row;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getHeight()  -  row;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  -  row;	  int    height    =    getHeight()    -    start;    	non-compiled	[CE]  not  a  statement	73	None	replace
179	[BUG]  [BUGGY]  int  height  =  getWidth()  -  start;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getWidth()  -  start;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getWidth()  -  start;	  int    height    =    getHeight()    -    start;    	non-compiled	[CE]  not  a  statement	73	None	replace
180	[BUG]  [BUGGY]  return(int)this.baseRow  +  1;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)this.baseRow  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)this.baseRow  +  1;	  return(int)this.baseRow;    	non-compiled	[CE]  not  a  statement	72	None	replace
181	[BUG]  [BUGGY]  return(int)this.baseRow  +  i;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)this.baseRow  +  i;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)this.baseRow  +  i;	  return(int)this.baseRow;    	non-compiled	[CE]  not  a  statement	72	None	replace
182	[BUG]  [BUGGY]  return(Integer)this.baseRow;  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(Integer)this.baseRow;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(Integer)this.baseRow;	  return(int)this.baseRow;    	non-compiled	[CE]  not  a  statement	72	None	replace
183	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(col,  epsilon);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(col,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(col,  epsilon);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    epsilon);    	non-compiled	[CE]  not  a  statement	1	None	replace
184	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  1.0);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  1.0);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(row,  1.0);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    epsilon);    	non-compiled	[CE]  not  a  statement	1	None	replace
185	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  0.0);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  0.0);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(row,  0.0);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    epsilon);    	non-compiled	[CE]  not  a  statement	1	None	replace
186	[BUG]  [BUGGY]  return(i  ==  0)?  getBasicRow(i):  start;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  ==  0)?  getBasicRow(i):  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  getBasicRow(i):  start;	  return(start    ==    0)?    getBasicRow(i):    start;    	non-compiled	[CE]  not  a  statement	63	None	replace
187	[BUG]  [BUGGY]  return(start  ==  0)?  getBasicRow(i):  row;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  ==  0)?  getBasicRow(i):  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  getBasicRow(i):  row;	  return(start    ==    0)?    getBasicRow(i):    start;    	non-compiled	[CE]  not  a  statement	63	None	replace
188	[BUG]  [BUGGY]  return(row  ==  0)?  getBasicRow(i):  start;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  getBasicRow(i):  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  getBasicRow(i):  start;	  return(start    ==    0)?    getBasicRow(i):    start;    	non-compiled	[CE]  not  a  statement	63	None	replace
189	[BUG]  [BUGGY]  return(start  ==  0)?  getBasicRow(row):  start;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  ==  0)?  getBasicRow(row):  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  getBasicRow(row):  start;	  return(start    ==    0)?    getBasicRow(i):    start;    	non-compiled	[CE]  not  a  statement	63	None	replace
190	[BUG]  [BUGGY]  return  row!=  null?  null  :  row.intValue();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row!=  null?  null  :  row.intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row!=  null?  null  :  row.intValue();	  return    row    ==    null?    null    :    row.intValue();    	non-compiled	[CE]  not  a  statement	94	None	replace
191	[BUG]  [BUGGY]  return  row  ==  null?  null  :  row.longValue();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  null?  null  :  row.longValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  null?  null  :  row.longValue();	  return    row    ==    null?    null    :    row.intValue();    	non-compiled	[CE]  not  a  statement	94	None	replace
192	[BUG]  [BUGGY]  return  row  +  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  +  1;	  return    i    +    1;    	non-compiled	[CE]  not  a  statement	30	None	replace
193	[BUG]  [BUGGY]  return  start  +  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  start  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  start  +  1;	  return    i    +    1;    	non-compiled	[CE]  not  a  statement	30	None	replace
194	[BUG]  [BUGGY]  return  i  +  2;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  i  +  2;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  i  +  2;	  return    i    +    1;    	non-compiled	[CE]  not  a  statement	30	None	replace
195	[BUG]  [BUGGY]  return(row  >  0)?  this.baseRow  :  i;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  >  0)?  this.baseRow  :  i;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  >  0)?  this.baseRow  :  i;	  return(i    >    0)?    this.baseRow    :    row;    	non-compiled	[CE]  not  a  statement	25	None	replace
196	[BUG]  [BUGGY]  return(i  >  0)?  this.baseRow  :  row  +  1;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  >  0)?  this.baseRow  :  row  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  >  0)?  this.baseRow  :  row  +  1;	  return(i    >    0)?    this.baseRow    :    row;    	non-compiled	[CE]  not  a  statement	25	None	replace
197	[BUG]  [BUGGY]  return(i  <  0)?  this.baseRow  :  row;  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  <  0)?  this.baseRow  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  <  0)?  this.baseRow  :  row;	  return(i    >    0)?    this.baseRow    :    row;    	non-compiled	[CE]  not  a  statement	25	None	replace
198	[BUG]  [BUGGY]  row  =  getNumRows()  +  1;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumRows()  +  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRows()  +  1;	  row    =    getNumRows();    	non-compiled	[CE]  not  a  statement	56	None	replace
199	[BUG]  [BUGGY]  row  =  getNumRows()  -  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumRows()  -  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRows()  -  1;	  row    =    getNumRows();    	non-compiled	[CE]  not  a  statement	56	None	replace
200	[BUG]  [BUGGY]  return(start  ==  0)?  0  :  col;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  ==  0)?  0  :  col;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  0  :  col;	  return(start    ==    0)?    0    :    start;    	non-compiled	[CE]  not  a  statement	64	None	replace
201	[BUG]  [BUGGY]  return(row  ==  0)?  this.base  :  col;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  this.base  :  col;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  this.base  :  col;	  return(row    ==    0)?    this.base    :    row;    	non-compiled	[CE]  not  a  statement	14	None	replace
202	[BUG]  [BUGGY]  return(row  ==  0)?  this.base  :  0;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  this.base  :  0;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  this.base  :  0;	  return(row    ==    0)?    this.base    :    row;    	non-compiled	[CE]  not  a  statement	14	None	replace
203	[BUG]  [BUGGY]  row  =(int)Math.floor(getWidth()  *  2);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getWidth()  *  2);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getWidth()  *  2);	  row    =(int)Math.floor(getWidth()    /    2);    	non-compiled	[CE]  not  a  statement	100	None	replace
204	[BUG]  [BUGGY]  row  =(int)Math.floor(getHeight()  /  2);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getHeight()  /  2);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getHeight()  /  2);	  row    =(int)Math.floor(getWidth()    /    2);    	non-compiled	[CE]  not  a  statement	100	None	replace
205	[BUG]  [BUGGY]  row  =(int)Math.floor(getWidth()  /  2  -  1);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getWidth()  /  2  -  1);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getWidth()  /  2  -  1);	  row    =(int)Math.floor(getWidth()    /    2);    	non-compiled	[CE]  not  a  statement	100	None	replace
206	[BUG]  [BUGGY]  row  =(int)Math.floor(getWidth());  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getWidth());  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getWidth());	  row    =(int)Math.floor(getWidth()    /    2);    	non-compiled	[CE]  not  a  statement	100	None	replace
207	[BUG]  [BUGGY]  return  row  ==  0?  0  :  col;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  0?  0  :  col;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  0  :  col;	  return    row    ==    0?    0    :    row;    	non-compiled	[CE]  not  a  statement	86	None	replace
208	[BUG]  [BUGGY]  return  row  ==  0?  0  :  column;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  0?  0  :  column;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  0  :  column;	  return    row    ==    0?    0    :    row;    	non-compiled	[CE]  not  a  statement	86	None	replace
209	[BUG]  [BUGGY]  row  =  getBasicRow(i,  col);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getBasicRow(i,  col);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getBasicRow(i,  col);	  row    =    getBasicRow(i);    	non-compiled	[CE]  not  a  statement	36	None	replace
210	[BUG]  [BUGGY]  row  =  getBasicRow(i  +  1);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getBasicRow(i  +  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getBasicRow(i  +  1);	  row    =    getBasicRow(i);    	non-compiled	[CE]  not  a  statement	36	None	replace
211	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  1.0,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i),  1.0,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  1.0,  ignoreObjectiveRows);	  row    =    Math.floor(getBasicRow(i),    1.0);    	non-compiled	[CE]  not  a  statement	60	None	replace
212	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  1.0);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  1.0);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col),  1.0);	  row    =    Math.floor(getBasicRow(i),    1.0);    	non-compiled	[CE]  not  a  statement	60	None	replace
213	[BUG]  [BUGGY]  return  row!=  0?  null  :  row;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row!=  0?  null  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row!=  0?  null  :  row;	  return    row    >=    0?    null    :    row;    	non-compiled	[CE]  not  a  statement	43	None	replace
214	[BUG]  [BUGGY]  return  row  >>  0?  null  :  row;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  >>  0?  null  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  >>  0?  null  :  row;	  return    row    >=    0?    null    :    row;    	non-compiled	[CE]  not  a  statement	43	None	replace
215	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i),  col  +  1);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i),  col  +  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i),  col  +  1);	  row    =    Math.floor(getBasicRow(i),    col    +    1);    	non-compiled	[CE]  not  a  statement	29	None	replace
216	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  col  +  1.0);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i),  col  +  1.0);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  col  +  1.0);	  row    =    Math.floor(getBasicRow(i),    col    +    1);    	non-compiled	[CE]  not  a  statement	29	None	replace
217	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col  +  1));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col  +  1));  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col  +  1));	  row    =    Math.floor(getBasicRow(i),    col    +    1);    	non-compiled	[CE]  not  a  statement	29	None	replace
218	[BUG]  [BUGGY]  row  =  Math.ceil(getBasicRow(i,  col));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.ceil(getBasicRow(i,  col));  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.ceil(getBasicRow(i,  col));	  row    =    Math.floor(getBasicRow(start,    col));    	non-compiled	[CE]  not  a  statement	55	None	replace
219	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(start,  col)+  1);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(start,  col)+  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(start,  col)+  1);	  row    =    Math.floor(getBasicRow(start,    col));    	non-compiled	[CE]  not  a  statement	55	None	replace
220	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)+  1.0);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)+  1.0);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col)+  1.0);	  row    =    Math.floor(getBasicRow(i,    col)+    1);    	non-compiled	[CE]  not  a  statement	10	None	replace
221	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)+  epsilon);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)+  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col)+  epsilon);	  row    =    Math.floor(getBasicRow(i,    col)+    1);    	non-compiled	[CE]  not  a  statement	10	None	replace
222	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)+  1  -  start);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)+  1  -  start);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col)+  1  -  start);	  row    =    Math.floor(getBasicRow(i,    col)+    1);    	non-compiled	[CE]  not  a  statement	10	None	replace
223	[BUG]  [BUGGY]  return(row  ==  0)?  this.baseRow  :  i;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  this.baseRow  :  i;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  this.baseRow  :  i;	  return(i    ==    0)?    this.baseRow    :    row;    	non-compiled	[CE]  not  a  statement	71	None	replace
224	[BUG]  [BUGGY]  return(i  ==  0)?  this.baseRow  :  row  +  1;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  ==  0)?  this.baseRow  :  row  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.baseRow  :  row  +  1;	  return(i    ==    0)?    this.baseRow    :    row;    	non-compiled	[CE]  not  a  statement	71	None	replace
225	[BUG]  [BUGGY]  return(this.baseRow  ==  0)?  this.baseRow  :  row;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(this.baseRow  ==  0)?  this.baseRow  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(this.baseRow  ==  0)?  this.baseRow  :  row;	  return(i    ==    0)?    this.baseRow    :    row;    	non-compiled	[CE]  not  a  statement	71	None	replace
226	[BUG]  [BUGGY]  row  =  Math.ceil(getBasicRow(i,  col),  epsilon);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.ceil(getBasicRow(i,  col),  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.ceil(getBasicRow(i,  col),  epsilon);	  row    =    Math.floor(getBasicRow(i,    col),    epsilon);    	non-compiled	[CE]  not  a  statement	44	None	replace
227	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  start,  epsilon,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i),  start,  epsilon,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  start,  epsilon,  ignoreObjectiveRows);	  row    =    Math.floor(getBasicRow(i),    epsilon,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	59	None	replace
228	[BUG]  [BUGGY]  row  =(int)Math.floor(getBasicRow(i,  col),  1.0,  epsilon);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getBasicRow(i,  col),  1.0,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getBasicRow(i,  col),  1.0,  epsilon);	  row    =(int)Math.floor(getBasicRow(i),    0.0,    epsilon);    	non-compiled	[CE]  not  a  statement	99	None	replace
229	[BUG]  [BUGGY]  row  =  getRow(start);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getRow(start);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getRow(start);	  row    =    getRow(i);    	non-compiled	[CE]  not  a  statement	34	None	replace
230	[BUG]  [BUGGY]  return  row  ==  0?  0  :  start;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  0?  0  :  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  0  :  start;	  return    row    ==    0?    0    :    row;    	non-compiled	[CE]  not  a  statement	86	None	replace
231	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i),  1.0,  epsilon,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i),  1.0,  epsilon,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i),  1.0,  epsilon,  ignoreObjectiveRows);	  row    =    Math.log(getBasicRow(i),    1.0,    epsilon);    	non-compiled	[CE]  not  a  statement	40	None	replace
232	[BUG]  [BUGGY]  return(start  ==  0)?  this.baseRow  :  row;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  ==  0)?  this.baseRow  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  this.baseRow  :  row;	  return(i    ==    0)?    this.baseRow    :    row;    	non-compiled	[CE]  not  a  statement	71	None	replace
233	[BUG]  [BUGGY]  return(i  ==  0)?  this.baseRow  :  start;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  ==  0)?  this.baseRow  :  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.baseRow  :  start;	  return(i    ==    0)?    this.baseRow    :    row;    	non-compiled	[CE]  not  a  statement	71	None	replace
234	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  1.0,  epsilon  +  1);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i),  1.0,  epsilon  +  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  1.0,  epsilon  +  1);	  row    =    Math.floor(getBasicRow(i),    1.0,    epsilon);    	non-compiled	[CE]  not  a  statement	37	None	replace
235	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i),  epsilon,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(i),  epsilon,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i),  epsilon,  ignoreObjectiveRows);	  row    =    Math.log(getBasicRow(i),    epsilon);    	non-compiled	[CE]  not  a  statement	45	None	replace
236	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(start,  row,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(start,  row,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(start,  row,  ignoreObjectiveRows);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	4	None	replace
237	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(i,  row,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(i,  row,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(i,  row,  ignoreObjectiveRows);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    ignoreObjectiveRows);    	non-compiled	[CE]  not  a  statement	4	None	replace
238	[BUG]  [BUGGY]  row  =  getNumObjectiveRows().longValue();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumObjectiveRows().longValue();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumObjectiveRows().longValue();	  row    =    getNumObjectiveRows().intValue();    	non-compiled	[CE]  not  a  statement	96	None	replace
239	[BUG]  [BUGGY]  row  =(int)Math.floor(end);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(end);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(end);	  row    =(int)Math.floor(col);    	non-compiled	[CE]  not  a  statement	74	None	replace
240	[BUG]  [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  underestimateObjectiveRows);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  underestimateObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  underestimateObjectiveRows);	  row    =(Integer)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  not  a  statement	5	None	replace
241	[BUG]  [BUGGY]  return  row  <  0?  1  :  i;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  1  :  i;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  1  :  i;	  return    row    <    0?    1    :    row;    	non-compiled	[CE]  not  a  statement	106	None	replace
242	[BUG]  [BUGGY]  return  row  <  0?  1  :  0;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  1  :  0;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  1  :  0;	  return    row    <    0?    1    :    row;    	non-compiled	[CE]  not  a  statement	106	None	replace
243	[BUG]  [BUGGY]  row  =(start  ==  0)?  0  :  start  +  epsilon;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(start  ==  0)?  0  :  start  +  epsilon;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(start  ==  0)?  0  :  start  +  epsilon;	  row    =(start    ==    0)?    0    :    start;    	non-compiled	[CE]  not  a  statement	82	None	replace
244	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  0.0,  epsilon  +  1);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  0.0,  epsilon  +  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col),  0.0,  epsilon  +  1);	  row    =    Math.floor(getBasicRow(i,    col),    0.0,    epsilon);    	non-compiled	[CE]  not  a  statement	38	None	replace
245	[BUG]  [BUGGY]  return  row  ==  null?  this  :  row.longValue();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  null?  this  :  row.longValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  null?  this  :  row.longValue();	  return    row    ==    null?    this    :    row.intValue();    	non-compiled	[CE]  not  a  statement	93	None	replace
246	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(i  +  1);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(i  +  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(i  +  1);	  ((    LinearObjectiveFunction)f).getBasicRow(i);    	non-compiled	[CE]  not  a  statement	18	None	replace
247	[BUG]  [BUGGY]  return(start  ==  0)?  this.base  :  getBasicRow(i).intValue();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  ==  0)?  this.base  :  getBasicRow(i).intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  this.base  :  getBasicRow(i).intValue();	  return(i    ==    0)?    this.base    :    getBasicRow(i).intValue();    	non-compiled	[CE]  not  a  statement	65	None	replace
248	[BUG]  [BUGGY]  row  =(int)Math.floor(getWidth()  /  2  -  start);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getWidth()  /  2  -  start);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getWidth()  /  2  -  start);	  row    =(int)Math.floor(getWidth()    /    2);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
249	[BUG]  [BUGGY]  row  =(int)Math.floor(getWidth()  /  2  +  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getWidth()  /  2  +  i);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getWidth()  /  2  +  i);	  row    =(int)Math.floor(getWidth()    /    2);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
250	[BUG]  [BUGGY]  return(start  ==  0)?  this.base  :  getBasicRow(i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  ==  0)?  this.base  :  getBasicRow(i);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  this.base  :  getBasicRow(i);	  return(i    ==    0)?    this.base    :    getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
251	[BUG]  [BUGGY]  row  =(start  <  getWidth()?  0  :  end);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(start  <  getWidth()?  0  :  end);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(start  <  getWidth()?  0  :  end);	  row    =(start    <    getWidth()?    0    :    start);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
252	[BUG]  [BUGGY]  int  height  =  getHeight()  *  i;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getHeight()  *  i;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  *  i;	  int    height    =    getHeight()    +    i;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
253	[BUG]  [BUGGY]  int  height  =  getHeight()  +  row;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getHeight()  +  row;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  +  row;	  int    height    =    getHeight()    +    i;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
254	[BUG]  [BUGGY]  int  height  =  getHeight()  /  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getHeight()  /  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  /  1;	  int    height    =    getHeight()    +    1;    	non-compiled	[CE]  not  a  statement	49	None	replace
255	[BUG]  [BUGGY]  return  row  <  0?  this.baseRow  :  getBasicRow(start,  col);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  this.baseRow  :  getBasicRow(start,  col);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  this.baseRow  :  getBasicRow(start,  col);	  return    row    <    0?    this.baseRow    :    getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
256	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(row  <  0));  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(row  <  0));  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(row  <  0));	  return(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon)&&(row    ==    null));    	non-compiled	[CE]  not  a  statement	80	None	replace
257	[BUG]  [BUGGY]  return(start  +  i)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  +  i)+  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  +  i)+  1;	  return    i    +    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
258	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(start,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(start,  i);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(start,  i);	  ((    LinearObjectiveFunction)f).setBasicRow(i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
259	[BUG]  [BUGGY]  return  row  ==  null?  Integer.MAX_VALUE  :  this.base;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  null?  Integer.MAX_VALUE  :  this.base;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  null?  Integer.MAX_VALUE  :  this.base;	  return    row    ==    null?    this.base    :    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
260	[BUG]  [BUGGY]  return  row  =  start;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  =  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  =  start;	  return    row    =    i;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
261	[BUG]  [BUGGY]  return  row  =  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  =  0;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  =  0;	  return    row    =    i;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
262	[BUG]  [BUGGY]  return  row  <  0?  this.base  :  getBasicRow(start);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  this.base  :  getBasicRow(start);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  this.base  :  getBasicRow(start);	  return    row    <    0?    this.base    :    getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
263	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  start,  col,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i),  start,  col,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  start,  col,  ignoreObjectiveRows);	  row    =    Math.floor(getBasicRow(i),    col,    ignoreObjectiveRows);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
264	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  start,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i),  start,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  start,  ignoreObjectiveRows);	  row    =    Math.floor(getBasicRow(i),    col,    ignoreObjectiveRows);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
265	[BUG]  [BUGGY]  row  =  getNumRangeFunctions().longValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumRangeFunctions().longValue();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRangeFunctions().longValue();	  row    =    getNumRangeFunctions().intValue();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
266	[BUG]  [BUGGY]  return  row  <  0?  0  :  start;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  0  :  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  0  :  start;	  return    row    <    0?    0    :    col;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
267	[BUG]  [BUGGY]  int  height  =  getHeight()  -  start  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getHeight()  -  start  +  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  -  start  +  1;	  int    height    =    getHeight()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
268	[BUG]  [BUGGY]  row  =  getRowValue();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getRowValue();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getRowValue();	  row    =    getRow();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
269	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(new  Integer(start,  col),  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(new  Integer(start,  col),  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(new  Integer(start,  col),  ignoreObjectiveRows);	  ((    LinearObjectiveFunction)f).setBasicRow(new    Integer(start,    col));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
270	[BUG]  [BUGGY]  row  =  getNumRows().intValue()  -  start;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumRows().intValue()  -  start;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRows().intValue()  -  start;	  row    =    getNumRows().intValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
271	[BUG]  [BUGGY]  row  -=  i;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  -=  i;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  -=  i;	  row    =    start;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
272	[BUG]  [BUGGY]  row  = " ";  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  = " ";  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  = " ";	  row    =    start;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
273	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  epsilon  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i),  epsilon  +  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  epsilon  +  1);	  row    =    Math.floor(getBasicRow(i),    col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
274	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  start  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i),  start  +  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  start  +  1);	  row    =    Math.floor(getBasicRow(i),    col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
275	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(start,  col));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.log(getBasicRow(start,  col));  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(start,  col));	  row    =    Math.log(getBasicRow(i,    col));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
276	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(i,  col);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(i,  col);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(i,  col);	  ((    LinearObjectiveFunction)f).getBasicRow(row,    col);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
277	[BUG]  [BUGGY]  return(this.baseRow  ==  col)?  0  :  row;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(this.baseRow  ==  col)?  0  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(this.baseRow  ==  col)?  0  :  row;	  return(this.baseRow    ==    col)?    0    :    this.baseRow;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
278	[BUG]  [BUGGY]  return(int)this.baseRow  +  start;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)this.baseRow  +  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)this.baseRow  +  start;	  return(int)this.baseRow;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
279	[BUG]  [BUGGY]  return  start  +  i;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  start  +  i;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  start  +  i;	  return    start;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
280	[BUG]  [BUGGY]  return  start  +  epsilon;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  start  +  epsilon;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  start  +  epsilon;	  return    start;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
281	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  ignoreRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  ignoreRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  ignoreRows);	  row    =(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon,    ignoreObjectiveRows);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
282	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)/  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)/  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col)/  1);	  row    =    Math.floor(getBasicRow(i,    col)+    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
283	[BUG]  [BUGGY]  return(start  ==  0)?  getBasicRow(i):  start  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  ==  0)?  getBasicRow(i):  start  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  getBasicRow(i):  start  +  1;	  return(start    ==    0)?    getBasicRow(i):    start;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
284	[BUG]  [BUGGY]  return  row  ==  0?  this.baseRow  :  getBasicRow(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  0?  this.baseRow  :  getBasicRow(i);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  this.baseRow  :  getBasicRow(i);	  return    row    <    0?    this.baseRow    :    getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
285	[BUG]  [BUGGY]  return(start  >  0)?  this.baseRow  :  row;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  >  0)?  this.baseRow  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  >  0)?  this.baseRow  :  row;	  return(i    >    0)?    this.baseRow    :    row;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
286	[BUG]  [BUGGY]  return(i  >  0)?  row  :  this.baseRow;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  >  0)?  row  :  this.baseRow;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  >  0)?  row  :  this.baseRow;	  return(i    >    0)?    this.baseRow    :    row;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
287	[BUG]  [BUGGY]  return(i  >  0)?  getBasicRow(i,  col):  row;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  >  0)?  getBasicRow(i,  col):  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  >  0)?  getBasicRow(i,  col):  row;	  return(i    >    0)?    this.baseRow    :    row;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
288	[BUG]  [BUGGY]  row  =  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  1;	  row    =    0;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
289	[BUG]  [BUGGY]  row  =  -1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  -1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  -1;	  row    =    0;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
290	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(start,  col),  0.0,  epsilon);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(start,  col),  0.0,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(start,  col),  0.0,  epsilon);	  return(int)MathUtils.equals(getEntry(i,    col),    0.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
291	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  0.0,  row);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  0.0,  row);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  0.0,  row);	  return(int)MathUtils.equals(getEntry(i,    col),    0.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
292	[BUG]  [BUGGY]  row  =(int)Math.floor(getWidth(),  getHeight()  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getWidth(),  getHeight()  +  1);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getWidth(),  getHeight()  +  1);	  row    =(int)Math.floor(getWidth(),    getHeight());    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
293	[BUG]  [BUGGY]  return(start  >=  0)?  0  :  start;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  >=  0)?  0  :  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  >=  0)?  0  :  start;	  return    0;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
294	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  1.0,  epsilon,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  1.0,  epsilon,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col),  1.0,  epsilon,  ignoreObjectiveRows);	  row    =    Math.floor(getBasicRow(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
295	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  1.0,  epsilon  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  1.0,  epsilon  +  1);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col),  1.0,  epsilon  +  1);	  row    =    Math.floor(getBasicRow(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
296	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(start,  col);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(start,  col);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(start,  col);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    col);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
297	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(i,  col);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(i,  col);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(i,  col);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    col);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
298	[BUG]  [BUGGY]  return(start  ==  0)?  this.base  :  row;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  ==  0)?  this.base  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  this.base  :  row;	  return(i    ==    0)?    this.base    :    row;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
299	[BUG]  [BUGGY]  return(i  ==  0)?  this.base  :  start;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  ==  0)?  this.base  :  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.base  :  start;	  return(i    ==    0)?    this.base    :    row;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
300	[BUG]  [BUGGY]  return(start  ==  0)?  this.baseRow  :  getBasicRow(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  ==  0)?  this.baseRow  :  getBasicRow(i);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  this.baseRow  :  getBasicRow(i);	  return(i    ==    0)?    this.baseRow    :    getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
301	[BUG]  [BUGGY]  return(i  ==  0)?  getBasicRow(i):  getBasicRow(i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  ==  0)?  getBasicRow(i):  getBasicRow(i);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  getBasicRow(i):  getBasicRow(i);	  return(i    ==    0)?    this.baseRow    :    getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
302	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(start,  epsilon);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(start,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(start,  epsilon);	  ((    LinearObjectiveFunction)f).getBasicRow(row,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
303	[BUG]  [BUGGY]  return(row  ==  0)?  0  :  row;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  0  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  0  :  row;	  return(start    ==    0)?    0    :    row;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
304	[BUG]  [BUGGY]  return  row  <  0?  -1  :  start;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  -1  :  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  -1  :  start;	  return    row    <    0?    -1    :    row;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
305	[BUG]  [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  -  start  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  -  start  +  1);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getNumObjectiveFunctions()  -  start  +  1);	  row    =(int)Math.floor(getNumObjectiveFunctions()    -    start);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
306	[BUG]  [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  start);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  start);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getBasicRow(i),  start);	  row    =(int)Math.floor(getBasicRow(i),    col);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
307	[BUG]  [BUGGY]  row  =  getBasicRow(start);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getBasicRow(start);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getBasicRow(start);	  row    =    getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
308	[BUG]  [BUGGY]  return(start  >  0)?  this.base  :  row;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  >  0)?  this.base  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  >  0)?  this.base  :  row;	  return(i    >    0)?    this.base    :    row;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
309	[BUG]  [BUGGY]  return(i  >  0)?  this.base  :  start;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  >  0)?  this.base  :  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  >  0)?  this.base  :  start;	  return(i    >    0)?    this.base    :    row;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
310	[BUG]  [BUGGY]  return(i  >  0)?  row  :  this.base;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  >  0)?  row  :  this.base;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  >  0)?  row  :  this.base;	  return(i    >    0)?    this.base    :    row;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
311	[BUG]  [BUGGY]  row  =  col  +  i;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  col  +  i;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  col  +  i;	  row    =    col;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
312	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(start,  i));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(start,  i));  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(start,  i));	  row    =    Math.floor(getBasicRow(start,    col));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
313	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(start,  col),  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(start,  col),  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(start,  col),  ignoreObjectiveRows);	  row    =    Math.floor(getBasicRow(start,    col));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
314	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(start,  col),  1.0,  epsilon);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(start,  col),  1.0,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(start,  col),  1.0,  epsilon);	  return(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
315	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(i,  row);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(i,  row);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(i,  row);	  ((    LinearObjectiveFunction)f).getBasicRow(row,    i);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
316	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(start,  epsilon);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(start,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(start,  epsilon);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
317	[BUG]  [BUGGY]  return(start  ==  0)?  0  :  start  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  ==  0)?  0  :  start  +  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  0  :  start  +  1;	  return(start    ==    0)?    0    :    start;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
318	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  2.0,  epsilon,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  2.0,  epsilon,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(i,  col),  2.0,  epsilon,  ignoreObjectiveRows);	  row    =(int)MathUtils.equals(getEntry(i,    col),    0.0,    epsilon,    ignoreObjectiveRows);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
319	[BUG]  [BUGGY]  row  -=  epsilon;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  -=  epsilon;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  -=  epsilon;	  row    =    start;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
320	[BUG]  [BUGGY]  row  -=  slackVar;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  -=  slackVar;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  -=  slackVar;	  row    =    start;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
321	[BUG]  [BUGGY]  row  =(int)Math.floor(getBasicRow(i,  col),  epsilon);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getBasicRow(i,  col),  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getBasicRow(i,  col),  epsilon);	  row    =(int)Math.floor(getBasicRow(i),    col);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
322	[BUG]  [BUGGY]  row  =(int)Math.floor(getBasicRow(i,  col));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getBasicRow(i,  col));  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getBasicRow(i,  col));	  row    =(int)Math.floor(getBasicRow(i),    col);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
323	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(start,  col),  1.0,  epsilon,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)MathUtils.equals(getEntry(start,  col),  1.0,  epsilon,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(start,  col),  1.0,  epsilon,  ignoreObjectiveRows);	  row    =(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon,    ignoreObjectiveRows);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
324	[BUG]  [BUGGY]  row  =  getRow(i  +  1,  col);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getRow(i  +  1,  col);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getRow(i  +  1,  col);	  row    =    getRow(i);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
325	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  ignoreObjectiveRows);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  ignoreObjectiveRows);	  return(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
326	[BUG]  [BUGGY]  return(row  ==  0)?  0  :  line;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  0  :  line;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  0  :  line;	  return(start    ==    0)?    0    :    row;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
327	[BUG]  [BUGGY]  return(row  >  0)?  this.base  :  row;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  >  0)?  this.base  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  >  0)?  this.base  :  row;	  return(i    >    0)?    this.base    :    row;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
328	[BUG]  [BUGGY]  return(this.baseRow  ==  col)?  0  :  this.baseRows;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(this.baseRow  ==  col)?  0  :  this.baseRows;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(this.baseRow  ==  col)?  0  :  this.baseRows;	  return(this.baseRow    ==    col)?    0    :    this.baseRow;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
329	[BUG]  [BUGGY]  return  row  ==  0?  this.base  :  getBasicRow(i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  ==  0?  this.base  :  getBasicRow(i);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  this.base  :  getBasicRow(i);	  return    row    <    0?    this.base    :    getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
330	[BUG]  [BUGGY]  return(row  >  0)?  this.baseRow  :  row;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  >  0)?  this.baseRow  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  >  0)?  this.baseRow  :  row;	  return(i    >    0)?    this.baseRow    :    row;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
331	[BUG]  [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(start,  col),  1.0,  epsilon);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(start,  col),  1.0,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(Integer)MathUtils.equals(getEntry(start,  col),  1.0,  epsilon);	  row    =(Integer)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
332	[BUG]  [BUGGY]  return  i  -  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  i  -  2;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  i  -  2;	  return    i    -    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
333	[BUG]  [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  -  start,  epsilon);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  -  start,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getNumObjectiveFunctions()  -  start,  epsilon);	  row    =(int)Math.floor(getNumObjectiveFunctions()    -    start);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
334	[BUG]  [BUGGY]  return(start  ==  0)?  0  :  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  ==  0)?  0  :  1;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  0  :  1;	  return(start    ==    0)?    0    :    start;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
335	[BUG]  [BUGGY]  int  height  =  getHeight()  -  slackVar;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getHeight()  -  slackVar;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  -  slackVar;	  int    height    =    getHeight()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
336	[BUG]  [BUGGY]  int  height  =  getHeight()  -  epsilon;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getHeight()  -  epsilon;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  -  epsilon;	  int    height    =    getHeight()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
337	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(start,  col),  epsilon);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(start,  col),  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(start,  col),  epsilon);	  row    =    Math.floor(getBasicRow(i,    col),    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
338	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)/  epsilon);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)/  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col)/  epsilon);	  row    =    Math.floor(getBasicRow(i,    col),    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
339	[BUG]  [BUGGY]  row  =(int)Math.floor(getWidth()  /  2  -  epsilon);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getWidth()  /  2  -  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getWidth()  /  2  -  epsilon);	  row    =(int)Math.floor(getWidth()    /    2);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
340	[BUG]  [BUGGY]  return(this.baseRow  ==  null)?  0  :  this.baseRows;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(this.baseRow  ==  null)?  0  :  this.baseRows;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(this.baseRow  ==  null)?  0  :  this.baseRows;	  return(this.baseRow    ==    null)?    0    :    this.baseRow;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
341	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)-(int)MathUtils.equals(getEntry(i,  col),  1.0,  e  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)-(int)MathUtils.equals(getEntry(i,  col),  1.0,  e  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)-(int)MathUtils.equals(getEntry(i,  col),  1.0,  e	  row    =    0;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
342	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)-(int)MathUtils.equals(getEntry(i,  col),  0.0,  e  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)-(int)MathUtils.equals(getEntry(i,  col),  0.0,  e  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)-(int)MathUtils.equals(getEntry(i,  col),  0.0,  e	  row    =    0;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
343	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(start,  col),  0.5,  epsilon);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)MathUtils.equals(getEntry(start,  col),  0.5,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(start,  col),  0.5,  epsilon);	  row    =(int)MathUtils.equals(getEntry(i,    col),    0.5,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
344	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(col,  row,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(col,  row,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(col,  row,  ignoreObjectiveRows);	  ((    LinearObjectiveFunction)f).setBasicRow(row,    ignoreObjectiveRows);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
345	[BUG]  [BUGGY]  return(row  ==  0)?  field  :  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  field  :  0;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  field  :  0;	  return(start    ==    0)?    row    :    0;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
346	[BUG]  [BUGGY]  return(row  ==  0)?  this.base  :  new  Integer(start);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  this.base  :  new  Integer(start);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  this.base  :  new  Integer(start);	  return(row    ==    0)?    this.base    :    row;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
347	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(start,  col),  0.0,  epsilon);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(start,  col),  0.0,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(start,  col),  0.0,  epsilon);	  row    =    Math.floor(getBasicRow(i,    col),    0.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
348	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)-  1.0,  epsilon);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)-  1.0,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col)-  1.0,  epsilon);	  row    =    Math.floor(getBasicRow(i,    col),    0.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
349	[BUG]  [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  0.0,  epsilon,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  0.0,  epsilon,  ignoreObjectiveRows);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getBasicRow(i),  0.0,  epsilon,  ignoreObjectiveRows);	  row    =(int)Math.floor(getBasicRow(i),    0.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
350	[BUG]  [BUGGY]  int  height  =  getWidth()  /  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  int  height  =  getWidth()  /  2;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getWidth()  /  2;	  int    height    =    getWidth();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
351	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon,  ignoreObjectiveRows);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon,  ignoreObjectiveRows);	  return(int)MathUtils.equals(getEntry(i,    col),    0.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
352	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(start,  col),  1.0,  epsilon);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(start,  col),  1.0,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(start,  col),  1.0,  epsilon);	  row    =    Math.floor(getBasicRow(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
353	[BUG]  [BUGGY]  return(int)this.baseRows;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)this.baseRows;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)this.baseRows;	  return(int)this.baseRow;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
354	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(start,  col),  1.0,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)MathUtils.equals(getEntry(start,  col),  1.0,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(start,  col),  1.0,  ignoreObjectiveRows);	  row    =(int)MathUtils.equals(getEntry(i,    col),    1.0,    ignoreObjectiveRows);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
355	[BUG]  [BUGGY]  row  =  i  +  1,  epsilon;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  i  +  1,  epsilon;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  i  +  1,  epsilon;	  row    =    i    +    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
356	[BUG]  [BUGGY]  row  =  getNumRangeFunctions().intValue()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumRangeFunctions().intValue()  -  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRangeFunctions().intValue()  -  1;	  row    =    getNumRangeFunctions().intValue();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
357	[BUG]  [BUGGY]  row  =  getNumRangeFunctions();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumRangeFunctions();  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRangeFunctions();	  row    =    getNumRangeFunctions().intValue();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
358	[BUG]  [BUGGY]  row  =(start  <  getWidth()?  0  :  start,  epsilon);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(start  <  getWidth()?  0  :  start,  epsilon);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(start  <  getWidth()?  0  :  start,  epsilon);	  row    =(start    <    getWidth()?    0    :    start);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
359	[BUG]  [BUGGY]  row  =  getNumObjectiveFunctions().intValue()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumObjectiveFunctions().intValue()  -  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumObjectiveFunctions().intValue()  -  1;	  row    =    getNumObjectiveFunctions().intValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
360	[BUG]  [BUGGY]  return(i  <  0)?  this.base  :  getBasicRow(i).intValue();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(i  <  0)?  this.base  :  getBasicRow(i).intValue();  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  <  0)?  this.base  :  getBasicRow(i).intValue();	  return(i    ==    0)?    this.base    :    getBasicRow(i).intValue();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
361	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  col,  epsilon,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i),  col,  epsilon,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  col,  epsilon,  ignoreObjectiveRows);	  row    =    Math.floor(getBasicRow(i),    epsilon,    ignoreObjectiveRows);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
362	[BUG]  [BUGGY]  row  =(start  ==  0)?  0  :  end;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(start  ==  0)?  0  :  end;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(start  ==  0)?  0  :  end;	  row    =(start    ==    0)?    0    :    start;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
363	[BUG]  [BUGGY]  row  =  Math.rint(getBasicRow(i,  col));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.rint(getBasicRow(i,  col));  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.rint(getBasicRow(i,  col));	  row    =    Math.log(getBasicRow(i,    col));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
364	[BUG]  [BUGGY]  row  =  Math.min(getBasicRow(i,  col));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.min(getBasicRow(i,  col));  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.min(getBasicRow(i,  col));	  row    =    Math.log(getBasicRow(i,    col));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
365	[BUG]  [BUGGY]  return(start  ==  0)?  getBasicRow(i,  col):  start;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(start  ==  0)?  getBasicRow(i,  col):  start;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  getBasicRow(i,  col):  start;	  return(start    ==    0)?    getBasicRow(i):    start;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
366	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(start,  col),  0.0,  epsilon,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)MathUtils.equals(getEntry(start,  col),  0.0,  epsilon,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(start,  col),  0.0,  epsilon,  ignoreObjectiveRows);	  row    =(int)MathUtils.equals(getEntry(i,    col),    0.0,    epsilon,    ignoreObjectiveRows);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
367	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  1.0,  epsilon,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(i),  1.0,  epsilon,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  1.0,  epsilon,  ignoreObjectiveRows);	  row    =    Math.floor(getBasicRow(i),    1.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
368	[BUG]  [BUGGY]  return(row  ==  0)?  this.baseRow  :  row;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(row  ==  0)?  this.baseRow  :  row;  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  this.baseRow  :  row;	  return(i    ==    0)?    this.baseRow    :    row;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
369	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(start  ==  null));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(start  ==  null));  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(start  ==  null));	  return(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon)&&(row    ==    null));    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
370	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(end  ==  0));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(end  ==  0));  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(end  ==  0));	  return(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon)&&(row    ==    null));    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
371	[BUG]  [BUGGY]  row  =  getNumObjectiveRows().intValue()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  getNumObjectiveRows().intValue()  -  1;  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumObjectiveRows().intValue()  -  1;	  row    =    getNumObjectiveRows().intValue();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
372	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(start,  col  +  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =  Math.floor(getBasicRow(start,  col  +  1));  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(start,  col  +  1));	  row    =    Math.floor(getBasicRow(start,    col));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
373	[BUG]  [BUGGY]  return  row  <  0?  0  :(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  0  :(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  0  :(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);	  return    0;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
374	[BUG]  [BUGGY]  return  row  <  0?  0  :(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  return  row  <  0?  0  :(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon);  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  0  :(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon);	  return    0;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
375	[BUG]  [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(start,  col),  1.0,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(start,  col),  1.0,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(Integer)MathUtils.equals(getEntry(start,  col),  1.0,  ignoreObjectiveRows);	  row    =(Integer)MathUtils.equals(getEntry(i,    col),    1.0,    ignoreObjectiveRows);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
376	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  ignoreObjectiveRows);  [BUGGY]      return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(row,  ignoreObjectiveRows);	  ((    LinearObjectiveFunction)f).getBasicRow(start);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
377	[BUG]  [BUGGY]  row  =(int)Math.floor(getHeight(),  getWidth());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {      [BUGGY]  row  =(int)Math.floor(getHeight(),  getWidth());  [BUGGY]      }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getHeight(),  getWidth());	  row    =(int)Math.floor(getWidth(),    getHeight());    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
