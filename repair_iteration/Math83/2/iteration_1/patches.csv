bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  epsilon);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  epsilon);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(row,  epsilon);	      ((    LinearObjectiveFunction)f).setBasicRow(row);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  col);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  col);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(row,  col);	      ((    LinearObjectiveFunction)f).setBasicRow(row);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
3	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(i);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(i);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(i);	      ((    LinearObjectiveFunction)f).setBasicRow(row);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
4	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  ignoreObjectiveRows);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(row,  ignoreObjectiveRows);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(row,  ignoreObjectiveRows);	      ((    LinearObjectiveFunction)f).setBasicRow(row);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
5	[BUG]  [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);	      row    =(int)MathUtils.equals(getEntry(i,    col),    0.0,    epsilon);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
6	[BUG]  [BUGGY]  row  =  getNumRows().intValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  getNumRows().intValue();  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRows().intValue();	      row    =    getNumObjectiveFunctions().intValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
7	[BUG]  [BUGGY]  row  =  getNumObjectiveFunctions().doubleValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  getNumObjectiveFunctions().doubleValue();  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumObjectiveFunctions().doubleValue();	      row    =    getNumObjectiveFunctions().intValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
8	[BUG]  [BUGGY]  row  =  getNumObjectiveFunctions().intValue()  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  getNumObjectiveFunctions().intValue()  +  1;  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumObjectiveFunctions().intValue()  +  1;	      row    =    getNumObjectiveFunctions().intValue();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
9	[BUG]  [BUGGY]  row  =  i  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  i  +  1;  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  i  +  1;	      row    =    i;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
10	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.floor(getBasicRow(i,  col)+  1);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col)+  1);	      row    =    Math.floor(getBasicRow(i,    col));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
11	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  ignoreObjectiveRows);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col),  ignoreObjectiveRows);	      row    =    Math.floor(getBasicRow(i,    col));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
12	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i,  col));  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.log(getBasicRow(i,  col));  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i,  col));	      row    =    Math.floor(getBasicRow(i,    col));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
13	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  2.0,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  2.0,  ignoreObjectiveRows);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(i,  col),  2.0,  ignoreObjectiveRows);	      row    =(int)MathUtils.equals(getEntry(i,    col),    2.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  return(row  ==  0)?  this.base  :  row;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(row  ==  0)?  this.base  :  row;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(row  ==  0)?  this.base  :  row;	  return    this.base;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  return(i  >  0)?  this.base  :  row;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(i  >  0)?  this.base  :  row;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  >  0)?  this.base  :  row;	  return    this.base;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
16	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  col);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  col);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(row,  col);	      ((    LinearObjectiveFunction)f).getBasicRow(row);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  epsilon);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  epsilon);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(row,  epsilon);	      ((    LinearObjectiveFunction)f).getBasicRow(row);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(i);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(i);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(i);	      ((    LinearObjectiveFunction)f).getBasicRow(row);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(row,  i);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(row,  i);	      ((    LinearObjectiveFunction)f).getBasicRow(row);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  return  row  <  0?  0  :  row.intValue();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  <  0?  0  :  row.intValue();  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  0  :  row.intValue();	  return    row    <    0?    0    :    row;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
21	[BUG]  [BUGGY]  return  row  <  0?  0  :  col;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  <  0?  0  :  col;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  0  :  col;	  return    row    <    0?    0    :    row;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
22	[BUG]  [BUGGY]  return  row  <  0?  0  :  row  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  <  0?  0  :  row  +  1;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  0  :  row  +  1;	  return    row    <    0?    0    :    row;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
23	[BUG]  [BUGGY]  return(this.baseRow  ==  null)?  0  :  this.baseRow;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(this.baseRow  ==  null)?  0  :  this.baseRow;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(this.baseRow  ==  null)?  0  :  this.baseRow;	  return    this.baseRow;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  return(this.baseRow  ==  col)?  0  :  this.baseRow;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(this.baseRow  ==  col)?  0  :  this.baseRow;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(this.baseRow  ==  col)?  0  :  this.baseRow;	  return    this.baseRow;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  return(i  >  0)?  this.baseRow  :  row;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(i  >  0)?  this.baseRow  :  row;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  >  0)?  this.baseRow  :  row;	  return    this.baseRow;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon);	  return    this;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon);  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon);	  return    this;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  col,  ignoreObjectiveRows);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.floor(getBasicRow(i),  col,  ignoreObjectiveRows);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  col,  ignoreObjectiveRows);	      row    =    Math.floor(getBasicRow(i),    col);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  col  +  1);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.floor(getBasicRow(i),  col  +  1);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  col  +  1);	      row    =    Math.floor(getBasicRow(i),    col);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
30	[BUG]  [BUGGY]  return  i  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  i  +  1;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  i  +  1;	  return    i;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  return  0;  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  0;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  0;	  return    i;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  return  i  -  1;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  i  -  1;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  i  -  1;	  return    i;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  row  =  getRow();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  getRow();  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getRow();	      row    =    getNumObjectiveFunctions();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
34	[BUG]  [BUGGY]  row  =  getRow(i);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  getRow(i);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getRow(i);	      row    =    getNumObjectiveFunctions();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
35	[BUG]  [BUGGY]  row  =  getRowCount();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  getRowCount();  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getRowCount();	      row    =    getNumObjectiveFunctions();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
36	[BUG]  [BUGGY]  row  =  getBasicRow(i);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  getBasicRow(i);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getBasicRow(i);	      row    =    getNumObjectiveFunctions();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
37	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  1.0,  epsilon);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.floor(getBasicRow(i),  1.0,  epsilon);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  1.0,  epsilon);	      row    =    Math.floor(getBasicRow(i),    0.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
38	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  0.0,  epsilon);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  0.0,  epsilon);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col),  0.0,  epsilon);	      row    =    Math.floor(getBasicRow(i),    0.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
39	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  1.0,  epsilon);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  1.0,  epsilon);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col),  1.0,  epsilon);	      row    =    Math.floor(getBasicRow(i),    0.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
40	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i),  1.0,  epsilon);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.log(getBasicRow(i),  1.0,  epsilon);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i),  1.0,  epsilon);	      row    =    Math.floor(getBasicRow(i),    0.0,    epsilon);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
41	[BUG]  [BUGGY]  return  row  <  0?  null  :  row.intValue();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  <  0?  null  :  row.intValue();  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  null  :  row.intValue();	  return    row    <    0?    null    :    row;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
42	[BUG]  [BUGGY]  return  row  <  0?  null  :  row  +  1;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  <  0?  null  :  row  +  1;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  null  :  row  +  1;	  return    row    <    0?    null    :    row;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
43	[BUG]  [BUGGY]  return  row  >=  0?  null  :  row;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  >=  0?  null  :  row;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  >=  0?  null  :  row;	  return    row    <    0?    null    :    row;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
44	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  epsilon);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.floor(getBasicRow(i,  col),  epsilon);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i,  col),  epsilon);	      row    =    Math.floor(getBasicRow(i),    epsilon);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
45	[BUG]  [BUGGY]  row  =  Math.log(getBasicRow(i),  epsilon);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.log(getBasicRow(i),  epsilon);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.log(getBasicRow(i),  epsilon);	      row    =    Math.floor(getBasicRow(i),    epsilon);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
46	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  0.0);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.floor(getBasicRow(i),  0.0);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  0.0);	      row    =    Math.floor(getBasicRow(i),    epsilon);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
47	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  ignoreObjectiveRows);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  ignoreObjectiveRows);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  ignoreObjectiveRows);	      row    =(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  ignoreObjectiveRows);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  ignoreObjectiveRows);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(Integer)MathUtils.equals(getEntry(i,  col),  1.0,  ignoreObjectiveRows);	      row    =(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  int  height  =  getHeight()  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  int  height  =  getHeight()  +  1;  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  +  1;	      int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
50	[BUG]  [BUGGY]  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  int  height  =  getHeight()  -  1;  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  -  1;	      int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
51	[BUG]  [BUGGY]  int  height  =  getWidth();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  int  height  =  getWidth();  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getWidth();	      int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
52	[BUG]  [BUGGY]  int  height  =  getHeight()  +  i;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  int  height  =  getHeight()  +  i;  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  +  i;	      int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
53	[BUG]  [BUGGY]  return  row  <  0?  -1  :  row;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  <  0?  -1  :  row;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  -1  :  row;	  return    row;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
54	[BUG]  [BUGGY]  return  row  =  i;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  =  i;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  =  i;	  return    row;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(start,  col));  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.floor(getBasicRow(start,  col));  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(start,  col));	      row    =    Math.floor(getBasicRow(i,    col));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
56	[BUG]  [BUGGY]  row  =  getNumRows();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  getNumRows();  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRows();	      row    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
57	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  ignoreObjectiveRows);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  ignoreObjectiveRows);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon,  ignoreObjectiveRows);	      row    =(int)MathUtils.equals(getEntry(i,    col),    1.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  0.5,  epsilon);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  0.5,  epsilon);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(i,  col),  0.5,  epsilon);	      row    =(int)MathUtils.equals(getEntry(i,    col),    2.0,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
59	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  epsilon,  ignoreObjectiveRows);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.floor(getBasicRow(i),  epsilon,  ignoreObjectiveRows);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  epsilon,  ignoreObjectiveRows);	      row    =    Math.floor(getBasicRow(i),    epsilon);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
60	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  1.0);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.floor(getBasicRow(i),  1.0);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  1.0);	      row    =    Math.floor(getBasicRow(i),    epsilon);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
61	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(start);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(start);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(start);	      ((    LinearObjectiveFunction)f).getBasicRow(row);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
62	[BUG]  [BUGGY]  return  start;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  start;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  start;	  return    row;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
63	[BUG]  [BUGGY]  return(start  ==  0)?  getBasicRow(i):  start;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(start  ==  0)?  getBasicRow(i):  start;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  getBasicRow(i):  start;	  return    i;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  return(start  ==  0)?  0  :  start;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(start  ==  0)?  0  :  start;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  0  :  start;	  return    i;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  return(i  ==  0)?  this.base  :  getBasicRow(i).intValue();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(i  ==  0)?  this.base  :  getBasicRow(i).intValue();  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.base  :  getBasicRow(i).intValue();	  return    this.base;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
66	[BUG]  [BUGGY]  return(i  ==  0)?  this.base  :  getBasicRow(i);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(i  ==  0)?  this.base  :  getBasicRow(i);  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.base  :  getBasicRow(i);	  return    this.base;    	non-compiled	[CE]  not  a  statement	14	None	replace
67	[BUG]  [BUGGY]  return(i  ==  0)?  this.base  :  row;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(i  ==  0)?  this.base  :  row;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.base  :  row;	  return    this.base;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
68	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(start);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(start);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(start);	      ((    LinearObjectiveFunction)f).setBasicRow(row);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
69	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(col);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(col);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(col);	      ((    LinearObjectiveFunction)f).setBasicRow(row);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
70	[BUG]  [BUGGY]  return(i  ==  0)?  this.baseRow  :  getBasicRow(i);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(i  ==  0)?  this.baseRow  :  getBasicRow(i);  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.baseRow  :  getBasicRow(i);	  return    this.baseRow;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
71	[BUG]  [BUGGY]  return(i  ==  0)?  this.baseRow  :  row;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(i  ==  0)?  this.baseRow  :  row;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(i  ==  0)?  this.baseRow  :  row;	  return    this.baseRow;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
72	[BUG]  [BUGGY]  return(int)this.baseRow;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(int)this.baseRow;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)this.baseRow;	  return    this.baseRow;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
73	[BUG]  [BUGGY]  int  height  =  getHeight()  -  start;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  int  height  =  getHeight()  -  start;  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	int  height  =  getHeight()  -  start;	      int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
74	[BUG]  [BUGGY]  row  =(int)Math.floor(col);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(int)Math.floor(col);  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(col);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  -  start);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(int)Math.floor(getNumObjectiveFunctions()  -  start);  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getNumObjectiveFunctions()  -  start);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
76	[BUG]  [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  col);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  col);  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getBasicRow(i),  col);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
77	[BUG]  [BUGGY]  row  =  getNumRangeFunctions().intValue();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  getNumRangeFunctions().intValue();  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumRangeFunctions().intValue();	      row    =    getNumObjectiveFunctions().intValue();    	non-compiled	[CE]  not  a  statement	17	None	replace
78	[BUG]  [BUGGY]  return  row  ==  0?  null  :  row;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  ==  0?  null  :  row;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  null  :  row;	  return    row    <    0?    null    :    row;    	non-compiled	[CE]  ';'  expected	20	None	replace
79	[BUG]  [BUGGY]  row  =  Math.floor(getBasicRow(i),  start);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  Math.floor(getBasicRow(i),  start);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  Math.floor(getBasicRow(i),  start);	      row    =    Math.floor(getBasicRow(i),    col);    	non-compiled	[CE]  ';'  expected	11	None	replace
80	[BUG]  [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(row  ==  null));  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(row  ==  null));  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(int)MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)&&(row  ==  null));	  return    this;    	non-compiled	[CE]  not  a  statement	1	None	replace
81	[BUG]  [BUGGY]  row  =  start;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  start;  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  start;	      row    =    i;    	non-compiled	[CE]  not  a  statement	9	None	replace
82	[BUG]  [BUGGY]  row  =(start  ==  0)?  0  :  start;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(start  ==  0)?  0  :  start;  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(start  ==  0)?  0  :  start;	      row    =    i;    	non-compiled	[CE]  not  a  statement	9	None	replace
83	[BUG]  [BUGGY]  row  =(start  <  getWidth()?  0  :  start);  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(start  <  getWidth()?  0  :  start);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(start  <  getWidth()?  0  :  start);	      row    =    i;    	non-compiled	[CE]  not  a  statement	9	None	replace
84	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon,  ignoreObjectiveRows);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon,  ignoreObjectiveRows);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(i,  col),  0.0,  epsilon,  ignoreObjectiveRows);	      row    =(int)MathUtils.equals(getEntry(i,    col),    0.0,    epsilon);    	non-compiled	[CE]  not  a  statement	7	None	replace
85	[BUG]  [BUGGY]  row  =(int)MathUtils.equals(getEntry(start,  col),  0.0,  epsilon);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(int)MathUtils.equals(getEntry(start,  col),  0.0,  epsilon);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)MathUtils.equals(getEntry(start,  col),  0.0,  epsilon);	      row    =(int)MathUtils.equals(getEntry(i,    col),    0.0,    epsilon);    	non-compiled	[CE]  not  a  statement	7	None	replace
86	[BUG]  [BUGGY]  return  row  ==  0?  0  :  row;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  ==  0?  0  :  row;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  0?  0  :  row;	  return    row    <    0?    0    :    row;    	non-compiled	[CE]  not  a  statement	21	None	replace
87	[BUG]  [BUGGY]  return  row  <  0?  this.baseRow  :  getBasicRow(i);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  <  0?  this.baseRow  :  getBasicRow(i);  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  this.baseRow  :  getBasicRow(i);	  return    this.baseRow;    	non-compiled	[CE]  not  a  statement	4	None	replace
88	[BUG]  [BUGGY]  return  row  <  0?  this.baseRow  :  null;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  <  0?  this.baseRow  :  null;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  this.baseRow  :  null;	  return    this.baseRow;    	non-compiled	[CE]  not  a  statement	4	None	replace
89	[BUG]  [BUGGY]  return  row  <  0?  this.baseRow  :  getBasicRow(i,  col);  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  <  0?  this.baseRow  :  getBasicRow(i,  col);  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  this.baseRow  :  getBasicRow(i,  col);	  return    this.baseRow;    	non-compiled	[CE]  not  a  statement	4	None	replace
90	[BUG]  [BUGGY]  return(start  ==  0)?  0  :  row;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(start  ==  0)?  0  :  row;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  0  :  row;	  return    i;    	non-compiled	[CE]  not  a  statement	3	None	replace
91	[BUG]  [BUGGY]  return(start  ==  0)?  row  :  0;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return(start  ==  0)?  row  :  0;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return(start  ==  0)?  row  :  0;	  return    i;    	non-compiled	[CE]  not  a  statement	3	None	replace
92	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(new  Integer(start,  col));  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  ((  LinearObjectiveFunction)f).setBasicRow(new  Integer(start,  col));  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).setBasicRow(new  Integer(start,  col));	      ((    LinearObjectiveFunction)f).setBasicRow(row);    	non-compiled	[CE]  not  a  statement	10	None	replace
93	[BUG]  [BUGGY]  return  row  ==  null?  this  :  row.intValue();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  ==  null?  this  :  row.intValue();  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  null?  this  :  row.intValue();	  return    this;    	non-compiled	[CE]  not  a  statement	1	None	replace
94	[BUG]  [BUGGY]  return  row  ==  null?  null  :  row.intValue();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  ==  null?  null  :  row.intValue();  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  null?  null  :  row.intValue();	  return    this;    	non-compiled	[CE]  not  a  statement	1	None	replace
95	[BUG]  [BUGGY]  return  row  ==  null?  this  :  row;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  ==  null?  this  :  row;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  null?  this  :  row;	  return    this;    	non-compiled	[CE]  not  a  statement	1	None	replace
96	[BUG]  [BUGGY]  row  =  getNumObjectiveRows().intValue();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  getNumObjectiveRows().intValue();  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  getNumObjectiveRows().intValue();	      row    =    getNumObjectiveFunctions().intValue();    	non-compiled	[CE]  not  a  statement	17	None	replace
97	[BUG]  [BUGGY]  row  =  col;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  col;  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  col;	      row    =    i;    	non-compiled	[CE]  not  a  statement	9	None	replace
98	[BUG]  [BUGGY]  row  =  0;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =  0;  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =  0;	      row    =    i;    	non-compiled	[CE]  not  a  statement	9	None	replace
99	[BUG]  [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  0.0,  epsilon);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(int)Math.floor(getBasicRow(i),  0.0,  epsilon);  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getBasicRow(i),  0.0,  epsilon);	      	non-compiled	[CE]  not  a  statement	5	None	replace
100	[BUG]  [BUGGY]  row  =(int)Math.floor(getWidth()  /  2);  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(int)Math.floor(getWidth()  /  2);  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getWidth()  /  2);	      	non-compiled	[CE]  not  a  statement	5	None	replace
101	[BUG]  [BUGGY]  row  =(int)Math.floor(getWidth(),  getHeight());  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  row  =(int)Math.floor(getWidth(),  getHeight());  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	row  =(int)Math.floor(getWidth(),  getHeight());	      	non-compiled	[CE]  not  a  statement	5	None	replace
102	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(col);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  ((  LinearObjectiveFunction)f).getBasicRow(col);  [BUGGY]    return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	((  LinearObjectiveFunction)f).getBasicRow(col);	      ((    LinearObjectiveFunction)f).getBasicRow(row);    	non-compiled	[CE]  not  a  statement	12	None	replace
103	[BUG]  [BUGGY]  return  row  <  0?  this.base  :  null;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  <  0?  this.base  :  null;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  this.base  :  null;	  return    this.base;    	non-compiled	[CE]  not  a  statement	14	None	replace
104	[BUG]  [BUGGY]  return  row  ==  null?  this.base  :  Integer.MAX_VALUE;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  ==  null?  this.base  :  Integer.MAX_VALUE;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  ==  null?  this.base  :  Integer.MAX_VALUE;	  return    this.base;    	non-compiled	[CE]  not  a  statement	14	None	replace
105	[BUG]  [BUGGY]  return  row  <  0?  this.base  :  getBasicRow(i);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  <  0?  this.base  :  getBasicRow(i);  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  this.base  :  getBasicRow(i);	  return    this.base;    	non-compiled	[CE]  not  a  statement	14	None	replace
106	[BUG]  [BUGGY]  return  row  <  0?  1  :  row;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    private  Integer  getBasicRow(final  int  col,  boolean  ignoreObjectiveRows)  {  Integer  row  =  null;  int  start  =  getNumObjectiveFunctions();  for  (int  i  =  start;  i  <  getHeight();  i++)  {  if  (MathUtils.equals(getEntry(i,  col),  1.0,  epsilon)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!MathUtils.equals(getEntry(i,  col),  0.0,  epsilon))  {    [BUGGY]  return  row  <  0?  1  :  row;  [BUGGY]    }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  boolean  ignoreObjectiveRows  [VARIABLES]  Integer  row  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	297	297	1	replace	return  row  <  0?  1  :  row;	  return    row;    	non-compiled	[CE]  not  a  statement	2	None	replace
