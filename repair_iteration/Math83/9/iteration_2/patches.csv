bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width,  j,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width,  j,  getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  width,  j,  getRhsOffset());	  matrix[i][j    +    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
2	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(width  +  1,  j,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(width  +  1,  j,  getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(width  +  1,  j,  getRhsOffset());	  matrix[i][j    +    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
3	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  height,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  height,  getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  height,  getRhsOffset());	  matrix[i][j    +    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
4	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width,  j);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width,  j);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  width,  j);	  matrix[i][j    +    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
5	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  height  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  height  +  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  height  +  1);	  matrix[i][j    +    1]    =    getEntry(i    +    1,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
6	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(width,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(width,  j  +  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(width,  j  +  1);	  matrix[i][j    +    1]    =    getEntry(i    +    1,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
7	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
8	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  col;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
9	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  height);	  matrix[i][j]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j  -  1);	  matrix[i][j]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j  +  1);  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j  +  1);  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  j  +  1);  this.tableau  =  new  Array2DRowRealMatrix(matrix);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j);    this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  j  -  1);	  matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
15	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  getRhsOffset()  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(j  +  1,  getRhsOffset()  -  1);	  matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
16	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  width  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  width  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  width  -  1);	  matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
17	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumnOffset(),  width);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumnOffset(),  width);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumnOffset(),  width);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
18	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumnOffset(),  height);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumnOffset(),  height);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumnOffset(),  height);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
19	[BUG]  [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j);  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j);  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][width  -  1]  =  getEntry(i  +  1,  j);  this.tableau  =  new  Array2DRowRealMatrix(matrix);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
21	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
24	[BUG]  [BUGGY]  matrix[i][1]  =  getEntry(i  +  1,  j);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][1]  =  getEntry(i  +  1,  j);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][1]  =  getEntry(i  +  1,  j);	  matrix[i][1]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  matrix[i][1]  =  getEntry(j  +  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][1]  =  getEntry(j  +  1,  getRhsOffset());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][1]  =  getEntry(j  +  1,  getRhsOffset());	  matrix[i][1]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  height  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  height  +  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  height  +  1);	  matrix[i][j    -    1]    =    getEntry(width    +    1,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
27	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(width  +  1,  height  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(width  +  1,  height  +  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(width  +  1,  height  +  1);	  matrix[i][j    -    1]    =    getEntry(width    +    1,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
28	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  col;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
29	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
30	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    getRhsOffset();    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
31	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width  +  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  width  +  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  width  +  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    getRhsOffset();    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
32	[BUG]  [BUGGY]  matrix[i][1]  =  getEntry(i  +  1,  j);  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][1]  =  getEntry(i  +  1,  j);  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][1]  =  getEntry(i  +  1,  j);  this.tableau  =  new  Array2DRowRealMatrix(matrix);	  matrix[i][1]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
33	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumn()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumn()  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumn()  -  1);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
34	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumn(),  width);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumn(),  width);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumn(),  width);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
35	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(width  +  1,  j);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(width  +  1,  j);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(width  +  1,  j);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(width,  j  +  1,  j);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(width,  j  +  1,  j);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(width,  j  +  1,  j);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
38	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
39	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
40	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(height  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(height  +  1,  j  +  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(height  +  1,  j  +  1);	  matrix[i][j    +    1]    =    getEntry(width    +    1,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
42	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumn(),  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumn(),  0);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumn(),  0);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getRhsOffset(),    0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
43	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  height);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  height);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getRhsOffset(),    0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
44	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  width  -  1);	  matrix[i][j]    =    getEntry(i    +    1,    width);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
45	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  if(matrix!=    null)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
46	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  width  +  1);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  width  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  width  +  1);  }	  if(matrix!=    null)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
47	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width  -  j);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width  -  j);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  width  -  j);	  matrix[i][j    +    1]    =    getEntry(i    +    1,    width);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
48	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  width  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  width  +  1,  j  +  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i,  width  +  1,  j  +  1);	  matrix[i][j    -    1]    =    getEntry(i,    j    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
49	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width  +  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width  +  1,  getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  width  +  1,  getRhsOffset());	  matrix[i][j    -    1]    =    getEntry(i,    j    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
50	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(width,  j  +  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(width,  j  +  1,  getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(width,  j  +  1,  getRhsOffset());	  matrix[i][j    -    1]    =    getEntry(i,    j    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
54	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  +  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  +  1,  getRhsOffset());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j  +  1,  getRhsOffset());	  matrix[i][j]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
55	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width,  getRhsOffset());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  width,  getRhsOffset());	  matrix[i][j]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
56	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset()  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset()  -  1);	  matrix[i][j]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
57	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  -  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  -  1,  getRhsOffset());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j  -  1,  getRhsOffset());	  matrix[i][j]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
58	[BUG]  [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j);  this.tableau  =  new  SimplexTableau(matrix);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j);  this.tableau  =  new  SimplexTableau(matrix);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][width  -  1]  =  getEntry(i  +  1,  j);  this.tableau  =  new  SimplexTableau(matrix);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    SimplexTableau(matrix);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
59	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j  +  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  j  +  1);	  matrix[i][0]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
60	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  width);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  width);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  width);	  matrix[i][0]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
61	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  i);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(j  +  1,  i);	  matrix[i][0]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
62	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  height  -  1);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
63	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset(),  j  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset(),  j  +  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset(),  j  +  1);	  matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset(),    j);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
64	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getColumn(),  j);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getColumn(),  j);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  getColumn(),  j);	  matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset(),    j);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
65	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width  +  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  width  +  1);	  matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
66	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height  +  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  height  +  1);	  matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
67	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  0);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j,  0);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset(),    0);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
68	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset(),  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset(),  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset(),  1);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset(),    0);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
69	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width,  0);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  width,  0);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset(),    0);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
70	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  j,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  j,  getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  j,  getRhsOffset());	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
71	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(width  +  1,  j,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(width  +  1,  j,  getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(width  +  1,  j,  getRhsOffset());	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
72	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  height,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  height,  getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  height,  getRhsOffset());	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
73	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  j);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  j);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  j);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
74	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset());	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    this.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
75	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset());	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    this.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
76	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  this.getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  this.getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  this.getRhsOffset());	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    this.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
77	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  width;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  i  =  0;  i  <  width;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  i  =  0;  i  <  width;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  for(int    i    =    0;    i    <    height;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
78	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
79	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
80	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
81	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
82	[BUG]  [BUGGY]  this.tableau  =  new  Array2DRowRealMatrix(matrix,  width);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  this.tableau  =  new  Array2DRowRealMatrix(matrix,  width);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	this.tableau  =  new  Array2DRowRealMatrix(matrix,  width);	  this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
83	[BUG]  [BUGGY]  this.tableau  =  new  Array2DRowRealMatrix(matrix,  height);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  this.tableau  =  new  Array2DRowRealMatrix(matrix,  height);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	this.tableau  =  new  Array2DRowRealMatrix(matrix,  height);	  this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
84	[BUG]  [BUGGY]  this.tableau  =  new  Array2DRowRealMatrix(matrix,  col);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  this.tableau  =  new  Array2DRowRealMatrix(matrix,  col);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	this.tableau  =  new  Array2DRowRealMatrix(matrix,  col);	  this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
85	[BUG]  [BUGGY]  this.tableau  =  new  Array2DRowRealMatrix(matrix,  size);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  this.tableau  =  new  Array2DRowRealMatrix(matrix,  size);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	this.tableau  =  new  Array2DRowRealMatrix(matrix,  size);	  this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
86	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j  +  1);  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j  +  1);  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  j  +  1);  this.tableau  =  new  Array2DRowRealMatrix(matrix);	  matrix[i][0]    =    getEntry(i    +    1,    j);    this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
87	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j);  this.tableau  =  new  Array2DRowRealMatrix(matrix,  width);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j);  this.tableau  =  new  Array2DRowRealMatrix(matrix,  width);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  j);  this.tableau  =  new  Array2DRowRealMatrix(matrix,  width);	  matrix[i][0]    =    getEntry(i    +    1,    j);    this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
88	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getColumn()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getColumn()  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  getColumn()  -  1);	  matrix[i][0]    =    getEntry(i    +    1,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
89	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  getColumn());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  getColumn());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(j  +  1,  getColumn());	  matrix[i][0]    =    getEntry(i    +    1,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
90	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  width;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
91	[BUG]  [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
92	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
93	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
94	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  if(matrix!=    null)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
95	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  if(matrix!=    null)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
96	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  +  2);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j  +  2);	  matrix[i][j]    =    getEntry(i    +    1,    j);    this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
97	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width  -  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  width  -  1);	  matrix[i][j    +    1]    =    getEntry(i    +    1,    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
98	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width,  j  +  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  width,  j  +  1);	  matrix[i][j    +    1]    =    getEntry(i    +    1,    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
100	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
101	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  j);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  j);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  j);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getRhsOffset(),    width);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
102	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  col);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  col);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  col);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getRhsOffset(),    width);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
103	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(width,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(width,  j  +  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(width,  j  +  1);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
104	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  if(matrix!=    null)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
105	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  if(matrix!=    null)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
106	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width  -  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  width  -  1);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
107	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  j  +  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  j  +  1);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
108	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(width  +  1,  j);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(width  +  1,  j);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(width  +  1,  j);	  matrix[i][j    +    1]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
109	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  j);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  j);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(j  +  1,  j);	  matrix[i][0]    =    getEntry(j    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
110	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  j  +  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(j  +  1,  j  +  1);	  matrix[i][0]    =    getEntry(j    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
111	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  width;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
112	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  width;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  j  =  0;  j  <  width;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  j  =  0;  j  <  width;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
113	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  height);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  height);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  height);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    height);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
114	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  width);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  width);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  width);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    height);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
115	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  height);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  height);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    height);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
116	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  j,  height);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  j,  height);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  j,  height);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    height);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
117	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  j,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  j,  getColumnOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  j,  getColumnOffset());	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
118	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  height,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  height,  getColumnOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  height,  getColumnOffset());	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
119	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j  -  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j  -  1,  getRhsOffset());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  j  -  1,  getRhsOffset());	  matrix[i][0]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
120	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  i,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  i,  getRhsOffset());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(j  +  1,  i,  getRhsOffset());	  matrix[i][0]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
121	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j,  getRhsOffset()  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  j,  getRhsOffset()  -  1);	  matrix[i][0]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
122	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j  +  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j  +  1,  getRhsOffset());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  j  +  1,  getRhsOffset());	  matrix[i][0]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
123	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    width    -    1;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
125	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getColumn()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getColumn()  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getColumn()  -  1);	  matrix[i][j]    =    getEntry(i    +    1,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
126	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getColumn());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getColumn());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j,  getColumn());	  matrix[i][j]    =    getEntry(i    +    1,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
127	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  getColumnOffset());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  getColumnOffset());	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
128	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumnOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumnOffset()  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getColumnOffset()  -  1);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
129	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
130	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  getColumnOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  getColumnOffset());	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
131	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getColumn(),  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getColumn(),  0);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getColumn(),  0);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset(),    0);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
132	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset(),  width);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset(),  width);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset(),  width);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset(),    0);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
133	[BUG]  [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset()  -  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][width  -  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset()  -  1);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    this.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
134	[BUG]  [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset()  -  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset()  -  2);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][width  -  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset()  -  2);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    this.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
135	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  for(int    j    =    0;    j    <    width;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
138	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
139	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVar;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  numSlackVar;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  numSlackVar;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
140	[BUG]  [BUGGY]  matrix  =  new  Array2DRowRealMatrix(matrix);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix  =  new  Array2DRowRealMatrix(matrix);	  matrix[i][j]    =    getEntry(i    +    1,    j);    this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
141	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  width);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  width);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j,  width);	  matrix[i][j]    =    getEntry(i    +    1,    width);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
142	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  size;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  size;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  size;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
143	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  height  +  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  height  +  1,  getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i,  height  +  1,  getRhsOffset());	  matrix[i][j    -    1]    =    getEntry(i,    j    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
144	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  this.column());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  this.column());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  this.column());	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
145	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getWidth(),  width);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getWidth(),  width);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getWidth(),  width);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getRhsOffset(),    width);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
146	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
147	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j  +  2);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j  +  2);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  j  +  2);	  matrix[i][0]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
148	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  height);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  height);	  matrix[i][0]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
149	[BUG]  [BUGGY]  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset()  -  1);	  matrix[i][1]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
150	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width,  getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  width,  getRhsOffset());	  matrix[i][j    +    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
151	[BUG]  [BUGGY]  this.tableau  =  new  Array2DRowRealMatrix(matrix,  matrix);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  this.tableau  =  new  Array2DRowRealMatrix(matrix,  matrix);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	this.tableau  =  new  Array2DRowRealMatrix(matrix,  matrix);	  this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
152	[BUG]  [BUGGY]  Matrix[][]  matrix  =  getEntry(i  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  Matrix[][]  matrix  =  getEntry(i  +  1,  j  +  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	Matrix[][]  matrix  =  getEntry(i  +  1,  j  +  1);	  if(matrix!=    null)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
153	[BUG]  [BUGGY]  Matrix[][]  matrix  =  new  Matrix[width][width];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  Matrix[][]  matrix  =  new  Matrix[width][width];  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	Matrix[][]  matrix  =  new  Matrix[width][width];	  if(matrix!=    null)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
154	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset(),  width);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset(),  width);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset(),  width);	  matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset(),    j);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
155	[BUG]  [BUGGY]  Matrix[][]  matrix  =  getEntry(i  +  1,  j);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  Matrix[][]  matrix  =  getEntry(i  +  1,  j);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	Matrix[][]  matrix  =  getEntry(i  +  1,  j);	  if(matrix!=    null)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
156	[BUG]  [BUGGY]  matrix[i][2]  =  getEntry(i  +  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][2]  =  getEntry(i  +  1,  getRhsOffset());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][2]  =  getEntry(i  +  1,  getRhsOffset());	  matrix[i][1]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
157	[BUG]  [BUGGY]  matrix[i][1]  =  getEntry(i  +  1,  j,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][1]  =  getEntry(i  +  1,  j,  getRhsOffset());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][1]  =  getEntry(i  +  1,  j,  getRhsOffset());	  matrix[i][1]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  height  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  height  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  height  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  for(int    i    =    0;    i    <    height;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
159	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  height,  j);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  height,  j);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  height,  j);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    height);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
160	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
161	[BUG]  [BUGGY]  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[j][j]  =  getEntry(i  +  1,  j  +  1);	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
162	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j,  getColumn());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j,  getColumn());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  j,  getColumn());	  matrix[i][0]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
163	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j,  getColumnOffset());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  j,  getColumnOffset());	  matrix[i][0]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
164	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
165	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(height  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(height  +  1,  j  +  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(height  +  1,  j  +  1);	  matrix[i][j    -    1]    =    getEntry(width    +    1,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
166	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  slackVar;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  slackVar;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  slackVar;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
167	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  for(int    i    =    0;    i    <    height;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
168	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
169	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  width  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  width  -  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  width  -  1);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
170	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  height;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  height;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    getRhsOffset();    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
171	[BUG]  [BUGGY]  this.tableau  =  new  SimplexTableau(matrix);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  this.tableau  =  new  SimplexTableau(matrix);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	this.tableau  =  new  SimplexTableau(matrix);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    width);    this.tableau    =    new    SimplexTableau(matrix);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
172	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
173	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
174	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
175	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset()  -  1);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset()  -  1);	  matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
176	[BUG]  [BUGGY]  matrix[i][j]  =  new  Array2DRowRealMatrix(matrix);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  new  Array2DRowRealMatrix(matrix);	  matrix[i][j]    =    getEntry(i    +    1,    j);    this.tableau    =    new    Array2DRowRealMatrix(matrix);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
177	[BUG]  [BUGGY]  Matrix[][]  matrix  =  new  Matrix[width][width];  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  Matrix[][]  matrix  =  new  Matrix[width][width];  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	Matrix[][]  matrix  =  new  Matrix[width][width];  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  if(matrix!=    null)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
178	[BUG]  [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  j);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  j);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  j);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    SimplexTableau(matrix);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
179	[BUG]  [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  width);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  width);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  width);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    SimplexTableau(matrix);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
180	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getLeftOffset(),  width);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getLeftOffset(),  width);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getLeftOffset(),  width);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getRhsOffset(),    width);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
181	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getColumnOffset());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j,  getColumnOffset());	  matrix[i][j]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
182	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset(),  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset(),  height);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset(),  height);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset(),    0);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
183	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  width);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  width);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  width);	  matrix[i][j    -    1]    =    getEntry(i,    j    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
184	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  height);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  height);	  matrix[i][j    -    1]    =    getEntry(i,    j    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
185	[BUG]  [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  height  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  height  +  1);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][width  -  1]  =  getEntry(i  +  1,  height  +  1);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
186	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
187	[BUG]  [BUGGY]  matrix[i][width  -  1]  =  getEntry(j  +  1,  i,  this.getRhsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][width  -  1]  =  getEntry(j  +  1,  i,  this.getRhsOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][width  -  1]  =  getEntry(j  +  1,  i,  this.getRhsOffset());	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    this.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
188	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset(),  j  +  2);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset(),  j  +  2);  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset(),  j  +  2);	  matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset(),    j);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
189	[BUG]  [BUGGY]  Matrix[][]  matrix  =  new  Matrix[width][width];  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  Matrix[][]  matrix  =  new  Matrix[width][width];  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	Matrix[][]  matrix  =  new  Matrix[width][width];  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	  if(matrix!=    null)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
190	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
191	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
192	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(height  +  1,  j);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  +  1]  =  getEntry(height  +  1,  j);  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  +  1]  =  getEntry(height  +  1,  j);	  matrix[i][j    +    1]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
193	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  getRowOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  getRowOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  getRowOffset());	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
194	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  this.getRowOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  this.getRowOffset());  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  this.getRowOffset());	  matrix[i][j    -    1]    =    getEntry(i    +    1,    j,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
195	[BUG]  [BUGGY]  Matrix[][]  matrix  =  new  Matrix[width][width];  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  Matrix[][]  matrix  =  new  Matrix[width][width];  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	Matrix[][]  matrix  =  new  Matrix[width][width];  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	  if(matrix!=    null)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
196	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  count;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  count;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  count;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
197	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  getColumn());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  getColumn());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  getColumn());	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
198	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getLeftOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getLeftOffset());  [BUGGY]      matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getLeftOffset());	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
199	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }      [BUGGY]  for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]      }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  ignoreObjectiveRows  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  start  width  zIndex  	projects/Math83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	317	317	1	replace	for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
