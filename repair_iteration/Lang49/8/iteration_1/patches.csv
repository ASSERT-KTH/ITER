bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  if(u>0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  1)  {  if(u>0)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  if(u  >  0)  {  if(u  <  0  ||  v  >  1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  if(u  <  0  ||  v  >  1)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(u  <  0  ||  v  >  1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  1)  {  if(u>1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  1)  {  if(u>1)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  1)  {  if(u>1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  31)  {  if(u>0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  31)  {  if(u>0)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }	  timeout    	compilable	  [FE]  AssertionFailedError  	7	1	add
6	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }	  timeout    	compilable	  [FE]  AssertionFailedError  	7	1	add
7	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ".);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ".);  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ".);  }	  timeout    	non-compiled	[CE]  <identifier>  expected	7	None	add
8	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  u=-u;  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	u=-u;	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    timeout    	compilable	timeout	6	1	replace
9	[BUG]  [BUGGY]  u=-u;  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  u=-u;  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-u;	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    timeout    	compilable	timeout	6	1	replace
10	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  31)  {  u=-u;  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    timeout    	compilable	timeout	6	1	replace
11	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  31)  {  u=-u;  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    timeout    	compilable	timeout	6	1	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	5	1	add
13	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	5	1	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >=  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	5	1	add
15	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >=  0  ||  v  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >=  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	5	1	add
16	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  u  <  0  ||  v  >  0)  {  u=-u;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-u;    }    u  <  0  ||  v  >  0)  {  u=-u;  }	  timeout    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	add
17	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.floor(u  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u  +  1);	      int    v=(int)Math.floor(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	21	None	replace
18	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  +  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.floor(u  +  1,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u  +  1,  v);	      int    v=(int)Math.floor(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	21	None	replace
19	[BUG]  [BUGGY]  int  v=(int)Math.floor(u,  v  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.floor(u,  v  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u,  v  +  1);	      int    v=(int)Math.floor(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	22	None	replace
20	[BUG]  [BUGGY]  int  v=(int)Math.abs(u  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.abs(u  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u  +  1);	      int    v=(int)Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	23	None	replace
21	[BUG]  [BUGGY]  int  v=(int)Math.abs(u,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.abs(u,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u,  v);	      int    v=(int)Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	23	None	replace
22	[BUG]  [BUGGY]  int  v=(int)Math.abs(u  +  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.abs(u  +  1,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u  +  1,  v);	      int    v=(int)Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	23	None	replace
23	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.floor(u,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(u,  v);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	4	None	replace
24	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.floor(v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(v);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	4	None	replace
25	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.floor(u  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(u  +  1);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	4	None	replace
26	[BUG]  [BUGGY]  int  u  =  Math.min(u,  v  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.min(u,  v  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(u,  v  +  1);	      int    u    =    Math.min(u,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
27	[BUG]  [BUGGY]  int  u  =  Math.min(v,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.min(v,  u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(v,  u);	      int    u    =    Math.min(u,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
28	[BUG]  [BUGGY]  int  u  =  Math.min(u,  v  -  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.min(u,  v  -  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(u,  v  -  1);	      int    u    =    Math.min(u,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
29	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  u  >  0)  {  u=-u;  }	  if(u    >    0)    {    u=-u;    }    timeout    	compilable	timeout	10	1	replace
30	[BUG]  [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  u  >  0)  {  u=-u;  }	  if(u    >    0)    {    u=-u;    }    timeout    	compilable	timeout	10	1	replace
31	[BUG]  [BUGGY]  while(u  <  1)  {  if(v>0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  while(u  <  1)  {  if(v>0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	while(u  <  1)  {  if(v>0)  {  u=-v;  }	  if(u    <    1)    {    if(u>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
32	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  u=-v;  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	u=-v;	  if(u    <    1)    {    if(u>0)    {    u=-v;    }    	compilable	timeout	17	1	replace
33	[BUG]  [BUGGY]  u=-v;  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  u=-v;  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-v;	  if(u    <    1)    {    if(u>0)    {    u=-v;    }    	compilable	timeout	17	1	replace
34	[BUG]  [BUGGY]  if(u  <  1)  {  if(v>0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  1)  {  if(v>0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  1)  {  if(v>0)  {  u=-v;  }	  if(u    <    1)    {    if(u>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
35	[BUG]  [BUGGY]  if(u  >  0)  {  if(u  <  1)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  if(u  <  1)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(u  <  1)  {  u=-v;  }	  if(u    <    1)    {    if(u>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	9	1	add
37	[BUG]  [BUGGY]  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	9	1	add
38	[BUG]  [BUGGY]  if(u  >  0)  {  u=-u;  }  u  >  0)  {  u=-u;  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-u;  }  u  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-u;    }    u  >  0)  {  u=-u;  }	  timeout    	non-compiled	[CE]  not  a  statement	9	None	add
39	[BUG]  [BUGGY]  if(u  >  0)  {  u=-u;  }  int  u  >  0)  {  u=-u;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-u;  }  int  u  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-u;    }    int  u  >  0)  {  u=-u;  }	  timeout    	non-compiled	[CE]  ';'  expected	9	None	add
40	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
41	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	8	1	replace
42	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	8	1	replace
43	[BUG]  [BUGGY]  int  v  =  Math.abs(u  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v  =  Math.abs(u  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u  +  1);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	24	None	replace
44	[BUG]  [BUGGY]  int  v  =  Math.abs(u  +  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v  =  Math.abs(u  +  1,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u  +  1,  v);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	24	None	replace
45	[BUG]  [BUGGY]  int  v  =  Math.abs(u  -  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v  =  Math.abs(u  -  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u  -  1);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	24	None	replace
46	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  v  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.ceil(u,  v  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  v  +  1);	      int    v=(int)Math.ceil(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	25	None	replace
47	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  k);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.ceil(u,  k);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  k);	      int    v=(int)Math.ceil(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	25	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	14	1	add
49	[BUG]  [BUGGY]  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	14	1	add
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	14	1	add
51	[BUG]  [BUGGY]  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	14	1	add
52	[BUG]  [BUGGY]  if(u  <  0)  {  u=-u;  }  If(u  <  0)  {  u=-u;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  u=-u;  }  If(u  <  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0)    {    u=-u;    }    If(u  <  0)  {  u=-u;  }	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
53	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    timeout    	compilable	timeout	20	1	replace
54	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    timeout    	compilable	timeout	20	1	replace
55	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >  0  ||  v  <  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    timeout    	compilable	timeout	20	1	replace
56	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0  ||  v  <  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    timeout    	compilable	timeout	20	1	replace
57	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  =  0)  {  v=-v;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0  ||  v  <  =  0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0  ||  v  <  =  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
58	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    timeout    	compilable	timeout	13	1	replace
59	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    timeout    	compilable	timeout	13	1	replace
60	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    timeout    	compilable	timeout	13	1	replace
61	[BUG]  [BUGGY]  if(u  <  0)  {  u=-v;  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    timeout    	compilable	timeout	13	1	replace
62	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  31)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0  ||  v  >  31)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  31)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
63	[BUG]  [BUGGY]  int  u  =  Math.abs(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.abs(v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.abs(v);	      int    u    =    Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	2	None	replace
64	[BUG]  [BUGGY]  int  u  =  Math.abs(a);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.abs(a);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.abs(a);	      int    u    =    Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	2	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	19	1	add
66	[BUG]  [BUGGY]  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	19	1	add
67	[BUG]  [BUGGY]  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  System.arraycopy(u,  v,  0,  u,  v);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  System.arraycopy(u,  v,  0,  u,  v);  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  System.arraycopy(u,  v,  0,  u,  v);  }	  timeout    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	19	None	add
68	[BUG]  [BUGGY]  if(u>0)  {  v=-v;  }  If(u>0)  {  v=-v;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u>0)  {  v=-v;  }  If(u>0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)    {    v=-v;    }    If(u>0)  {  v=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	19	None	add
69	[BUG]  [BUGGY]  int  u  =(int)Math.abs(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.abs(v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.abs(v);	      int    u    =(int)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	1	None	replace
70	[BUG]  [BUGGY]  int  u  =(int)Math.abs(u,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.abs(u,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.abs(u,  v);	      int    u    =(int)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	1	None	replace
71	[BUG]  [BUGGY]  float  u  =(float)Math.abs(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  u  =(float)Math.abs(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.abs(u);	      int    u    =(int)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	1	None	replace
72	[BUG]  [BUGGY]  int  u  =(int)Math.abs(u  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.abs(u  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.abs(u  +  1);	      int    u    =(int)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	1	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	12	9	add
74	[BUG]  [BUGGY]  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	12	9	add
75	[BUG]  [BUGGY]  if(u  >  0)  {  u=-v;  }  int  u  >  0)  {  u=-v;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-v;  }  int  u  >  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-v;    }    int  u  >  0)  {  u=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	12	None	add
76	[BUG]  [BUGGY]  if(u  >  0)  {  u=-v;  }  u  >  0)  {  u=-v;  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-v;  }  u  >  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-v;    }    u  >  0)  {  u=-v;  }	  timeout    	non-compiled	[CE]  not  a  statement	12	None	add
77	[BUG]  [BUGGY]  if(u  >  0)  {  u=-v;  }  If(u  >  0)  {  u=-v;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-v;  }  If(u  >  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-v;    }    If(u  >  0)  {  u=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	12	None	add
78	[BUG]  [BUGGY]  if(u  <  =  0  ||  u  >  0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0  ||  u  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  u  >  0)  {  u=-u;  }	  if(u    <    =    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
79	[BUG]  [BUGGY]  int  v  =  Math.abs(u,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v  =  Math.abs(u,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u,  v);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	24	None	replace
80	[BUG]  [BUGGY]  if(u  >  0)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  if(u>0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(u>0)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  if(u>1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  31)  {  if(u>1)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  31)  {  if(u>1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]  (u  <  0  ||  v  >  0)  {  u=-u;  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  (u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	(u  <  0  ||  v  >  0)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  not  a  statement	18	None	replace
83	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  0);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.ceil(u,  0);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  0);	      int    v=(int)Math.ceil(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	25	None	replace
84	[BUG]  [BUGGY]  float  v=(float)Math.ceil(u,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  v=(float)Math.ceil(u,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.ceil(u,  v);	      int    v=(int)Math.ceil(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	25	None	replace
85	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.ceil(u,  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  1);	      int    v=(int)Math.ceil(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	25	None	replace
86	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  ==  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  ==  0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    timeout    	compilable	timeout	13	1	replace
87	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-v;  }  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  ==  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  ==  0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    timeout    	compilable	timeout	13	1	replace
88	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >=  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >=  0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    timeout    	compilable	timeout	13	1	replace
89	[BUG]  [BUGGY]  if(u  >=  0)  {  u=-v;  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >=  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >=  0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    timeout    	compilable	timeout	13	1	replace
90	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    timeout    	compilable	timeout	20	1	replace
91	[BUG]  [BUGGY]  if(u  <  0)  {  v=-v;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    timeout    	compilable	timeout	20	1	replace
92	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	8	1	replace
93	[BUG]  [BUGGY]  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	8	1	replace
94	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	8	1	replace
95	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	8	1	replace
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	19	8	add
97	[BUG]  [BUGGY]  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	19	8	add
98	[BUG]  [BUGGY]  float  v=(float)Math.abs(u);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  v=(float)Math.abs(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.abs(u);	      int    v=(int)Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	23	None	replace
99	[BUG]  [BUGGY]  float  v=(float)Math.floor(u);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  v=(float)Math.floor(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.floor(u);	      int    v=(int)Math.floor(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	21	None	replace
100	[BUG]  [BUGGY]  float  u  =(float)Math.floor(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  u  =(float)Math.floor(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.floor(u);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	4	None	replace
101	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.floor(v,  u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(v,  u);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	4	None	replace
102	[BUG]  [BUGGY]  int  u  =(int)Math.floor(wrapped);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.floor(wrapped);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(wrapped);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	4	None	replace
103	[BUG]  [BUGGY]  if(u  <  0)  {  if(u>0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  if(u>0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0)  {  if(u>0)  {  u=-v;  }	  if(u    <    1)    {    if(u>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
104	[BUG]  [BUGGY]  if(u  >  0)  {  u=-u;  }  If(u  >  0)  {  u=-u;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-u;  }  If(u  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-u;    }    If(u  >  0)  {  u=-u;  }	  timeout    	non-compiled	[CE]  ';'  expected	9	None	add
105	[BUG]  [BUGGY]  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-n;  }  [CE]  cannot  find  symbol  n  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-n;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-n;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  n	9	None	add
106	[BUG]  [BUGGY]  int  v  =  Math.min(u,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v  =  Math.min(u,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.min(u,  v);	      int    u    =    Math.min(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
107	[BUG]  [BUGGY]  int  u  =  Math.min(10.0,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.min(10.0,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(10.0,  v);	      int    u    =    Math.min(u,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
108	[BUG]  [BUGGY]  float  u  =  Math.abs(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  u  =  Math.abs(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =  Math.abs(u);	      int    u    =    Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	2	None	replace
109	[BUG]  [BUGGY]  int  u  =  Math.abs(1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.abs(1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.abs(1);	      int    u    =    Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	2	None	replace
110	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  If(u  <  0  ||  v  >  0)  {  u=-u;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  If(u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-u;    }    If(u  <  0  ||  v  >  0)  {  u=-u;  }	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
111	[BUG]  [BUGGY]  float  v=(float)Math.floor(u,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  v=(float)Math.floor(u,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.floor(u,  v);	      int    v=(int)Math.floor(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	22	None	replace
112	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-1;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >  0)  {  u=-1;  }	  if(u    >    0)    {    u=-u;    }    timeout    	compilable	timeout	10	1	replace
113	[BUG]  [BUGGY]  if(u  >  0)  {  u=-1;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-1;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  u=-1;  }	  if(u    >    0)    {    u=-u;    }    timeout    	compilable	timeout	10	1	replace
114	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.ceil(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.ceil(u);	      int    u    =(int)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	1	None	replace
115	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  ==  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  ==  0)  {  u=-u;  }	  if(u    <    =    0)    {    u=-u;    }    	compilable	timeout	16	1	replace
116	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-u;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  ==  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  ==  0)  {  u=-u;  }	  if(u    <    =    0)    {    u=-u;    }    	compilable	timeout	16	1	replace
117	[BUG]  [BUGGY]  int  v=(int)Math.abs(v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.abs(v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(v);	      int    v=(int)Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	23	None	replace
118	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  int  u  <  0  ||  v  >  0)  {  u=-u;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  int  u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-u;    }    int  u  <  0  ||  v  >  0)  {  u=-u;  }	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
119	[BUG]  [BUGGY]  char  u  =  Math.min(v,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  char  u  =  Math.min(v,  u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =  Math.min(v,  u);	      int    u    =    Math.min(u,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
120	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  0)  {  u=-1;  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    timeout    	compilable	timeout	6	1	replace
121	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0)  {  u=-1;  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    timeout    	compilable	timeout	6	1	replace
122	[BUG]  [BUGGY]  int  v  =  Math.abs(v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v  =  Math.abs(v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(v);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	24	None	replace
123	[BUG]  [BUGGY]  char  u  =(char)Math.floor(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  char  u  =(char)Math.floor(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =(char)Math.floor(u);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	4	None	replace
124	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  0)  {  u=-n;  }  else  {  throw  new  ArithmeticException( "   ");  }  [CE]  cannot  find  symbol  n  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  0)  {  u=-n;  }  else  {  throw  new  ArithmeticException( "   ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    if(u  <  0  ||  v  >  0)  {  u=-n;  }  else  {  throw  new  ArithmeticException( "   ");  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  n	7	None	add
125	[BUG]  [BUGGY]  if(u  <  =  0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0)  {  u=-v;  }	  if(u    <    =    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
126	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  v=-v;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
127	[BUG]  [BUGGY]  char  u  =(char)Math.abs(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  char  u  =(char)Math.abs(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =(char)Math.abs(u);	      int    u    =(int)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	1	None	replace
128	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.ceil(v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.ceil(v);	      int    u    =(int)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	1	None	replace
129	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  denominator);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.ceil(u,  denominator);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  denominator);	      int    v=(int)Math.ceil(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	25	None	replace
130	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  1)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
131	[BUG]  [BUGGY]  if(u  <  0)  {  u=-u;  }  int  u  <  0)  {  u=-u;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  u=-u;  }  int  u  <  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0)    {    u=-u;    }    int  u  <  0)  {  u=-u;  }	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
132	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  1)  {  if(u  >=  -1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  1)  {  if(u  >=  -1)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  1)  {  if(u  >=  -1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
133	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  1)  {  if(u  ==  -1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  1)  {  if(u  ==  -1)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  1)  {  if(u  ==  -1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
