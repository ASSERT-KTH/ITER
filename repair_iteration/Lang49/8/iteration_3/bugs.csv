bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  1)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    if(u    >    0)    {    u=-v;    }    	compilable	timeout	74	1	replace
2	[BUG]  [BUGGY]  if(u  <  1)  {  u=-v;  }  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  1)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    if(u    >    0)    {    u=-v;    }    	compilable	timeout	74	1	replace
3	[BUG]  [BUGGY]  int  v  =  Math.abs(u  *  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u  *  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u  *  1);	  int    v    =    Math.abs(u    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	43	None	replace
4	[BUG]  [BUGGY]  int  v  =  Math.abs(u  +  2);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u  +  2);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u  +  2);	  int    v    =    Math.abs(u    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	43	None	replace
5	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }	  timeout    	compilable	  [FE]  ArithmeticException  	92	9	add
6	[BUG]  [BUGGY]  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }  [FE]  ArithmeticException  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }	  timeout    	compilable	  [FE]  ArithmeticException  	92	9	add
7	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "... ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "... ");  }	  timeout    	compilable	  [FE]  ArithmeticException  	92	9	add
8	[BUG]  [BUGGY]  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "... ");  }  [FE]  ArithmeticException  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "... ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "... ");  }	  timeout    	compilable	  [FE]  ArithmeticException  	92	9	add
9	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  0)  {  u=-v;  }	  if(u    <    0    ||    v    >    0)    {    u=-v;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
10	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  31)  {  u=-v;  }	  if(u    <    0    ||    v    >    0)    {    u=-v;    }    timeout    	compilable	timeout	59	1	replace
11	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-v;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  31)  {  u=-v;  }	  if(u    <    0    ||    v    >    0)    {    u=-v;    }    timeout    	compilable	timeout	59	1	replace
12	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  +  1,  v  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.floor(u  +  1,  v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u  +  1,  v  +  1);	  int    v=(int)Math.floor(u,    v    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	19	None	replace
13	[BUG]  [BUGGY]  (u  <  =  0  ||  v  >  31))  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  (u  <  =  0  ||  v  >  31))  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	(u  <  =  0  ||  v  >  31))  {  u=-u;  }	  if(u    <    =    0    ||    v    >    31)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v;  u=-v;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	u=-v;    u=-v;	  timeout    	compilable	  [FE]  AssertionFailedError  	32	9	add
15	[BUG]  [BUGGY]  u=-v;  u=-v;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v;  u=-v;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-v;    u=-v;	  timeout    	compilable	  [FE]  AssertionFailedError  	32	9	add
16	[BUG]  [BUGGY]  u=-v;  int  u=-v;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v;  int  u=-v;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-v;    int  u=-v;	  timeout    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	32	None	add
17	[BUG]  [BUGGY]  u=-v;  for(int  u=-v;  u>0;  k  <  31;)  {  u=-v;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v;  for(int  u=-v;  u>0;  k  <  31;)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-v;    for(int  u=-v;  u>0;  k  <  31;)  {  u=-v;  }	  timeout    	non-compiled	[CE]  not  a  statement	32	None	add
18	[BUG]  [BUGGY]  u=-v;  for(int  u=-v;  u>0;  k  <  31)  {  u=-v;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v;  for(int  u=-v;  u>0;  k  <  31)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-v;    for(int  u=-v;  u>0;  k  <  31)  {  u=-v;  }	  timeout    	non-compiled	[CE]  not  a  statement	32	None	add
19	[BUG]  [BUGGY]  u=-v;  for(int  u=-v;  u>0;  k  <  31;)  {  u=-v;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v;  for(int  u=-v;  u>0;  k  <  31;)  {  u=-v;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-v;    for(int  u=-v;  u>0;  k  <  31;)  {  u=-v;	  timeout    	non-compiled	[CE]  not  a  statement	32	None	add
20	[BUG]  [BUGGY]  int  v  =  Math.abs(u  -  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u  -  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u  -  1,  v);	  int    v    =    Math.abs(u    -    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	45	None	replace
21	[BUG]  [BUGGY]  int  v  =  Math.abs(u  /  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u  /  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u  /  1);	  int    v    =    Math.abs(u    -    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	45	None	replace
22	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  v=-v;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	v=-v;	  if(u    >    0    ||    v    <    0)    {    v=-v;    }    timeout    	compilable	timeout	56	1	replace
23	[BUG]  [BUGGY]  v=-v;  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  v=-v;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	v=-v;	  if(u    >    0    ||    v    <    0)    {    v=-v;    }    timeout    	compilable	timeout	56	1	replace
24	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  <  0)  {  v=-v;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0  ||  v  <  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  <  0)  {  v=-v;  }	  if(u    >    0    ||    v    <    0)    {    v=-v;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
25	[BUG]  [BUGGY]  int  u  =  Math.abs(u,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.abs(u,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.abs(u,  v);	  int    u    =    Math.abs(v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	63	None	replace
26	[BUG]  [BUGGY]  int  u  =  Math.abs(u  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.abs(u  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.abs(u  +  1);	  int    u    =    Math.abs(v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	63	None	replace
27	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  1)  {  u=-u;  }	  if(u    <    0)    {    u=-u;    }    if(u    <    0)    {    u=-u;    }    	compilable	timeout	49	1	replace
28	[BUG]  [BUGGY]  if(u  <  1)  {  u=-u;  }  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  1)  {  u=-u;  }	  if(u    <    0)    {    u=-u;    }    if(u    <    0)    {    u=-u;    }    	compilable	timeout	49	1	replace
29	[BUG]  [BUGGY]  if(u  <  =  31  ||  v  >  31)  {  if(u>1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  31  ||  v  >  31)  {  if(u>1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  31  ||  v  >  31)  {  if(u>1)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    if(u>1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
30	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  if(v>1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  if(v>1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  31)  {  if(v>1)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    if(u>1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
31	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  +  1,  v  -  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.floor(u  +  1,  v  -  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u  +  1,  v  -  1);	  int    v=(int)Math.floor(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	18	None	replace
32	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  +  1,  v,  k);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.floor(u  +  1,  v,  k);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u  +  1,  v,  k);	  int    v=(int)Math.floor(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	18	None	replace
33	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  +  1,  k);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.floor(u  +  1,  k);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u  +  1,  k);	  int    v=(int)Math.floor(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	18	None	replace
34	[BUG]  [BUGGY]  if(u  ==  0)  {  if(u>0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  if(u>0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  ==  0)  {  if(u>0)  {  u=-v;  }	  if(u    <    0)    {    if(u>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
35	[BUG]  [BUGGY]  while(u  <  0)  {  if(v>0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  while(u  <  0)  {  if(v>0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	while(u  <  0)  {  if(v>0)  {  u=-v;  }	  if(u    <    0)    {    if(u>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
36	[BUG]  [BUGGY]  if(u>0  ||  v>0)  {  v=-v;  System.arraycopy(u,  v,  0,  u,  v);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0  ||  v>0)  {  v=-v;  System.arraycopy(u,  v,  0,  u,  v);  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0  ||  v>0)  {  v=-v;  System.arraycopy(u,  v,  0,  u,  v);  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-v;    System.arraycopy(u,    v,    0,    u,    v);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	67	None	replace
37	[BUG]  [BUGGY]  if(u>0)  {  v=-v;  }  else  {  System.arraycopy(u,  v,  0,  u,  v);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)  {  v=-v;  }  else  {  System.arraycopy(u,  v,  0,  u,  v);  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)  {  v=-v;  }  else  {  System.arraycopy(u,  v,  0,  u,  v);  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-v;    System.arraycopy(u,    v,    0,    u,    v);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	67	None	replace
38	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0  ||  v>0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0  ||  v>0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-v;    System.arraycopy(u,    v,    0,    u,    v);    }    	compilable	timeout	67	1	replace
39	[BUG]  [BUGGY]  if(u>0  ||  v>0)  {  v=-v;  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0  ||  v>0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0  ||  v>0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-v;    System.arraycopy(u,    v,    0,    u,    v);    }    	compilable	timeout	67	1	replace
40	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-1;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	u=-1;	  if(u    <    0    ||    v    >    0)    {    u=-1;    }    timeout    	compilable	timeout	121	1	replace
41	[BUG]  [BUGGY]  u=-1;  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-1;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-1;	  if(u    <    0    ||    v    >    0)    {    u=-1;    }    timeout    	compilable	timeout	121	1	replace
42	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  u=-1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  0)  {  u=-1;  }	  if(u    <    0    ||    v    >    0)    {    u=-1;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
43	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  31)  {  u=-1;  }	  if(u    <    0    ||    v    >    0)    {    u=-1;    }    timeout    	compilable	timeout	121	1	replace
44	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-1;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  31)  {  u=-1;  }	  if(u    <    0    ||    v    >    0)    {    u=-1;    }    timeout    	compilable	timeout	121	1	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    v    >    1)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }	  timeout    	compilable	  [FE]  AssertionFailedError  	41	1	add
46	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    1)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( "   ");  }	  timeout    	compilable	  [FE]  AssertionFailedError  	41	1	add
47	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ".);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ".);  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    1)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ".);  }	  timeout    	non-compiled	[CE]  <identifier>  expected	41	None	add
48	[BUG]  [BUGGY]  int  u  =(int)Math.abs(v  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.abs(v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.abs(v  +  1);	  int    u    =(int)Math.abs(u    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	72	None	replace
49	[BUG]  [BUGGY]  int  u  =(int)Math.abs(u  +  1,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.abs(u  +  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.abs(u  +  1,  v);	  int    u    =(int)Math.abs(u    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	72	None	replace
50	[BUG]  [BUGGY]  int  u  =(int)Math.abs(u  +  1)/  2;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.abs(u  +  1)/  2;  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.abs(u  +  1)/  2;	  int    u    =(int)Math.abs(u    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	72	None	replace
51	[BUG]  [BUGGY]  float  u  =(float)Math.floor(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.floor(v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.floor(v);	  int    u    =(int)Math.floor(v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	24	None	replace
52	[BUG]  [BUGGY]  int  u  =(int)Math.log(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.log(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.log(u);	  int    u    =(int)Math.floor(v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	24	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0)        {        u=-u;        }        if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
54	[BUG]  [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0)        {        u=-u;        }        if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0)        {        u=-u;        }        if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
56	[BUG]  [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0)        {        u=-u;        }        if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0)        {        u=-u;        }        if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
58	[BUG]  [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0)        {        u=-u;        }        if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(v  <  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0)        {        u=-u;        }        if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(v  <  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
60	[BUG]  [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(v  <  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(v  <  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0)        {        u=-u;        }        if(u    <    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(v  <  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
61	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0  ||  u  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  0  ||  u  >  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-1;    }    	compilable	timeout	97	1	replace
62	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0  ||  u  >  0)  {  v=-v;  }  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0  ||  u  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0  ||  u  >  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-1;    }    	compilable	timeout	97	1	replace
63	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  v  =  Math.abs(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	v  =  Math.abs(u);	  int    v    =    Math.abs(v);    	compilable	timeout	122	1	replace
64	[BUG]  [BUGGY]  v  =  Math.abs(u);  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  v  =  Math.abs(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	v  =  Math.abs(u);	  int    v    =    Math.abs(v);    	compilable	timeout	122	1	replace
65	[BUG]  [BUGGY]  u=(v  <  <  1)?  -1  :  -u;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=(v  <  <  1)?  -1  :  -u;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=(v  <  <  1)?  -1  :  -u;	  u=-u;    timeout    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
66	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u  +  1;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	u=-u  +  1;	  u=-u;    timeout    	compilable	timeout	9	1	replace
67	[BUG]  [BUGGY]  u=-u  +  1;  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u  +  1;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-u  +  1;	  u=-u;    timeout    	compilable	timeout	9	1	replace
68	[BUG]  [BUGGY]  int  v=(int)Math.abs(u  *  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.abs(u  *  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u  *  1);	  int    v=(int)Math.abs(u    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	20	None	replace
69	[BUG]  [BUGGY]  int  v=(int)Math.abs(u  +  1)+  1;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.abs(u  +  1)+  1;  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u  +  1)+  1;	  int    v=(int)Math.abs(u    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	20	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  if(u  >  0  ||  v  <  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    >    0    ||    v    <    0)    {    v=-v;    }    if(u  >  0  ||  v  <  0)  {  v=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	55	1	add
71	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  if(u  >  0  ||  v  <  0)  {  v=-v;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  if(u  >  0  ||  v  <  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0    ||    v    <    0)    {    v=-v;    }    if(u  >  0  ||  v  <  0)  {  v=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	55	1	add
72	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  int  u  >  0  ||  v  <  0)  {  v=-v;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  int  u  >  0  ||  v  <  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0    ||    v    <    0)    {    v=-v;    }    int  u  >  0  ||  v  <  0)  {  v=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	55	None	add
73	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  If(u  >  0  ||  v  <  0)  {  v=-v;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  If(u  >  0  ||  v  <  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0    ||    v    <    0)    {    v=-v;    }    If(u  >  0  ||  v  <  0)  {  v=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	55	None	add
74	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  u  >  0  ||  v  <  0)  {  v=-v;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  u  >  0  ||  v  <  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0    ||    v    <    0)    {    v=-v;    }    u  >  0  ||  v  <  0)  {  v=-v;  }	  timeout    	non-compiled	[CE]  not  a  statement	55	None	add
75	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  k  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.ceil(u,  k  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  k  +  1);	  int    v=(int)Math.ceil(u,    k);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	47	None	replace
76	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  k  +  31);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.ceil(u,  k  +  31);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  k  +  31);	  int    v=(int)Math.ceil(u,    k);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	47	None	replace
77	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  u  >  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  u  >  0  ||  v  >  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-v;    }    	compilable	timeout	66	1	replace
78	[BUG]  [BUGGY]  if(u  <  0  ||  u  >  0  ||  v  >  0)  {  v=-v;  }  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  u  >  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  u  >  0  ||  v  >  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-v;    }    	compilable	timeout	66	1	replace
79	[BUG]  [BUGGY]  while(u  <  =  1)  {  if(v>0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  while(u  <  =  1)  {  if(v>0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	while(u  <  =  1)  {  if(v>0)  {  u=-v;  }	  while(u    <    1)    {    if(v>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
80	[BUG]  [BUGGY]  while(u  >  1)  {  if(v>0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  while(u  >  1)  {  if(v>0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	while(u  >  1)  {  if(v>0)  {  u=-v;  }	  while(u    <    1)    {    if(v>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
81	[BUG]  [BUGGY]  int  u  =  Math.abs(a,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.abs(a,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.abs(a,  v);	  int    u    =    Math.abs(a);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	64	None	replace
82	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-1;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
83	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  1)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-1;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	95	1	replace
84	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  1)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-1;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	95	1	replace
85	[BUG]  [BUGGY]  int  u  =  Math.min(v,  u  -  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(v,  u  -  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(v,  u  -  1);	  int    u    =    Math.min(u,    v    -    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	28	None	replace
86	[BUG]  [BUGGY]  int  u  =  Math.min(u,  v  -  1,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(u,  v  -  1,  k);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(u,  v  -  1,  k);	  int    u    =    Math.min(u,    v    -    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	28	None	replace
87	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  31)  {  v=-v;  }	  if(u    <    0    ||    v    >    0)    {    v=-v;    }    timeout    	compilable	timeout	54	1	replace
88	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  v=-v;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  31)  {  v=-v;  }	  if(u    <    0    ||    v    >    0)    {    v=-v;    }    timeout    	compilable	timeout	54	1	replace
89	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  2);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.ceil(u,  2);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  2);	  int    v=(int)Math.ceil(u,    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	85	None	replace
90	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  3);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.ceil(u,  3);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  3);	  int    v=(int)Math.ceil(u,    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	85	None	replace
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  u=-v;  }  if(u  <  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0)    {    u=-v;    }    if(u  <  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	60	4	add
92	[BUG]  [BUGGY]  if(u  <  0)  {  u=-v;  }  if(u  <  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  u=-v;  }  if(u  <  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0)    {    u=-v;    }    if(u  <  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	60	4	add
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  u=-v;  }  if(u  >=  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0)    {    u=-v;    }    if(u  >=  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	60	9	add
94	[BUG]  [BUGGY]  if(u  <  0)  {  u=-v;  }  if(u  >=  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  u=-v;  }  if(u  >=  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0)    {    u=-v;    }    if(u  >=  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	60	9	add
95	[BUG]  [BUGGY]  if(u  <  0)  {  u=-v;  }  If(u  <  0)  {  u=-v;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  u=-v;  }  If(u  <  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0)    {    u=-v;    }    If(u  <  0)  {  u=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	60	None	add
96	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  1)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    1)    {    u=-u;    }    	compilable	timeout	130	1	replace
97	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-u;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  1)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    1)    {    u=-u;    }    	compilable	timeout	130	1	replace
98	[BUG]  [BUGGY]  if(u  <  =  1  ||  v  >  1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  1  ||  v  >  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  1  ||  v  >  1)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
99	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(u,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.ceil(u,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.ceil(u,  v);	  int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	114	None	replace
100	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(u  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.ceil(u  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.ceil(u  +  1);	  int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	114	None	replace
101	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(u  +  1,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.ceil(u  +  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.ceil(u  +  1,  v);	  int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	114	None	replace
102	[BUG]  [BUGGY]  int  v=(int)Math.abs(u,  v  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.abs(u,  v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u,  v  +  1);	  int    v=(int)Math.abs(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	21	None	replace
103	[BUG]  [BUGGY]  int  v=(int)Math.abs(u,  0);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.abs(u,  0);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u,  0);	  int    v=(int)Math.abs(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	21	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u  ==  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    ==    0)    {    u=-v;    }    if(u  ==  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	86	1	add
105	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u  ==  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u  ==  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    ==    0)    {    u=-v;    }    if(u  ==  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	86	1	add
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u  >=  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    ==    0)    {    u=-v;    }    if(u  >=  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	86	9	add
107	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u  >=  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u  >=  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    ==    0)    {    u=-v;    }    if(u  >=  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	86	9	add
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u!=  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    ==    0)    {    u=-v;    }    if(u!=  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	86	9	add
109	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u!=  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u!=  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    ==    0)    {    u=-v;    }    if(u!=  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	86	9	add
110	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u  >>  0)  {  u=-v;  }  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u  >>  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    ==    0)    {    u=-v;    }    if(u  >>  0)  {  u=-v;  }	  timeout    	non-compiled	[CE]  incompatible  types	86	None	add
111	[BUG]  [BUGGY]  if(u  >  0)  {  if(v  <  0  ||  v  >  1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  if(v  <  0  ||  v  >  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(v  <  0  ||  v  >  1)  {  u=-u;  }	  if(u    >    0)    {    if(u    <    0    ||    v    >    1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
112	[BUG]  [BUGGY]  while(u  <  0  ||  v  >  1)  {  u=-u;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  while(u  <  0  ||  v  >  1)  {  u=-u;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	while(u  <  0  ||  v  >  1)  {  u=-u;	  if(u    >    0)    {    if(u    <    0    ||    v    >    1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
113	[BUG]  [BUGGY]  u=-n;  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-n;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-n;	  if(u    >    0)    {    u=-u;    }    if(u    >    0)    {    u=-n;    }    	non-compiled	[CE]  cannot  find  symbol  n	105	None	replace
114	[BUG]  [BUGGY]  if(u  >  0)  {  u=-n;  }  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-n;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  u=-n;  }	  if(u    >    0)    {    u=-u;    }    if(u    >    0)    {    u=-n;    }    	non-compiled	[CE]  cannot  find  symbol  n	105	None	replace
115	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)  {  v=-v;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)  {  v=-v;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u>0)    {    v=-v;    }    If(u>0)    {    v=-v;    }    	compilable	timeout	68	1	replace
116	[BUG]  [BUGGY]  if(u>0)  {  v=-v;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)  {  v=-v;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)  {  v=-v;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u>0)    {    v=-v;    }    If(u>0)    {    v=-v;    }    	compilable	timeout	68	1	replace
117	[BUG]  [BUGGY]  int  u  =(int)Math.log(u,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.log(u,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.log(u,  v);	  int    u    =(int)Math.floor(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	101	None	replace
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  u=-v;  }  if(u  >=  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    >=    0)    {    u=-v;    }    if(u  >=  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	88	9	add
119	[BUG]  [BUGGY]  if(u  >=  0)  {  u=-v;  }  if(u  >=  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  u=-v;  }  if(u  >=  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >=    0)    {    u=-v;    }    if(u  >=  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	88	9	add
120	[BUG]  [BUGGY]  if(u  >=  0)  {  u=-v;  }  if(u  >>  0)  {  u=-v;  }  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  u=-v;  }  if(u  >>  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >=    0)    {    u=-v;    }    if(u  >>  0)  {  u=-v;  }	  timeout    	non-compiled	[CE]  incompatible  types	88	None	add
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  u=-v;  }  if(u!=  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    >=    0)    {    u=-v;    }    if(u!=  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	88	9	add
122	[BUG]  [BUGGY]  if(u  >=  0)  {  u=-v;  }  if(u!=  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  u=-v;  }  if(u!=  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >=    0)    {    u=-v;    }    if(u!=  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	88	9	add
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  u=-v;  }  if(u  ==  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    >=    0)    {    u=-v;    }    if(u  ==  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	88	9	add
124	[BUG]  [BUGGY]  if(u  >=  0)  {  u=-v;  }  if(u  ==  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  u=-v;  }  if(u  ==  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >=    0)    {    u=-v;    }    if(u  ==  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	88	9	add
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  if(u  <  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    v    >    0)    {    v=-v;    }    if(u  <  0  ||  v  >  0)  {  v=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	53	1	add
126	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  if(u  <  0  ||  v  >  0)  {  v=-v;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  if(u  <  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    v=-v;    }    if(u  <  0  ||  v  >  0)  {  v=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	53	1	add
127	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  int  u  =  0  ||  v  >  0)  {  v=-v;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  int  u  =  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    v=-v;    }    int  u  =  0  ||  v  >  0)  {  v=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	53	None	add
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  if(u  >=  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    v    >    0)    {    v=-v;    }    if(u  >=  0  ||  v  >  0)  {  v=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	53	1	add
129	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  if(u  >=  0  ||  v  >  0)  {  v=-v;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  if(u  >=  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    v=-v;    }    if(u  >=  0  ||  v  >  0)  {  v=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	53	1	add
130	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  int  u  <  0  ||  v  >  0)  {  v=-v;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  int  u  <  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    v=-v;    }    int  u  <  0  ||  v  >  0)  {  v=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	53	None	add
131	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  if(u>1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  if(u>1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  1)  {  if(u>1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
132	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >  1)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    u    >    0)    {    u=-v;    }    	compilable	timeout	76	1	replace
133	[BUG]  [BUGGY]  if(u  >  1)  {  u=-v;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  1)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    u    >    0)    {    u=-v;    }    	compilable	timeout	76	1	replace
134	[BUG]  [BUGGY]  String  u  =  Math.min(v,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  String  u  =  Math.min(v,  u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	String  u  =  Math.min(v,  u);	  char    u    =    Math.min(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	119	None	replace
135	[BUG]  [BUGGY]  char  u  =  Math.min(u,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =  Math.min(u,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =  Math.min(u,  v);	  char    u    =    Math.min(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	119	None	replace
136	[BUG]  [BUGGY]  Char  u  =  Math.min(u,  v);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  Char  u  =  Math.min(u,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	Char  u  =  Math.min(u,  v);	  char    u    =    Math.min(v,    u);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
137	[BUG]  [BUGGY]  Character  u  =  Math.min(u,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  Character  u  =  Math.min(u,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	Character  u  =  Math.min(u,  v);	  char    u    =    Math.min(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	119	None	replace
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  v=-v;  }  if(u  <  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0)    {    v=-v;    }    if(u  <  0)  {  v=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	90	1	add
139	[BUG]  [BUGGY]  if(u  <  0)  {  v=-v;  }  if(u  <  0)  {  v=-v;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  v=-v;  }  if(u  <  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0)    {    v=-v;    }    if(u  <  0)  {  v=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	90	1	add
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  v=-v;  }  if(u  >=  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0)    {    v=-v;    }    if(u  >=  0)  {  v=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	90	1	add
141	[BUG]  [BUGGY]  if(u  <  0)  {  v=-v;  }  if(u  >=  0)  {  v=-v;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  v=-v;  }  if(u  >=  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0)    {    v=-v;    }    if(u  >=  0)  {  v=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	90	1	add
142	[BUG]  [BUGGY]  if(u  <  0)  {  v=-v;  }  int  u  <  0)  {  v=-v;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  v=-v;  }  int  u  <  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0)    {    v=-v;    }    int  u  <  0)  {  v=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	90	None	add
143	[BUG]  [BUGGY]  if(u  <  0)  {  v=-v;  }  If(u  <  0)  {  v=-v;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  v=-v;  }  If(u  <  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0)    {    v=-v;    }    If(u  <  0)  {  v=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	90	None	add
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  if(u  <  0  ||  u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    u    >    0)    {    u=-u;    }    if(u  <  0  ||  u  >  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	29	1	add
145	[BUG]  [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  if(u  <  0  ||  u  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  if(u  <  0  ||  u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    u    >    0)    {    u=-u;    }    if(u  <  0  ||  u  >  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	29	1	add
146	[BUG]  [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  int  u  <  0  ||  u  >  0)  {  u=-u;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  int  u  <  0  ||  u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    u    >    0)    {    u=-u;    }    int  u  <  0  ||  u  >  0)  {  u=-u;  }	  timeout    	non-compiled	[CE]  ';'  expected	29	None	add
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  if(u  >=  0  ||  u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    u    >    0)    {    u=-u;    }    if(u  >=  0  ||  u  >  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	29	1	add
148	[BUG]  [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  if(u  >=  0  ||  u  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  if(u  >=  0  ||  u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    u    >    0)    {    u=-u;    }    if(u  >=  0  ||  u  >  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	29	1	add
149	[BUG]  [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  u  <  0  ||  u  >  0)  {  u=-u;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  u  <  0  ||  u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    u    >    0)    {    u=-u;    }    u  <  0  ||  u  >  0)  {  u=-u;  }	  timeout    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	add
150	[BUG]  [BUGGY]  float  v=(float)Math.floor(u  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.floor(u  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.floor(u  +  1);	  float    v=(float)Math.floor(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	99	None	replace
151	[BUG]  [BUGGY]  float  v=(float)Math.floor(u  +  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.floor(u  +  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.floor(u  +  1,  v);	  float    v=(float)Math.floor(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	99	None	replace
152	[BUG]  [BUGGY]  (u  <  =  0  ||  v  >  0))  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  (u  <  =  0  ||  v  >  0))  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	(u  <  =  0  ||  v  >  0))  {  u=-u;  }	  if(u    <    =    0    ||    u    >    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
153	[BUG]  [BUGGY]  (u  <  =  0  ||  v  >  0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  (u  <  =  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	(u  <  =  0  ||  v  >  0)  {  u=-u;  }	  if(u    <    =    0    ||    u    >    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
154	[BUG]  [BUGGY]  (u  <  =  0  ||  v  >  0)?)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  (u  <  =  0  ||  v  >  0)?)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	(u  <  =  0  ||  v  >  0)?)  {  u=-u;  }	  if(u    <    =    0    ||    u    >    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
155	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(     "     ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "     ");  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0        ||        v        >        0)        {        u=-u;        }        else        {        throw        new        ArithmeticException(       "       ");        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "       ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
156	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(     "     ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "     ");  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(     "     ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "     ");  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        else        {        throw        new        ArithmeticException(       "       ");        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "       ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
157	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(     "     ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "     ");  }  if(u  >  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0        ||        v        >        0)        {        u=-u;        }        else        {        throw        new        ArithmeticException(       "       ");        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "       ");    }    if(u  >  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
158	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(     "     ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "     ");  }  if(u  >  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(     "     ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "     ");  }  if(u  >  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        else        {        throw        new        ArithmeticException(       "       ");        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "       ");    }    if(u  >  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  if(u  <  0  ||  v  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    v    >    0)    {    u=-1;    }    if(u  <  0  ||  v  >  0)  {  u=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	120	8	add
160	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  if(u  <  0  ||  v  >  0)  {  u=-1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  if(u  <  0  ||  v  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-1;    }    if(u  <  0  ||  v  >  0)  {  u=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	120	8	add
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  if(u  >=  0  ||  v  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    v    >    0)    {    u=-1;    }    if(u  >=  0  ||  v  >  0)  {  u=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	120	8	add
162	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  if(u  >=  0  ||  v  >  0)  {  u=-1;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  if(u  >=  0  ||  v  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-1;    }    if(u  >=  0  ||  v  >  0)  {  u=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	120	8	add
163	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  u  <  0  ||  v  >  0)  {  u=-1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  u  <  0  ||  v  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-1;    }    u  <  0  ||  v  >  0)  {  u=-1;  }	  timeout    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	120	None	add
164	[BUG]  [BUGGY]  int  u  =  Math.min(10.0,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(10.0,  u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(10.0,  u);	  int    u    =    Math.min(10.0,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	107	None	replace
165	[BUG]  [BUGGY]  int  u  =  Math.min(1,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(1,  u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(1,  u);	  int    u    =    Math.min(10.0,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	107	None	replace
166	[BUG]  [BUGGY]  int  u  =  Math.min(10.0,  v  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(10.0,  v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(10.0,  v  +  1);	  int    u    =    Math.min(10.0,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	107	None	replace
167	[BUG]  [BUGGY]  int  u  =  Math.min(10.0,  v  -  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(10.0,  v  -  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(10.0,  v  -  1);	  int    u    =    Math.min(10.0,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	107	None	replace
168	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
169	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
171	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
172	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.ceil(v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.ceil(v);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	128	None	replace
173	[BUG]  [BUGGY]  char  u  =(char)Math.ceil(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =(char)Math.ceil(v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =(char)Math.ceil(v);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	128	None	replace
174	[BUG]  [BUGGY]  if(u  <  =  0)  {  v=-v;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0)  {  v=-v;  }	  if(u    <    0)    {    v=-v;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
175	[BUG]  [BUGGY]  float  u  =(float)Math.abs(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.abs(v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.abs(v);	  float    u    =(float)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	71	None	replace
176	[BUG]  [BUGGY]  float  u  =(float)Math.abs(u  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.abs(u  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.abs(u  +  1);	  float    u    =(float)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	71	None	replace
177	[BUG]  [BUGGY]  float  u  =(float)Math.abs(u,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.abs(u,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.abs(u,  v);	  float    u    =(float)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	71	None	replace
178	[BUG]  [BUGGY]  int  v  =  Math.abs(u,  v  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u,  v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u,  v  +  1);	  int    v    =    Math.abs(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	79	None	replace
179	[BUG]  [BUGGY]  int  v  =  Math.abs(u,  v  -  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u,  v  -  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u,  v  -  1);	  int    v    =    Math.abs(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	79	None	replace
180	[BUG]  [BUGGY]  int  v  =  Math.abs(u,  0);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u,  0);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u,  0);	  int    v    =    Math.abs(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	79	None	replace
181	[BUG]  [BUGGY]  int  u  =  Math.max(u,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.max(u,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.max(u,  v);	  int    u    =    Math.abs(1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	109	None	replace
182	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-n;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  cannot  find  symbol  n  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-n;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0)  {  u=-n;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(       "       ");    }    if(u    <    0    ||    v    >    0)    {    u=-n;    }    else    {    throw    new    ArithmeticException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  n	124	None	replace
183	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-k;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  cannot  find  symbol  k  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-k;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0)  {  u=-k;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(       "       ");    }    if(u    <    0    ||    v    >    0)    {    u=-n;    }    else    {    throw    new    ArithmeticException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  k	124	None	replace
184	[BUG]  [BUGGY]  if(u  >=  0  ||  v  >  1)  {  if(u  >=  -1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0  ||  v  >  1)  {  if(u  >=  -1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >=  0  ||  v  >  1)  {  if(u  >=  -1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u    >=    -1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
185	[BUG]  [BUGGY]  if(u  <  1)  {  if(v>1)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  1)  {  if(v>1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  1)  {  if(v>1)  {  u=-v;  }	  if(u    <    1)    {    if(v>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
186	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  denominator,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.ceil(u,  denominator,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  denominator,  v);	  int    v=(int)Math.ceil(u,    denominator);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	129	None	replace
187	[BUG]  [BUGGY]  float  v=(float)Math.ceil(u,  denominator);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.ceil(u,  denominator);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.ceil(u,  denominator);	  int    v=(int)Math.ceil(u,    denominator);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	129	None	replace
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-1;  }  if(u  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    >    0)    {    u=-1;    }    if(u  >  0)  {  u=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	112	8	add
189	[BUG]  [BUGGY]  if(u  >  0)  {  u=-1;  }  if(u  >  0)  {  u=-1;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-1;  }  if(u  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-1;    }    if(u  >  0)  {  u=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	112	8	add
190	[BUG]  [BUGGY]  if(u  >  0)  {  u=-1;  }  u  >  0)  {  u=-1;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-1;  }  u  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-1;    }    u  >  0)  {  u=-1;  }	  timeout    	non-compiled	[CE]  not  a  statement	112	None	add
191	[BUG]  [BUGGY]  if(u  >  0)  {  u=-1;  }  int  u  >  0)  {  u=-1;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-1;  }  int  u  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-1;    }    int  u  >  0)  {  u=-1;  }	  timeout    	non-compiled	[CE]  ';'  expected	112	None	add
192	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0)  {  u=-1;  }	  if(u    >    0)    {    u=-1;    }    timeout    	compilable	timeout	113	1	replace
193	[BUG]  [BUGGY]  if(u  <  0)  {  u=-1;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0)  {  u=-1;  }	  if(u    >    0)    {    u=-1;    }    timeout    	compilable	timeout	113	1	replace
194	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  ==  0)  {  u=-1;  }	  if(u    >    0)    {    u=-1;    }    timeout    	compilable	timeout	113	1	replace
195	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-1;  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  ==  0)  {  u=-1;  }	  if(u    >    0)    {    u=-1;    }    timeout    	compilable	timeout	113	1	replace
196	[BUG]  [BUGGY]  if(u  <  =  0)  {  u=-1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0)  {  u=-1;  }	  if(u    >    0)    {    u=-1;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
197	[BUG]  [BUGGY]  char  u  =(char)Math.abs(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =(char)Math.abs(v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =(char)Math.abs(v);	  int    u    =(int)Math.abs(v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	69	None	replace
198	[BUG]  [BUGGY]  if(u  <  =  31  ||  v  >  31)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  31  ||  v  >  31)  {  if(u>0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  31  ||  v  >  31)  {  if(u>0)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
199	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  32)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  32)  {  if(u>0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  32)  {  if(u>0)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
200	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  if(u>2)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  if(u>2)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  31)  {  if(u>2)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
201	[BUG]  [BUGGY]  char  u  =(char)Math.floor(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =(char)Math.floor(v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =(char)Math.floor(v);	  char    u    =(char)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	123	None	replace
202	[BUG]  [BUGGY]  String  u  =(String)Math.floor(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  String  u  =(String)Math.floor(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	String  u  =(String)Math.floor(u);	  char    u    =(char)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	123	None	replace
203	[BUG]  [BUGGY]  char  u  =(char)Math.floor(u,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =(char)Math.floor(u,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =(char)Math.floor(u,  v);	  char    u    =(char)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	123	None	replace
204	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0)        {        u=-u;        }        if(u    >=    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
205	[BUG]  [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0)        {        u=-u;        }        if(u    >=    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0)        {        u=-u;        }        if(u    >=    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
207	[BUG]  [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0)        {        u=-u;        }        if(u    >=    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
208	[BUG]  [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  if(u  >>  0)  {  u=-u;  }  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  if(u  >>  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0)        {        u=-u;        }        if(u    >=    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  if(u  >>  0)  {  u=-u;  }	  	non-compiled	[CE]  incompatible  types	50	None	add
209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  if(u!=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0)        {        u=-u;        }        if(u    >=    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  if(u!=  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
210	[BUG]  [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  if(u!=  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  if(u!=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0)        {        u=-u;        }        if(u    >=    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  if(u!=  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
211	[BUG]  [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >>  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >>  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0)        {        u=-u;        }        if(u    >=    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  >>  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }	  	non-compiled	[CE]  incompatible  types	50	None	add
212	[BUG]  [BUGGY]  float  v=(float)Math.floor(u,  v  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.floor(u,  v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.floor(u,  v  +  1);	  float    v=(float)Math.floor(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	111	None	replace
213	[BUG]  [BUGGY]  float  v=(float)Math.log(u,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.log(u,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.log(u,  v);	  float    v=(float)Math.floor(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	111	None	replace
214	[BUG]  [BUGGY]  float  u  =  Math.abs(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =  Math.abs(v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =  Math.abs(v);	  float    u    =    Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	108	None	replace
215	[BUG]  [BUGGY]  double  u  =  Math.abs(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  double  u  =  Math.abs(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	double  u  =  Math.abs(u);	  float    u    =    Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	108	None	replace
216	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    1)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
217	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  2)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  2)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    1)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	42	1	replace
218	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  2)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  2)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  2)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    1)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	42	1	replace
219	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }	  	compilable	  [FE]  AssertionFailedError  	65	1	add
220	[BUG]  [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }	  	compilable	  [FE]  AssertionFailedError  	65	1	add
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }	  	compilable	  [FE]  AssertionFailedError  	65	1	add
222	[BUG]  [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }	  	compilable	  [FE]  AssertionFailedError  	65	1	add
223	[BUG]  [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v	  	non-compiled	[CE]  not  a  statement	65	None	add
224	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u  +  1,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.floor(u  +  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(u  +  1,  v);	  int    u    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	25	None	replace
225	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u,  v  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.floor(u,  v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(u,  v  +  1);	  int    u    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	25	None	replace
226	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u  *  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.floor(u  *  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(u  *  1);	  int    u    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	25	None	replace
227	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ".);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ".);  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ".);  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(       "       ");    }    if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ".);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
228	[BUG]  [BUGGY]  float  u  =(float)Math.floor(u,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.floor(u,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.floor(u,  v);	  float    u    =(float)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	100	None	replace
229	[BUG]  [BUGGY]  float  u  =(float)Math.floor(u  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.floor(u  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.floor(u  +  1);	  float    u    =(float)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	100	None	replace
230	[BUG]  [BUGGY]  float  u  =(float)Math.floor(u  +  1,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.floor(u  +  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.floor(u  +  1,  v);	  float    u    =(float)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	100	None	replace
231	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v  +  1;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	u=-v  +  1;	  u=-v;    timeout    	compilable	timeout	33	1	replace
232	[BUG]  [BUGGY]  u=-v  +  1;  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v  +  1;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-v  +  1;	  u=-v;    timeout    	compilable	timeout	33	1	replace
233	[BUG]  [BUGGY]  int  u  =  Math.min(Math.min(u,  v));  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(Math.min(u,  v));  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(Math.min(u,  v));	  int    u    =    Math.min(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	27	None	replace
234	[BUG]  [BUGGY]  int  u  =  Math.min(Math.abs(u),  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(Math.abs(u),  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(Math.abs(u),  v);	  int    u    =    Math.min(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	27	None	replace
235	[BUG]  [BUGGY]  int  u  =  Math.min(v,  u  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(v,  u  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(v,  u  +  1);	  int    u    =    Math.min(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	27	None	replace
236	[BUG]  [BUGGY]  if(u  >=  0  ||  v  >  1)  {  if(u  ==  -1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0  ||  v  >  1)  {  if(u  ==  -1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >=  0  ||  v  >  1)  {  if(u  ==  -1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u    ==    -1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
237	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  1)  {  if(u!=  -1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  1)  {  if(u!=  -1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  1)  {  if(u!=  -1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u    ==    -1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
238	[BUG]  [BUGGY]  float  v=(float)Math.abs(u  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.abs(u  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.abs(u  +  1);	  float    v=(float)Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	98	None	replace
239	[BUG]  [BUGGY]  float  v=(float)Math.abs(u  +  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.abs(u  +  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.abs(u  +  1,  v);	  float    v=(float)Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	98	None	replace
240	[BUG]  [BUGGY]  float  v=(float)Math.abs(u,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.abs(u,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.abs(u,  v);	  float    v=(float)Math.abs(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	98	None	replace
241	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( "   ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    v    >    0)    {    u=-1;    }    else    {    throw    new    ArithmeticException(   "   ");    }    if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( "   ");  }	  timeout    	compilable	  [FE]  AssertionFailedError  	94	8	add
242	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( "   ");  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException(   "   ");  }  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( "   ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-1;    }    else    {    throw    new    ArithmeticException(   "   ");    }    if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( "   ");  }	  timeout    	compilable	  [FE]  AssertionFailedError  	94	8	add
243	[BUG]  [BUGGY]  int  u  =  Math.min(u,  v  +  1,  k);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(u,  v  +  1,  k);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(u,  v  +  1,  k);	  int    u    =    Math.min(u,    v    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	26	None	replace
244	[BUG]  [BUGGY]  int  u  =  Math.min(u,  v  +  1,  0);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(u,  v  +  1,  0);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(u,  v  +  1,  0);	  int    u    =    Math.min(u,    v    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	26	None	replace
245	[BUG]  [BUGGY]  int  u  =  Math.min(u,  v  +  1,  0.0);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(u,  v  +  1,  0.0);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(u,  v  +  1,  0.0);	  int    u    =    Math.min(u,    v    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	26	None	replace
246	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(wrapped);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.ceil(wrapped);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.ceil(wrapped);	  int    u    =(int)Math.floor(wrapped);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	102	None	replace
247	[BUG]  [BUGGY]  float  u  =(float)Math.floor(wrapped);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.floor(wrapped);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.floor(wrapped);	  int    u    =(int)Math.floor(wrapped);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	102	None	replace
248	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        >        0)        {        u=-u;        }        if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
249	[BUG]  [BUGGY]  if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        >        0)        {        u=-u;        }        if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        >        0)        {        u=-u;        }        if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
251	[BUG]  [BUGGY]  if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        >        0)        {        u=-u;        }        if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
252	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        >        0)        {        u=-u;        }        if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
253	[BUG]  [BUGGY]  if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        >        0)        {        u=-u;        }        if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        >        0)        {        u=-u;        }        if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
255	[BUG]  [BUGGY]  if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(v  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        >        0)        {        u=-u;        }        if(u    >    0)    {    u=-u;    }    if(u  >  0)  {  u=-u;  }  if(u  >  0)  {  u=-u;  }  if(v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
256	[BUG]  [BUGGY]  int  u  =(int)Math.abs(u,  v  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.abs(u,  v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.abs(u,  v  +  1);	  int    u    =(int)Math.abs(u,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	70	None	replace
257	[BUG]  [BUGGY]  int  u  =(int)Math.abs(u,  v  -  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.abs(u,  v  -  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.abs(u,  v  -  1);	  int    u    =(int)Math.abs(u,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	70	None	replace
258	[BUG]  [BUGGY]  int  u  =(int)Math.abs(v,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.abs(v,  u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.abs(v,  u);	  int    u    =(int)Math.abs(u,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	70	None	replace
259	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u,  v  -  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.floor(u,  v  -  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(u,  v  -  1);	  int    u    =(int)Math.floor(u,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	23	None	replace
260	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  *  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.floor(u  *  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u  *  1);	  int    v=(int)Math.floor(u    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	17	None	replace
261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u;  u=-u;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	u=-u;    u=-u;	  timeout    	compilable	  [FE]  AssertionFailedError  	8	1	add
262	[BUG]  [BUGGY]  u=-u;  u=-u;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u;  u=-u;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-u;    u=-u;	  timeout    	compilable	  [FE]  AssertionFailedError  	8	1	add
263	[BUG]  [BUGGY]  u=-u;  int  u=-u;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u;  int  u=-u;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-u;    int  u=-u;	  timeout    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	8	None	add
264	[BUG]  [BUGGY]  u=-u;  ((  u&1)  ==  0  ||(v&2)  ==  0))  {  throw  new  ArithmeticException( " ");  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u;  ((  u&1)  ==  0  ||(v&2)  ==  0))  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-u;    ((  u&1)  ==  0  ||(v&2)  ==  0))  {  throw  new  ArithmeticException( " ");  }	  timeout    	non-compiled	[CE]  not  a  statement	8	None	add
265	[BUG]  [BUGGY]  u=-u;  ((  u&1)  ==  0  ||(v&1)  ==  0))  {  throw  new  ArithmeticException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u;  ((  u&1)  ==  0  ||(v&1)  ==  0))  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-u;    ((  u&1)  ==  0  ||(v&1)  ==  0))  {  throw  new  ArithmeticException( " ");  }	  timeout    	non-compiled	[CE]  not  a  statement	8	None	add
266	[BUG]  [BUGGY]  u=-u;  ((  u&1)  ==  0  ||(v&2)  ==  0))  {  throw  new  ArithmeticException( " ");  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u;  ((  u&1)  ==  0  ||(v&2)  ==  0))  {  throw  new  ArithmeticException( " ");  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-u;    ((  u&1)  ==  0  ||(v&2)  ==  0))  {  throw  new  ArithmeticException( " ");	  timeout    	non-compiled	[CE]  not  a  statement	8	None	add
267	[BUG]  [BUGGY]  String  u  =(String)Math.abs(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  String  u  =(String)Math.abs(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	String  u  =(String)Math.abs(u);	  char    u    =(char)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	127	None	replace
268	[BUG]  [BUGGY]  Character  u  =(char)Math.abs(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  Character  u  =(char)Math.abs(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	Character  u  =(char)Math.abs(u);	  char    u    =(char)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	127	None	replace
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        >        0)        {        u=-v;        }        if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }	  	compilable	  [FE]  AssertionFailedError  	73	9	add
270	[BUG]  [BUGGY]  if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        >        0)        {        u=-v;        }        if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }	  	compilable	  [FE]  AssertionFailedError  	73	9	add
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        >        0)        {        u=-v;        }        if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }	  	compilable	  [FE]  AssertionFailedError  	73	9	add
272	[BUG]  [BUGGY]  if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        >        0)        {        u=-v;        }        if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }	  	compilable	  [FE]  AssertionFailedError  	73	9	add
273	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        >        0)        {        u=-v;        }        if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }	  	compilable	  [FE]  AssertionFailedError  	73	9	add
274	[BUG]  [BUGGY]  if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        >        0)        {        u=-v;        }        if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }	  	compilable	  [FE]  AssertionFailedError  	73	9	add
275	[BUG]  [BUGGY]  float  v=(float)Math.ceil(u,  v  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.ceil(u,  v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.ceil(u,  v  +  1);	  float    v=(float)Math.ceil(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	84	None	replace
276	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  v  +  1,  k);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.ceil(u,  v  +  1,  k);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  v  +  1,  k);	  int    v=(int)Math.ceil(u,    v    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	46	None	replace
277	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  v  *  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.ceil(u,  v  *  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  v  *  1);	  int    v=(int)Math.ceil(u,    v    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	46	None	replace
278	[BUG]  [BUGGY]  int  v  =  Math.abs(u  +  1,  v  -  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u  +  1,  v  -  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u  +  1,  v  -  1);	  int    v    =    Math.abs(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	44	None	replace
279	[BUG]  [BUGGY]  int  v  =  Math.abs(u  +  1,  v,  k);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u  +  1,  v,  k);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u  +  1,  v,  k);	  int    v    =    Math.abs(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	44	None	replace
280	[BUG]  [BUGGY]  int  v  =  Math.abs(u  +  1,  k);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u  +  1,  k);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u  +  1,  k);	  int    v    =    Math.abs(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	44	None	replace
281	[BUG]  [BUGGY]  if(u  <  =  31  ||  v  >  31)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  31  ||  v  >  31)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  31  ||  v  >  31)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    u=-u;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
282	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	93	1	replace
283	[BUG]  [BUGGY]  if(u  <  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	93	1	replace
284	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-v;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >  0)  {  u=-v;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	93	1	replace
285	[BUG]  [BUGGY]  if(u  >  0)  {  u=-v;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-v;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  u=-v;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	93	1	replace
286	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  if(u  <  0  ||  v  >  31)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    v    >    31)    {    u=-u;    }    if(u  <  0  ||  v  >  31)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	10	1	add
287	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  if(u  <  0  ||  v  >  31)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  if(u  <  0  ||  v  >  31)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    31)    {    u=-u;    }    if(u  <  0  ||  v  >  31)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	10	1	add
288	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  int  u  <  0  ||  v  >  31)  {  u=-u;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  int  u  <  0  ||  v  >  31)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    31)    {    u=-u;    }    int  u  <  0  ||  v  >  31)  {  u=-u;  }	  timeout    	non-compiled	[CE]  ';'  expected	10	None	add
289	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  u  <  0  ||  v  >  31)  {  u=-u;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  u  <  0  ||  v  >  31)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    31)    {    u=-u;    }    u  <  0  ||  v  >  31)  {  u=-u;  }	  timeout    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	add
290	[BUG]  [BUGGY]  while(u  <  0)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  while(u  <  0)  {  if(u>0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	while(u  <  0)  {  if(u>0)  {  u=-u;  }	  if(u    >    0)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
291	[BUG]  [BUGGY]  if(u  ==  0)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  if(u>0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  ==  0)  {  if(u>0)  {  u=-u;  }	  if(u    >    0)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
292	[BUG]  [BUGGY]  if(u  <  0)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  if(u>0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0)  {  if(u>0)  {  u=-u;  }	  if(u    >    0)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
293	[BUG]  [BUGGY]  if(u  >  0)  {  if(v  <  1)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  if(v  <  1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(v  <  1)  {  u=-v;  }	  if(u    >    0)    {    if(u    <    1)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
294	[BUG]  [BUGGY]  if(u  <  0)  {  if(u  <  1)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  if(u  <  1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0)  {  if(u  <  1)  {  u=-v;  }	  if(u    >    0)    {    if(u    <    1)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
295	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0  ||  v  <  1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >  0  ||  v  <  1)  {  u=-v;  }	  if(u    >    0)    {    if(u    <    1)    {    u=-v;    }    	compilable	timeout	35	1	replace
296	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  1)  {  u=-v;  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0  ||  v  <  1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0  ||  v  <  1)  {  u=-v;  }	  if(u    >    0)    {    if(u    <    1)    {    u=-v;    }    	compilable	timeout	35	1	replace
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
298	[BUG]  [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
299	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
300	[BUG]  [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(v>0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(v>0)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
302	[BUG]  [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(v>0)  {  v=-1;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(v>0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(v>0)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v>0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v>0)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
304	[BUG]  [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v>0)  {  v=-1;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v>0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v>0)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
305	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
306	[BUG]  [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u>0)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
307	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  0,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.ceil(u,  0,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  0,  v);	  int    v=(int)Math.ceil(u,    0);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	83	None	replace
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  if(u  <  0  ||  v  >  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    v    >    0)    {    u=-v;    }    if(u  <  0  ||  v  >  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	58	9	add
309	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  if(u  <  0  ||  v  >  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  if(u  <  0  ||  v  >  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-v;    }    if(u  <  0  ||  v  >  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	58	9	add
310	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  int  u  <  0  ||  v  >  0)  {  u=-v;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  int  u  <  0  ||  v  >  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-v;    }    int  u  <  0  ||  v  >  0)  {  u=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	58	None	add
311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  if(u  >=  0  ||  v  >  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    v    >    0)    {    u=-v;    }    if(u  >=  0  ||  v  >  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	58	9	add
312	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  if(u  >=  0  ||  v  >  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  if(u  >=  0  ||  v  >  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-v;    }    if(u  >=  0  ||  v  >  0)  {  u=-v;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	58	9	add
313	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  If(u  <  0  ||  v  >  0)  {  u=-v;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  If(u  <  0  ||  v  >  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-v;    }    If(u  <  0  ||  v  >  0)  {  u=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	58	None	add
314	[BUG]  [BUGGY]  (u  <  1  ||  v  >  1)  {  u=-u;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  (u  <  1  ||  v  >  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	(u  <  1  ||  v  >  1)  {  u=-u;  }	  (u    <    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  not  a  statement	82	None	replace
315	[BUG]  [BUGGY]  (u  <  1  ||  v  >  2)  {  u=-u;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  (u  <  1  ||  v  >  2)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	(u  <  1  ||  v  >  2)  {  u=-u;  }	  (u    <    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  not  a  statement	82	None	replace
316	[BUG]  [BUGGY]  (u  <  0  ||  v  >  3)  {  u=-u;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  (u  <  0  ||  v  >  3)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	(u  <  0  ||  v  >  3)  {  u=-u;  }	  (u    <    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  not  a  statement	82	None	replace
317	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >=  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    >=    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >=  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
318	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >=  0  ||  v  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >=  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    >=    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >=  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
319	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    >=    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
320	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    >=    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
321	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >>  0  ||  v  >  0)  {  u=-u;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >>  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    >=    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  >>  0  ||  v  >  0)  {  u=-u;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	14	None	add
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  ==  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    >=    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  ==  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
323	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  ==  0  ||  v  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  ==  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    >=    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  ==  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
324	[BUG]  [BUGGY]  int  v  =  Math.min(u,  v  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.min(u,  v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.min(u,  v  +  1);	  int    v    =    Math.min(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	106	None	replace
325	[BUG]  [BUGGY]  int  v  =  Math.min(u,  v  -  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.min(u,  v  -  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.min(u,  v  -  1);	  int    v    =    Math.min(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	106	None	replace
326	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  v=(int)Math.abs(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	v=(int)Math.abs(u);	  int    v=(int)Math.abs(v);    	compilable	timeout	117	1	replace
327	[BUG]  [BUGGY]  v=(int)Math.abs(u);  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  v=(int)Math.abs(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	v=(int)Math.abs(u);	  int    v=(int)Math.abs(v);    	compilable	timeout	117	1	replace
328	[BUG]  [BUGGY]  if(u  >  0)  {  if(u  <  =  0  ||  v  >  1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  if(u  <  =  0  ||  v  >  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(u  <  =  0  ||  v  >  1)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
329	[BUG]  [BUGGY]  if(u  <  =  1  ||  v  >  1)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  1  ||  v  >  1)  {  if(u>0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  1  ||  v  >  1)  {  if(u>0)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
330	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-u;  }  if(u  ==  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    ==    0)    {    u=-u;    }    if(u  ==  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	115	1	add
331	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-u;  }  if(u  ==  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-u;  }  if(u  ==  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    ==    0)    {    u=-u;    }    if(u  ==  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	115	1	add
332	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-u;  }  if(u!=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    ==    0)    {    u=-u;    }    if(u!=  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	115	1	add
333	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-u;  }  if(u!=  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-u;  }  if(u!=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    ==    0)    {    u=-u;    }    if(u!=  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	115	1	add
334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    ==    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	115	1	add
335	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    ==    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	115	1	add
336	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-u;  }  if(u  >>  0)  {  u=-u;  }  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-u;  }  if(u  >>  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    ==    0)    {    u=-u;    }    if(u  >>  0)  {  u=-u;  }	  timeout    	non-compiled	[CE]  incompatible  types	115	None	add
337	[BUG]  [BUGGY]  int  v=(int)Math.abs(u  +  1,  v  -  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.abs(u  +  1,  v  -  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u  +  1,  v  -  1);	  int    v=(int)Math.abs(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	22	None	replace
338	[BUG]  [BUGGY]  int  v=(int)Math.abs(u  +  1,  v,  k);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.abs(u  +  1,  v,  k);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u  +  1,  v,  k);	  int    v=(int)Math.abs(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	22	None	replace
339	[BUG]  [BUGGY]  int  v=(int)Math.abs(u  *  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.abs(u  *  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u  *  1,  v);	  int    v=(int)Math.abs(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	22	None	replace
340	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  <  =  0)  {  v=-v;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0  ||  v  <  =  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  <  =  0)  {  v=-v;  }	  if(u    >    0    ||    v    <    =    0)    {    v=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
341	[BUG]  [BUGGY]  if(u  <  0  ||  v  <  =  0)  {  v=-v;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  <  =  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  <  =  0)  {  v=-v;  }	  if(u    >    0    ||    v    <    =    0)    {    v=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
342	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =(int)Math.ceil(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =(int)Math.ceil(u);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	128	None	replace
343	[BUG]  [BUGGY]  u=-v;  int  v=-v;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v;  int  v=-v;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-v;    int  v=-v;	  timeout    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	32	None	add
344	[BUG]  [BUGGY]  u=-v;  ((  u&1)  ==  0)  ||(v&2)  ==  0)  {  u=-v;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v;  ((  u&1)  ==  0)  ||(v&2)  ==  0)  {  u=-v;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-v;    ((  u&1)  ==  0)  ||(v&2)  ==  0)  {  u=-v;	  timeout    	non-compiled	[CE]  not  a  statement	32	None	add
345	[BUG]  [BUGGY]  u=-v;  ((  u&1)  ==  0)||(v&1)  ==  0)  {  u=-v;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v;  ((  u&1)  ==  0)||(v&1)  ==  0)  {  u=-v;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-v;    ((  u&1)  ==  0)||(v&1)  ==  0)  {  u=-v;	  timeout    	non-compiled	[CE]  not  a  statement	32	None	add
346	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  32)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0  ||  v  >  32)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  32)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    31)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
347	[BUG]  [BUGGY]  if(v  <  1)  {  if(u  >  0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  <  1)  {  if(u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(v  <  1)  {  if(u  >  0)  {  u=-u;  }	  if(u    >    0)    {    u=-u;    }    If(u    >    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
348	[BUG]  [BUGGY]  float  u  =  Math.abs(1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =  Math.abs(1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =  Math.abs(1);	  int    u    =    Math.abs(1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	109	None	replace
349	[BUG]  [BUGGY]  int  u  =  Math.abs(1  <  <  power);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.abs(1  <  <  power);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.abs(1  <  <  power);	  int    u    =    Math.abs(1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	109	None	replace
350	[BUG]  [BUGGY]  if(u  >  31)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  31)  {  if(u>0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  31)  {  if(u>0)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
351	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  31)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0  ||  v  >  31)  {  if(u>0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  31)  {  if(u>0)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
352	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  32)  {  if(u>32)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  32)  {  if(u>32)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  32)  {  if(u>32)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
353	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  ==  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    If(u>0)    {    v=-v;    }    	compilable	timeout	68	1	replace
354	[BUG]  [BUGGY]  if(u  ==  0)  {  v=-v;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  ==  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    If(u>0)    {    v=-v;    }    	compilable	timeout	68	1	replace
355	[BUG]  [BUGGY]  int  v  =  Math.min(u,  0);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.min(u,  0);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.min(u,  0);	  int    v    =    Math.min(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	106	None	replace
356	[BUG]  [BUGGY]  int  v  =  Math.min(u,  v)-  1;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.min(u,  v)-  1;  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.min(u,  v)-  1;	  int    v    =    Math.min(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	106	None	replace
357	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(     "     ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "     ");  }  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0        ||        v        >        0)        {        u=-u;        }        else        {        throw        new        ArithmeticException(       "       ");        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "       ");    }    if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	5	8	add
358	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(     "     ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "     ");  }  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(     "     ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "     ");  }  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        else        {        throw        new        ArithmeticException(       "       ");        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "       ");    }    if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	5	8	add
359	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  0,  denominator);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.ceil(u,  0,  denominator);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u,  0,  denominator);	  int    v=(int)Math.ceil(u,    denominator);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	129	None	replace
360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v  <  31)  {  return  1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v  <  31)  {  return  1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
361	[BUG]  [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v  <  31)  {  return  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v  <  31)  {  return  1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v  <  31)  {  return  1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v  <  31)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v  <  31)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
363	[BUG]  [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v  <  31)  {  v=-1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v  <  31)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(v  <  31)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
364	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(v  >  0)  {  u=-u;  }	  if(u    <    0)    {    u=-u;    }    if(u    >=    0)    {    u=-u;    }    	compilable	timeout	51	1	replace
365	[BUG]  [BUGGY]  if(v  >  0)  {  u=-u;  }  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(v  >  0)  {  u=-u;  }	  if(u    <    0)    {    u=-u;    }    if(u    >=    0)    {    u=-u;    }    	compilable	timeout	51	1	replace
366	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  <  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(v  <  1)  {  u=-u;  }	  if(u    <    0)    {    u=-u;    }    if(u    >=    0)    {    u=-u;    }    	compilable	timeout	51	1	replace
367	[BUG]  [BUGGY]  if(v  <  1)  {  u=-u;  }  timeout  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  <  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(v  <  1)  {  u=-u;  }	  if(u    <    0)    {    u=-u;    }    if(u    >=    0)    {    u=-u;    }    	compilable	timeout	51	1	replace
368	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  <  1)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(v  <  1)  {  u=-1;  }	  if(u    <    0)    {    u=-u;    }    if(u    >=    0)    {    u=-u;    }    	compilable	timeout	51	1	replace
369	[BUG]  [BUGGY]  if(v  <  1)  {  u=-1;  }  timeout  [FE]        AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  <  1)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(v  <  1)  {  u=-1;  }	  if(u    <    0)    {    u=-u;    }    if(u    >=    0)    {    u=-u;    }    	compilable	timeout	51	1	replace
370	[BUG]  [BUGGY]  char  u  =(char)Math.sin(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =(char)Math.sin(v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =(char)Math.sin(v);	  char    u    =(char)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	127	None	replace
371	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  -1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  ==  -1)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    If(u    >    0)    {    u=-v;    }    	compilable	timeout	77	1	replace
372	[BUG]  [BUGGY]  if(u  ==  -1)  {  u=-v;  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  -1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  ==  -1)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    If(u    >    0)    {    u=-v;    }    	compilable	timeout	77	1	replace
373	[BUG]  [BUGGY]  (u  <  0  ||  v  >  1)  {  u=-u;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  (u  <  0  ||  v  >  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	(u  <  0  ||  v  >  1)  {  u=-u;  }	  (u    <    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  not  a  statement	82	None	replace
374	[BUG]  [BUGGY]  (u  <  0  ||  v  >  10)  {  u=-u;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  (u  <  0  ||  v  >  10)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	(u  <  0  ||  v  >  10)  {  u=-u;  }	  (u    <    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  not  a  statement	82	None	replace
375	[BUG]  [BUGGY]  float  v=(float)Math.floor(v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.floor(v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.floor(v);	  float    v=(float)Math.floor(u);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	99	None	replace
376	[BUG]  [BUGGY]  char  u  =  Math.min(v,  0);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =  Math.min(v,  0);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =  Math.min(v,  0);	  char    u    =    Math.min(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	119	None	replace
377	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)  {  v=-1;  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-v;    System.arraycopy(u,    v,    0,    u,    v);    }    	compilable	timeout	67	1	replace
378	[BUG]  [BUGGY]  if(u>0)  {  v=-1;  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)  {  v=-1;  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-v;    System.arraycopy(u,    v,    0,    u,    v);    }    	compilable	timeout	67	1	replace
379	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  1)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >  1)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-v;    System.arraycopy(u,    v,    0,    u,    v);    }    	compilable	timeout	67	1	replace
380	[BUG]  [BUGGY]  if(u  >  1)  {  v=-v;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  1)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  1)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-v;    System.arraycopy(u,    v,    0,    u,    v);    }    	compilable	timeout	67	1	replace
381	[BUG]  [BUGGY]  if(u  >=  0)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  if(u>0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >=  0)  {  if(u>0)  {  u=-u;  }	  if(u    >    0)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
382	[BUG]  [BUGGY]  if(u  <  0)  {  if(u>1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  if(u>1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0)  {  if(u>1)  {  u=-u;  }	  if(u    >    0)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
383	[BUG]  [BUGGY]  float  v=(float)Math.ceil(u,  k);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.ceil(u,  k);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.ceil(u,  k);	  int    v=(int)Math.ceil(u,    k);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	47	None	replace
384	[BUG]  [BUGGY]  char  v=(char)Math.ceil(u,  k);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  v=(char)Math.ceil(u,  k);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  v=(char)Math.ceil(u,  k);	  int    v=(int)Math.ceil(u,    k);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	47	None	replace
385	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u  ==  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    ==    0)    {    u=-v;    }    if(u  ==  0)  {  u=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	86	1	add
386	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u  ==  0)  {  u=-1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u  ==  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    ==    0)    {    u=-v;    }    if(u  ==  0)  {  u=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	86	1	add
387	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  timeout  =  System.currentTimeMillis();  }  [CE]  cannot  find  symbol  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  timeout  =  System.currentTimeMillis();  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0)  {  u=-v;  timeout  =  System.currentTimeMillis();  }	  u=-v;    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	33	None	replace
388	[BUG]  [BUGGY]  if(u  <  0)  {  u=-v;  timeout  =  System.currentTimeMillis();  }  [CE]  cannot  find  symbol  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  u=-v;  timeout  =  System.currentTimeMillis();  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0)  {  u=-v;  timeout  =  System.currentTimeMillis();  }	  u=-v;    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	33	None	replace
389	[BUG]  [BUGGY]  if(u  >  0)  {  if(v  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  if(v  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(v  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(       "       ");    }    if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
390	[BUG]  [BUGGY]  float  v=(float)Math.abs(v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.abs(v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.abs(v);	  int    v=(int)Math.abs(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	117	None	replace
391	[BUG]  [BUGGY]  int  v=(int)Math.rint(u);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.rint(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.rint(u);	  int    v=(int)Math.abs(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	117	None	replace
392	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  if(u  <  0  ||  v  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0    ||    v    >    0)    {    u=-v;    }    if(u  <  0  ||  v  >  0)  {  u=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	58	8	add
393	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  if(u  <  0  ||  v  >  0)  {  u=-1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  if(u  <  0  ||  v  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-v;    }    if(u  <  0  ||  v  >  0)  {  u=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	58	8	add
394	[BUG]  [BUGGY]  float  v=(float)Math.ceil(u,  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.ceil(u,  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.ceil(u,  1);	  int    v=(int)Math.ceil(u,    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	85	None	replace
395	[BUG]  [BUGGY]  if(u  >=  0)  {  if(u>0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  if(u>0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >=  0)  {  if(u>0)  {  u=-v;  }	  if(u    <    0)    {    if(u>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
396	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.ceil(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.ceil(u);	  int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	114	None	replace
397	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(v,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.ceil(v,  u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.ceil(v,  u);	  int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	114	None	replace
398	[BUG]  [BUGGY]  char  u  =(char)Math.floor(v,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =(char)Math.floor(v,  u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =(char)Math.floor(v,  u);	  char    u    =(char)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	123	None	replace
399	[BUG]  [BUGGY]  char  u  =(char)Math.floor(wrapped);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =(char)Math.floor(wrapped);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =(char)Math.floor(wrapped);	  char    u    =(char)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	123	None	replace
400	[BUG]  [BUGGY]  if(u  >  0)  {  if(v  <  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  if(v  <  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(v  <  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(       "       ");    }    if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
401	[BUG]  [BUGGY]  float  v=(float)Math.ceil(u,  0);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  v=(float)Math.ceil(u,  0);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  v=(float)Math.ceil(u,  0);	  int    v=(int)Math.ceil(u,    0);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	83	None	replace
402	[BUG]  [BUGGY]  if(u  <  0)  {  if(v>0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  if(v>0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0)  {  if(v>0)  {  u=-v;  }	  if(u    <    1)    {    if(v>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
403	[BUG]  [BUGGY]  if(u  <  =  0)  {  if(v>0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0)  {  if(v>0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0)  {  if(v>0)  {  u=-v;  }	  if(u    <    1)    {    if(v>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
404	[BUG]  [BUGGY]  if(u  <  0)  {  if(v>1)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  if(v>1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0)  {  if(v>1)  {  u=-v;  }	  if(u    <    1)    {    if(v>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
405	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
406	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
407	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >=  0)  {  v=-v;  }	  if(u    <    0)    {    v=-v;    }    timeout    	compilable	timeout	91	1	replace
408	[BUG]  [BUGGY]  if(u  >=  0)  {  v=-v;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >=  0)  {  v=-v;  }	  if(u    <    0)    {    v=-v;    }    timeout    	compilable	timeout	91	1	replace
409	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  If(u  <  0  ||  v  >  31)  {  u=-u;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  If(u  <  0  ||  v  >  31)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    31)    {    u=-u;    }    If(u  <  0  ||  v  >  31)  {  u=-u;  }	  timeout    	non-compiled	[CE]  ';'  expected	10	None	add
410	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  v=-v;  }  if(u  <  0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u    <    0)    {    v=-v;    }    if(u  <  0)  {  v=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	90	2	add
411	[BUG]  [BUGGY]  if(u  <  0)  {  v=-v;  }  if(u  <  0)  {  v=-1;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  v=-v;  }  if(u  <  0)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0)    {    v=-v;    }    if(u  <  0)  {  v=-1;  }	  timeout    	compilable	  [FE]  AssertionFailedError  	90	2	add
412	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u  +  1,  v  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.ceil(u  +  1,  v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.ceil(u  +  1,  v  +  1);	  int    v=(int)Math.ceil(u,    v    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	46	None	replace
413	[BUG]  [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  If(u  <  0  ||  u  >  0)  {  u=-u;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  If(u  <  0  ||  u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    u    >    0)    {    u=-u;    }    If(u  <  0  ||  u  >  0)  {  u=-u;  }	  timeout    	non-compiled	[CE]  ';'  expected	29	None	add
414	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  +  2);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.floor(u  +  2);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u  +  2);	  int    v=(int)Math.floor(u    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	17	None	replace
415	[BUG]  [BUGGY]  int  v  =  Math.abs(u  *  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u  *  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u  *  1,  v);	  int    v    =    Math.abs(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	44	None	replace
416	[BUG]  [BUGGY]  int  v  =  Math.abs(u  +  1,  v)+  1;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u  +  1,  v)+  1;  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u  +  1,  v)+  1;	  int    v    =    Math.abs(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	44	None	replace
417	[BUG]  [BUGGY]  (u  <  0  ||  u  >  0)  {  u=-u;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  (u  <  0  ||  u  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	(u  <  0  ||  u  >  0)  {  u=-u;  }	  if(u    <    =    0    ||    u    >    0)    {    u=-u;    }    	non-compiled	[CE]  not  a  statement	78	None	replace
418	[BUG]  [BUGGY]  int  v=(int)Math.abs(u  +  2);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.abs(u  +  2);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u  +  2);	  int    v=(int)Math.abs(u    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	20	None	replace
419	[BUG]  [BUGGY]  if(u  >  0)  {  u=-1;  }  if(u  >  0)  ==  u=-1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-1;  }  if(u  >  0)  ==  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-1;    }    if(u  >  0)  ==  u=-1;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	112	None	add
420	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0  ||  v  <  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >  0  ||  v  <  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    1)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	42	1	replace
421	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0  ||  v  <  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0  ||  v  <  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    1)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	42	1	replace
422	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  3)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  3)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    1)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	42	1	replace
423	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  3)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  3)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  3)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    1)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	42	1	replace
424	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  *  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.floor(u  *  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u  *  1,  v);	  int    v=(int)Math.floor(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	18	None	replace
425	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  +  1,  v,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.floor(u  +  1,  v,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u  +  1,  v,  v);	  int    v=(int)Math.floor(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	18	None	replace
426	[BUG]  [BUGGY]  int  u  =  Math.abs(a  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.abs(a  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.abs(a  +  1);	  int    u    =    Math.abs(a);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	64	None	replace
427	[BUG]  [BUGGY]  if(u  >  0)  {  if(v  <  =  0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  if(v  <  =  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(v  <  =  0)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
428	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0  ||  v  >  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >  0  ||  v  >  1)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    1)    {    u=-u;    }    	compilable	timeout	130	1	replace
429	[BUG]  [BUGGY]  if(u  >  0  ||  v  >  1)  {  u=-u;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0  ||  v  >  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0  ||  v  >  1)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    1)    {    u=-u;    }    	compilable	timeout	130	1	replace
430	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  int  u  =  0  ||  v  <  0)  {  v=-v;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  int  u  =  0  ||  v  <  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0    ||    v    <    0)    {    v=-v;    }    int  u  =  0  ||  v  <  0)  {  v=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	55	None	add
431	[BUG]  [BUGGY]  u=(v  <  <  1)?  -u  :  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=(v  <  <  1)?  -u  :  0;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=(v  <  <  1)?  -u  :  0;	  u=-u;    timeout    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
432	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  If(u  <  0  ||  v  >  0)  {  v=-v;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  v=-v;  }  If(u  <  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    v=-v;    }    If(u  <  0  ||  v  >  0)  {  v=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	53	None	add
433	[BUG]  [BUGGY]  if(u  >  0)  {  if(v  <  0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  if(v  <  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(v  <  0)  {  u=-v;  }	  if(u    >    0)    {    if(u    <    1)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
434	[BUG]  [BUGGY]  if(u  >  0)  {  if(v>0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  if(v>0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(v>0)  {  u=-v;  }	  if(u    >    0)    {    if(u    <    1)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
435	[BUG]  [BUGGY]  int  v  =  Math.min(10.0,  u);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.min(10.0,  u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.min(10.0,  u);	  int    u    =    Math.min(10.0,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	107	None	replace
436	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.floor(v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(v  +  1);	  int    u    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	25	None	replace
437	[BUG]  [BUGGY]  float  u  =(float)Math.abs(v,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.abs(v,  u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.abs(v,  u);	  float    u    =(float)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	71	None	replace
438	[BUG]  [BUGGY]  int  u  =  Math.min(v,  a);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(v,  a);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(v,  a);	  int    u    =    Math.min(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	27	None	replace
439	[BUG]  [BUGGY]  int  u  =  Math.min(v,  0);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(v,  0);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(v,  0);	  int    u    =    Math.min(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	27	None	replace
440	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >=  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	93	1	replace
441	[BUG]  [BUGGY]  if(u  >=  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >=  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	93	1	replace
442	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	93	1	replace
443	[BUG]  [BUGGY]  if(u  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	93	1	replace
444	[BUG]  [BUGGY]  int  u  =(int)Math.abs(len  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.abs(len  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.abs(len  +  1);	  int    u    =(int)Math.abs(u    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	72	None	replace
445	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  32)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  32)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    u=-u;    }    timeout    	compilable	timeout	11	1	replace
446	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  32)  {  u=-u;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  32)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  32)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    u=-u;    }    timeout    	compilable	timeout	11	1	replace
447	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(v>0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(v>0)  {  v=-v;  }	  	compilable	  [FE]  AssertionFailedError  	65	1	add
448	[BUG]  [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(v>0)  {  v=-v;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(v>0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(v>0)  {  v=-v;  }	  	compilable	  [FE]  AssertionFailedError  	65	1	add
449	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }	  	compilable	  [FE]  AssertionFailedError  	65	1	add
450	[BUG]  [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-v;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-v;  }	  	compilable	  [FE]  AssertionFailedError  	65	1	add
451	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  10)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  10)  {  u=-v;  }	  if(u    <    0    ||    v    >    0)    {    u=-v;    }    timeout    	compilable	timeout	59	1	replace
452	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  10)  {  u=-v;  }  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  10)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  10)  {  u=-v;  }	  if(u    <    0    ||    v    >    0)    {    u=-v;    }    timeout    	compilable	timeout	59	1	replace
453	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >=  0)  {  u=-1;  }	  if(u    >    0)    {    u=-1;    }    timeout    	compilable	timeout	113	1	replace
454	[BUG]  [BUGGY]  if(u  >=  0)  {  u=-1;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >=  0)  {  u=-1;  }	  if(u    >    0)    {    u=-1;    }    timeout    	compilable	timeout	113	1	replace
455	[BUG]  [BUGGY]  float  u  =(float)Math.floor(v,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.floor(v,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.floor(v,  v);	  int    u    =(int)Math.floor(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	101	None	replace
456	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v,  gcd);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.floor(v,  gcd);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(v,  gcd);	  int    u    =(int)Math.floor(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	101	None	replace
457	[BUG]  [BUGGY]  u=-u;  ((  u&1)  ==  0)  ||(v&2)  ==  0)  {  u=-u;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u;  ((  u&1)  ==  0)  ||(v&2)  ==  0)  {  u=-u;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-u;    ((  u&1)  ==  0)  ||(v&2)  ==  0)  {  u=-u;	  timeout    	non-compiled	[CE]  not  a  statement	8	None	add
458	[BUG]  [BUGGY]  u=-u;  ((  u&1)  ==  0)||(v&1)  ==  0)  {  u=-u;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u;  ((  u&1)  ==  0)||(v&1)  ==  0)  {  u=-u;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-u;    ((  u&1)  ==  0)||(v&1)  ==  0)  {  u=-u;	  timeout    	non-compiled	[CE]  not  a  statement	8	None	add
459	[BUG]  [BUGGY]  u=-u;  ((  u&1)  ==  0)||(v&1)  ==  0)||(v  <  31))  {  return  1;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u;  ((  u&1)  ==  0)||(v&1)  ==  0)||(v  <  31))  {  return  1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-u;    ((  u&1)  ==  0)||(v&1)  ==  0)||(v  <  31))  {  return  1;  }	  timeout    	non-compiled	[CE]  not  a  statement	8	None	add
460	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  31)  {  if(u>1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0  ||  v  >  31)  {  if(u>1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  31)  {  if(u>1)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    if(u>1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
461	[BUG]  [BUGGY]  if(u  >  31)  {  if(u>1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  31)  {  if(u>1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  31)  {  if(u>1)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    if(u>1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
462	[BUG]  [BUGGY]  if(u  >=  0)  {  if(u  <  0  ||  v  >  1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  if(u  <  0  ||  v  >  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >=  0)  {  if(u  <  0  ||  v  >  1)  {  u=-u;  }	  if(u    >    0)    {    if(u    <    0    ||    v    >    1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
463	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  If(u  <  0  ||  v  >  0)  {  u=-1;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  If(u  <  0  ||  v  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-1;    }    If(u  <  0  ||  v  >  0)  {  u=-1;  }	  timeout    	non-compiled	[CE]  ';'  expected	120	None	add
464	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >  1)  {  u=-u;  }	  if(u    >    0)    {    u=-u;    }    if(u    >    0)    {    u=-u;    }    	compilable	timeout	37	1	replace
465	[BUG]  [BUGGY]  if(u  >  1)  {  u=-u;  }  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  1)  {  u=-u;  }	  if(u    >    0)    {    u=-u;    }    if(u    >    0)    {    u=-u;    }    	compilable	timeout	37	1	replace
466	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0)        {        u=-u;        }        if(u    >=    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
467	[BUG]  [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0)        {        u=-u;        }        if(u    >=    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
468	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    >=    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
469	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    >=    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
470	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0  ||  v  ==  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >=  0  ||  v  ==  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    =    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	compilable	timeout	40	1	replace
471	[BUG]  [BUGGY]  if(u  >=  0  ||  v  ==  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0  ||  v  ==  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >=  0  ||  v  ==  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    =    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	compilable	timeout	40	1	replace
472	[BUG]  [BUGGY]  if(u  >  0)  {  if(v  <  0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  if(v  <  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(v  <  0)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u    ==    -1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
473	[BUG]  [BUGGY]  if(u  >  0)  {  if(v  ==  -1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  if(v  ==  -1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(v  ==  -1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u    ==    -1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
474	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  10)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  10)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-1;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	95	1	replace
475	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  10)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  10)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  10)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-1;    }    else    {    throw    new    ArithmeticException(   "   ");    }    timeout    	compilable	timeout	95	1	replace
476	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  1)  {  if(u  >  -1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  1)  {  if(u  >  -1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  1)  {  if(u  >  -1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u    >=    -1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
477	[BUG]  [BUGGY]  if(u  >  0)  {  if(v  >=  1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  if(v  >=  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(v  >=  1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u    >=    -1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
478	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  if(u>0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0)  {  if(u>0)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
479	[BUG]  [BUGGY]  if(u  <  =  0)  {  if(u>0)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0)  {  if(u>0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0)  {  if(u>0)  {  u=-v;  }	  if(u    <    0)    {    if(u>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
480	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  /  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.floor(u  /  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u  /  1);	  int    v=(int)Math.floor(u    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	17	None	replace
481	[BUG]  [BUGGY]  int  v  =  Math.abs(u  /  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u  /  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u  /  1,  v);	  int    v    =    Math.abs(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	44	None	replace
482	[BUG]  [BUGGY]  if(u  <  0)  {  u=-v;  }  int  u  <  0)  {  u=-v;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0)  {  u=-v;  }  int  u  <  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0)    {    u=-v;    }    int  u  <  0)  {  u=-v;  }	  timeout    	non-compiled	[CE]  ';'  expected	60	None	add
483	[BUG]  [BUGGY]  while(u  <  1)  {  if(v>1)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  while(u  <  1)  {  if(v>1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	while(u  <  1)  {  if(v>1)  {  u=-v;  }	  while(u    <    1)    {    if(v>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
484	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-u;  }  if(u  {  0)  {  u=-u;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-u;  }  if(u  {  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    ==    0)    {    u=-u;    }    if(u  {  0)  {  u=-u;  }	  timeout    	non-compiled	[CE]  ')'  expected	115	None	add
485	[BUG]  [BUGGY]  int  v=(int)Math.abs(u,  denominator);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.abs(u,  denominator);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u,  denominator);	  int    v=(int)Math.abs(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	21	None	replace
486	[BUG]  [BUGGY]  int  v  =  Math.abs(v  -  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(v  -  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(v  -  1);	  int    v    =    Math.abs(u    -    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	45	None	replace
487	[BUG]  [BUGGY]  u=(v  <  <  16)?  -1  :  -u;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=(v  <  <  16)?  -1  :  -u;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=(v  <  <  16)?  -1  :  -u;	  u=-u;    timeout    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
488	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v,  a1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.floor(v,  a1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(v,  a1);	  int    u    =(int)Math.floor(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	101	None	replace
489	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v,  a);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.floor(v,  a);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(v,  a);	  int    u    =(int)Math.floor(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	101	None	replace
490	[BUG]  [BUGGY]  int  u  =(int)Math.floor(hashCode,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.floor(hashCode,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(hashCode,  v);	  int    u    =(int)Math.floor(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	101	None	replace
491	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(     "     ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "     ");  }  if(u  <  0  ||  v  >  0)  {  u=-n;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  cannot  find  symbol  n  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(     "     ");    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException(   "     ");  }  if(u  <  0  ||  v  >  0)  {  u=-n;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        else        {        throw        new        ArithmeticException(       "       ");        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "       ");    }    if(u  <  0  ||  v  >  0)  {  u=-n;  }  else  {  throw  new  ArithmeticException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol  n	5	None	add
492	[BUG]  [BUGGY]  int  v  =  Math.abs(wrapped);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(wrapped);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(wrapped);	  int    v    =    Math.abs(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	122	None	replace
493	[BUG]  [BUGGY]  if(u  <  31)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  31)  {  if(u>0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  31)  {  if(u>0)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
494	[BUG]  [BUGGY]  if(u  <  a  ||  v  >  1)  {  if(u>1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  a  ||  v  >  1)  {  if(u>1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  a  ||  v  >  1)  {  if(u>1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
495	[BUG]  [BUGGY]  char  u  =(char)Math.abs(v,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =(char)Math.abs(v,  u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =(char)Math.abs(v,  u);	  int    u    =(int)Math.abs(u,    v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	70	None	replace
496	[BUG]  [BUGGY]  int  v  =  Math.min(10.0,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.min(10.0,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.min(10.0,  v);	  int    u    =    Math.min(10.0,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	107	None	replace
497	[BUG]  [BUGGY]  char  u  =(char)Math.abs(u  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =(char)Math.abs(u  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =(char)Math.abs(u  +  1);	  int    u    =(int)Math.abs(u    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	72	None	replace
498	[BUG]  [BUGGY]  if(u  >  0)  {  u=-1;  }  If(u  >  0)  {  u=-1;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-1;  }  If(u  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    >    0)    {    u=-1;    }    If(u  >  0)  {  u=-1;  }	  timeout    	non-compiled	[CE]  ';'  expected	112	None	add
499	[BUG]  [BUGGY]  float  u  =(float)Math.floor(v,  u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.floor(v,  u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.floor(v,  u);	  float    u    =(float)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	100	None	replace
500	[BUG]  [BUGGY]  double  u  =(double)Math.floor(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  double  u  =(double)Math.floor(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	double  u  =(double)Math.floor(u);	  float    u    =(float)Math.floor(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	100	None	replace
501	[BUG]  [BUGGY]  if(u  <  31  ||  v  >  1)  {  if(u>1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  31  ||  v  >  1)  {  if(u>1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  31  ||  v  >  1)  {  if(u>1)  {  u=-u;  }	  if(u    <    0    ||    v    >    31)    {    if(u>1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
502	[BUG]  [BUGGY]  if(u  >  0)  {  u=-a;  }  [CE]  cannot  find  symbol  a  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  u=-a;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  u=-a;  }	  if(u    >    0)    {    u=-u;    }    if(u    >    0)    {    u=-n;    }    	non-compiled	[CE]  cannot  find  symbol  a	105	None	replace
503	[BUG]  [BUGGY]  char  u  =  Math.abs(1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =  Math.abs(1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =  Math.abs(1);	  int    u    =    Math.abs(1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	109	None	replace
504	[BUG]  [BUGGY]  char  v=(char)Math.ceil(u,  0);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  v=(char)Math.ceil(u,  0);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  v=(char)Math.ceil(u,  0);	  int    v=(int)Math.ceil(u,    0);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	83	None	replace
505	[BUG]  [BUGGY]  u=-v;  ((  u&1)  ==  0  &&(v&2)  ==  0)||(v>1)  ==  0)||(v  <  31)||(v>1)  ==  0)  {  return  1;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v;  ((  u&1)  ==  0  &&(v&2)  ==  0)||(v>1)  ==  0)||(v  <  31)||(v>1)  ==  0)  {  return  1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-v;    ((  u&1)  ==  0  &&(v&2)  ==  0)||(v>1)  ==  0)||(v  <  31)||(v>1)  ==  0)  {  return  1;  }	  timeout    	non-compiled	[CE]  not  a  statement	32	None	add
506	[BUG]  [BUGGY]  u=-v;  ((  u&1)  ==  0  &&(v&2)  ==  0)||(v  <  31)||(v>1)  ==  0)||(v>1)  {  return  1;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v;  ((  u&1)  ==  0  &&(v&2)  ==  0)||(v  <  31)||(v>1)  ==  0)||(v>1)  {  return  1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-v;    ((  u&1)  ==  0  &&(v&2)  ==  0)||(v  <  31)||(v>1)  ==  0)||(v>1)  {  return  1;  }	  timeout    	non-compiled	[CE]  not  a  statement	32	None	add
507	[BUG]  [BUGGY]  u=-v;  ((  u&1)  ==  0  &&(v&2)  ==  0)||(v>1)  ==  0)||(v  <  31)||(v>1)  {  return  1;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-v;  ((  u&1)  ==  0  &&(v&2)  ==  0)||(v>1)  ==  0)||(v  <  31)||(v>1)  {  return  1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-v;    ((  u&1)  ==  0  &&(v&2)  ==  0)||(v>1)  ==  0)||(v  <  31)||(v>1)  {  return  1;  }	  timeout    	non-compiled	[CE]  not  a  statement	32	None	add
508	[BUG]  [BUGGY]  float  u  =  Math.abs(a);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =  Math.abs(a);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =  Math.abs(a);	  int    u    =    Math.abs(a);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	64	None	replace
509	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  >=  0)  {  u=-u;  }	  if(u    ==    0)    {    u=-u;    }    timeout    	compilable	timeout	116	1	replace
510	[BUG]  [BUGGY]  if(u  >=  0)  {  u=-u;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >=  0)  {  u=-u;  }	  if(u    ==    0)    {    u=-u;    }    timeout    	compilable	timeout	116	1	replace
511	[BUG]  [BUGGY]  int  u  =  Math.min(a,  v  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(a,  v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(a,  v  +  1);	  int    u    =    Math.min(u,    v    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	26	None	replace
512	[BUG]  [BUGGY]  u=-u;  for(int  v=0;  v  <  u;  v++)  {  if(v>0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u;  for(int  v=0;  v  <  u;  v++)  {  if(v>0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-u;    for(int  v=0;  v  <  u;  v++)  {  if(v>0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	8	None	add
513	[BUG]  [BUGGY]  u=-u;  for(int  v=0;  v  <  u;  v++)  {  if(v>0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u;  for(int  v=0;  v  <  u;  v++)  {  if(v>0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-u;    for(int  v=0;  v  <  u;  v++)  {  if(v>0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	8	None	add
514	[BUG]  [BUGGY]  u=-u;  for(int  v=0;  v  <  u;  v++)  {  if(v>0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=-u;  for(int  v=0;  v  <  u;  v++)  {  if(v>0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=-u;    for(int  v=0;  v  <  u;  v++)  {  if(v>0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	8	None	add
515	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>1  ||  v  <  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>1  ||  v  <  1)  {  u=-u;  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    If(u    <    0    ||    v    >    0)    {    u=-u;    }    	compilable	timeout	110	1	replace
516	[BUG]  [BUGGY]  if(u>1  ||  v  <  1)  {  u=-u;  }  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>1  ||  v  <  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>1  ||  v  <  1)  {  u=-u;  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    If(u    <    0    ||    v    >    0)    {    u=-u;    }    	compilable	timeout	110	1	replace
517	[BUG]  [BUGGY]  char  u  =  Math.min(v,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =  Math.min(v,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =  Math.min(v,  v);	  char    u    =    Math.min(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	119	None	replace
518	[BUG]  [BUGGY]  char  u  =  Math.min(v,  a);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =  Math.min(v,  a);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =  Math.min(v,  a);	  char    u    =    Math.min(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	119	None	replace
519	[BUG]  [BUGGY]  int  u  =  Math.min(v,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(v,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(v,  v);	  char    u    =    Math.min(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	119	None	replace
520	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  <  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(v  <  0)  {  v=-v;  }	  if(u    <    0)    {    v=-v;    }    timeout    	compilable	timeout	91	1	replace
521	[BUG]  [BUGGY]  if(v  <  0)  {  v=-v;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  <  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(v  <  0)  {  v=-v;  }	  if(u    <    0)    {    v=-v;    }    timeout    	compilable	timeout	91	1	replace
522	[BUG]  [BUGGY]  int  v=(int)Math.floor(u,  v  +  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.floor(u,  v  +  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u,  v  +  1,  v);	  int    v=(int)Math.floor(u,    v    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	19	None	replace
523	[BUG]  [BUGGY]  int  v=(int)Math.floor(u,  v  *  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.floor(u,  v  *  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u,  v  *  1);	  int    v=(int)Math.floor(u,    v    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	19	None	replace
524	[BUG]  [BUGGY]  if(v  >  0  ||  v  <  =  0)  {  v=-v;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  >  0  ||  v  <  =  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(v  >  0  ||  v  <  =  0)  {  v=-v;  }	  if(u    >    0    ||    v    <    =    0)    {    v=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
525	[BUG]  [BUGGY]  int  u  =(int)Math.floor(wrapped,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.floor(wrapped,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(wrapped,  v);	  int    u    =(int)Math.floor(wrapped);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	102	None	replace
526	[BUG]  [BUGGY]  int  v  =  Math.abs(u,  denominator);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.abs(u,  denominator);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.abs(u,  denominator);	  int    v    =    Math.abs(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	79	None	replace
527	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  <  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        >        0)        {        u=-v;        }        if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  <  0)  {  u=-v;  }	  	compilable	  [FE]  AssertionFailedError  	73	9	add
528	[BUG]  [BUGGY]  if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  <  0)  {  u=-v;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  <  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        >        0)        {        u=-v;        }        if(u    >    0)    {    u=-v;    }    if(u  >  0)  {  u=-v;  }  if(u  >  0)  {  u=-v;  }  if(u  <  0)  {  u=-v;  }	  	compilable	  [FE]  AssertionFailedError  	73	9	add
529	[BUG]  [BUGGY]  int  v=(int)Math.abs(u  /  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.abs(u  /  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u  /  1);	  int    v=(int)Math.abs(u    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	20	None	replace
530	[BUG]  [BUGGY]  int  v=(int)Math.abs(v  +  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.abs(v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(v  +  1);	  int    v=(int)Math.abs(u    +    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	20	None	replace
531	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  /  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.floor(u  /  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.floor(u  /  1,  v);	  int    v=(int)Math.floor(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	18	None	replace
532	[BUG]  [BUGGY]  (u  <  31  ||  v  >  0)  {  u=-u;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  (u  <  31  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	(u  <  31  ||  v  >  0)  {  u=-u;  }	  (u    <    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  not  a  statement	82	None	replace
533	[BUG]  [BUGGY]  (u  <  32  ||  v  >  32)  {  u=-u;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  (u  <  32  ||  v  >  32)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	(u  <  32  ||  v  >  32)  {  u=-u;  }	  (u    <    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  not  a  statement	82	None	replace
534	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u  {  0)  {  u=-v;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  ==  0)  {  u=-v;  }  if(u  {  0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    ==    0)    {    u=-v;    }    if(u  {  0)  {  u=-v;  }	  timeout    	non-compiled	[CE]  ')'  expected	86	None	add
535	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u  <  31)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u  <  31)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
536	[BUG]  [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u  <  31)  {  v=-1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u>0)    {    v=-v;    }    if(u>0)  {  v=-1;  }  if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u  <  31)  {  v=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u>0)        {        v=-v;        }        if(u>0)    {    v=-1;    }    if(u>0)  {  v=-v;  }  if(u>0)  {  v=-1;  }  if(u  <  31)  {  v=-1;  }	  	compilable	  [FE]  AssertionFailedError  	96	8	add
537	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(U  <  0  ||  v  >  0)  {  u=-u;  }  [CE]  cannot  find  symbol  U  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(U  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(U  <  0  ||  v  >  0)  {  u=-u;  }	  	non-compiled	[CE]  cannot  find  symbol  U	12	None	add
538	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  int  u  <  0  ||  v  >  0)  {  u=-1;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  int  u  <  0  ||  v  >  0)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u    <    0    ||    v    >    0)    {    u=-1;    }    int  u  <  0  ||  v  >  0)  {  u=-1;  }	  timeout    	non-compiled	[CE]  ';'  expected	120	None	add
539	[BUG]  [BUGGY]  int  v  =  Math.min(Math.min(u,  v));  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.min(Math.min(u,  v));  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.min(Math.min(u,  v));	  int    v    =    Math.min(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	106	None	replace
540	[BUG]  [BUGGY]  int  v  =  Math.min(um(u,  v));  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.min(um(u,  v));  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.min(um(u,  v));	  int    v    =    Math.min(u,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	106	None	replace
541	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  =  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0  ||  v  <  =  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0  ||  v  <  =  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    =    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
542	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  <  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(v  <  0  ||  v  >  0)  {  v=-v;  }	  if(u    <    0    ||    v    >    0)    {    v=-v;    }    timeout    	compilable	timeout	54	1	replace
543	[BUG]  [BUGGY]  if(v  <  0  ||  v  >  0)  {  v=-v;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  <  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(v  <  0  ||  v  >  0)  {  v=-v;  }	  if(u    <    0    ||    v    >    0)    {    v=-v;    }    timeout    	compilable	timeout	54	1	replace
544	[BUG]  [BUGGY]  int  u  =  Math.min(v,  a1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(v,  a1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(v,  a1);	  int    u    =    Math.min(v,    u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	27	None	replace
545	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  if(u  ==  -1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  if(u  ==  -1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0)  {  if(u  ==  -1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u    ==    -1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
546	[BUG]  [BUGGY]  if(u  >  0)  {  if(v  <  1)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >  0)  {  if(v  <  1)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >  0)  {  if(v  <  1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u    ==    -1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
547	[BUG]  [BUGGY]  if(u  >=  0  ||  v  >  1)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  >=  0  ||  v  >  1)  {  if(u>0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  >=  0  ||  v  >  1)  {  if(u>0)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
548	[BUG]  [BUGGY]  int  v=(int)Math.abs(u  /  1,  v);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v=(int)Math.abs(u  /  1,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v=(int)Math.abs(u  /  1,  v);	  int    v=(int)Math.abs(u    +    1,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	22	None	replace
549	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  31)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  31)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-v;    }    	compilable	timeout	66	1	replace
550	[BUG]  [BUGGY]  if(u  <  31)  {  v=-v;  }  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  31)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  31)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    if(u>0)    {    v=-v;    }    	compilable	timeout	66	1	replace
551	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  u=-1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  u=-1;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  1)  {  u=-1;  }	  if(u    <    =    0    ||    v    >    1)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
552	[BUG]  [BUGGY]  double  u  =(double)Math.abs(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  double  u  =(double)Math.abs(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	double  u  =(double)Math.abs(u);	  float    u    =(float)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	71	None	replace
553	[BUG]  [BUGGY]  float  u  =(float)Math.sin(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  float  u  =(float)Math.sin(v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	float  u  =(float)Math.sin(v);	  float    u    =(float)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	71	None	replace
554	[BUG]  [BUGGY]  int  u  =(int)Math.floor(len  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.floor(len  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.floor(len  +  1);	  int    u    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	25	None	replace
555	[BUG]  [BUGGY]  char  u  =(char)Math.floor(u  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =(char)Math.floor(u  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =(char)Math.floor(u  +  1);	  int    u    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	25	None	replace
556	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  0)  {  u=-v;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(       "       ");    }    if(u    <    0    ||    v    >    0)    {    u=-n;    }    else    {    throw    new    ArithmeticException(   "       ");    }    	compilable	timeout	124	1	replace
557	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  else  {  throw  new  ArithmeticException( " ");  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0)  {  u=-v;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(       "       ");    }    if(u    <    0    ||    v    >    0)    {    u=-n;    }    else    {    throw    new    ArithmeticException(   "       ");    }    	compilable	timeout	124	1	replace
558	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-a;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  cannot  find  symbol  a  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-a;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0)  {  u=-a;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(       "       ");    }    if(u    <    0    ||    v    >    0)    {    u=-n;    }    else    {    throw    new    ArithmeticException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  a	124	None	replace
559	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v>0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(v>0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    if(u    >    0)    {    u=-v;    }    	compilable	timeout	74	1	replace
560	[BUG]  [BUGGY]  if(v>0)  {  u=-v;  }  timeout  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v>0)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(v>0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    if(u    >    0)    {    u=-v;    }    	compilable	timeout	74	1	replace
561	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  if(u  <  1)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  if(u  <  1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  0)  {  if(u  <  1)  {  u=-v;  }	  if(u    >    0)    {    if(u    <    1)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
562	[BUG]  [BUGGY]  if(v  <  =  0  ||  v  >  0)  {  v=-v;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  <  =  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(v  <  =  0  ||  v  >  0)  {  v=-v;  }	  if(u    <    =    0    ||    v    >    0)    {    v=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
563	[BUG]  [BUGGY]  if(v  <  =  0  ||  u  >  0)  {  v=-v;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(v  <  =  0  ||  u  >  0)  {  v=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(v  <  =  0  ||  u  >  0)  {  v=-v;  }	  if(u    <    =    0    ||    v    >    0)    {    v=-v;    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
564	[BUG]  [BUGGY]  u=(v  <  <  1)?  0  :  -v;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  u=(v  <  <  1)?  0  :  -v;  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	u=(v  <  <  1)?  0  :  -v;	  u=-v;    timeout    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
565	[BUG]  [BUGGY]  int  u  =  Math.abs(v  -  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.abs(v  -  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.abs(v  -  1);	  int    u    =    Math.abs(v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	63	None	replace
566	[BUG]  [BUGGY]  int  u  =  Math.abs(v  +  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.abs(v  +  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.abs(v  +  1);	  int    u    =    Math.abs(v);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	63	None	replace
567	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  31)  {  u=-v;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  =  0  ||  v  >  31)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  =  0  ||  v  >  31)  {  u=-v;  }	  if(u    <    =    0    ||    v    >    31)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
568	[BUG]  [BUGGY]  char  v=(char)Math.ceil(u,  denominator);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  v=(char)Math.ceil(u,  denominator);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  v=(char)Math.ceil(u,  denominator);	  int    v=(int)Math.ceil(u,    denominator);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	129	None	replace
569	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  ==  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0)        {        u=-u;        }        if(u    >=    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  ==  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
570	[BUG]  [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  ==  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0)    {    u=-u;    }    if(u  >=  0)  {  u=-u;  }  if(u  <  0)  {  u=-u;  }  if(u  ==  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0)        {        u=-u;        }        if(u    >=    0)    {    u=-u;    }    if(u  <  0)  {  u=-u;  }  if(u  ==  0)  {  u=-u;  }  if(u  >=  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
571	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u!=  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    >=    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u!=  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
572	[BUG]  [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u!=  0  ||  v  >  0)  {  u=-u;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u    <    0    ||    v    >    0)    {    u=-u;    }    if(u  >=  0  ||  v  >  0)  {  u=-u;  }  if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u!=  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u        <        0        ||        v        >        0)        {        u=-u;        }        if(u    >=    0    ||    v    >    0)    {    u=-u;    }    if(u  <  0  ||  v  >  0)  {  u=-u;  }  if(u!=  0  ||  v  >  0)  {  u=-u;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
573	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	add	if(u  <  0  ||  v  >  1)  {  u=-v;  }	  if(u    <    0    ||    v    >    0)    {    u=-v;    }    timeout    	compilable	timeout	59	1	replace
574	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-v;  }  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-v;  }  [BUGGY]      if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	if(u  <  0  ||  v  >  1)  {  u=-v;  }	  if(u    <    0    ||    v    >    0)    {    u=-v;    }    timeout    	compilable	timeout	59	1	replace
575	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(hashCode,  v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =(int)Math.ceil(hashCode,  v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =(int)Math.ceil(hashCode,  v);	  int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	114	None	replace
576	[BUG]  [BUGGY]  char  u  =(char)Math.ceil(u);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  char  u  =(char)Math.ceil(u);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	char  u  =(char)Math.ceil(u);	  int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	114	None	replace
577	[BUG]  [BUGGY]  int  v  =  Math.min(v,  u  -  1);  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  v  =  Math.min(v,  u  -  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  v  =  Math.min(v,  u  -  1);	  int    u    =    Math.min(u,    v    -    1);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	28	None	replace
578	[BUG]  [BUGGY]  int  u  =  Math.min(a,  v  -  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  int  u  =  Math.min(a,  v  -  1);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	int  u  =  Math.min(a,  v  -  1);	  int    u    =    Math.min(u,    v    -    1);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	28	None	replace
579	[BUG]  [BUGGY]  Character  u  =(Character)Math.abs(v);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  greatestCommonDivisor(int  u,  int  v)  {  if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }          [BUGGY]  Character  u  =(Character)Math.abs(v);  [BUGGY]      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	578	580	1	replace	Character  u  =(Character)Math.abs(v);	  char    u    =(char)Math.abs(u);    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	127	None	replace
