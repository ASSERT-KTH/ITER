bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(gcd  ==  0.0)  {  if(gcd  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0)  {  if(gcd  ==  0.0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0)    {    if(gcd  ==  0.0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
2	[BUG]  [BUGGY]  if(gcd  ==  0.0)  {  if(gcd!=  0.0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0)  {  if(gcd!=  0.0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0)    {    if(gcd!=  0.0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
3	[BUG]  [BUGGY]  if(gcd  ==  0.0)  {  if(gcd  >=  0.0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0)  {  if(gcd  >=  0.0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0)    {    if(gcd  >=  0.0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
4	[BUG]  [BUGGY]  if(gcd  ==  0.0)  {  If(gcd  ==  0.0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0)  {  If(gcd  ==  0.0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0)    {    If(gcd  ==  0.0)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
5	[BUG]  [BUGGY]  if(gcd!=  0)  {  if(gcd!=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  0)  {  if(gcd!=  0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0)    {    if(gcd!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
6	[BUG]  [BUGGY]  if(gcd!=  0)  {  if(gcd  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  0)  {  if(gcd  >=  0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0)    {    if(gcd  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
7	[BUG]  [BUGGY]  if(gcd!=  0)  {  if(gcd  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  0)  {  if(gcd  ==  0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0)    {    if(gcd  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
8	[BUG]  [BUGGY]  if(gcd!=  0)  {  if(gcd  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  0)  {  if(gcd  >>  0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0)    {    if(gcd  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
9	[BUG]  [BUGGY]  if(gcd  ==  denominator)  {  if(gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  denominator)  {  if(gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    denominator)    {    if(gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
10	[BUG]  [BUGGY]  if(gcd  ==  denominator)  {  if(gcd!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  denominator)  {  if(gcd!=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    denominator)    {    if(gcd!=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
11	[BUG]  [BUGGY]  if(gcd  ==  denominator)  {  if(gcd  ==  desnominator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  denominator)  {  if(gcd  ==  desnominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    denominator)    {    if(gcd  ==  desnominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
12	[BUG]  [BUGGY]  if(gcd  ==  denominator)  {  if(gcd  >=  denominator)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  denominator)  {  if(gcd  >=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    denominator)    {    if(gcd  >=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
13	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0.0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
18	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0.0  ||  gcd!=  denominator)  {	  if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
20	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0  ||  gcd!=  denominator)  {	  if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0.0  ||  gcd  <  denominator)  {	  if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
22	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0  ||  gcd  <  denominator)  {	  if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0  ||  gcd!=  denominator)  {	  if(gcd!=    0)    {    	compilable	  [FE]  AssertionFailedError  	12	1	replace
24	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0  ||  gcd!=  denominator)  {	  if(gcd!=    0)    {    	compilable	  [FE]  AssertionFailedError  	12	1	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  >=  0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  >=  0)  {	  if(gcd!=    0)    {    	compilable	  [FE]  AssertionFailedError  	12	1	replace
26	[BUG]  [BUGGY]  if(gcd  >=  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  >=  0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  >=  0)  {	  if(gcd!=    0)    {    	compilable	  [FE]  AssertionFailedError  	12	1	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  numerator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  numerator)  {	  if(gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	17	1	replace
28	[BUG]  [BUGGY]  if(gcd  ==  numerator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  numerator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  numerator)  {	  if(gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	17	1	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  numerator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd!=  numerator)  {	  if(gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	17	1	replace
30	[BUG]  [BUGGY]  if(gcd!=  numerator)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  numerator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=  numerator)  {	  if(gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	17	1	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  <  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  denominator)  {	  if(gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	17	1	replace
32	[BUG]  [BUGGY]  if(gcd  <  denominator)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  <  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  denominator)  {	  if(gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	17	1	replace
33	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);	      gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);	      gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
35	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);	      gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
36	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator,  denominator));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator,  denominator));  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator,  denominator));	      gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
37	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  toProperString);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  toProperString);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  toProperString);	      gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
38	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(gcd),  denominator);	      int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
39	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator));	      int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);	      int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
41	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd  ==  0  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
42	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd!=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd  ==  0  ||  gcd!=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
43	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  if(gcd!=  0  ||  gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  if(gcd!=  0  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd!=  0  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
44	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  If(gcd  ==  0  ||  gcd  ==  denominator)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  If(gcd  ==  0  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd    ==    denominator)    {    If(gcd  ==  0  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0  ||  gcd  <  denominator)  {	  if(gcd    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
46	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0  ||  gcd  <  denominator)  {	  if(gcd    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
47	[BUG]  [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  pos  is  already  defined  in  method  reduce()  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  reduce()	1	None	add
48	[BUG]  [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  [CE]  variable  pos  is  already  defined  in  method  reduce()  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  pos  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  reduce()	1	None	add
49	[BUG]  [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  pos  =  greatestCommonDivisor(Math.abs(numerator)),  denominator);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  pos  =  greatestCommonDivisor(Math.abs(numerator)),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  pos  =  greatestCommonDivisor(Math.abs(numerator)),  denominator);	  	non-compiled	[CE]  ';'  expected	1	None	add
50	[BUG]  [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator);  [CE]  variable  pos  is  already  defined  in  method  reduce()  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  pos  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  reduce()	1	None	add
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
52	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd!=  0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
54	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=  0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
55	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(gcd),  denominator);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
56	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
57	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator,  denominator));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator,  denominator));  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator,  denominator));	      int    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
59	[BUG]  [BUGGY]  float  pos  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  float  pos  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	float  pos  =  greatestCommonDivisor(Math.abs(numerator));	      int    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
60	[BUG]  [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	7	None	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	        int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	7	1	add
62	[BUG]  [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	7	1	add
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	        int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	7	1	add
64	[BUG]  [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	7	1	add
65	[BUG]  [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	7	None	add
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	        int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	7	1	add
67	[BUG]  [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	7	1	add
68	[BUG]  [BUGGY]  if(gcd  ==  0)  {  if(gcd  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0)  {  if(gcd  ==  0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0)    {    if(gcd  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
69	[BUG]  [BUGGY]  if(gcd  ==  0)  {  if(gcd!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0)  {  if(gcd!=  0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0)    {    if(gcd!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
70	[BUG]  [BUGGY]  if(gcd  ==  0)  {  if(gcd  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0)  {  if(gcd  >=  0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0)    {    if(gcd  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
71	[BUG]  [BUGGY]  if(gcd  ==  0)  {  If(gcd  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0)  {  If(gcd  ==  0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0)    {    If(gcd  ==  0)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
73	[BUG]  [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
74	[BUG]  [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  [CE]  cannot  find  symbol  desnominator  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);	  	non-compiled	[CE]  cannot  find  symbol  desnominator	3	None	add
75	[BUG]  [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  gcd  is  already  defined  in  method  reduce()  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  method  reduce()	3	None	add
76	[BUG]  [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator)),  denominator);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator)),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator)),  denominator);	  	non-compiled	[CE]  ';'  expected	3	None	add
77	[BUG]  [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator);  [CE]  cannot  find  symbol  dedeninator  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator);	  	non-compiled	[CE]  cannot  find  symbol  dedeninator	3	None	add
78	[BUG]  [BUGGY]  if(gcd  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0)    {    int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
79	[BUG]  [BUGGY]  if(gcd  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0)    {    int  gcd  =  greatestCommonDivisor(Math.abs(numerator));	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
80	[BUG]  [BUGGY]  if(gcd  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0)    {    int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
81	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);	      gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
82	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  deserator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  deserator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd  ==  0  ||  gcd  ==  deserator)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
83	[BUG]  [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	7	None	add
84	[BUG]  [BUGGY]  if(gcd!=  0)  {  If(gcd!=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  0)  {  If(gcd!=  0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0)    {    If(gcd!=  0)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
85	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);	      int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
86	[BUG]  [BUGGY]  if(gcd  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0)    {    int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
87	[BUG]  [BUGGY]  if(gcd  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0)    {    int  gcd  =  greatestCommonDivisor(Math.abs(numerator));	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
88	[BUG]  [BUGGY]  if(gcd  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0)    {    int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
89	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
90	[BUG]  [BUGGY]  if(gcd  ==  denominator)  {  If(gcd  ==  denominator)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  denominator)  {  If(gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    denominator)    {    If(gcd  ==  denominator)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
91	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(denominator));	      gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
92	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator),  numerator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator),  numerator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(denominator),  numerator);	      gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
93	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	      gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
94	[BUG]  [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Integer  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  pos  is  already  defined  in  method  reduce()  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Integer  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    Integer  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  reduce()	1	None	add
95	[BUG]  [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  pos  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  variable  pos  is  already  defined  in  method  reduce()  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  pos  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  pos  =  greatestCommonDivisor(Math.abs(numerator));	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  reduce()	1	None	add
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0.0  ||  gcd  >=  denominator)  {	  if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
97	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0  ||  gcd  >=  denominator)  {	  if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
98	[BUG]  [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  cannot  assign  a  value  to  final  variable  denominator  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  denominator	3	None	add
99	[BUG]  [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  method  greatestCommonDivisor  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator));	  	non-compiled	[CE]  method  greatestCommonDivisor  in  class  Fraction  cannot  be  applied  to  given  types;	3	None	add
100	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
101	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);	      gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd!=  0  ||  gcd  <  denominator)  {	  if(gcd!=    0)    {    	compilable	  [FE]  AssertionFailedError  	12	1	replace
103	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=  0  ||  gcd  <  denominator)  {	  if(gcd!=    0)    {    	compilable	  [FE]  AssertionFailedError  	12	1	replace
104	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  desnominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  desnominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd  ==  0  ||  gcd  ==  desnominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
105	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator);	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0.0  ||  gcd  >  0.0)  {	  if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
107	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0  ||  gcd  >  0.0)  {	  if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
108	[BUG]  [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    Int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  numerator  ||  gcd  ==  denominator)  {	  if(gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	17	1	replace
110	[BUG]  [BUGGY]  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  numerator  ||  gcd  ==  denominator)  {	  if(gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	17	1	replace
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
112	[BUG]  [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]      gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0  ||  denominator  ==  gcd)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
114	[BUG]  [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0  ||  denominator  ==  gcd)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
115	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
