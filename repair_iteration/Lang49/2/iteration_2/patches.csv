bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0  ||  denominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(numerator  ==  0  ||  denominator  ==  gcd)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd    ==    desnominator)    {    	compilable	  [FE]  AssertionFailedError  	104	1	replace
2	[BUG]  [BUGGY]  if(numerator  ==  0  ||  denominator  ==  gcd)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0  ||  denominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0  ||  denominator  ==  gcd)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd    ==    desnominator)    {    	compilable	  [FE]  AssertionFailedError  	104	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  denominator  ||  gcd  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  denominator  ||  gcd  ==  0)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd    ==    desnominator)    {    	compilable	  [FE]  AssertionFailedError  	104	1	replace
4	[BUG]  [BUGGY]  if(gcd  ==  denominator  ||  gcd  ==  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  denominator  ||  gcd  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  denominator  ||  gcd  ==  0)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd    ==    desnominator)    {    	compilable	  [FE]  AssertionFailedError  	104	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  numerator  ||  gcd!=  denominator)  {	  if(gcd!=    numerator)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
6	[BUG]  [BUGGY]  if(gcd  ==  numerator  ||  gcd!=  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  numerator  ||  gcd!=  denominator)  {	  if(gcd!=    numerator)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0)  {	  if(gcd!=    0)    {    if(gcd    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
8	[BUG]  [BUGGY]  if(gcd  <  0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0)  {	  if(gcd!=    0)    {    if(gcd    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
9	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    >=    denominator)    {    if(gcd  ==  0.0  ||  gcd!=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
10	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    >=    denominator)    {    if(gcd  ==  0.0  ||  gcd  >=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
11	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  if(gcd  ==  0.0  ||  gcd  >>  denominator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  if(gcd  ==  0.0  ||  gcd  >>  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    >=    denominator)    {    if(gcd  ==  0.0  ||  gcd  >>  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
12	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
13	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
14	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);	  int    a1    =    greatestCommonDivisor(Math.abs(gcd),    denominator);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
15	[BUG]  [BUGGY]  double  pos  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  double  pos  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	double  pos  =  greatestCommonDivisor(Math.abs(numerator));	  float    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
16	[BUG]  [BUGGY]  long  pos  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  long  pos  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	long  pos  =  greatestCommonDivisor(Math.abs(numerator));	  float    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
17	[BUG]  [BUGGY]  float  pos  =  greatestCommonDivisor(Math.abs(gcd));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  float  pos  =  greatestCommonDivisor(Math.abs(gcd));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	float  pos  =  greatestCommonDivisor(Math.abs(gcd));	  float    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  &&  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0.0  &&  gcd!=  denominator)  {	  if(gcd    ==    0.0    ||    gcd!=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
19	[BUG]  [BUGGY]  if(gcd  ==  0.0  &&  gcd!=  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  &&  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0  &&  gcd!=  denominator)  {	  if(gcd    ==    0.0    ||    gcd!=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0.0  ||  gcd!=  denominator)  {	  if(gcd    ==    0.0    ||    gcd!=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
21	[BUG]  [BUGGY]  if(gcd  <  0.0  ||  gcd!=  denominator)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0.0  ||  gcd!=  denominator)  {	  if(gcd    ==    0.0    ||    gcd!=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
22	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator));  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator));  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator));  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator),    desnominator);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
23	[BUG]  [BUGGY]  if(denominator  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(denominator  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(denominator  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	  if(gcd    ==    0.0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
24	[BUG]  [BUGGY]  Integer  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  Integer  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	Integer  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  if(gcd    ==    0.0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(numerator  ==  denominator)  {	  if(gcd    ==    denominator)    {    if(gcd    >=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	12	1	replace
26	[BUG]  [BUGGY]  if(numerator  ==  denominator)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  denominator)  {	  if(gcd    ==    denominator)    {    if(gcd    >=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	12	1	replace
27	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
28	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
29	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
30	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
31	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd!=    denominator)    {    if(gcd  ==  0.0  ||  gcd!=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
32	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd!=    denominator)    {    if(gcd  ==  0.0  ||  gcd  >=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
33	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  if(gcd!=  0.0  ||  gcd!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  if(gcd!=  0.0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd!=    denominator)    {    if(gcd!=  0.0  ||  gcd!=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
34	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  If(gcd  ==  0.0  ||  gcd!=  denominator)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  If(gcd  ==  0.0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd!=    denominator)    {    If(gcd  ==  0.0  ||  gcd!=  denominator)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
35	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  if(gcd  ==  0  ||  gcd!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  if(gcd  ==  0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd!=    denominator)    {    if(gcd  ==  0  ||  gcd!=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
36	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  if(gcd  ==  0  ||  gcd  >=  denominator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  if(gcd  ==  0  ||  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd!=    denominator)    {    if(gcd  ==  0  ||  gcd  >=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
37	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  if(gcd!=  0  ||  gcd!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  if(gcd!=  0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd!=    denominator)    {    if(gcd!=  0  ||  gcd!=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
38	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  If(gcd  ==  0  ||  gcd!=  denominator)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  If(gcd  ==  0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd!=    denominator)    {    If(gcd  ==  0  ||  gcd!=  denominator)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
39	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator));	  if(gcd    ==    0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
40	[BUG]  [BUGGY]  if(numerator  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator));  }  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator));  }	  if(gcd    ==    0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
41	[BUG]  [BUGGY]  Integer  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  Integer  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	Integer  gcd  =  greatestCommonDivisor(Math.abs(numerator));	  if(gcd    ==    0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
42	[BUG]  [BUGGY]  if(numerator  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	  if(gcd    ==    0.0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
43	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0  ||  gcd!=  denominator)  {	  if(gcd    ==    0    ||    gcd!=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	24	1	replace
45	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd!=  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0  ||  gcd!=  denominator)  {	  if(gcd    ==    0    ||    gcd!=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	24	1	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  denominator!=  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0  ||  denominator!=  gcd)  {	  if(gcd    ==    0    ||    gcd!=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	24	1	replace
47	[BUG]  [BUGGY]  if(gcd  ==  0  ||  denominator!=  gcd)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  denominator!=  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0  ||  denominator!=  gcd)  {	  if(gcd    ==    0    ||    gcd!=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	24	1	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	72	1	add
49	[BUG]  [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	72	1	add
50	[BUG]  [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  gcd  is  already  defined  in  method  reduce()  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  method  reduce()	72	None	add
51	[BUG]  [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  method  greatestCommonDivisor  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator));	  	non-compiled	[CE]  method  greatestCommonDivisor  in  class  Fraction  cannot  be  applied  to  given  types;	72	None	add
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	72	1	add
53	[BUG]  [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	72	1	add
54	[BUG]  [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  cannot  find  symbol  desnominator  [FE]            AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  cannot  find  symbol  desnominator	72	None	add
55	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    >    0.0)    {    if(gcd  ==  0.0  ||  gcd  >  0.0)  {	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
56	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  if(gcd!=  0.0  ||  gcd  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  if(gcd!=  0.0  ||  gcd  >  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    >    0.0)    {    if(gcd!=  0.0  ||  gcd  >  0.0)  {	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
57	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  If(gcd  ==  0.0  ||  gcd  >  0.0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  If(gcd  ==  0.0  ||  gcd  >  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    >    0.0)    {    If(gcd  ==  0.0  ||  gcd  >  0.0)  {	  	non-compiled	[CE]  ';'  expected	106	None	add
58	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  if(gcd  >=  0.0  ||  gcd  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  if(gcd  >=  0.0  ||  gcd  >  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    >    0.0)    {    if(gcd  >=  0.0  ||  gcd  >  0.0)  {	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
59	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
60	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  numerator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
61	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  hashCode);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
62	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  *  1),  denominator);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  *  1),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator  *  1),  denominator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator));  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator));  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator));  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a0    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
64	[BUG]  [BUGGY]  if(gcd  ==  numerator)  {  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator)  {  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  numerator)  {  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a0    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
65	[BUG]  [BUGGY]  if(numerator  <  denominator)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  <  denominator)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  <  denominator)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
66	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0.0  ||  gcd  <  denominator)  {	  if(gcd    ==    0.0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
68	[BUG]  [BUGGY]  if(gcd  <  0.0  ||  gcd  <  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0.0  ||  gcd  <  denominator)  {	  if(gcd    ==    0.0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  &&  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0.0  &&  gcd  <  denominator)  {	  if(gcd    ==    0.0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
70	[BUG]  [BUGGY]  if(gcd  ==  0.0  &&  gcd  <  denominator)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  &&  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0  &&  gcd  <  denominator)  {	  if(gcd    ==    0.0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
71	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
72	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
73	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
74	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
75	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
76	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
77	[BUG]  [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  if(gcd  ==  0  ||  denominator  ==  gcd)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  if(gcd  ==  0  ||  denominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    denominator    ==    gcd)    {    if(gcd  ==  0  ||  denominator  ==  gcd)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
78	[BUG]  [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  if(gcd  ==  0  ||  denominator!=  gcd)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  if(gcd  ==  0  ||  denominator!=  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    denominator    ==    gcd)    {    if(gcd  ==  0  ||  denominator!=  gcd)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
79	[BUG]  [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  if(gcd!=  0  ||  denominator  ==  gcd)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  if(gcd!=  0  ||  denominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    denominator    ==    gcd)    {    if(gcd!=  0  ||  denominator  ==  gcd)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
80	[BUG]  [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  If(gcd  ==  0  ||  denominator  ==  gcd)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  If(gcd  ==  0  ||  denominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    denominator    ==    gcd)    {    If(gcd  ==  0  ||  denominator  ==  gcd)  {	  	non-compiled	[CE]  ';'  expected	113	None	add
81	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator));  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator));  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator));  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
82	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  numerator);  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  numerator);  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  numerator);  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
83	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);	  gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
84	[BUG]  [BUGGY]  if(numerator  <  denominator)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  <  denominator)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  <  denominator)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0  ||  gcd  <  denominator)  {	  if(gcd    ==    0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	46	1	replace
86	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  <  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0  ||  gcd  <  denominator)  {	  if(gcd    ==    0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	46	1	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0  ||  gcd  >=  denominator)  {	  if(gcd    ==    0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	46	1	replace
88	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  >=  denominator)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0  ||  gcd  >=  denominator)  {	  if(gcd    ==    0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	46	1	replace
89	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  if(gcd!=  0  ||  gcd  <  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  if(gcd!=  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0    ||    gcd    <    denominator)    {    if(gcd!=  0  ||  gcd  <  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
90	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  if(gcd  >=  0  ||  gcd  <  denominator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  if(gcd  >=  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0    ||    gcd    <    denominator)    {    if(gcd  >=  0  ||  gcd  <  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
91	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  if(gcd  ==  0  ||  gcd  <  denominator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  if(gcd  ==  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0    ||    gcd    <    denominator)    {    if(gcd  ==  0  ||  gcd  <  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
92	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  if(gcd  >>  0  ||  gcd  <  denominator)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  if(gcd  >>  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0    ||    gcd    <    denominator)    {    if(gcd  >>  0  ||  gcd  <  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
93	[BUG]  [BUGGY]  Int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  Int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	Int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    Int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
94	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator));  gcd  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator));  gcd  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator));  gcd  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator);	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator),    dedeninator);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
95	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator));  gcd  =  greatestCommonDivisor(Math.abs(numerator),  dedenator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator));  gcd  =  greatestCommonDivisor(Math.abs(numerator),  dedenator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator));  gcd  =  greatestCommonDivisor(Math.abs(numerator),  dedenator);	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator),    dedeninator);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
96	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator));  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator));  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator));  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a2    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
97	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(gcd),  denominator);	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a2    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
98	[BUG]  [BUGGY]  if(numerator  <  denominator)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator));  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  <  denominator)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator));  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  <  denominator)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator));  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator)),    denominator);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
99	[BUG]  [BUGGY]  if(numerator  <  denominator)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  else  {  gcd  =  greatestCommonDivisor(Math.abs(numerator)  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  <  denominator)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  else  {  gcd  =  greatestCommonDivisor(Math.abs(numerator)  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  <  denominator)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  else  {  gcd  =  greatestCommonDivisor(Math.abs(numerator)	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator)),    denominator);    	non-compiled	[CE]  ')'  expected	76	None	replace
100	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator));  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator));  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator));  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a3    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
101	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(gcd),  denominator);	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a3    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  &&  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0.0  &&  gcd  ==  denominator)  {	  if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
103	[BUG]  [BUGGY]  if(gcd  ==  0.0  &&  gcd  ==  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  &&  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0  &&  gcd  ==  denominator)  {	  if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0.0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
105	[BUG]  [BUGGY]  if(gcd  <  0.0  ||  gcd  ==  denominator)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0.0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
106	[BUG]  [BUGGY]  if(gcd  <  =  0.0)  {  If(gcd  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  =  0.0)  {  If(gcd  ==  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  =  0.0)  {  If(gcd  ==  0.0)  {	  if(gcd    ==    0.0)    {    If(gcd    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
107	[BUG]  [BUGGY]  if(gcd!=  0.0)  {  If(gcd  ==  0.0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0.0)  {  If(gcd  ==  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=  0.0)  {  If(gcd  ==  0.0)  {	  if(gcd    ==    0.0)    {    If(gcd    ==    0.0)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
108	[BUG]  [BUGGY]  if(gcd  ==  0.0)  {  If(gcd!=  0.0)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0)  {  If(gcd!=  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0)  {  If(gcd!=  0.0)  {	  if(gcd    ==    0.0)    {    If(gcd    ==    0.0)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
109	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
110	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
111	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
112	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a0    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	66	None	add
113	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a0    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator));	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	66	None	add
114	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a0    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	66	None	add
115	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a0    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	66	None	add
116	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]            AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a0    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	66	None	add
117	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  if(gcd!=  0  ||  gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  if(gcd!=  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0    ||    gcd    ==    denominator)    {    if(gcd!=  0  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
118	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  if(gcd  >=  0  ||  gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  if(gcd  >=  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0    ||    gcd    ==    denominator)    {    if(gcd  >=  0  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
119	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0    ||    gcd    ==    denominator)    {    if(gcd  ==  0  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
120	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  if(gcd  >>  0  ||  gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  if(gcd  >>  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0    ||    gcd    ==    denominator)    {    if(gcd  >>  0  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
121	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator));  Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator));  Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator));  Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    Integer    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
122	[BUG]  [BUGGY]  Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    Integer    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0.0)  {	  if(gcd    ==    0.0)    {    if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
124	[BUG]  [BUGGY]  if(gcd  <  0.0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0.0)  {	  if(gcd    ==    0.0)    {    if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
125	[BUG]  [BUGGY]  if(gcd  <  =  0.0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  =  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  =  0.0)  {	  if(gcd    ==    0.0)    {    if(gcd    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
126	[BUG]  [BUGGY]  If(gcd  ==  0  ||  gcd  ==  denominator)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  If(gcd  ==  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	If(gcd  ==  0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    If(gcd    ==    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
127	[BUG]  [BUGGY]  if(gcd  ==  0)  {  If(gcd  ==  0  ||  gcd  ==  denominator)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0)  {  If(gcd  ==  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0)  {  If(gcd  ==  0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    If(gcd    ==    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
128	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
129	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
130	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(gcd));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(gcd));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(gcd));	          int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    pos    =    greatestCommonDivisor(Math.abs(numerator)),    denominator);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  >  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0  ||  gcd  >  denominator)  {	  if(gcd    >=    0)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
132	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  >  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  >  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0  ||  gcd  >  denominator)  {	  if(gcd    >=    0)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
133	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
134	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
135	[BUG]  [BUGGY]  if(numerator  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	  if(gcd    ==    0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
136	[BUG]  [BUGGY]  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    numerator    ||    gcd    ==    denominator)    {    if(gcd  ==  numerator  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
137	[BUG]  [BUGGY]  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  if(gcd  ==  numerator  ||  gcd!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  if(gcd  ==  numerator  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    numerator    ||    gcd    ==    denominator)    {    if(gcd  ==  numerator  ||  gcd!=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
138	[BUG]  [BUGGY]  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  if(gcd!=  numerator  ||  gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  if(gcd!=  numerator  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    numerator    ||    gcd    ==    denominator)    {    if(gcd!=  numerator  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
139	[BUG]  [BUGGY]  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  If(gcd  ==  numerator  ||  gcd  ==  denominator)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  If(gcd  ==  numerator  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    numerator    ||    gcd    ==    denominator)    {    If(gcd  ==  numerator  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  ';'  expected	109	None	add
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator  &&  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  numerator  &&  gcd  ==  denominator)  {	  if(gcd    ==    numerator    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	110	1	replace
141	[BUG]  [BUGGY]  if(gcd  ==  numerator  &&  gcd  ==  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator  &&  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  numerator  &&  gcd  ==  denominator)  {	  if(gcd    ==    numerator    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	110	1	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  numerator  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd!=  numerator  ||  gcd  ==  denominator)  {	  if(gcd    ==    numerator    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	110	1	replace
143	[BUG]  [BUGGY]  if(gcd!=  numerator  ||  gcd  ==  denominator)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  numerator  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=  numerator  ||  gcd  ==  denominator)  {	  if(gcd    ==    numerator    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	110	1	replace
144	[BUG]  [BUGGY]  if(gcd!=  0)  {  If(gcd  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0)  {  If(gcd  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=  0)  {  If(gcd  ==  0)  {	  if(gcd!=    0)    {    If(gcd!=    0)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
145	[BUG]  [BUGGY]  if(gcd  ==  0)  {  If(gcd!=  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0)  {  If(gcd!=  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0)  {  If(gcd!=  0)  {	  if(gcd!=    0)    {    If(gcd!=    0)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
146	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
147	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  multiplier);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  multiplier);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  multiplier);	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
148	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator,  hashCode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
149	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
150	[BUG]  [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	float  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    hashCode);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
151	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    hashCode);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
152	[BUG]  [BUGGY]  if(gcd  ==  numerator)  {  if(gcd  ==  numerator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator)  {  if(gcd  ==  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    numerator)    {    if(gcd  ==  numerator)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
153	[BUG]  [BUGGY]  if(gcd  ==  numerator)  {  if(gcd!=  numerator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator)  {  if(gcd!=  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    numerator)    {    if(gcd!=  numerator)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
154	[BUG]  [BUGGY]  if(gcd  ==  numerator)  {  if(gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator)  {  if(gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    numerator)    {    if(gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
155	[BUG]  [BUGGY]  if(gcd  ==  numerator)  {  If(gcd  ==  numerator)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator)  {  If(gcd  ==  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    numerator)    {    If(gcd  ==  numerator)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
156	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator,  denominator  +  1));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator,  denominator  +  1));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator,  denominator  +  1));	  gcd    =    greatestCommonDivisor(Math.abs(numerator,    denominator));    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
157	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator,  denominator)+  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator,  denominator)+  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator,  denominator)+  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator,    denominator));    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >=  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  >=  0  ||  gcd  <  denominator)  {	  if(gcd!=    0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	103	1	replace
159	[BUG]  [BUGGY]  if(gcd  >=  0  ||  gcd  <  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >=  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  >=  0  ||  gcd  <  denominator)  {	  if(gcd!=    0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	103	1	replace
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0  ||  gcd  >=  denominator)  {	  if(gcd    <    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	52	1	replace
161	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  >=  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0  ||  gcd  >=  denominator)  {	  if(gcd    <    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	52	1	replace
162	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator  +  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator  +  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
163	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a3    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	63	None	add
164	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a3    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator));	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	63	None	add
165	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a3  is  already  defined  in  method  reduce()  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a3    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a3  is  already  defined  in  method  reduce()	63	None	add
166	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator,  denominator);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a3    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator,  denominator);	  	non-compiled	[CE]  ')'  expected	63	None	add
167	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3)  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3)  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a3    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3)  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  ';'  expected	63	None	add
168	[BUG]  [BUGGY]  If(gcd  ==  numerator)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  If(gcd  ==  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	If(gcd  ==  numerator)  {	  if(gcd    ==    denominator)    {    If(gcd    ==    denominator)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
169	[BUG]  [BUGGY]  if(gcd  ==  numerator)  {  If(gcd  ==  denominator)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator)  {  If(gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  numerator)  {  If(gcd  ==  denominator)  {	  if(gcd    ==    denominator)    {    If(gcd    ==    denominator)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
170	[BUG]  [BUGGY]  if(numerator  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator));  }  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator));  }	  if(gcd    ==    0.0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
171	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator);	          int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    pos    =    greatestCommonDivisor(Math.abs(numerator),    dedeninator);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
172	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator,  numerator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator,  numerator);	          int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    pos    =    greatestCommonDivisor(Math.abs(numerator),    dedeninator);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
173	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator,  gcd);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator,  gcd);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  dedeninator,  gcd);	          int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    pos    =    greatestCommonDivisor(Math.abs(numerator),    dedeninator);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
174	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    <    denominator)    {    if(gcd  ==  0.0  ||  gcd  <  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
175	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  if(gcd!=  0.0  ||  gcd  <  denominator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  if(gcd!=  0.0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    <    denominator)    {    if(gcd!=  0.0  ||  gcd  <  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
176	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  If(gcd  ==  0.0  ||  gcd  <  denominator)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  If(gcd  ==  0.0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    <    denominator)    {    If(gcd  ==  0.0  ||  gcd  <  denominator)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
177	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  if(gcd  >=  0.0  ||  gcd  <  denominator)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  if(gcd  >=  0.0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    <    denominator)    {    if(gcd  >=  0.0  ||  gcd  <  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
178	[BUG]  [BUGGY]  if(gcd  <  denominator)  {  if(gcd  <  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  denominator)  {  if(gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    <    denominator)    {    if(gcd  <  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
179	[BUG]  [BUGGY]  if(gcd  <  denominator)  {  If(gcd  <  denominator)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  denominator)  {  If(gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    <    denominator)    {    If(gcd  <  denominator)  {	  	non-compiled	[CE]  ';'  expected	31	None	add
180	[BUG]  [BUGGY]  if(gcd  <  denominator)  {  if(gcd  <  desnominator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  denominator)  {  if(gcd  <  desnominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    <    denominator)    {    if(gcd  <  desnominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
181	[BUG]  [BUGGY]  if(gcd  <  denominator)  {  if(gcd  >=  denominator)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  denominator)  {  if(gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    <    denominator)    {    if(gcd  >=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0.0  ||  gcd  >=  denominator)  {	  if(gcd    ==    0.0    ||    gcd    >=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	97	1	replace
183	[BUG]  [BUGGY]  if(gcd  <  0.0  ||  gcd  >=  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0.0  ||  gcd  >=  denominator)  {	  if(gcd    ==    0.0    ||    gcd    >=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	97	1	replace
184	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a1    =    greatestCommonDivisor(Math.abs(numerator),    desnominator);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  denominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0  ||  denominator  ==  gcd)  {	  if(gcd    ==    0    ||    denominator    ==    gcd)    {    	compilable	  [FE]  AssertionFailedError  	114	1	replace
186	[BUG]  [BUGGY]  if(gcd  <  0  ||  denominator  ==  gcd)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  denominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0  ||  denominator  ==  gcd)  {	  if(gcd    ==    0    ||    denominator    ==    gcd)    {    	compilable	  [FE]  AssertionFailedError  	114	1	replace
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  denominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd!=  0  ||  denominator  ==  gcd)  {	  if(gcd    ==    0    ||    denominator    ==    gcd)    {    	compilable	  [FE]  AssertionFailedError  	114	1	replace
188	[BUG]  [BUGGY]  if(gcd!=  0  ||  denominator  ==  gcd)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  denominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=  0  ||  denominator  ==  gcd)  {	  if(gcd    ==    0    ||    denominator    ==    gcd)    {    	compilable	  [FE]  AssertionFailedError  	114	1	replace
189	[BUG]  [BUGGY]  if(denominator  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(denominator  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(denominator  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	  if(gcd    ==    0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
190	[BUG]  [BUGGY]  long  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  long  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	long  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  if(gcd    ==    0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
191	[BUG]  [BUGGY]  if(gcd!=  numerator)  {  if(gcd!=  numerator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  numerator)  {  if(gcd!=  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    numerator)    {    if(gcd!=  numerator)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
192	[BUG]  [BUGGY]  if(gcd!=  numerator)  {  if(gcd  ==  numerator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  numerator)  {  if(gcd  ==  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    numerator)    {    if(gcd  ==  numerator)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
193	[BUG]  [BUGGY]  if(gcd!=  numerator)  {  if(gcd  >=  numerator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  numerator)  {  if(gcd  >=  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    numerator)    {    if(gcd  >=  numerator)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
194	[BUG]  [BUGGY]  if(gcd!=  numerator)  {  if(gcd  >>  numerator)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  numerator)  {  if(gcd  >>  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    numerator)    {    if(gcd  >>  numerator)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
195	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    if(gcd  ==  0.0  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
196	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    if(gcd  ==  0.0  ||  gcd!=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
197	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  if(gcd!=  0.0  ||  gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  if(gcd!=  0.0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    if(gcd!=  0.0  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
198	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  If(gcd  ==  0.0  ||  gcd  ==  denominator)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  If(gcd  ==  0.0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    If(gcd  ==  0.0  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
199	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
200	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  hashCode);	  gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
201	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  *  1),  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  *  1),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator  *  1),  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
202	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >=  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  >=  0  ||  gcd  ==  denominator)  {	  if(gcd!=    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	54	1	replace
204	[BUG]  [BUGGY]  if(gcd  >=  0  ||  gcd  ==  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >=  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  >=  0  ||  gcd  ==  denominator)  {	  if(gcd!=    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	54	1	replace
205	[BUG]  [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	float  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
206	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator  +  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator  +  1);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
207	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  toProperString,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  toProperString,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  toProperString,  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    toProperString);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
208	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  toProperString,  numerator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  toProperString,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  toProperString,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    toProperString);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
209	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  toProperString,  hashCode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  toProperString,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  toProperString,  hashCode);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    toProperString);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
210	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  toProperString,  numeratorValue);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  toProperString,  numeratorValue);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  toProperString,  numeratorValue);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    toProperString);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd!=  denominator)  {	  if(gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
212	[BUG]  [BUGGY]  if(gcd!=  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=  denominator)  {	  if(gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
213	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  if(gcd  ==  0  ||  gcd  <  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  if(gcd  ==  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd    <    denominator)    {    if(gcd  ==  0  ||  gcd  <  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
214	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  if(gcd!=  0  ||  gcd  <  denominator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  if(gcd!=  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd    <    denominator)    {    if(gcd!=  0  ||  gcd  <  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
215	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  if(gcd  >=  0  ||  gcd  <  denominator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  if(gcd  >=  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd    <    denominator)    {    if(gcd  >=  0  ||  gcd  <  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
216	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  If(gcd  ==  0  ||  gcd  <  denominator)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  If(gcd  ==  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd    <    denominator)    {    If(gcd  ==  0  ||  gcd  <  denominator)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
217	[BUG]  [BUGGY]  Integer  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  Integer  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	Integer  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    Integer    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd!=  0.0)  {	  if(gcd    ==    0.0)    {    if(gcd!=    0.0)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
219	[BUG]  [BUGGY]  if(gcd!=  0.0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=  0.0)  {	  if(gcd    ==    0.0)    {    if(gcd!=    0.0)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
220	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a2    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	61	None	add
221	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a2    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator));	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	61	None	add
222	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator,  denominator);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a2    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator,  denominator);	  	non-compiled	[CE]  ')'  expected	61	None	add
223	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a2    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	61	None	add
224	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2)  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2)  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a2    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2)  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  ';'  expected	61	None	add
225	[BUG]  [BUGGY]  if(gcd  >  0.0)  {  if(gcd  >=  0.0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >  0.0)  {  if(gcd  >=  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  >  0.0)  {  if(gcd  >=  0.0)  {	  if(gcd    ==    0.0)    {    if(gcd    >=    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
226	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator,  gcd));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator,  gcd));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator,  gcd));	  int    pos    =    greatestCommonDivisor(Math.abs(numerator,    denominator));    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
227	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator,  denominator  +  1));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator,  denominator  +  1));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator,  denominator  +  1));	  int    pos    =    greatestCommonDivisor(Math.abs(numerator,    denominator));    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
228	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  if(gcd  <  0  ||  gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  if(gcd  <  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    <    0    ||    gcd    ==    denominator)    {    if(gcd  <  0  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
229	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  if(gcd  <  0  ||  gcd!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  if(gcd  <  0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    <    0    ||    gcd    ==    denominator)    {    if(gcd  <  0  ||  gcd!=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
230	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  if(gcd  <  0  ||  gcd  >=  denominator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  if(gcd  <  0  ||  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    <    0    ||    gcd    ==    denominator)    {    if(gcd  <  0  ||  gcd  >=  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
231	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  If(gcd  <  0  ||  gcd  ==  denominator)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  If(gcd  <  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    <    0    ||    gcd    ==    denominator)    {    If(gcd  <  0  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  ';'  expected	51	None	add
232	[BUG]  [BUGGY]  if(gcd  >=  0)  {  if(gcd  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >=  0)  {  if(gcd  >=  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    >=    0)    {    if(gcd  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
233	[BUG]  [BUGGY]  if(gcd  >=  0)  {  if(gcd!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >=  0)  {  if(gcd!=  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    >=    0)    {    if(gcd!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
234	[BUG]  [BUGGY]  if(gcd  >=  0)  {  if(gcd  >>  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >=  0)  {  if(gcd  >>  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    >=    0)    {    if(gcd  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
235	[BUG]  [BUGGY]  if(gcd  >=  0)  {  if(gcd  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >=  0)  {  if(gcd  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    >=    0)    {    if(gcd  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
236	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
237	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
238	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	111	1	add
239	[BUG]  [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	111	1	add
240	[BUG]  [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  method  greatestCommonDivisor  in  class  Fraction  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator));	  	non-compiled	[CE]  method  greatestCommonDivisor  in  class  Fraction  cannot  be  applied  to  given  types;	111	None	add
241	[BUG]  [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  variable  gcd  is  already  defined  in  method  reduce()  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  method  reduce()	111	None	add
242	[BUG]  [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  cannot  find  symbol  desnominator  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  	non-compiled	[CE]  cannot  find  symbol  desnominator	111	None	add
243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	111	1	add
244	[BUG]  [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	111	1	add
245	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  numerator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)-    1,    denominator);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
246	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  hashCode);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)-    1,    denominator);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
247	[BUG]  [BUGGY]  if(gcd  <  0)  {  If(gcd  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0)  {  If(gcd  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0)  {  If(gcd  ==  0)  {	  if(gcd    ==    0)    {    If(gcd    ==    0)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
248	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  >  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0.0  ||  gcd  >  0.0)  {	  if(gcd    ==    0.0    ||    gcd    >    0.0)    {    	compilable	  [FE]  AssertionFailedError  	107	1	replace
249	[BUG]  [BUGGY]  if(gcd  <  0.0  ||  gcd  >  0.0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  >  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0.0  ||  gcd  >  0.0)  {	  if(gcd    ==    0.0    ||    gcd    >    0.0)    {    	compilable	  [FE]  AssertionFailedError  	107	1	replace
250	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  =  0.0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  =  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0  ||  gcd  <  =  0.0)  {	  if(gcd    ==    0.0    ||    gcd    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0.0  ||  gcd!=  0.0)  {	  if(gcd    ==    0.0    ||    gcd    >    0.0)    {    	compilable	  [FE]  AssertionFailedError  	107	1	replace
252	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  0.0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0  ||  gcd!=  0.0)  {	  if(gcd    ==    0.0    ||    gcd    >    0.0)    {    	compilable	  [FE]  AssertionFailedError  	107	1	replace
253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0.0  ||  gcd  ==  0.0)  {	  if(gcd    ==    0.0    ||    gcd    >    0.0)    {    	compilable	  [FE]  AssertionFailedError  	107	1	replace
254	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  0.0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0  ||  gcd  ==  0.0)  {	  if(gcd    ==    0.0    ||    gcd    >    0.0)    {    	compilable	  [FE]  AssertionFailedError  	107	1	replace
255	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a2    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	61	None	add
256	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a2    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	61	None	add
257	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Integer  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Integer  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a2    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Integer  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	61	None	add
258	[BUG]  [BUGGY]  if(gcd  >=  0)  {  If(gcd  >=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >=  0)  {  If(gcd  >=  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    >=    0)    {    If(gcd  >=  0)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
259	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  toProperString);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  toProperString);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  toProperString);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    toProperString);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
260	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  if(gcd  ==  0  ||  gcd!=  deserator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  if(gcd  ==  0  ||  gcd!=  deserator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd!=    denominator)    {    if(gcd  ==  0  ||  gcd!=  deserator)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
261	[BUG]  [BUGGY]  if(numerator  ==  gcd)  {  if(gcd!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  gcd)  {  if(gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  gcd)  {  if(gcd!=  denominator)  {	  if(gcd    ==    denominator)    {    if(gcd!=    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
262	[BUG]  [BUGGY]  if(gcd  ==  denominator)  {  if(gcd!=  numerator)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  denominator)  {  if(gcd!=  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  denominator)  {  if(gcd!=  numerator)  {	  if(gcd    ==    denominator)    {    if(gcd!=    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
263	[BUG]  [BUGGY]  if(denominator  ==  gcd)  {  if(gcd!=  numerator)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(denominator  ==  gcd)  {  if(gcd!=  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(denominator  ==  gcd)  {  if(gcd!=  numerator)  {	  if(gcd    ==    denominator)    {    if(gcd!=    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
264	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  If(gcd  ==  0.0  ||  gcd  >=  denominator)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  If(gcd  ==  0.0  ||  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    >=    denominator)    {    If(gcd  ==  0.0  ||  gcd  >=  denominator)  {	  	non-compiled	[CE]  ';'  expected	96	None	add
265	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  denominator  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  denominator  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  denominator  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
266	[BUG]  [BUGGY]  if(gcd  ==  null)  {  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  null)  {  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  null)  {  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a2    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
267	[BUG]  [BUGGY]  if(gcd  ==  null)  {  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  null)  {  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  null)  {  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a3    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
268	[BUG]  [BUGGY]  if(gcd  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	  if(gcd    ==    0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
269	[BUG]  [BUGGY]  float  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  float  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	float  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  float    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  &&  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd!=  0  &&  gcd  ==  denominator)  {	  if(gcd!=    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	54	1	replace
271	[BUG]  [BUGGY]  if(gcd!=  0  &&  gcd  ==  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  &&  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=  0  &&  gcd  ==  denominator)  {	  if(gcd!=    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	54	1	replace
272	[BUG]  [BUGGY]  if(gcd  ==  null)  {  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  null)  {  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  null)  {  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a0    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
273	[BUG]  [BUGGY]  if(numerator  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  deserator)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  deserator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  deserator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd    ==    deserator)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
274	[BUG]  [BUGGY]  if(numerator  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  numerator)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0  ||  gcd  ==  denominator)  {  if(gcd  ==  0  ||  gcd  ==  numerator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd    ==    deserator)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
275	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  wholeNumber);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  wholeNumber);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  wholeNumber);	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
276	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  absoluteDenominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  absoluteDenominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  absoluteDenominator);	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
277	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(gcd));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(gcd));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(gcd));	  int    a1    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
278	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  1);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
279	[BUG]  [BUGGY]  if(numerator  ==  gcd)  {  if(gcd  >=  denominator)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  gcd)  {  if(gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  gcd)  {  if(gcd  >=  denominator)  {	  if(gcd    ==    denominator)    {    if(gcd    >=    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
280	[BUG]  [BUGGY]  if(gcd  ==  numerator)  {  if(gcd  >=  denominator)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator)  {  if(gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  numerator)  {  if(gcd  >=  denominator)  {	  if(gcd    ==    denominator)    {    if(gcd    >=    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
281	[BUG]  [BUGGY]  if(numerator  ==  denominator)  {  if(gcd  >=  denominator)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  denominator)  {  if(gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  denominator)  {  if(gcd  >=  denominator)  {	  if(gcd    ==    denominator)    {    if(gcd    >=    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
282	[BUG]  [BUGGY]  if(gcd  ==  numerator)  {  if(gcd  >=  numerator)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator)  {  if(gcd  >=  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  numerator)  {  if(gcd  >=  numerator)  {	  if(gcd    ==    denominator)    {    if(gcd    >=    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
283	[BUG]  [BUGGY]  if(denominator!=  null)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(denominator!=  null)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(denominator!=  null)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
284	[BUG]  [BUGGY]  if(denominator!=  null)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  else  {  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(denominator!=  null)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  else  {  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(denominator!=  null)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  else  {	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	75	None	replace
285	[BUG]  [BUGGY]  if(gcd  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	  if(gcd    ==    0.0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
286	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator));  Int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator));  Int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator));  Int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    Int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
287	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(numerator  ==  gcd)  {	  if(gcd    ==    denominator)    {    if(gcd    ==    desnominator)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
288	[BUG]  [BUGGY]  if(numerator  ==  gcd)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  gcd)  {	  if(gcd    ==    denominator)    {    if(gcd    ==    desnominator)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(denominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(denominator  ==  gcd)  {	  if(gcd    ==    denominator)    {    if(gcd    ==    desnominator)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
290	[BUG]  [BUGGY]  if(denominator  ==  gcd)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(denominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(denominator  ==  gcd)  {	  if(gcd    ==    denominator)    {    if(gcd    ==    desnominator)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
291	[BUG]  [BUGGY]  if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
292	[BUG]  [BUGGY]  if(denominator  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(denominator  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(denominator  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
293	[BUG]  [BUGGY]  if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
294	[BUG]  [BUGGY]  if(denominator  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(denominator  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(denominator  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
295	[BUG]  [BUGGY]  if(numerator  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }	  if(gcd    ==    0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
296	[BUG]  [BUGGY]  if(numerator  ==  0  ||  denominator  ==  gcd)  {  if(gcd!=  0  ||  gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0  ||  denominator  ==  gcd)  {  if(gcd!=  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0  ||  denominator  ==  gcd)  {  if(gcd!=  0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd!=    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(numerator  ==  0)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd!=    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	43	1	replace
298	[BUG]  [BUGGY]  if(numerator  ==  0)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd!=    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	43	1	replace
299	[BUG]  [BUGGY]  if(numerator  ==  0  ||  denominator  ==  gcd)  {  if(gcd!=  0  ||  gcd  ==  numerator)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0  ||  denominator  ==  gcd)  {  if(gcd!=  0  ||  gcd  ==  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0  ||  denominator  ==  gcd)  {  if(gcd!=  0  ||  gcd  ==  numerator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd!=    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
300	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  if(gcd  <  0  ||  gcd  ==  desnominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  if(gcd  <  0  ||  gcd  ==  desnominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    <    0    ||    gcd    ==    denominator)    {    if(gcd  <  0  ||  gcd  ==  desnominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  >  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  0.0  ||  gcd  >  denominator)  {	  if(gcd    ==    0.0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
302	[BUG]  [BUGGY]  if(gcd  <  0.0  ||  gcd  >  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  >  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0.0  ||  gcd  >  denominator)  {	  if(gcd    ==    0.0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
303	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  wholeNumber);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  wholeNumber);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  wholeNumber);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
304	[BUG]  [BUGGY]  if(gcd  <  0.0)  {  If(gcd  ==  0.0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0)  {  If(gcd  ==  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  0.0)  {  If(gcd  ==  0.0)  {	  if(gcd    ==    0.0)    {    If(gcd    ==    0.0)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
305	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    gcd    <    denominator)    {    int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
306	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
307	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  if(gcd  ==  0.0  ||  gcd  ==  deserator)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  if(gcd  ==  0.0  ||  gcd  ==  deserator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    if(gcd  ==  0.0  ||  gcd  ==  deserator)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
308	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a3    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	63	None	add
309	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a3    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	63	None	add
310	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a4  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]        AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a4  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a3    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a4  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	63	None	add
311	[BUG]  [BUGGY]  if(gcd  <  =  0.0  ||  gcd  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  =  0.0  ||  gcd  >  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  =  0.0  ||  gcd  >  0.0)  {	  if(gcd    ==    0.0    ||    gcd    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
312	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0  ||  denominator  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(numerator  ==  0  ||  denominator  ==  0)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	41	1	replace
313	[BUG]  [BUGGY]  if(numerator  ==  0  ||  denominator  ==  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0  ||  denominator  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0  ||  denominator  ==  0)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	41	1	replace
314	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	111	1	add
315	[BUG]  [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	111	1	add
316	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator));  Integer  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator));  Integer  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator));  Integer  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    Integer    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
317	[BUG]  [BUGGY]  if(gcd  ==  numerator)  {  If(gcd  ==  null  ||  gcd  ==  denominator)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator)  {  If(gcd  ==  null  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  numerator)  {  If(gcd  ==  null  ||  gcd  ==  denominator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    If(gcd    ==    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
318	[BUG]  [BUGGY]  if(gcd  ==  0)  {  If(gcd  ==  0  ||  gcd  ==  numerator)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0)  {  If(gcd  ==  0  ||  gcd  ==  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0)  {  If(gcd  ==  0  ||  gcd  ==  numerator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    If(gcd    ==    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
319	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  else  {  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  else  {	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator)),    denominator);    	compilable	  [FE]  AssertionFailedError  	76	1	replace
321	[BUG]  [BUGGY]  if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  else  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  else  {  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  }  else  {	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator)),    denominator);    	compilable	  [FE]  AssertionFailedError  	76	1	replace
322	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  hashCode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  hashCode);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
323	[BUG]  [BUGGY]  if(numerator  ==  0.0)  {  if(gcd!=  0.0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0.0)  {  if(gcd!=  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0.0)  {  if(gcd!=  0.0)  {	  if(gcd    ==    0.0)    {    if(gcd!=    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
324	[BUG]  [BUGGY]  if(gcd  ==  0.0)  {  if(denominator!=  0.0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0)  {  if(denominator!=  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0)  {  if(denominator!=  0.0)  {	  if(gcd    ==    0.0)    {    if(gcd!=    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
325	[BUG]  [BUGGY]  if(numerator  ==  0  ||  denominator  ==  gcd)  {  if(gcd  ==  0  ||  gcd!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0  ||  denominator  ==  gcd)  {  if(gcd  ==  0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0  ||  denominator  ==  gcd)  {  if(gcd  ==  0  ||  gcd!=  denominator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd!=    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
326	[BUG]  [BUGGY]  if(numerator  ==  0  ||  numerator  ==  denominator)  {  if(gcd  ==  0  ||  gcd!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0  ||  numerator  ==  denominator)  {  if(gcd  ==  0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0  ||  numerator  ==  denominator)  {  if(gcd  ==  0  ||  gcd!=  denominator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd!=    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
327	[BUG]  [BUGGY]  if(numerator  ==  0.0)  {  if(gcd  >=  0.0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0.0)  {  if(gcd  >=  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0.0)  {  if(gcd  >=  0.0)  {	  if(gcd    ==    0.0)    {    if(gcd    >=    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
328	[BUG]  [BUGGY]  if(gcd  <  denominator)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  denominator)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    <    denominator)    {    int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
329	[BUG]  [BUGGY]  if(gcd  <  denominator)  {  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  denominator)  {  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    <    denominator)    {    int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
330	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    hashCode);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
331	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  ZERO);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  ZERO);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  ZERO);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    hashCode);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
332	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    <    denominator)    {    int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
333	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(gcd,  denominator));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(gcd,  denominator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(gcd,  denominator));	  int    pos    =    greatestCommonDivisor(Math.abs(numerator,    denominator));    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
334	[BUG]  [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  if(gcd  ==  0  ||  desnominator  ==  gcd)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  if(gcd  ==  0  ||  desnominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0    ||    denominator    ==    gcd)    {    if(gcd  ==  0  ||  desnominator  ==  gcd)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
335	[BUG]  [BUGGY]  if(gcd  ==  denominator)  {  if(gcd!=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  denominator)  {  if(gcd!=  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  denominator)  {  if(gcd!=  0)  {	  if(gcd    ==    0)    {    if(gcd!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
336	[BUG]  [BUGGY]  if(gcd!=  numerator)  {  If(gcd!=  numerator)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  numerator)  {  If(gcd!=  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    numerator)    {    If(gcd!=  numerator)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
337	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  &&  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0.0  &&  gcd  >=  denominator)  {	  if(gcd    ==    0.0    ||    gcd    >=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	97	1	replace
338	[BUG]  [BUGGY]  if(gcd  ==  0.0  &&  gcd  >=  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  &&  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0  &&  gcd  >=  denominator)  {	  if(gcd    ==    0.0    ||    gcd    >=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	97	1	replace
339	[BUG]  [BUGGY]  if(numerator  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }	  if(gcd    ==    0.0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
340	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  >  0.0)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    >    0.0)    {    int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
341	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  >=  denominator)  {	  if(gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
342	[BUG]  [BUGGY]  if(gcd  >=  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  >=  denominator)  {	  if(gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  &&  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd!=  0  &&  gcd  <  denominator)  {	  if(gcd!=    0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	103	1	replace
344	[BUG]  [BUGGY]  if(gcd!=  0  &&  gcd  <  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  &&  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=  0  &&  gcd  <  denominator)  {	  if(gcd!=    0    ||    gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	103	1	replace
345	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(numerator  ==  0.0)  {	  if(gcd    ==    0.0)    {    if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
346	[BUG]  [BUGGY]  if(numerator  ==  0.0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(numerator  ==  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(numerator  ==  0.0)  {	  if(gcd    ==    0.0)    {    if(gcd    ==    0.0)    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
347	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a0    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	66	1	add
348	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a0    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	compilable	  [FE]  AssertionFailedError  	66	1	add
349	[BUG]  [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  variable  a1  is  already  defined  in  method  reduce()  [FE]      AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int  a0  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                int        a1        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        int    a0    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    Integer  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  variable  a1  is  already  defined  in  method  reduce()	66	None	add
350	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd!=    denominator)    {    int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
351	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  desnominator);	          int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    pos    =    greatestCommonDivisor(Math.abs(numerator),    desnominator);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
352	[BUG]  [BUGGY]  if(gcd  ==  denominator)  {  If(gcd  ==  numerator)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  denominator)  {  If(gcd  ==  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  denominator)  {  If(gcd  ==  numerator)  {	  if(gcd    ==    denominator)    {    If(gcd    ==    denominator)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
353	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator));  denominator  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator));  denominator  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator));  denominator  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
354	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);	          int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    pos    =    greatestCommonDivisor(Math.abs(numerator),    dedeninator);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
355	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  dedeninator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  dedeninator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  dedeninator);	          int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    pos    =    greatestCommonDivisor(Math.abs(numerator),    dedeninator);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
356	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
357	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  denominator  ||  gcd!=  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  denominator  ||  gcd!=  0)  {	  if(gcd!=    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	54	1	replace
358	[BUG]  [BUGGY]  if(gcd  ==  denominator  ||  gcd!=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  denominator  ||  gcd!=  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  denominator  ||  gcd!=  0)  {	  if(gcd!=    0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	54	1	replace
359	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(denominator  ==  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(denominator  ==  0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd!=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	42	1	replace
360	[BUG]  [BUGGY]  if(denominator  ==  0  ||  gcd  ==  denominator)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(denominator  ==  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(denominator  ==  0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd!=    denominator)    {    	compilable	  [FE]  AssertionFailedError  	42	1	replace
361	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
362	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(denominator));	  if(gcd    ==    0.0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
363	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  numerator  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd!=  numerator  ||  gcd!=  denominator)  {	  if(gcd!=    numerator)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
364	[BUG]  [BUGGY]  if(gcd!=  numerator  ||  gcd!=  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  numerator  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=  numerator  ||  gcd!=  denominator)  {	  if(gcd!=    numerator)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
365	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  denominator  ||  gcd  ==  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  denominator  ||  gcd  ==  numerator)  {	  if(gcd    ==    numerator    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	110	1	replace
366	[BUG]  [BUGGY]  if(gcd  ==  denominator  ||  gcd  ==  numerator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  denominator  ||  gcd  ==  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  denominator  ||  gcd  ==  numerator)  {	  if(gcd    ==    numerator    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	110	1	replace
367	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(denominator)/  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(denominator)/  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(denominator)/  denominator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
368	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(denominator));	  int    a1    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
369	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a0    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
370	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
371	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
372	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  pos);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  pos);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  pos);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
373	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  /  1),  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  /  1),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator  /  1),  denominator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
374	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a1    =    greatestCommonDivisor(Math.abs(numerator),    desnominator);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
375	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0.0  ||  gcd  >=  0.0)  {	  if(gcd    ==    0.0)    {    if(gcd    >=    0.0)    {    	compilable	  [FE]  AssertionFailedError  	3	1	replace
376	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  0.0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0.0  ||  gcd  >=  0.0)  {	  if(gcd    ==    0.0)    {    if(gcd    >=    0.0)    {    	compilable	  [FE]  AssertionFailedError  	3	1	replace
377	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  if(gcd!=  0  ||  gcd  ==  desnominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  if(gcd!=  0  ||  gcd  ==  desnominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0    ||    gcd    ==    denominator)    {    if(gcd!=  0  ||  gcd  ==  desnominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
378	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator)/  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator)/  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(denominator)/  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
379	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
380	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  if(gcd  ==  0.0  ||  gcd  ==  desnominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  if(gcd  ==  0.0  ||  gcd  ==  desnominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    if(gcd  ==  0.0  ||  gcd  ==  desnominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
381	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  /  1),  denominator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  /  1),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator  /  1),  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
382	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator,  denominator),  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator,  denominator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator,  denominator),  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator,    denominator));    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
383	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator,  denominator)+  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator,  denominator)+  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator,  denominator)+  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator,    denominator));    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
384	[BUG]  [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	float  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  if(gcd    ==    0.0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
385	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  if(gcd    ==    0.0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
386	[BUG]  [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  largestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  largestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	                gcd        =        greatestCommonDivisor(Math.abs(numerator),        denominator);        gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd  =  largestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
387	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  If(gcd!=  0  ||  gcd  <  denominator)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  If(gcd!=  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=    0    ||    gcd    <    denominator)    {    If(gcd!=  0  ||  gcd  <  denominator)  {	  	non-compiled	[CE]  ';'  expected	102	None	add
388	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(denominator  ==  0  ||  gcd  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(denominator  ==  0  ||  gcd  ==  0)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd    ==    deserator)    {    	compilable	  [FE]  AssertionFailedError  	82	1	replace
389	[BUG]  [BUGGY]  if(denominator  ==  0  ||  gcd  ==  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(denominator  ==  0  ||  gcd  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(denominator  ==  0  ||  gcd  ==  0)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    if(gcd    ==    0    ||    gcd    ==    deserator)    {    	compilable	  [FE]  AssertionFailedError  	82	1	replace
390	[BUG]  [BUGGY]  if(gcd  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  =  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  =  0)  {	  if(gcd    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
391	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
392	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  int  a3  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a3    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
393	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator,  denominator),  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator,  denominator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator,  denominator),  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator,    denominator));    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
394	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  If(gcd  ==  0  ||  gcd  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  If(gcd  ==  0  ||  gcd  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0  ||  gcd  ==  denominator)  {  If(gcd  ==  0  ||  gcd  ==  0)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    If(gcd    ==    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
395	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  If(gcd  ==  0  ||  gcd  ==  numerator)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  If(gcd  ==  0  ||  gcd  ==  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0  ||  gcd  ==  denominator)  {  If(gcd  ==  0  ||  gcd  ==  numerator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    If(gcd    ==    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
396	[BUG]  [BUGGY]  if(gcd  ==  denominator)  {  If(gcd  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  denominator)  {  If(gcd  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  denominator)  {  If(gcd  ==  0)  {	  if(gcd    ==    0)    {    If(gcd    ==    0)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
397	[BUG]  [BUGGY]  if(gcd  <  denominator)  {  If(gcd  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  denominator)  {  If(gcd  ==  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  denominator)  {  If(gcd  ==  0)  {	  if(gcd    ==    0)    {    If(gcd    ==    0)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
398	[BUG]  [BUGGY]  if(gcd  ==  1)  {  If(gcd  ==  1)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  1)  {  If(gcd  ==  1)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  1)  {  If(gcd  ==  1)  {	  if(gcd    ==    0)    {    If(gcd    ==    0)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
399	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  if(gcd  >=  0  ||  gcd  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  if(gcd  >=  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd    <    0    ||    gcd    ==    denominator)    {    if(gcd  >=  0  ||  gcd  ==  denominator)  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
400	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);	          int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    pos    =    greatestCommonDivisor(Math.abs(numerator),    desnominator);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
401	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  int  a2  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	          int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    a2    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
402	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  else  {  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  else  {	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	compilable	  [FE]  AssertionFailedError  	112	1	replace
403	[BUG]  [BUGGY]  if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  else  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  else  {  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  }  else  {	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	compilable	  [FE]  AssertionFailedError  	112	1	replace
404	[BUG]  [BUGGY]  if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  }  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  0)  {  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  }	          gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    gcd    =    greatestCommonDivisor(Math.abs(numerator)),    denominator);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
405	[BUG]  [BUGGY]  if(gcd  <  a1  ||  gcd  >  denominator)  {  [CE]  cannot  find  symbol  a1  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  a1  ||  gcd  >  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  a1  ||  gcd  >  denominator)  {	  if(gcd    ==    0    ||    gcd    <    denominator)    {    	non-compiled	[CE]  cannot  find  symbol  a1	46	None	replace
406	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator);	          int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    int    pos    =    greatestCommonDivisor(Math.abs(numerator)),    denominator);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
407	[BUG]  [BUGGY]  if(gcd  ==  denominator)  {  If(gcd!=  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  denominator)  {  If(gcd!=  0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  denominator)  {  If(gcd!=  0)  {	  if(gcd!=    0)    {    If(gcd!=    0)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
408	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator  ||  gcd  >  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  ==  numerator  ||  gcd  >  denominator)  {	  if(gcd    ==    numerator)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
409	[BUG]  [BUGGY]  if(gcd  ==  numerator  ||  gcd  >  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator  ||  gcd  >  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  ==  numerator  ||  gcd  >  denominator)  {	  if(gcd    ==    numerator)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
410	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);	  int    a1    =    greatestCommonDivisor(Math.abs(gcd),    denominator);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
411	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0.0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd!=  0.0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
412	[BUG]  [BUGGY]  if(gcd!=  0.0  ||  gcd  ==  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0.0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd!=  0.0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
413	[BUG]  [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	float  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  if(gcd    ==    0.0)    {    int    gcd    =    greatestCommonDivisor(Math.abs(denominator),    denominator);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
414	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  denominator  ||  gcd  >  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	add	if(gcd  <  denominator  ||  gcd  >  denominator)  {	  if(gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
415	[BUG]  [BUGGY]  if(gcd  <  denominator  ||  gcd  >  denominator)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Fraction  reduce()  {  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  denominator  ||  gcd  >  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	1.0	467	467	1	replace	if(gcd  <  denominator  ||  gcd  >  denominator)  {	  if(gcd    <    denominator)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
