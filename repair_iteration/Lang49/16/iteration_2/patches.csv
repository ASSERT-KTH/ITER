bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  0;  u  =  0;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    0;    u  =  0;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
2	[BUG]  [BUGGY]  u  =  0;  u  =  0;  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  0;  u  =  0;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    0;    u  =  0;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
3	[BUG]  [BUGGY]  u  =  0;  u  =  0;  }  else  {  t  =  (v  -  u)/2;  [CE]  'else'  without  'if'  [FE]      ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  0;  u  =  0;  }  else  {  t  =  (v  -  u)/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    0;    u  =  0;  }  else  {  t  =  (v  -  u)/2;	  	non-compiled	[CE]  'else'  without  'if'	40	None	add
4	[BUG]  [BUGGY]  u  =  0;  u  =  0;  }  else  {  t  =  (v  -  u)/2;  }  [CE]  while  expected  [FE]        ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  0;  u  =  0;  }  else  {  t  =  (v  -  u)/2;  }  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    0;    u  =  0;  }  else  {  t  =  (v  -  u)/2;  }	  	non-compiled	[CE]  while  expected	40	None	add
5	[BUG]  [BUGGY]  u  =  -t  /  1;  U  =  -t  -  1;  [CE]  cannot  find  symbol  U  [FE]                AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /  1;  U  =  -t  -  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -t  /  1;  U  =  -t  -  1;	  u    =    -t    -    1;    U    =    -t    -    1;    	non-compiled	[CE]  cannot  find  symbol  U	8	None	replace
6	[BUG]  [BUGGY]  t  =  -t  -  1;  U  =  -t  -  1;  [CE]  cannot  find  symbol  U  [FE]                  AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =  -t  -  1;  U  =  -t  -  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =  -t  -  1;  U  =  -t  -  1;	  u    =    -t    -    1;    U    =    -t    -    1;    	non-compiled	[CE]  cannot  find  symbol  U	8	None	replace
7	[BUG]  [BUGGY]  u  =  -t  /2;  U  =  -t  -  1;  [CE]  cannot  find  symbol  U  [FE]                    AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /2;  U  =  -t  -  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -t  /2;  U  =  -t  -  1;	  u    =    -t    -    1;    U    =    -t    -    1;    	non-compiled	[CE]  cannot  find  symbol  U	8	None	replace
8	[BUG]  [BUGGY]  t  =(u  <  <  1)/2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(u  <  <  1)/2;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(u  <  <  1)/2;	  t    =(u    <    <    3)/2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
9	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  v  =(v  -  u)/  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	v  =(v  -  u)/  1;	          v    =(v    -    u)/2;    timeout    	compilable	timeout	80	1	replace
10	[BUG]  [BUGGY]  v  =(v  -  u)/  1;  timeout  [FE]                      AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  v  =(v  -  u)/  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	v  =(v  -  u)/  1;	          v    =(v    -    u)/2;    timeout    	compilable	timeout	80	1	replace
11	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  v  =(v  -  u)/  3;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	v  =(v  -  u)/  3;	          v    =(v    -    u)/2;    timeout    	compilable	timeout	80	1	replace
12	[BUG]  [BUGGY]  v  =(v  -  u)/  3;  timeout  [FE]                        AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  v  =(v  -  u)/  3;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	v  =(v  -  u)/  3;	          v    =(v    -    u)/2;    timeout    	compilable	timeout	80	1	replace
13	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -u  /  2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -u  /  2;	  u    =    -t    /    1;    	compilable	timeout	47	1	replace
14	[BUG]  [BUGGY]  u  =  -u  /  2;  timeout  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -u  /  2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -u  /  2;	  u    =    -t    /    1;    	compilable	timeout	47	1	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t/2;    u  =  (-t/2);  u  =  -t/2;  u  =  (-t/2);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u        =        -t/2;        u    =    (-t/2);    u  =  -t/2;  u  =  (-t/2);	  	compilable	  [FE]  AssertionFailedError  	15	1	add
16	[BUG]  [BUGGY]  u    =    -t/2;    u  =  (-t/2);  u  =  -t/2;  u  =  (-t/2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t/2;    u  =  (-t/2);  u  =  -t/2;  u  =  (-t/2);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -t/2;        u    =    (-t/2);    u  =  -t/2;  u  =  (-t/2);	  	compilable	  [FE]  AssertionFailedError  	15	1	add
17	[BUG]  [BUGGY]  u    =    -t/2;    u  =  (-t/2);  int  u  =  -t/2;  u  =  (-t/2);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t/2;    u  =  (-t/2);  int  u  =  -t/2;  u  =  (-t/2);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -t/2;        u    =    (-t/2);    int  u  =  -t/2;  u  =  (-t/2);	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	15	None	add
18	[BUG]  [BUGGY]  u    =    -t/2;    u  =  (-t/2);  u  =  -t/2;  u  =  (-t/);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t/2;    u  =  (-t/2);  u  =  -t/2;  u  =  (-t/);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -t/2;        u    =    (-t/2);    u  =  -t/2;  u  =  (-t/);	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
19	[BUG]  [BUGGY]  u    =    -t/2;    u  =  (-t/2);  U  =  -t/2;  u  =  (-t/2);  [CE]  cannot  find  symbol  U  [FE]          AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t/2;    u  =  (-t/2);  U  =  -t/2;  u  =  (-t/2);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -t/2;        u    =    (-t/2);    U  =  -t/2;  u  =  (-t/2);	  	non-compiled	[CE]  cannot  find  symbol  U	15	None	add
20	[BUG]  [BUGGY]  u  =  -u;  (v  -  u)/2;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -u;  (v  -  u)/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -u;  (v  -  u)/2;	  u    =    -v;    (v    -    u)/2;    	non-compiled	[CE]  not  a  statement	86	None	replace
21	[BUG]  [BUGGY]  t  =(2  <  <  k)/  2  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(2  <  <  k)/  2  +  1;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(2  <  <  k)/  2  +  1;	  t    =(1    <    <    k)/    2    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
22	[BUG]  [BUGGY]  u  =  0;  (v  -  u)/2;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  0;  (v  -  u)/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  0;  (v  -  u)/2;	  u    =    -1;    (v    -    u)/2);    	non-compiled	[CE]  not  a  statement	108	None	replace
23	[BUG]  [BUGGY]  u  =  1;  (v  -  u)/2;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  1;  (v  -  u)/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  1;  (v  -  u)/2;	  u    =    -1;    (v    -    u)/2);    	non-compiled	[CE]  not  a  statement	108	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  (v  -  u)/2;  }  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  (v  -  u)/2;  }	  u    =    -1;    u    =    -1;    }    else    {    t    =    (v    -    u)/2;    	compilable	  [FE]  AssertionFailedError  	21	5	replace
25	[BUG]  [BUGGY]  if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  (v  -  u)/2;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  (v  -  u)/2;  }  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  (v  -  u)/2;  }	  u    =    -1;    u    =    -1;    }    else    {    t    =    (v    -    u)/2;    	compilable	  [FE]  AssertionFailedError  	21	5	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  t;  }  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  t;  }	  u    =    -1;    u    =    -1;    }    else    {    t    =    (v    -    u)/2;    	compilable	  [FE]  AssertionFailedError  	21	5	replace
27	[BUG]  [BUGGY]  if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  t;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  t;  }  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  t;  }	  u    =    -1;    u    =    -1;    }    else    {    t    =    (v    -    u)/2;    	compilable	  [FE]  AssertionFailedError  	21	5	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  v  -  u;  }  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  v  -  u;  }	  u    =    -1;    u    =    -1;    }    else    {    t    =    (v    -    u)/2;    	compilable	  [FE]  AssertionFailedError  	21	5	replace
29	[BUG]  [BUGGY]  if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  v  -  u;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  v  -  u;  }  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	if(t>0)  {  u  =  -1;  u  =  -1;  }  else  {  t  =  v  -  u;  }	  u    =    -1;    u    =    -1;    }    else    {    t    =    (v    -    u)/2;    	compilable	  [FE]  AssertionFailedError  	21	5	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -1;  k  =  -1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -1;  k  =  -1;	  u    =    -k;    k    =    -k;    	compilable	  [FE]  AssertionFailedError  	66	9	replace
31	[BUG]  [BUGGY]  u  =  -1;  k  =  -1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -1;  k  =  -1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -1;  k  =  -1;	  u    =    -k;    k    =    -k;    	compilable	  [FE]  AssertionFailedError  	66	9	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -1;  k  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -1;  k  =  -k;	  u    =    -k;    k    =    -k;    	compilable	  [FE]  AssertionFailedError  	66	7	replace
33	[BUG]  [BUGGY]  u  =  -1;  k  =  -k;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -1;  k  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -1;  k  =  -k;	  u    =    -k;    k    =    -k;    	compilable	  [FE]  AssertionFailedError  	66	7	replace
34	[BUG]  [BUGGY]  t  =(t  <  <  1)/2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(t  <  <  1)/2;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(t  <  <  1)/2;	  t    =(v    <    <    1)/2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
35	[BUG]  [BUGGY]  t  =(v  -  i)/2;  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(v  -  i)/2;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(v  -  i)/2;	  t    =(v    -    w)/2;    	non-compiled	[CE]  cannot  find  symbol  i	59	None	replace
36	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -u  /  3;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -u  /  3;	  u    =    -u    /    1;    timeout    	compilable	timeout	49	1	replace
37	[BUG]  [BUGGY]  u  =  -u  /  3;  timeout  [FE]          AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -u  /  3;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -u  /  3;	  u    =    -u    /    1;    timeout    	compilable	timeout	49	1	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -1;    u  =  -1;  u  =  -1;  u  =  -1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u        =        -1;        u    =    -1;    u  =  -1;  u  =  -1;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
39	[BUG]  [BUGGY]  u    =    -1;    u  =  -1;  u  =  -1;  u  =  -1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -1;    u  =  -1;  u  =  -1;  u  =  -1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -1;        u    =    -1;    u  =  -1;  u  =  -1;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
40	[BUG]  [BUGGY]  u    =    -1;    u  =  -1;  int  u  =  -1;  u  =  -1;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -1;    u  =  -1;  int  u  =  -1;  u  =  -1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -1;        u    =    -1;    int  u  =  -1;  u  =  -1;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	19	None	add
41	[BUG]  [BUGGY]  u    =    -1;    u  =  -1;  u  =  -1;  u  =  -1;  }  else  {  t  =(v  -  u)/2;  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -1;    u  =  -1;  u  =  -1;  u  =  -1;  }  else  {  t  =(v  -  u)/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -1;        u    =    -1;    u  =  -1;  u  =  -1;  }  else  {  t  =(v  -  u)/2;	  	non-compiled	[CE]  'else'  without  'if'	19	None	add
42	[BUG]  [BUGGY]  u    =    -1;    u  =  -1;  u  =  -1;  u  =  -1;  }  else  {  t  =  (v  -  u)/2;  }  [CE]  while  expected  [FE]          AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -1;    u  =  -1;  u  =  -1;  u  =  -1;  }  else  {  t  =  (v  -  u)/2;  }  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -1;        u    =    -1;    u  =  -1;  u  =  -1;  }  else  {  t  =  (v  -  u)/2;  }	  	non-compiled	[CE]  while  expected	19	None	add
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -k;    v  =  -k;  u  =  -k;  v  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u        =        -k;        v    =    -k;    u  =  -k;  v  =  -k;	  	compilable	  [FE]  AssertionFailedError  	106	5	add
44	[BUG]  [BUGGY]  u    =    -k;    v  =  -k;  u  =  -k;  v  =  -k;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -k;    v  =  -k;  u  =  -k;  v  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -k;        v    =    -k;    u  =  -k;  v  =  -k;	  	compilable	  [FE]  AssertionFailedError  	106	5	add
45	[BUG]  [BUGGY]  u    =    -k;    v  =  -k;  int  u  =  -k;  v  =  -k;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -k;    v  =  -k;  int  u  =  -k;  v  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -k;        v    =    -k;    int  u  =  -k;  v  =  -k;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	106	None	add
46	[BUG]  [BUGGY]  u    =    -k;    v  =  -k;  Integer  u  =  -k;  v  =  -k;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -k;    v  =  -k;  Integer  u  =  -k;  v  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -k;        v    =    -k;    Integer  u  =  -k;  v  =  -k;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	106	None	add
47	[BUG]  [BUGGY]  u    =    -k;    v  =  -k;  u  =  -k;  v  =  -k;  }  else  {  t  =  (v  -  u)/2;  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -k;    v  =  -k;  u  =  -k;  v  =  -k;  }  else  {  t  =  (v  -  u)/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -k;        v    =    -k;    u  =  -k;  v  =  -k;  }  else  {  t  =  (v  -  u)/2;	  	non-compiled	[CE]  'else'  without  'if'	106	None	add
48	[BUG]  [BUGGY]  u    =    -k;    v  =  -k;  u  =  -k;  v  =  -k;  }  else  {  t  =  (v  -  u)/2;  }  [CE]  while  expected  [FE]            AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -k;    v  =  -k;  u  =  -k;  v  =  -k;  }  else  {  t  =  (v  -  u)/2;  }  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -k;        v    =    -k;    u  =  -k;  v  =  -k;  }  else  {  t  =  (v  -  u)/2;  }	  	non-compiled	[CE]  while  expected	106	None	add
49	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -k;    t  =  -k;  u  =  -k;  t  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u        =        -k;        t    =    -k;    u  =  -k;  t  =  -k;	  	compilable	  [FE]  ArithmeticException  	104	9	add
50	[BUG]  [BUGGY]  u    =    -k;    t  =  -k;  u  =  -k;  t  =  -k;  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -k;    t  =  -k;  u  =  -k;  t  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -k;        t    =    -k;    u  =  -k;  t  =  -k;	  	compilable	  [FE]  ArithmeticException  	104	9	add
51	[BUG]  [BUGGY]  u    =    -k;    t  =  -k;  int  u  =  -k;  t  =  -k;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -k;    t  =  -k;  int  u  =  -k;  t  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -k;        t    =    -k;    int  u  =  -k;  t  =  -k;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	104	None	add
52	[BUG]  [BUGGY]  u    =    -k;    t  =  -k;  long  u  =  -k;  t  =  -k;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -k;    t  =  -k;  long  u  =  -k;  t  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -k;        t    =    -k;    long  u  =  -k;  t  =  -k;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	104	None	add
53	[BUG]  [BUGGY]  u    =    -k;    t  =  -k;  U  =  -k;  t  =  -k;  [CE]  cannot  find  symbol  U  [FE]          ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -k;    t  =  -k;  U  =  -k;  t  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -k;        t    =    -k;    U  =  -k;  t  =  -k;	  	non-compiled	[CE]  cannot  find  symbol  U	104	None	add
54	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]            ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -k;    t  =  -k;  u  =  -1;  t  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u        =        -k;        t    =    -k;    u  =  -1;  t  =  -k;	  	compilable	  [FE]  ArithmeticException  	104	9	add
55	[BUG]  [BUGGY]  u    =    -k;    t  =  -k;  u  =  -1;  t  =  -k;  [FE]  ArithmeticException  [FE]            ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -k;    t  =  -k;  u  =  -1;  t  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -k;        t    =    -k;    u  =  -1;  t  =  -k;	  	compilable	  [FE]  ArithmeticException  	104	9	add
56	[BUG]  [BUGGY]  v  =  t.intValue()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  v  =  t.intValue()  +  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	v  =  t.intValue()  +  1;	          v    =    t.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	81	None	replace
57	[BUG]  [BUGGY]  v  =  t.longValue();  [CE]  int  cannot  be  dereferenced  [FE]                          AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  v  =  t.longValue();  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	v  =  t.longValue();	          v    =    t.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	81	None	replace
58	[BUG]  [BUGGY]  v  =  t.doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]                            AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  v  =  t.doubleValue();  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	v  =  t.doubleValue();	          v    =    t.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	81	None	replace
59	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  t;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  t;	  u    =    1;    timeout    	compilable	timeout	43	1	replace
60	[BUG]  [BUGGY]  u  =  t;  timeout  [FE]          AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  t;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  t;	  u    =    1;    timeout    	compilable	timeout	43	1	replace
61	[BUG]  [BUGGY]  u  =  -t  /  1;  (t  -  t  -  1);  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /  1;  (t  -  t  -  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -t  /  1;  (t  -  t  -  1);	  u    =    -t    -    1;    (t    -    t    -    1);    	non-compiled	[CE]  not  a  statement	96	None	replace
62	[BUG]  [BUGGY]  u  =  -t  -  1;  (v  -  t  -  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  -  1;  (v  -  t  -  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -t  -  1;  (v  -  t  -  1);	  u    =    -t    -    1;    (t    -    t    -    1);    	non-compiled	[CE]  not  a  statement	96	None	replace
63	[BUG]  [BUGGY]  (t  -  t  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  (t  -  t  -  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	(t  -  t  -  1);	  u    =    -t    -    1;    (t    -    t    -    1);    	non-compiled	[CE]  not  a  statement	96	None	replace
64	[BUG]  [BUGGY]  u  =  -t  /2;  (t  -  t  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /2;  (t  -  t  -  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -t  /2;  (t  -  t  -  1);	  u    =    -t    -    1;    (t    -    t    -    1);    	non-compiled	[CE]  not  a  statement	96	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -u;  u  =  -u;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -u;    u  =  -u;	  timeout    	compilable	  [FE]  AssertionFailedError  	28	1	add
66	[BUG]  [BUGGY]  u  =  -u;  u  =  -u;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -u;  u  =  -u;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -u;    u  =  -u;	  timeout    	compilable	  [FE]  AssertionFailedError  	28	1	add
67	[BUG]  [BUGGY]  u  =  -u;  int  u  =  -u;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -u;  int  u  =  -u;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -u;    int  u  =  -u;	  timeout    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	28	None	add
68	[BUG]  [BUGGY]  u  =  -u;  u  =  -u.intValue();  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -u;  u  =  -u.intValue();  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -u;    u  =  -u.intValue();	  timeout    	non-compiled	[CE]  int  cannot  be  dereferenced	28	None	add
69	[BUG]  [BUGGY]  u  =  -u;  u  =  -u.longValue();  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -u;  u  =  -u.longValue();  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -u;    u  =  -u.longValue();	  timeout    	non-compiled	[CE]  int  cannot  be  dereferenced	28	None	add
70	[BUG]  [BUGGY]  u  =  -u;  u  =  -u.intValue;  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -u;  u  =  -u.intValue;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -u;    u  =  -u.intValue;	  timeout    	non-compiled	[CE]  int  cannot  be  dereferenced	28	None	add
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /  1;  u  =  -t  -  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -t  /  1;  u  =  -t  -  1;	  u    =    -t    -    1;    u    =    -t    -    1;    	compilable	  [FE]  AssertionFailedError  	3	9	replace
72	[BUG]  [BUGGY]  u  =  -t  /  1;  u  =  -t  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /  1;  u  =  -t  -  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -t  /  1;  u  =  -t  -  1;	  u    =    -t    -    1;    u    =    -t    -    1;    	compilable	  [FE]  AssertionFailedError  	3	9	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /2;  u  =  -t  -  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -t  /2;  u  =  -t  -  1;	  u    =    -t    -    1;    u    =    -t    -    1;    	compilable	  [FE]  AssertionFailedError  	3	9	replace
74	[BUG]  [BUGGY]  u  =  -t  /2;  u  =  -t  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /2;  u  =  -t  -  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -t  /2;  u  =  -t  -  1;	  u    =    -t    -    1;    u    =    -t    -    1;    	compilable	  [FE]  AssertionFailedError  	3	9	replace
75	[BUG]  [BUGGY]  int  u  =  -v;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  int  u  =  -v;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	int  u  =  -v;	  u    =    -v;    int    u    =    -v;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	82	None	replace
76	[BUG]  [BUGGY]  t  =(t  <  <  4)/2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(t  <  <  4)/2;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(t  <  <  4)/2;	  t    =(t    <    <    3)/2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	109	None	replace
77	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(v  -  u)/2  +  1;  t  =(v  -  u)/2  +  1;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	t    =(v    -    u)/2    +    1;    t  =(v  -  u)/2  +  1;	  timeout    	compilable	timeout	75	1	add
78	[BUG]  [BUGGY]  t  =(v  -  u)/2  +  1;  t  =(v  -  u)/2  +  1;  timeout  [FE]            AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(v  -  u)/2  +  1;  t  =(v  -  u)/2  +  1;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t    =(v    -    u)/2    +    1;    t  =(v  -  u)/2  +  1;	  timeout    	compilable	timeout	75	1	add
79	[BUG]  [BUGGY]  t  =(v  -  u)/2  +  1;  int  t  =(v  -  u)/2  +  1;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(v  -  u)/2  +  1;  int  t  =(v  -  u)/2  +  1;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t    =(v    -    u)/2    +    1;    int  t  =(v  -  u)/2  +  1;	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	75	None	add
80	[BUG]  [BUGGY]  t  =(v  -  u)/2  +  1;  t  =(v  -  u)/2  +  1;  }  while  (t!=  0);  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(v  -  u)/2  +  1;  t  =(v  -  u)/2  +  1;  }  while  (t!=  0);  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t    =(v    -    u)/2    +    1;    t  =(v  -  u)/2  +  1;  }  while  (t!=  0);	  timeout    	non-compiled	[CE]  while  expected	75	None	add
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =(-t  -  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =(-t  -  1);	  u    =    -t    -    1;    u    =    (-t    -    1;    	compilable	  [FE]  AssertionFailedError  	7	9	replace
82	[BUG]  [BUGGY]  u  =(-t  -  1);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =(-t  -  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =(-t  -  1);	  u    =    -t    -    1;    u    =    (-t    -    1;    	compilable	  [FE]  AssertionFailedError  	7	9	replace
83	[BUG]  [BUGGY]  Integer  u  =  -t  -  1;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  Integer  u  =  -t  -  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	Integer  u  =  -t  -  1;	  u    =    -t    -    1;    Integer    u    =    -t    -    1;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	69	None	replace
84	[BUG]  [BUGGY]  int  u  =  -t  -  1;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  int  u  =  -t  -  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	int  u  =  -t  -  1;	  u    =    -t    -    1;    Integer    u    =    -t    -    1;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	69	None	replace
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =(v  -  t)/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =(v  -  t)/2;	  u    =    -v;    u    =    (v    -    v)/2;    	compilable	  [FE]  AssertionFailedError  	84	6	replace
86	[BUG]  [BUGGY]  u  =(v  -  t)/2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =(v  -  t)/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =(v  -  t)/2;	  u    =    -v;    u    =    (v    -    v)/2;    	compilable	  [FE]  AssertionFailedError  	84	6	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -1;  t  =  -1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -1;  t  =  -1;	  u    =    -k;    t    =    -k;    	compilable	  [FE]  AssertionFailedError  	105	5	replace
88	[BUG]  [BUGGY]  u  =  -1;  t  =  -1;  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -1;  t  =  -1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -1;  t  =  -1;	  u    =    -k;    t    =    -k;    	compilable	  [FE]  AssertionFailedError  	105	5	replace
89	[BUG]  [BUGGY]  timeout  [FE]      ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	t  =  -k;	  u    =    -k;    t    =    -k;    	compilable	timeout	105	1	replace
90	[BUG]  [BUGGY]  t  =  -k;  timeout  [FE]      ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =  -k;	  u    =    -k;    t    =    -k;    	compilable	timeout	105	1	replace
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -1;  t  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -1;  t  =  -k;	  u    =    -k;    t    =    -k;    	compilable	  [FE]  AssertionFailedError  	105	5	replace
92	[BUG]  [BUGGY]  u  =  -1;  t  =  -k;  [FE]  AssertionFailedError  [FE]        ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -1;  t  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -1;  t  =  -k;	  u    =    -k;    t    =    -k;    	compilable	  [FE]  AssertionFailedError  	105	5	replace
93	[BUG]  [BUGGY]  timeout  [FE]          ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -u;  t  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -u;  t  =  -k;	  u    =    -k;    t    =    -k;    	compilable	timeout	105	1	replace
94	[BUG]  [BUGGY]  u  =  -u;  t  =  -k;  timeout  [FE]          ArithmeticException    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -u;  t  =  -k;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -u;  t  =  -k;	  u    =    -k;    t    =    -k;    	compilable	timeout	105	1	replace
95	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(u  -  v)/  1;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	t  =(u  -  v)/  1;	  t    =(v    -    u)/    1;    timeout    	compilable	timeout	37	1	replace
96	[BUG]  [BUGGY]  t  =(u  -  v)/  1;  timeout  [FE]            AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(u  -  v)/  1;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(u  -  v)/  1;	  t    =(v    -    u)/    1;    timeout    	compilable	timeout	37	1	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -1;  u  =  (-t  -  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -1;  u  =  (-t  -  1);	  u    =    -t/2;    u    =    (-t/2);    	compilable	  [FE]  AssertionFailedError  	16	9	replace
98	[BUG]  [BUGGY]  u  =  -1;  u  =  (-t  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -1;  u  =  (-t  -  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -1;  u  =  (-t  -  1);	  u    =    -t/2;    u    =    (-t/2);    	compilable	  [FE]  AssertionFailedError  	16	9	replace
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /  1;  u  =  -t  /  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -t    /    1;    u  =  -t  /  1;	  	compilable	  [FE]  AssertionFailedError  	46	1	add
100	[BUG]  [BUGGY]  u  =  -t  /  1;  u  =  -t  /  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /  1;  u  =  -t  /  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    /    1;    u  =  -t  /  1;	  	compilable	  [FE]  AssertionFailedError  	46	1	add
101	[BUG]  [BUGGY]  u  =  -t  /  1;  int  u  =  -t  /  1;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /  1;  int  u  =  -t  /  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    /    1;    int  u  =  -t  /  1;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	46	None	add
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /  1;  u  =  (-t  /  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -t    /    1;    u  =  (-t  /  1);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
103	[BUG]  [BUGGY]  u  =  -t  /  1;  u  =  (-t  /  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /  1;  u  =  (-t  /  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    /    1;    u  =  (-t  /  1);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
104	[BUG]  [BUGGY]  u  =  -t  /  1;  U  =  -t  /  1;  [CE]  cannot  find  symbol  U  [FE]          AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /  1;  U  =  -t  /  1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    /    1;    U  =  -t  /  1;	  	non-compiled	[CE]  cannot  find  symbol  U	46	None	add
105	[BUG]  [BUGGY]  u  =  -t  /  1;  (t  -t  /  1);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u  =  -t  /  1;  (t  -t  /  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    /    1;    (t  -t  /  1);	  	non-compiled	[CE]  not  a  statement	46	None	add
106	[BUG]  [BUGGY]  int  t  =(v  -  u)/2;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  int  t  =(v  -  u)/2;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	int  t  =(v  -  u)/2;	          t    =(v    -    u)/2;    int    t    =(v    -    u)/2;    	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	54	None	replace
107	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(u  -  v)/2;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	t  =(u  -  v)/2;	          t    =(v    -    u)/2;    int    t    =(v    -    u)/2;    	compilable	timeout	54	1	replace
108	[BUG]  [BUGGY]  t  =(u  -  v)/2;  timeout  [FE]                AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(u  -  v)/2;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(u  -  v)/2;	          t    =(v    -    u)/2;    int    t    =(v    -    u)/2;    	compilable	timeout	54	1	replace
109	[BUG]  [BUGGY]  int  u  =  -t/2;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          ArithmeticException      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  int  u  =  -t/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	int  u  =  -t/2;	  u    =    -t/2;    int    u    =    -t/2;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	11	None	replace
110	[BUG]  [BUGGY]  t  =  -t/2;  int  u  =  -t/2;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            ArithmeticException      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =  -t/2;  int  u  =  -t/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =  -t/2;  int  u  =  -t/2;	  u    =    -t/2;    int    u    =    -t/2;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	11	None	replace
111	[BUG]  [BUGGY]  timeout  [FE]              ArithmeticException      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =  -t/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	t  =  -t/2;	  u    =    -t/2;    int    u    =    -t/2;    	compilable	timeout	11	1	replace
112	[BUG]  [BUGGY]  t  =  -t/2;  timeout  [FE]              ArithmeticException      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =  -t/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =  -t/2;	  u    =    -t/2;    int    u    =    -t/2;    	compilable	timeout	11	1	replace
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t    -    1;    u  =  (-t  -  1);  u  =  -t  -  1;  u  =  (-t  -  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u        =        -t        -        1;        u    =    (-t    -    1);    u  =  -t  -  1;  u  =  (-t  -  1);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
114	[BUG]  [BUGGY]  u    =    -t    -    1;    u  =  (-t  -  1);  u  =  -t  -  1;  u  =  (-t  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t    -    1;    u  =  (-t  -  1);  u  =  -t  -  1;  u  =  (-t  -  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -t        -        1;        u    =    (-t    -    1);    u  =  -t  -  1;  u  =  (-t  -  1);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
115	[BUG]  [BUGGY]  u    =    -t    -    1;    u  =  (-t  -  1);  int  u  =  -t  -  1;  u  =  (-t  -  1);  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t    -    1;    u  =  (-t  -  1);  int  u  =  -t  -  1;  u  =  (-t  -  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -t        -        1;        u    =    (-t    -    1);    int  u  =  -t  -  1;  u  =  (-t  -  1);	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	5	None	add
116	[BUG]  [BUGGY]  u    =    -t    -    1;    u  =  (-t  -  1);  U  =  -t  -  1;  u  =  (-t  -  1);  [CE]  cannot  find  symbol  U  [FE]        AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t    -    1;    u  =  (-t  -  1);  U  =  -t  -  1;  u  =  (-t  -  1);  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -t        -        1;        u    =    (-t    -    1);    U  =  -t  -  1;  u  =  (-t  -  1);	  	non-compiled	[CE]  cannot  find  symbol  U	5	None	add
117	[BUG]  [BUGGY]  u    =    -t    -    1;    u  =  (-t  -  1);  u  =  -t  -  1;  u  =  (-t  -  1));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t    -    1;    u  =  (-t  -  1);  u  =  -t  -  1;  u  =  (-t  -  1));  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -t        -        1;        u    =    (-t    -    1);    u  =  -t  -  1;  u  =  (-t  -  1));	  	non-compiled	[CE]  ';'  expected	5	None	add
118	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(v  -  u)/  3;  t  =(v  -  u)/  3;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	t    =(v    -    u)/    3;    t  =(v  -  u)/  3;	  timeout    	compilable	timeout	38	1	add
119	[BUG]  [BUGGY]  t  =(v  -  u)/  3;  t  =(v  -  u)/  3;  timeout  [FE]              AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(v  -  u)/  3;  t  =(v  -  u)/  3;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t    =(v    -    u)/    3;    t  =(v  -  u)/  3;	  timeout    	compilable	timeout	38	1	add
120	[BUG]  [BUGGY]  t  =(v  -  u)/  3;  int  t  =(v  -  u)/  3;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(v  -  u)/  3;  int  t  =(v  -  u)/  3;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t    =(v    -    u)/    3;    int  t  =(v  -  u)/  3;	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	38	None	add
121	[BUG]  [BUGGY]  t  =(v  -  u)/  3;  t  =(v  -  u)/  3;  }  while  (t!=  0);  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(v  -  u)/  3;  t  =(v  -  u)/  3;  }  while  (t!=  0);  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t    =(v    -    u)/    3;    t  =(v  -  u)/  3;  }  while  (t!=  0);	  timeout    	non-compiled	[CE]  while  expected	38	None	add
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ArithmeticException      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t/2;    t  =  -t/2;  u  =  -t/2;  t  =  -t/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u        =        -t/2;        t    =    -t/2;    u  =  -t/2;  t  =  -t/2;	  timeout    	compilable	  [FE]  AssertionFailedError  	112	9	add
123	[BUG]  [BUGGY]  u    =    -t/2;    t  =  -t/2;  u  =  -t/2;  t  =  -t/2;  [FE]  AssertionFailedError  [FE]          ArithmeticException      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t/2;    t  =  -t/2;  u  =  -t/2;  t  =  -t/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -t/2;        t    =    -t/2;    u  =  -t/2;  t  =  -t/2;	  timeout    	compilable	  [FE]  AssertionFailedError  	112	9	add
124	[BUG]  [BUGGY]  u    =    -t/2;    t  =  -t/2;  int  u  =  -t/2;  t  =  -t/2;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            ArithmeticException      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t/2;    t  =  -t/2;  int  u  =  -t/2;  t  =  -t/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -t/2;        t    =    -t/2;    int  u  =  -t/2;  t  =  -t/2;	  timeout    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	112	None	add
125	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]              ArithmeticException      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t/2;    t  =  -t/2;  u  =  -t/2;  t  =  -t/1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u        =        -t/2;        t    =    -t/2;    u  =  -t/2;  t  =  -t/1;	  timeout    	compilable	  [FE]  ArithmeticException  	112	9	add
126	[BUG]  [BUGGY]  u    =    -t/2;    t  =  -t/2;  u  =  -t/2;  t  =  -t/1;  [FE]  ArithmeticException  [FE]              ArithmeticException      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t/2;    t  =  -t/2;  u  =  -t/2;  t  =  -t/1;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -t/2;        t    =    -t/2;    u  =  -t/2;  t  =  -t/1;	  timeout    	compilable	  [FE]  ArithmeticException  	112	9	add
127	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]                ArithmeticException      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t/2;    t  =  -t/2;  u  =  -t/2;  t  =  -t/3;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u        =        -t/2;        t    =    -t/2;    u  =  -t/2;  t  =  -t/3;	  timeout    	compilable	  [FE]  ArithmeticException  	112	9	add
128	[BUG]  [BUGGY]  u    =    -t/2;    t  =  -t/2;  u  =  -t/2;  t  =  -t/3;  [FE]  ArithmeticException  [FE]                ArithmeticException      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t/2;    t  =  -t/2;  u  =  -t/2;  t  =  -t/3;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -t/2;        t    =    -t/2;    u  =  -t/2;  t  =  -t/3;	  timeout    	compilable	  [FE]  ArithmeticException  	112	9	add
129	[BUG]  [BUGGY]  u    =    -t/2;    t  =  -t/2;  U  =  -t/2;  t  =  -t/2;  [CE]  cannot  find  symbol  U  [FE]                  ArithmeticException      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  u    =    -t/2;    t  =  -t/2;  U  =  -t/2;  t  =  -t/2;  [BUGGY]      }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u        =        -t/2;        t    =    -t/2;    U  =  -t/2;  t  =  -t/2;	  timeout    	non-compiled	[CE]  cannot  find  symbol  U	112	None	add
130	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(v  -  t)/2;  t  =(v  -  t)/2;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	t    =(v    -    t)/2;    t  =(v  -  t)/2;	  timeout    	compilable	timeout	115	1	add
131	[BUG]  [BUGGY]  t  =(v  -  t)/2;  t  =(v  -  t)/2;  timeout  [FE]            AssertionFailedError      [CONTEXT]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {      [BUGGY]  t  =(v  -  t)/2;  t  =(v  -  t)/2;  [BUGGY]      u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t    =(v    -    t)/2;    t  =(v  -  t)/2;	  timeout    	compilable	timeout	115	1	add
