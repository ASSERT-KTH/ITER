bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  u  =  -t//2;  [CE]  ';'  expected  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t//2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -t//2;	  u    =    -t/2;    	non-compiled	[CE]  ';'  expected	6	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  -  1;  u  =  -t  -  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -t    -    1;    u  =  -t  -  1;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
3	[BUG]  [BUGGY]  u  =  -t  -  1;  u  =  -t  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  -  1;  u  =  -t  -  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    -    1;    u  =  -t  -  1;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
4	[BUG]  [BUGGY]  u  =  -t  -  1;  int  u  =  -t  -  1;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  -  1;  int  u  =  -t  -  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    -    1;    int  u  =  -t  -  1;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	16	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  -  1;  u  =  (-t  -  1);  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -t    -    1;    u  =  (-t  -  1);	  	compilable	  [FE]  AssertionFailedError  	16	1	add
6	[BUG]  [BUGGY]  u  =  -t  -  1;  u  =  (-t  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  -  1;  u  =  (-t  -  1);  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    -    1;    u  =  (-t  -  1);	  	compilable	  [FE]  AssertionFailedError  	16	1	add
7	[BUG]  [BUGGY]  u  =  -t  -  1;  u  =  (-t  -  1;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  -  1;  u  =  (-t  -  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    -    1;    u  =  (-t  -  1;	  	non-compiled	[CE]  ')'  expected	16	None	add
8	[BUG]  [BUGGY]  u  =  -t  -  1;  U  =  -t  -  1;  [CE]  cannot  find  symbol  U  [FE]            AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  -  1;  U  =  -t  -  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    -    1;    U  =  -t  -  1;	  	non-compiled	[CE]  cannot  find  symbol  U	16	None	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t/2;  u  =  -t/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -t/2;    u  =  -t/2;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
10	[BUG]  [BUGGY]  u  =  -t/2;  u  =  -t/2;  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t/2;  u  =  -t/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t/2;    u  =  -t/2;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
11	[BUG]  [BUGGY]  u  =  -t/2;  int  u  =  -t/2;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t/2;  int  u  =  -t/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t/2;    int  u  =  -t/2;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	5	None	add
12	[BUG]  [BUGGY]  u  =  -t/2;  u  =  (-t/2;  [CE]  ')'  expected  [FE]        ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t/2;  u  =  (-t/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t/2;    u  =  (-t/2;	  	non-compiled	[CE]  ')'  expected	5	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t/2;  u  =  -t/1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -t/2;    u  =  -t/1;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
14	[BUG]  [BUGGY]  u  =  -t/2;  u  =  -t/1;  [FE]  AssertionFailedError  [FE]          ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t/2;  u  =  -t/1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t/2;    u  =  -t/1;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t/2;  u  =  (-t/2);  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -t/2;    u  =  (-t/2);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
16	[BUG]  [BUGGY]  u  =  -t/2;  u  =  (-t/2);  [FE]  AssertionFailedError  [FE]            ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t/2;  u  =  (-t/2);  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t/2;    u  =  (-t/2);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
17	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(u  -  u)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	t  =(u  -  u)/2;	      timeout    	compilable	timeout	10	1	replace
18	[BUG]  [BUGGY]  t  =(u  -  u)/2;  timeout  [FE]                AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(u  -  u)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(u  -  u)/2;	      timeout    	compilable	timeout	10	1	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -1;  u  =  -1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -1;    u  =  -1;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
20	[BUG]  [BUGGY]  u  =  -1;  u  =  -1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -1;  u  =  -1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -1;    u  =  -1;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
21	[BUG]  [BUGGY]  u  =  -1;  u  =  -1;  }  else  {  t  =  (v  -  u)/2;  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -1;  u  =  -1;  }  else  {  t  =  (v  -  u)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -1;    u  =  -1;  }  else  {  t  =  (v  -  u)/2;	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
22	[BUG]  [BUGGY]  u  =  -1;  u  =  -1;  }  else  {  t  =  (v  -  u)/2;  }  [CE]  while  expected  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -1;  u  =  -1;  }  else  {  t  =  (v  -  u)/2;  }  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -1;    u  =  -1;  }  else  {  t  =  (v  -  u)/2;  }	  	non-compiled	[CE]  while  expected	1	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k;  u  =  -k;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -k;    u  =  -k;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
24	[BUG]  [BUGGY]  u  =  -k;  u  =  -k;  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k;  u  =  -k;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -k;    u  =  -k;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
25	[BUG]  [BUGGY]  u  =  -k;  int  u  =  -k;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k;  int  u  =  -k;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -k;    int  u  =  -k;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	7	None	add
26	[BUG]  [BUGGY]  u  =  -k;  u  =  -k;  }  else  {  t  =  (v  -  u)/2;  [CE]  'else'  without  'if'  [FE]        ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k;  u  =  -k;  }  else  {  t  =  (v  -  u)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -k;    u  =  -k;  }  else  {  t  =  (v  -  u)/2;	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
27	[BUG]  [BUGGY]  u  =  -k;  u  =  -k;  }  else  {  t  =  (v  -  u)/2;  }  [CE]  while  expected  [FE]          ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k;  u  =  -k;  }  else  {  t  =  (v  -  u)/2;  }  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -k;    u  =  -k;  }  else  {  t  =  (v  -  u)/2;  }	  	non-compiled	[CE]  while  expected	7	None	add
28	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -u;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -u;	  u    =    -v;    timeout    	compilable	timeout	4	1	replace
29	[BUG]  [BUGGY]  u  =  -u;  timeout  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -u;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -u;	  u    =    -v;    timeout    	compilable	timeout	4	1	replace
30	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -v/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -v/2;	  u    =    -v;    timeout    	compilable	timeout	4	1	replace
31	[BUG]  [BUGGY]  u  =  -v/2;  timeout  [FE]            AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -v/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -v/2;	  u    =    -v;    timeout    	compilable	timeout	4	1	replace
32	[BUG]  [BUGGY]  t  =(v  <  <  1)/2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  <  <  1)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(v  <  <  1)/2;	      t    =(v    <    <    3)/2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
33	[BUG]  [BUGGY]  t  =(u  <  <  3)/2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(u  <  <  3)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(u  <  <  3)/2;	      t    =(v    <    <    3)/2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
34	[BUG]  [BUGGY]  t  =(1  <  <  k)/  2  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(1  <  <  k)/  2  +  1;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(1  <  <  k)/  2  +  1;	      t    =(1    <    <    k)/    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
35	[BUG]  [BUGGY]  t  =(1  <  <  k)/  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(1  <  <  k)/  1;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(1  <  <  k)/  1;	      t    =(1    <    <    k)/    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
36	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  -  u)/  1;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	t  =(v  -  u)/  1;	      t    =(v    -    u)/2;    timeout    	compilable	timeout	12	1	replace
37	[BUG]  [BUGGY]  t  =(v  -  u)/  1;  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  -  u)/  1;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(v  -  u)/  1;	      t    =(v    -    u)/2;    timeout    	compilable	timeout	12	1	replace
38	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  -  u)/  3;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	t  =(v  -  u)/  3;	      t    =(v    -    u)/2;    timeout    	compilable	timeout	12	1	replace
39	[BUG]  [BUGGY]  t  =(v  -  u)/  3;  timeout  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  -  u)/  3;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(v  -  u)/  3;	      t    =(v    -    u)/2;    timeout    	compilable	timeout	12	1	replace
40	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  0;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  0;	  u    =    -1;    	compilable	  [FE]  ArithmeticException  	2	9	replace
41	[BUG]  [BUGGY]  u  =  0;  [FE]  ArithmeticException  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  0;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  0;	  u    =    -1;    	compilable	  [FE]  ArithmeticException  	2	9	replace
42	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  1;	  u    =    -1;    	compilable	timeout	2	1	replace
43	[BUG]  [BUGGY]  u  =  1;  timeout  [FE]      AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  1;	  u    =    -1;    	compilable	timeout	2	1	replace
44	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  2;	  u    =    -1;    	compilable	timeout	2	1	replace
45	[BUG]  [BUGGY]  u  =  2;  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  2;	  u    =    -1;    	compilable	timeout	2	1	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  /  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -t  /  1;	  u    =    -t    -    1;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
47	[BUG]  [BUGGY]  u  =  -t  /  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  /  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -t  /  1;	  u    =    -t    -    1;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
48	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -u  /  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -u  /  1;	  u    =    -t    -    1;    	compilable	timeout	17	1	replace
49	[BUG]  [BUGGY]  u  =  -u  /  1;  timeout  [FE]      AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -u  /  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -u  /  1;	  u    =    -t    -    1;    	compilable	timeout	17	1	replace
50	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -k/2;	  u    =    -k;    	compilable	  [FE]  ArithmeticException  	8	9	replace
51	[BUG]  [BUGGY]  u  =  -k/2;  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -k/2;	  u    =    -k;    	compilable	  [FE]  ArithmeticException  	8	9	replace
52	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	        t    =(v    -    u)/2;    t  =(v  -  u)/2;	  timeout    	compilable	timeout	11	1	add
53	[BUG]  [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/2;  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	        t    =(v    -    u)/2;    t  =(v  -  u)/2;	  timeout    	compilable	timeout	11	1	add
54	[BUG]  [BUGGY]      t  =(v  -  u)/2;  int  t  =(v  -  u)/2;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      t  =(v  -  u)/2;  int  t  =(v  -  u)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	        t    =(v    -    u)/2;    int  t  =(v  -  u)/2;	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	11	None	add
55	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/1;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	        t    =(v    -    u)/2;    t  =(v  -  u)/1;	  timeout    	compilable	timeout	11	1	add
56	[BUG]  [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/1;  timeout  [FE]            AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/1;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	        t    =(v    -    u)/2;    t  =(v  -  u)/1;	  timeout    	compilable	timeout	11	1	add
57	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  -  k)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	t  =(v  -  k)/2;	      t    =(v    -    wholeNumber)/2;    	compilable	timeout	14	1	replace
58	[BUG]  [BUGGY]  t  =(v  -  k)/2;  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  -  k)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(v  -  k)/2;	      t    =(v    -    wholeNumber)/2;    	compilable	timeout	14	1	replace
59	[BUG]  [BUGGY]  t  =(v  -  w)/2;  [CE]  cannot  find  symbol  w  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  -  w)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(v  -  w)/2;	      t    =(v    -    wholeNumber)/2;    	non-compiled	[CE]  cannot  find  symbol  w	14	None	replace
60	[BUG]  [BUGGY]  t  =(v  -  n)/2;  [CE]  cannot  find  symbol  n  [FE]            AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  -  n)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(v  -  n)/2;	      t    =(v    -    wholeNumber)/2;    	non-compiled	[CE]  cannot  find  symbol  n	14	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -v;  u  =  -v;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -v;    u  =  -v;	  timeout    	compilable	  [FE]  AssertionFailedError  	3	1	add
62	[BUG]  [BUGGY]  u  =  -v;  u  =  -v;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -v;  u  =  -v;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -v;    u  =  -v;	  timeout    	compilable	  [FE]  AssertionFailedError  	3	1	add
63	[BUG]  [BUGGY]  u  =  -v;  u  =  -v;  }  else  {  t  =(v  -  u)/2;  }  while  (t!=  0);  [CE]  while  expected  [FE]            AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -v;  u  =  -v;  }  else  {  t  =(v  -  u)/2;  }  while  (t!=  0);  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -v;    u  =  -v;  }  else  {  t  =(v  -  u)/2;  }  while  (t!=  0);	  timeout    	non-compiled	[CE]  while  expected	3	None	add
64	[BUG]  [BUGGY]  u  =  -v;  u  =  -v;  }  else  {  t  =  (v  -  u)/2;  }  while(t  >=  0);  [CE]  while  expected  [FE]              AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -v;  u  =  -v;  }  else  {  t  =  (v  -  u)/2;  }  while(t  >=  0);  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -v;    u  =  -v;  }  else  {  t  =  (v  -  u)/2;  }  while(t  >=  0);	  timeout    	non-compiled	[CE]  while  expected	3	None	add
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k;  k  =  -k;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -k;    k  =  -k;	  	compilable	  [FE]  AssertionFailedError  	7	6	add
66	[BUG]  [BUGGY]  u  =  -k;  k  =  -k;  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k;  k  =  -k;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -k;    k  =  -k;	  	compilable	  [FE]  AssertionFailedError  	7	6	add
67	[BUG]  [BUGGY]  u  =  -k;  int  k  =  -k;  [CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k;  int  k  =  -k;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -k;    int  k  =  -k;	  	non-compiled	[CE]  variable  k  is  already  defined  in  method  greatestCommonDivisor(int,int)	7	None	add
68	[BUG]  [BUGGY]  u  =  -k;  u  =  -k.intValue();  [CE]  int  cannot  be  dereferenced  [FE]        ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k;  u  =  -k.intValue();  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -k;    u  =  -k.intValue();	  	non-compiled	[CE]  int  cannot  be  dereferenced	7	None	add
69	[BUG]  [BUGGY]  u  =  -t  -  1;  Integer  u  =  -t  -  1;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  -  1;  Integer  u  =  -t  -  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    -    1;    Integer  u  =  -t  -  1;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	16	None	add
70	[BUG]  [BUGGY]  u  =  -t  -  1;  u  =  -t  -  1;  }  while  (t!=  0);  [CE]  while  expected  [FE]      AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  -  1;  u  =  -t  -  1;  }  while  (t!=  0);  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    -    1;    u  =  -t  -  1;  }  while  (t!=  0);	  	non-compiled	[CE]  while  expected	16	None	add
71	[BUG]  [BUGGY]  t  =(v  <  <  4)/2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  <  <  4)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(v  <  <  4)/2;	      t    =(v    <    <    3)/2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
72	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/3;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	        t    =(v    -    u)/2;    t  =(v  -  u)/3;	  timeout    	compilable	timeout	11	1	add
73	[BUG]  [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/3;  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/3;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	        t    =(v    -    u)/2;    t  =(v  -  u)/3;	  timeout    	compilable	timeout	11	1	add
74	[BUG]  [BUGGY]      t  =(v  -  u)/2;  T  =(v  -  u)/2;  [CE]  cannot  find  symbol  T  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      t  =(v  -  u)/2;  T  =(v  -  u)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	        t    =(v    -    u)/2;    T  =(v  -  u)/2;	  timeout    	non-compiled	[CE]  cannot  find  symbol  T	11	None	add
75	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  -  u)/2  +  1;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	t  =(v  -  u)/2  +  1;	      t    =(v    -    u)/2;    timeout    	compilable	timeout	12	1	replace
76	[BUG]  [BUGGY]  t  =(v  -  u)/2  +  1;  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  -  u)/2  +  1;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(v  -  u)/2  +  1;	      t    =(v    -    u)/2;    timeout    	compilable	timeout	12	1	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      k  =(v  -  u)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	        k  =(v  -  u)/2;	  timeout    	compilable	  [FE]  AssertionFailedError  	9	8	add
78	[BUG]  [BUGGY]      k  =(v  -  u)/2;  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      k  =(v  -  u)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	        k  =(v  -  u)/2;	  timeout    	compilable	  [FE]  AssertionFailedError  	9	8	add
79	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      v  =(v  -  u)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	        v  =(v  -  u)/2;	  timeout    	compilable	timeout	9	1	add
80	[BUG]  [BUGGY]      v  =(v  -  u)/2;  timeout  [FE]                  AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      v  =(v  -  u)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	        v  =(v  -  u)/2;	  timeout    	compilable	timeout	9	1	add
81	[BUG]  [BUGGY]      v  =  t.intValue();  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      v  =  t.intValue();  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	        v  =  t.intValue();	  timeout    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	add
82	[BUG]  [BUGGY]  u  =  -v;  int  u  =  -v;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -v;  int  u  =  -v;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -v;    int  u  =  -v;	  timeout    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	add
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -v;  u  =  (v  -  v)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -v;    u  =  (v  -  v)/2;	  timeout    	compilable	  [FE]  AssertionFailedError  	3	1	add
84	[BUG]  [BUGGY]  u  =  -v;  u  =  (v  -  v)/2;  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -v;  u  =  (v  -  v)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -v;    u  =  (v  -  v)/2;	  timeout    	compilable	  [FE]  AssertionFailedError  	3	1	add
85	[BUG]  [BUGGY]  u  =  -v;  u  =  -v.intValue();  [CE]  int  cannot  be  dereferenced  [FE]              AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -v;  u  =  -v.intValue();  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -v;    u  =  -v.intValue();	  timeout    	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	add
86	[BUG]  [BUGGY]  u  =  -v;  (v  -  u)/2;  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -v;  (v  -  u)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -v;    (v  -  u)/2;	  timeout    	non-compiled	[CE]  not  a  statement	3	None	add
87	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -u  -  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -u  -  1;	  u    =    -t    -    1;    	compilable	timeout	17	1	replace
88	[BUG]  [BUGGY]  u  =  -u  -  1;  timeout  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -u  -  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -u  -  1;	  u    =    -t    -    1;    	compilable	timeout	17	1	replace
89	[BUG]  [BUGGY]  u  =  -1;  int  u  =  -1;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -1;  int  u  =  -1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -1;    int  u  =  -1;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	1	None	add
90	[BUG]  [BUGGY]  u  =  -1;  (v  -  u)/2;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -1;  (v  -  u)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -1;    (v  -  u)/2;	  	non-compiled	[CE]  not  a  statement	1	None	add
91	[BUG]  [BUGGY]  u  =  -1;  (v  -  u)/2  +  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -1;  (v  -  u)/2  +  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -1;    (v  -  u)/2  +  1;	  	non-compiled	[CE]  not  a  statement	1	None	add
92	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -v  -  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u  =  -v  -  1;	  u    =    -v;    timeout    	compilable	timeout	4	1	replace
93	[BUG]  [BUGGY]  u  =  -v  -  1;  timeout  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -v  -  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -v  -  1;	  u    =    -v;    timeout    	compilable	timeout	4	1	replace
94	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  -  1;  t  =  -t  -  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -t    -    1;    t  =  -t  -  1;	  	compilable	timeout	16	1	add
95	[BUG]  [BUGGY]  u  =  -t  -  1;  t  =  -t  -  1;  timeout  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  -  1;  t  =  -t  -  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    -    1;    t  =  -t  -  1;	  	compilable	timeout	16	1	add
96	[BUG]  [BUGGY]  u  =  -t  -  1;  (t  -  t  -  1);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t  -  1;  (t  -  t  -  1);  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t    -    1;    (t  -  t  -  1);	  	non-compiled	[CE]  not  a  statement	16	None	add
97	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  v  =  -v;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	v  =  -v;	  u    =    -v;    timeout    	compilable	timeout	4	1	replace
98	[BUG]  [BUGGY]  v  =  -v;  timeout  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  v  =  -v;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	v  =  -v;	  u    =    -v;    timeout    	compilable	timeout	4	1	replace
99	[BUG]  [BUGGY]  u  =  -n  -  1;  [CE]  cannot  find  symbol  n  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -n  -  1;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u  =  -n  -  1;	  u    =    -t    -    1;    	non-compiled	[CE]  cannot  find  symbol  n	17	None	replace
100	[BUG]  [BUGGY]  timeout  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  k  =  -k;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	k  =  -k;	  u    =    -k;    	compilable	timeout	8	1	replace
101	[BUG]  [BUGGY]  k  =  -k;  timeout  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  k  =  -k;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	k  =  -k;	  u    =    -k;    	compilable	timeout	8	1	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      u  =(v  -  u)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	        u  =(v  -  u)/2;	  timeout    	compilable	  [FE]  AssertionFailedError  	9	1	add
103	[BUG]  [BUGGY]      u  =(v  -  u)/2;  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]      u  =(v  -  u)/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	        u  =(v  -  u)/2;	  timeout    	compilable	  [FE]  AssertionFailedError  	9	1	add
104	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k;  t  =  -k;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -k;    t  =  -k;	  	compilable	  [FE]  ArithmeticException  	7	9	add
105	[BUG]  [BUGGY]  u  =  -k;  t  =  -k;  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k;  t  =  -k;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -k;    t  =  -k;	  	compilable	  [FE]  ArithmeticException  	7	9	add
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k;  v  =  -k;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -k;    v  =  -k;	  	compilable	  [FE]  AssertionFailedError  	7	5	add
107	[BUG]  [BUGGY]  u  =  -k;  v  =  -k;  [FE]  AssertionFailedError  [FE]      ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -k;  v  =  -k;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -k;    v  =  -k;	  	compilable	  [FE]  AssertionFailedError  	7	5	add
108	[BUG]  [BUGGY]  u  =  -1;  (v  -  u)/2);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -1;  (v  -  u)/2);  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -1;    (v  -  u)/2);	  	non-compiled	[CE]  not  a  statement	1	None	add
109	[BUG]  [BUGGY]  t  =(t  <  <  3)/2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(t  <  <  3)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(t  <  <  3)/2;	      t    =(v    <    <    3)/2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t/2;  u  =  (v  -t/2);  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -t/2;    u  =  (v  -t/2);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
111	[BUG]  [BUGGY]  u  =  -t/2;  u  =  (v  -t/2);  [FE]  AssertionFailedError  [FE]    ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t/2;  u  =  (v  -t/2);  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t/2;    u  =  (v  -t/2);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
112	[BUG]  [BUGGY]  timeout  [FE]      ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t/2;  t  =  -t/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	u    =    -t/2;    t  =  -t/2;	  	compilable	timeout	5	1	add
113	[BUG]  [BUGGY]  u  =  -t/2;  t  =  -t/2;  timeout  [FE]      ArithmeticException    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  u  =  -t/2;  t  =  -t/2;  [BUGGY]    }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	u    =    -t/2;    t  =  -t/2;	  	compilable	timeout	5	1	add
114	[BUG]  [BUGGY]  t  =(1  <  <  k)/  3;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(1  <  <  k)/  3;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(1  <  <  k)/  3;	      t    =(1    <    <    k)/    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
115	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  -  t)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	add	t  =(v  -  t)/2;	      t    =(v    -    wholeNumber)/2;    	compilable	timeout	14	1	replace
116	[BUG]  [BUGGY]  t  =(v  -  t)/2;  timeout  [FE]        AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  -  t)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(v  -  t)/2;	      t    =(v    -    wholeNumber)/2;    	compilable	timeout	14	1	replace
117	[BUG]  [BUGGY]  t  =(v  -  m)/2;  [CE]  cannot  find  symbol  m  [FE]          AssertionFailedError    [CONTEXT]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {    [BUGGY]  t  =(v  -  m)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	601	601	1	replace	t  =(v  -  m)/2;	      t    =(v    -    wholeNumber)/2;    	non-compiled	[CE]  cannot  find  symbol  m	14	None	replace
