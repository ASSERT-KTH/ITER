bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while((  u&1)  ==  1)  {  t/=1;  [CE]  while  expected  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while((  u&1)  ==  1)  {  t/=1;  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  u&1)  ==  1)  {  t/=1;	  while    ((    u&1)    ==    1)    {    t/=2;    	non-compiled	[CE]  while  expected	2	None	replace
2	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  u  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	9	None	replace
3	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	9	None	replace
4	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	9	None	replace
5	[BUG]  [BUGGY]  while(t  <  2)  {  [CE]  while  expected  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while(t  <  2)  {  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  <  2)  {	  while(t    <    0)    {    	non-compiled	[CE]  while  expected	1	None	replace
6	[BUG]  [BUGGY]  while(t  <  3)  {  [CE]  while  expected  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while(t  <  3)  {  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  <  3)  {	  while(t    <    0)    {    	non-compiled	[CE]  while  expected	1	None	replace
7	[BUG]  [BUGGY]  while((  t&1)  ==  0)  {  t/=1;  [CE]  while  expected  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while((  t&1)  ==  0)  {  t/=1;  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&1)  ==  0)  {  t/=1;	  while((    t&1)    ==    0)    {    t/=2;    	non-compiled	[CE]  while  expected	17	None	replace
8	[BUG]  [BUGGY]  while((  t&1)  ==  1)  {  t/=2;  [CE]  while  expected  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while((  t&1)  ==  1)  {  t/=2;  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&1)  ==  1)  {  t/=2;	  while((    t&1)    ==    0)    {    t/=2;    	non-compiled	[CE]  while  expected	17	None	replace
9	[BUG]  [BUGGY]  while((  t&1)!=  0)  {  t/=2;  [CE]  while  expected  [FE]            AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while((  t&1)!=  0)  {  t/=2;  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&1)!=  0)  {  t/=2;	  while((    t&1)    ==    0)    {    t/=2;    	non-compiled	[CE]  while  expected	17	None	replace
10	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  v  :  -(u/2)/*B3*/);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  ((  t&1)  ==  1)?  v  :  -(u/2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  v  :  -(u/2)/*B3*/);	      ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	6	None	replace
11	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  ((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);	      ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	6	None	replace
12	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);  [CE]  :  expected  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	18	None	replace
13	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);  [CE]  :  expected  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	18	None	replace
14	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [CE]  :  expected  [FE]            AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	18	None	replace
15	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	8	None	replace
16	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	8	None	replace
17	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	8	None	replace
18	[BUG]  [BUGGY]  while((  t&1)  ==  1))  {  t/=2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while((  t&1)  ==  1))  {  t/=2;  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&1)  ==  1))  {  t/=2;	  while((    u&1)    ==    1))    {    t/=2;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  while((  u&1)  ==  1))  {  t/=1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while((  u&1)  ==  1))  {  t/=1;  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  u&1)  ==  1))  {  t/=1;	  while((    u&1)    ==    1))    {    t/=2;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	16	None	replace
21	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	16	None	replace
22	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/);	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	16	None	replace
23	[BUG]  [BUGGY]  while(t  >=  0)  {  [CE]  while  expected  [FE]            AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while(t  >=  0)  {  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  >=  0)  {	  while(t!=    0)    {    	non-compiled	[CE]  while  expected	13	None	replace
24	[BUG]  [BUGGY]  while(t!=  2)  {  [CE]  while  expected  [FE]              AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while(t!=  2)  {  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t!=  2)  {	  while(t!=    0)    {    	non-compiled	[CE]  while  expected	13	None	replace
25	[BUG]  [BUGGY]      int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]      int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	        int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	14	None	add
26	[BUG]  [BUGGY]      int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]      int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	        int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	14	None	add
27	[BUG]  [BUGGY]      int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]      int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	        int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	14	None	add
28	[BUG]  [BUGGY]      int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  >>  1)?  v  :  -(u/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]      int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  >>  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	        int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int  twos  =((  u&1)  >>  1)?  v  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	14	None	add
29	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  ((  t&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  t  :  -(u/2)/*B3*/);	      ((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	10	None	replace
30	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	      t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	7	None	replace
31	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)+  1;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)+  1;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)+  1;	      t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	7	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	add	int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	15	8	replace
33	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	15	8	replace
34	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [CE]  cannot  find  symbol  b  [FE]      AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  cannot  find  symbol  b	15	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	add	int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	15	8	replace
36	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	15	8	replace
37	[BUG]  [BUGGY]  while(t  <  =  2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while(t  <  =  2)  {  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  <  =  2)  {	  while(t    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  while(t  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while(t  <  =  1)  {  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  <  =  1)  {	  while(t    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  while((  u&1)  ==  0)  {  [CE]  while  expected  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while((  u&1)  ==  0)  {  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  u&1)  ==  0)  {	  while((    t&1)    ==    0)    {    	non-compiled	[CE]  while  expected	11	None	replace
40	[BUG]  [BUGGY]  while((  t&2)  ==  0)  {  [CE]  while  expected  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while((  t&2)  ==  0)  {  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&2)  ==  0)  {	  while((    t&1)    ==    0)    {    	non-compiled	[CE]  while  expected	11	None	replace
41	[BUG]  [BUGGY]  while((  t&1)!=  0)  {  [CE]  while  expected  [FE]            AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while((  t&1)!=  0)  {  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&1)!=  0)  {	  while((    t&1)    ==    0)    {    	non-compiled	[CE]  while  expected	11	None	replace
42	[BUG]  [BUGGY]  while((  u&1)  ==  1)  {  t/=3;  [CE]  while  expected  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while((  u&1)  ==  1)  {  t/=3;  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  u&1)  ==  1)  {  t/=3;	  while    ((    u&1)    ==    1)    {    t/=2;    	non-compiled	[CE]  while  expected	2	None	replace
43	[BUG]  [BUGGY]      int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]      int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	        int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
44	[BUG]  [BUGGY]  while(t!=  1)  {  [CE]  while  expected  [FE]            AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while(t!=  1)  {  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t!=  1)  {	  while(t!=    0)    {    	non-compiled	[CE]  while  expected	13	None	replace
45	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	18	None	replace
46	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);  [CE]  :  expected  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	18	None	replace
47	[BUG]  [BUGGY]      ((  u&2)  ==  1)?  v  :  -(u/2)/*B3*/);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]      ((  u&2)  ==  1)?  v  :  -(u/2)/*B3*/);  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	        ((  u&2)  ==  1)?  v  :  -(u/2)/*B3*/);	  	non-compiled	[CE]  not  a  statement	4	None	add
48	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/);	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	16	None	replace
49	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	      ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	6	None	replace
50	[BUG]  [BUGGY]  while((  t&1)!=  0)  {  t/=1;  [CE]  while  expected  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while((  t&1)!=  0)  {  t/=1;  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&1)!=  0)  {  t/=1;	  while((    t&1)    ==    0)    {    t/=2;    	non-compiled	[CE]  while  expected	17	None	replace
51	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  ((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);	      ((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	10	None	replace
52	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);	      t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	7	None	replace
53	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/);	      t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	7	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	add	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	15	8	replace
55	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	15	8	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	add	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	15	8	replace
57	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	15	8	replace
58	[BUG]  [BUGGY]  while(t  <  1)  {  [CE]  while  expected  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while(t  <  1)  {  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  <  1)  {	  while(t    <    0)    {    	non-compiled	[CE]  while  expected	1	None	replace
59	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]              AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  v  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  v  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	9	None	replace
60	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  v  :  -(t&2)/*B3*/);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  ((  t&1)  ==  1)?  v  :  -(t&2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  v  :  -(t&2)/*B3*/);	      ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	6	None	replace
61	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  ((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);	      ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	6	None	replace
62	[BUG]  [BUGGY]  while((  t&1)  ==  0)  {  t/=3;  [CE]  while  expected  [FE]        AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while((  t&1)  ==  0)  {  t/=3;  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&1)  ==  0)  {  t/=3;	  while((    t&1)    ==    0)    {    t/=2;    	non-compiled	[CE]  while  expected	17	None	replace
63	[BUG]  [BUGGY]      t  =((  u&1)  ==  1)?  -(u/2)/*B3*/);  [CE]  :  expected  [FE]    AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]      t  =((  u&1)  ==  1)?  -(u/2)/*B3*/);  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	        t  =((  u&1)  ==  1)?  -(u/2)/*B3*/);	  	non-compiled	[CE]  :  expected	4	None	add
64	[BUG]  [BUGGY]  while(t  ==  0)  {  [CE]  while  expected  [FE]            AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  while(t  ==  0)  {  [BUGGY]    t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  ==  0)  {	  while(t!=    0)    {    	non-compiled	[CE]  while  expected	13	None	replace
65	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  t  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);	      t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	7	None	replace
66	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/;  [CE]  cannot  find  symbol  a1  [FE]    AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/;	      int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  cannot  find  symbol  a1	15	None	replace
67	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  int  u  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	8	None	replace
68	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]  ((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/);  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/);	      ((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	10	None	replace
69	[BUG]  [BUGGY]      int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]    throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {      [BUGGY]      int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B3*/;  [BUGGY]    while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	        int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int  twos  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	14	None	add
