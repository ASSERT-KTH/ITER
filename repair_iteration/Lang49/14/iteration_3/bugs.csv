bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while((  t&1)  ==  1)  {  t/=1;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&1)  ==  1)  {  t/=1;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&1)  ==  1)  {  t/=1;	  while((    u&1)    ==    1)    {    t/=1;    	non-compiled	[CE]  while  expected	1	None	replace
2	[BUG]  [BUGGY]  while((  u&1)!=  1)  {  t/=2;  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  u&1)!=  1)  {  t/=2;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  u&1)!=  1)  {  t/=2;	  while((    u&1)    ==    1)    {    t/=1;    	non-compiled	[CE]  while  expected	1	None	replace
3	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  numerator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  numerator);	  ((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  not  a  statement	51	None	replace
4	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);	  ((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  not  a  statement	51	None	replace
5	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	30	None	replace
6	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	30	None	replace
7	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  power);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  power);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  power);	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	30	None	replace
8	[BUG]  [BUGGY]  while((  u&1)!=  0)  {  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  u&1)!=  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  u&1)!=  0)  {	  while((    t&1)!=    0)    {    	non-compiled	[CE]  while  expected	41	None	replace
9	[BUG]  [BUGGY]  while((  t&2)!=  0)  {  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&2)!=  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&2)!=  0)  {	  while((    t&1)!=    0)    {    	non-compiled	[CE]  while  expected	41	None	replace
10	[BUG]  [BUGGY]  while((  t&1)  ==  1))  {  t/=1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&1)  ==  1))  {  t/=1;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&1)  ==  1))  {  t/=1;	  while((    t&1)    ==    1))    {    t/=2;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
11	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  b  :  -(u/2)/*B3*/);	  ((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	61	None	replace
12	[BUG]  [BUGGY]  while((  t&1)  ==  1)  {  t/=3;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&1)  ==  1)  {  t/=3;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&1)  ==  1)  {  t/=3;	  while((    t&1)    ==    1)    {    t/=2;    	non-compiled	[CE]  while  expected	8	None	replace
13	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	56	None	add
14	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B2*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B2*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B2*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	56	None	add
15	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	56	None	add
16	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B2*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B2*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B2*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	56	None	add
17	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  int  twos  =((  u&1)  >>  1)?  v  :  -(u/2)/*B2*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  int  twos  =((  u&1)  >>  1)?  v  :  -(u/2)/*B2*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    int  twos  =((  u&1)  >>  1)?  v  :  -(u/2)/*B2*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	56	None	add
18	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B3*/;  [CE]  cannot  find  symbol  u2  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int    twos    =((    u&1)    ==    1)?    v    :    -(u2/2)/*B3*/;    	non-compiled	[CE]  cannot  find  symbol  u2	69	None	replace
19	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u2/2)/*B3*/;  [CE]  cannot  find  symbol  b  [FE]          AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u2/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  b  :  -(u2/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int    twos    =((    u&1)    ==    1)?    v    :    -(u2/2)/*B3*/;    	non-compiled	[CE]  cannot  find  symbol  b	69	None	replace
20	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1?  v  :  -(u2/2)/*B3*/;  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1?  v  :  -(u2/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1?  v  :  -(u2/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int    twos    =((    u&1)    ==    1)?    v    :    -(u2/2)/*B3*/;    	non-compiled	[CE]  ')'  expected	69	None	replace
21	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;  [CE]  cannot  find  symbol  gcd  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    a1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  cannot  find  symbol  gcd	66	None	replace
22	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  var  :  -(u/2)/*B3*/;  [CE]  cannot  find  symbol  var  [FE]          AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  var  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  var  :  -(u/2)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    a1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  cannot  find  symbol  var	66	None	replace
23	[BUG]  [BUGGY]  while(t  <  2  ||  t  <  3)  {  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  <  2  ||  t  <  3)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  <  2  ||  t  <  3)  {	  while(t    <    3)    {    	non-compiled	[CE]  while  expected	6	None	replace
24	[BUG]  [BUGGY]  while(t  >=  1)  {  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  >=  1)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  >=  1)  {	  while(t    <    =    1)    {    	non-compiled	[CE]  while  expected	38	None	replace
25	[BUG]  [BUGGY]  while(t  ==  1)  {  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  ==  1)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  ==  1)  {	  while(t    <    =    1)    {    	non-compiled	[CE]  while  expected	38	None	replace
26	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  ';'  expected	36	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	add	int  twos  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	36	8	replace
28	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	36	8	replace
29	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	32	None	add
30	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  >=  1)?  t  :  -(u/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  >=  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    int  twos  =((  u&1)  >=  1)?  t  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	32	None	add
31	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  int  twos  =((  u&1)!=  1)?  t  :  -(u/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  int  twos  =((  u&1)!=  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    int  twos  =((  u&1)!=  1)?  t  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	32	None	add
32	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  >>  1)?  t  :  -(u/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  >>  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    int  twos  =((  u&1)  >>  1)?  t  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	32	None	add
33	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  t  -(u/2)/*B3*/;  [CE]  :  expected  [FE]            AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  t  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    int  twos  =((  u&1)  ==  1)?  t  -(u/2)/*B3*/;	  	non-compiled	[CE]  :  expected	32	None	add
34	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);	  int    twos    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	22	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	add	int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int    twos    =((    u&1)    >=    1)?    v    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	26	8	replace
36	[BUG]  [BUGGY]  int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int    twos    =((    u&1)    >=    1)?    v    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	26	8	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	add	int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int    twos    =((    u&1)    >=    1)?    v    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	26	8	replace
38	[BUG]  [BUGGY]  int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B3*/;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int    twos    =((    u&1)    >=    1)?    v    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	26	8	replace
39	[BUG]  [BUGGY]  int  twos  =((  u&1)  >>  1)?  v  :  -(u/2)/*B3*/;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  >>  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  >>  1)?  v  :  -(u/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int    twos    =((    u&1)    >=    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  incompatible  types	26	None	replace
40	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);	  int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	15	None	replace
41	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);	  int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	15	None	replace
42	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	15	None	replace
43	[BUG]  [BUGGY]  while(t  <  2  ||  t  <  1)  {  [CE]  while  expected  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  <  2  ||  t  <  1)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  <  2  ||  t  <  1)  {	  while(t    <    1)    {    	non-compiled	[CE]  while  expected	58	None	replace
44	[BUG]  [BUGGY]  while((  u&2)  ==  0)  {  [CE]  while  expected  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  u&2)  ==  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  u&2)  ==  0)  {	  while((    u&1)    ==    0)    {    	non-compiled	[CE]  while  expected	39	None	replace
45	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  u  :  -(u/2)/*B3*/);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  u  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  u  :  -(u/2)/*B3*/);	  ((    t&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	10	None	replace
46	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  0  :  -(u/2)/*B3*/);	  ((    t&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	10	None	replace
47	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  ';'  expected	4	None	replace
48	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	4	None	replace
49	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);  [CE]  :  expected  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	12	None	replace
50	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);  [CE]  :  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	12	None	replace
51	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	17	None	replace
52	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	17	None	replace
53	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	20	None	replace
54	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	20	None	replace
55	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	20	None	replace
56	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1?  v  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	add	t  =((  u&1)  ==  1?  v  :  -(u/2)/*B3*/);	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/);    	compilable	timeout	52	1	replace
57	[BUG]  [BUGGY]  t  =((  u&1)  ==  1?  v  :  -(u/2)/*B3*/);  timeout  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1?  v  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1?  v  :  -(u/2)/*B3*/);	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/);    	compilable	timeout	52	1	replace
58	[BUG]  [BUGGY]  t  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/);	  t    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	65	None	replace
59	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	35	None	add
60	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  >=  1)?  0  :  -(u/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  >=  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    int  twos  =((  u&1)  >=  1)?  0  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	35	None	add
61	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  int  twos  =((  u&1)!=  1)?  0  :  -(u/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  int  twos  =((  u&1)!=  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    int  twos  =((  u&1)!=  1)?  0  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	35	None	add
62	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  >>  1)?  0  :  -(u/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  >>  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    int  twos  =((  u&1)  >>  1)?  0  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	35	None	add
63	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/);	  int    twos    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	21	None	replace
64	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
65	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
66	[BUG]  [BUGGY]  while((  t&0)  ==  0)  {  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&0)  ==  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&0)  ==  0)  {	  while((    t&2)    ==    0)    {    	non-compiled	[CE]  while  expected	40	None	replace
67	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	45	None	replace
68	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/;    int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	54	None	add
69	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B4*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B4*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/;    int  twos  =((  u&1)  >=  1)?  v  :  -(u/2)/*B4*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	54	None	add
70	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B4*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]        AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B4*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/;    int  twos  =((  u&1)!=  1)?  v  :  -(u/2)/*B4*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	54	None	add
71	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  int  twos  =((  u&1)  >>  1)?  v  :  -(u/2)/*B4*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]          AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  int  twos  =((  u&1)  >>  1)?  v  :  -(u/2)/*B4*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/;    int  twos  =((  u&1)  >>  1)?  v  :  -(u/2)/*B4*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	54	None	add
72	[BUG]  [BUGGY]  while(t  >=  2  &&  t!=  1)  {  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  >=  2  &&  t!=  1)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  >=  2  &&  t!=  1)  {	  while(t!=    1)    {    	non-compiled	[CE]  while  expected	44	None	replace
73	[BUG]  [BUGGY]  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    Int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
74	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1?  v  :  -(u/2)/*B3*/;  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1?  v  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1?  v  :  -(u/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int    twos    =((    u&1)!=    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  ')'  expected	27	None	replace
75	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  t);  [CE]  :  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  t);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  t);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  :  expected	46	None	replace
76	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  ';'  expected	46	None	replace
77	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  v);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  v);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  :  expected	46	None	replace
78	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/);    	non-compiled	[CE]  ';'  expected	48	None	replace
79	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/,  denominator);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/,  denominator);	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/);    	non-compiled	[CE]  ';'  expected	48	None	replace
80	[BUG]  [BUGGY]  while(t  <  2  ||  t  ==  0)  {  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  <  2  ||  t  ==  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  <  2  ||  t  ==  0)  {	  while(t    ==    0)    {    	non-compiled	[CE]  while  expected	64	None	replace
81	[BUG]  [BUGGY]  int  u  =((  v&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  v&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  v&1)  ==  1)?  t  :  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	67	None	replace
82	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [CE]  :  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  :  expected	14	None	replace
83	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  :  expected	14	None	replace
84	[BUG]  [BUGGY]  ((  u&2)  ==  1)?  t  :  -(u/2)/*B3*/);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&2)  ==  1)?  t  :  -(u/2)/*B3*/);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&2)  ==  1)?  t  :  -(u/2)/*B3*/);	          ((    u&2)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	47	None	replace
85	[BUG]  [BUGGY]  ((  u&2)  ==  1)?  0  :  -(u/2)/*B3*/);  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&2)  ==  1)?  0  :  -(u/2)/*B3*/);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&2)  ==  1)?  0  :  -(u/2)/*B3*/);	          ((    u&2)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	47	None	replace
86	[BUG]  [BUGGY]  while((  t&2)  ==  0)  {  t/=2;  [CE]  while  expected  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&2)  ==  0)  {  t/=2;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&2)  ==  0)  {  t/=2;	  while((    t&1)    ==    0)    {    t/=1;    	non-compiled	[CE]  while  expected	7	None	replace
87	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/;  [CE]  cannot  find  symbol  b  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/;	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/;    	non-compiled	[CE]  cannot  find  symbol  b	55	None	replace
88	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);  [CE]  :  expected  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);	          t    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	63	None	replace
89	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);	          t    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	63	None	replace
90	[BUG]  [BUGGY]  int  u  =((  t&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  t&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  t&1)  ==  1)?  t  :  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	2	None	replace
91	[BUG]  [BUGGY]  int  u  =((  v&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  v&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  v&1)  ==  1)?  t  :  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	2	None	replace
92	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B2*/;  [CE]  cannot  find  symbol  b  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B2*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B2*/;	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    	non-compiled	[CE]  cannot  find  symbol  b	57	None	replace
93	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	  ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  not  a  statement	49	None	replace
94	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);	  ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  not  a  statement	49	None	replace
95	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  v  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  v  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	59	None	replace
96	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  v  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  v  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	59	None	replace
97	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  v  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  v  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	59	None	replace
98	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  v  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  v  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	59	None	replace
99	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)/  2;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)/  2;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)/  2;	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/)+    1;    	non-compiled	[CE]  ';'  expected	31	None	replace
100	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)+  2;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)+  2;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)+  2;	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/)+    1;    	non-compiled	[CE]  ';'  expected	31	None	replace
101	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  u  :  -(t&2)/*B3*/);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  u  :  -(t&2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  u  :  -(t&2)/*B3*/);	  ((    t&1)    ==    1)?    v    :    -(t&2)/*B3*/);    	non-compiled	[CE]  not  a  statement	60	None	replace
102	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  b  :  -(t&2)/*B3*/);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  b  :  -(t&2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  b  :  -(t&2)/*B3*/);	  ((    t&1)    ==    1)?    v    :    -(t&2)/*B3*/);    	non-compiled	[CE]  not  a  statement	60	None	replace
103	[BUG]  [BUGGY]  while((  t&2)!=  0)  {  t/=2;  [CE]  while  expected  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&2)!=  0)  {  t/=2;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&2)!=  0)  {  t/=2;	  while((    t&1)!=    0)    {    t/=1;    	non-compiled	[CE]  while  expected	50	None	replace
104	[BUG]  [BUGGY]  while((  u&1)!=  0)  {  t/=2;  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  u&1)!=  0)  {  t/=2;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  u&1)!=  0)  {  t/=2;	  while((    t&1)!=    0)    {    t/=2;    	non-compiled	[CE]  while  expected	9	None	replace
105	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  p  :  -(u/2)/*B3*/;  [CE]  cannot  find  symbol  p  [FE]          AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  p  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  p  :  -(u/2)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  cannot  find  symbol  p	34	None	replace
106	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);	  t    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	65	None	replace
107	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  b  :  -(u/2)/*B2*/);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  b  :  -(u/2)/*B2*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  b  :  -(u/2)/*B2*/);	  t    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	65	None	replace
108	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;	  	non-compiled	[CE]  cannot  find  symbol	56	None	add
109	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  Int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  Int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    Int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
110	[BUG]  [BUGGY]  Integer  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  Integer  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	Integer  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  incompatible  types	25	None	replace
111	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator;	  int    u    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	3	None	replace
112	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);	  ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  not  a  statement	49	None	replace
113	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4)*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4)*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/;    int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4)*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	54	None	add
114	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/;    Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
115	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  cannot  find  symbol  b  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    Int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  cannot  find  symbol  b	43	None	replace
116	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  0,  denominator);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  0,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  0,  denominator);	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	30	None	replace
117	[BUG]  [BUGGY]  while(t  >  0)  {  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  >  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  >  0)  {	  while(t    >=    0)    {    	non-compiled	[CE]  while  expected	23	None	replace
118	[BUG]  [BUGGY]  while(t  >=  2)  {  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  >=  2)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  >=  2)  {	  while(t    >=    0)    {    	non-compiled	[CE]  while  expected	23	None	replace
119	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/);	  int    u    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	17	None	replace
120	[BUG]  [BUGGY]  while((  u&1)  ==  0)  {  t/=1;  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  u&1)  ==  0)  {  t/=1;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  u&1)  ==  0)  {  t/=1;	  while((    u&1)    ==    1))    {    t/=1;    	non-compiled	[CE]  while  expected	19	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B4*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	add	int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B4*/;	  int    twos    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	33	8	replace
122	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B4*/;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B4*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B4*/;	  int    twos    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	33	8	replace
123	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/);	  int    twos    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	21	None	replace
124	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);  [CE]  :  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  :  expected	14	None	replace
125	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  2);  [CE]  :  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  2);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  2);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  :  expected	46	None	replace
126	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	16	None	replace
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*A3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	add	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*A3*/;	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/;    	compilable	  [FE]  AssertionFailedError  	55	8	replace
128	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*A3*/;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*A3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*A3*/;	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/;    	compilable	  [FE]  AssertionFailedError  	55	8	replace
129	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/;  [CE]  cannot  find  symbol  a  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    a1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  cannot  find  symbol  a	66	None	replace
130	[BUG]  [BUGGY]  while(t!=  31)  {  [CE]  while  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t!=  31)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t!=  31)  {	  while(t!=    2)    {    	non-compiled	[CE]  while  expected	24	None	replace
131	[BUG]  [BUGGY]  ((  u&2)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&2)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&2)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	          ((    u&2)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	47	None	replace
132	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);	  ((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	11	None	replace
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B4*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	add	int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B4*/;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	36	8	replace
134	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B4*/;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B4*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B4*/;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	36	8	replace
135	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  Int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  Int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    Int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
136	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	45	None	replace
137	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	67	None	replace
138	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);  [CE]  :  expected  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);	          t    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	63	None	replace
139	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*A3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*A3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*A3*/);	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/);    	non-compiled	[CE]  ';'  expected	53	None	replace
140	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);	  ((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	61	None	replace
141	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*A3*/);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*A3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*A3*/);	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/);    	non-compiled	[CE]  ';'  expected	48	None	replace
142	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)  <  <  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)  <  <  1;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)  <  <  1;	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/)+    1;    	non-compiled	[CE]  ';'  expected	31	None	replace
143	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	15	None	replace
144	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  0  :  -(u2/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  0  :  -(u2/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    int  twos  =((  u&1)  ==  1)?  0  :  -(u2/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	35	None	add
145	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B2*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  int  twos  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B2*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    int  twos  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B2*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	56	None	add
146	[BUG]  [BUGGY]  while((  t&1)!=  0)  {  t/=3;  [CE]  while  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&1)!=  0)  {  t/=3;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&1)!=  0)  {  t/=3;	  while((    t&1)!=    0)    {    t/=2;    	non-compiled	[CE]  while  expected	9	None	replace
147	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	16	None	replace
148	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  t  -(u/2)/*B3*/);  [CE]  :  expected  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  t  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  t  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	12	None	replace
149	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  t  :  -(u2/2)/*B3*/;  [CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/;  int  twos  =((  u&1)  ==  1)?  t  :  -(u2/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int    twos    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    int  twos  =((  u&1)  ==  1)?  t  :  -(u2/2)/*B3*/;	  	non-compiled	[CE]  variable  twos  is  already  defined  in  method  greatestCommonDivisor(int,int)	32	None	add
150	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  ';'  expected	30	None	replace
151	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  +  1);  [CE]  :  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  +  1);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  +  1);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  :  expected	46	None	replace
152	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  v);  [CE]  :  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  v);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  v);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  :  expected	46	None	replace
153	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  v  :  -(t&2)/*B3*/,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  v  :  -(t&2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  v  :  -(t&2)/*B3*/,  denominator);	  ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  not  a  statement	49	None	replace
154	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [CE]  :  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);	  ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  :  expected	49	None	replace
155	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/;  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  cannot  find  symbol  a1  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/;  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/;  Int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    Int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  cannot  find  symbol  a1	43	None	replace
156	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);  [CE]  :  expected  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);	          t    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	63	None	replace
157	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [CE]  :  expected  [FE]          AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);	          t    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	63	None	replace
158	[BUG]  [BUGGY]  int  u  =((  v&1)  ==  1)?  t  :  -(v&  2)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  v&1)  ==  1)?  t  :  -(v&  2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  v&1)  ==  1)?  t  :  -(v&  2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	67	None	replace
159	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/,  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/,  denominator);	  ((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  not  a  statement	51	None	replace
160	[BUG]  [BUGGY]  ((  u&2)  ==  1)?  -(u/2)/*B3*/);  [CE]  :  expected  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&2)  ==  1)?  -(u/2)/*B3*/);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&2)  ==  1)?  -(u/2)/*B3*/);	          ((    u&2)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  :  expected	47	None	replace
161	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  1)/  B3*/;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  1)/  B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  1)/  B3*/;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  1)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	add	int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  1)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	36	8	replace
163	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  1)/*B3*/;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  1)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  1)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	36	8	replace
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	add	int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  2)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	36	8	replace
165	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  2)/*B3*/;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  2)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	compilable	  [FE]  AssertionFailedError  	36	8	replace
166	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	17	None	replace
167	[BUG]  [BUGGY]  while((  t&3)  ==  0)  {  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&3)  ==  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&3)  ==  0)  {	  while((    t&2)    ==    0)    {    	non-compiled	[CE]  while  expected	40	None	replace
168	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  -1  :  -(u2/2)/*B3*/;  [CE]  cannot  find  symbol  u2  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  -1  :  -(u2/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  -1  :  -(u2/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int    twos    =((    u&1)    ==    1)?    v    :    -(u2/2)/*B3*/;    	non-compiled	[CE]  cannot  find  symbol  u2	69	None	replace
169	[BUG]  [BUGGY]  int  u  =((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	2	None	replace
170	[BUG]  [BUGGY]  int  u  =((  v&1)  ==  1)?  t  :  -(v&  2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  v&1)  ==  1)?  t  :  -(v&  2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  v&1)  ==  1)?  t  :  -(v&  2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	2	None	replace
171	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  0  :  -(t&2)/*B3*/);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  0  :  -(t&2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  t&1)  ==  1)?  0  :  -(t&2)/*B3*/);	  ((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	11	None	replace
172	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);	  ((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	11	None	replace
173	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);	  int    twos    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	21	None	replace
174	[BUG]  [BUGGY]  while((  t&1)  ==  31)  {  t/=2;  [CE]  while  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&1)  ==  31)  {  t/=2;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while((  t&1)  ==  31)  {  t/=2;	  while((    t&1)    ==    1)    {    t/=2;    	non-compiled	[CE]  while  expected	8	None	replace
175	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  -(u/2)/*B3*/;  [CE]  :  expected  [FE]        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  -(u/2)/*B3*/;	          int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  :  expected	25	None	replace
176	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/,  denominator);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/,  denominator);	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/);    	non-compiled	[CE]  ';'  expected	53	None	replace
177	[BUG]  [BUGGY]  while(t  <  2  ||  t  >  31)  {  [CE]  while  expected  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  <  2  ||  t  >  31)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	while(t  <  2  ||  t  >  31)  {	  while(t    <    2)    {    	non-compiled	[CE]  while  expected	5	None	replace
178	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B2*/;  [CE]  cannot  find  symbol  a1  [FE]    AssertionFailedError    [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B2*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B2*/;	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    	non-compiled	[CE]  cannot  find  symbol  a1	57	None	replace
179	[BUG]  [BUGGY]  ((  v&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  v&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	((  v&1)  ==  1)?  t  :  -(u/2)/*B3*/);	  ((    t&1)    ==    1)?    t    :    -(u/2)/*B3*/);    	non-compiled	[CE]  not  a  statement	29	None	replace
180	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	t  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);	  t    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	65	None	replace
181	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/;  [CE]  :  expected  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  :  expected	59	None	replace
182	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  greatestCommonDivisor(int,int)	59	None	replace
183	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  denominator);  [CE]  :  expected  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  :  expected	14	None	replace
184	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                      AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	4	None	replace
185	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&  2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&  2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  0  :  -(v&  2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	4	None	replace
186	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/;  [CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]                          AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	596	598	1	replace	int  u  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  greatestCommonDivisor(int,int)	4	None	replace
