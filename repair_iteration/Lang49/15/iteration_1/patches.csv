bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  u  =(v  <  <  1)?  u  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  u  =(v  <  <  1)?  u  :  -(u/2)/*B3*/;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(v  <  <  1)?  u  :  -(u/2)/*B3*/;	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
2	[BUG]  [BUGGY]  int  u  =(v  <  <  1)?  0  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  u  =(v  <  <  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  u  =(v  <  <  1)?  0  :  -(u/2)/*B3*/;	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
3	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t  ==  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	if(t  ==  0)  {	  if(t!=    0)    {    timeout    	compilable	timeout	23	1	replace
4	[BUG]  [BUGGY]  if(t  ==  0)  {  timeout  [FE]        AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t  ==  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t  ==  0)  {	  if(t!=    0)    {    timeout    	compilable	timeout	23	1	replace
5	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v!=  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	if(v!=  0)  {	  if(t!=    0)    {    timeout    	compilable	timeout	23	1	replace
6	[BUG]  [BUGGY]  if(v!=  0)  {  timeout  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v!=  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v!=  0)  {	  if(t!=    0)    {    timeout    	compilable	timeout	23	1	replace
7	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]        AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	13	None	replace
8	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [CE]  while  expected  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	13	None	replace
9	[BUG]  [BUGGY]  t  =(u  -  v)/2;  [CE]  while  expected  [FE]    AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  t  =(u  -  v)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(u  -  v)/2;	      t    =(v    -    u)/2;    	non-compiled	[CE]  while  expected	25	None	replace
10	[BUG]  [BUGGY]  t  =(v  -  u/2)/2;  [CE]  while  expected  [FE]      AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  t  =(v  -  u/2)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(v  -  u/2)/2;	      t    =(v    -    u)/2;    	non-compiled	[CE]  while  expected	25	None	replace
11	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	12	None	replace
12	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denom);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denom);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denom);	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	12	None	replace
13	[BUG]  [BUGGY]  if(v  <  0)  {  if(v  <  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  <  0)  {  if(v  <  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    <    0)    {    if(v  <  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
14	[BUG]  [BUGGY]  if(v  <  0)  {  if(v  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  <  0)  {  if(v  >=  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    <    0)    {    if(v  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
15	[BUG]  [BUGGY]  if(v  <  0)  {  If(v  <  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  <  0)  {  If(v  <  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    <    0)    {    If(v  <  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
16	[BUG]  [BUGGY]  if(v  <  0)  {  while(v  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  <  0)  {  while(v  <  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    <    0)    {    while(v  <  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
17	[BUG]  [BUGGY]  if(t  <  0)  {  if(t  <  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t  <  0)  {  if(t  <  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    <    0)    {    if(t  <  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	20	None	add
18	[BUG]  [BUGGY]  if(t  <  0)  {  if(t  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t  <  0)  {  if(t  >=  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    <    0)    {    if(t  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	20	None	add
19	[BUG]  [BUGGY]  if(t  <  0)  {  If(t  <  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t  <  0)  {  If(t  <  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    <    0)    {    If(t  <  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	20	None	add
20	[BUG]  [BUGGY]  if(t  <  0)  {  while(t  <  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t  <  0)  {  while(t  <  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    <    0)    {    while(t  <  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	20	None	add
21	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	        t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;	  timeout    	compilable	timeout	26	1	add
22	[BUG]  [BUGGY]      t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  timeout  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =  -(v  -  u)/2;  t  =  -(v  -  u)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	        t    =    -(v    -    u)/2;    t  =  -(v  -  u)/2;	  timeout    	compilable	timeout	26	1	add
23	[BUG]  [BUGGY]      t  =  -(v  -  u)/2;  int  t  =  -(v  -  u)/2;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =  -(v  -  u)/2;  int  t  =  -(v  -  u)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	        t    =    -(v    -    u)/2;    int  t  =  -(v  -  u)/2;	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	26	None	add
24	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	        t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;	  timeout    	compilable	timeout	26	1	add
25	[BUG]  [BUGGY]      t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  timeout  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =  -(v  -  u)/2;  t  =  -(v  -  u)/1;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	        t    =    -(v    -    u)/2;    t  =  -(v  -  u)/1;	  timeout    	compilable	timeout	26	1	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =  -(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	        t    =    -(v    -    u)/2;    t  =(v  -  u)/2;	  timeout    	compilable	  [FE]  AssertionFailedError  	26	8	add
27	[BUG]  [BUGGY]      t  =  -(v  -  u)/2;  t  =(v  -  u)/2;  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =  -(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	        t    =    -(v    -    u)/2;    t  =(v  -  u)/2;	  timeout    	compilable	  [FE]  AssertionFailedError  	26	8	add
28	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator;  [CE]  while  expected  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator;	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	11	None	replace
29	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(u  <  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	if(u  <  0)  {	  if(t    <    0)    {    timeout    	compilable	timeout	21	1	replace
30	[BUG]  [BUGGY]  if(u  <  0)  {  timeout  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(u  <  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u  <  0)  {	  if(t    <    0)    {    timeout    	compilable	timeout	21	1	replace
31	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  >=  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	if(v  >=  0)  {	  if(t    >=    0)    {    	compilable	timeout	19	1	replace
32	[BUG]  [BUGGY]  if(v  >=  0)  {  timeout  [FE]    AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  >=  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v  >=  0)  {	  if(t    >=    0)    {    	compilable	timeout	19	1	replace
33	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(u  ==  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	if(u  ==  0)  {	  if(v    ==    0)    {    timeout    	compilable	timeout	4	1	replace
34	[BUG]  [BUGGY]  if(u  ==  0)  {  timeout  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(u  ==  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u  ==  0)  {	  if(v    ==    0)    {    timeout    	compilable	timeout	4	1	replace
35	[BUG]  [BUGGY]  if(v  >  0)  {  if(v  >  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  >  0)  {  if(v  >  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    >    0)    {    if(v  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
36	[BUG]  [BUGGY]  if(v  >  0)  {  If(v  >  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  >  0)  {  If(v  >  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    >    0)    {    If(v  >  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
37	[BUG]  [BUGGY]  if(v  >  0)  {  int  v  >  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  >  0)  {  int  v  >  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    >    0)    {    int  v  >  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
38	[BUG]  [BUGGY]  if(v  >  0)  {  while(v  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  >  0)  {  while(v  >  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    >    0)    {    while(v  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
39	[BUG]  [BUGGY]  t  =  -(u  -  v)/2;  [CE]  while  expected  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  t  =  -(u  -  v)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  -(u  -  v)/2;	      t    =    -(v    -    u)/2;    timeout    	non-compiled	[CE]  while  expected	27	None	replace
40	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =(u  <  <  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  0  :  -(u/2)/*B3*/;	      int    k    =(v    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
41	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  0  :  -(u&2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =(v  <  <  1)?  0  :  -(u&2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  0  :  -(u&2)/*B3*/;	      int    k    =(v    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
42	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  0  :  -(u&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =(v  <  <  1)?  0  :  -(u&1)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  0  :  -(u&1)/*B3*/;	      int    k    =(v    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
43	[BUG]  [BUGGY]  t  =  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  t  =  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	      t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	8	None	replace
44	[BUG]  [BUGGY]  t  =  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  t  =  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	      t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  while  expected	8	None	replace
45	[BUG]  [BUGGY]  if(v  ==  0)  {  if(v  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  ==  0)  {  if(v  ==  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    ==    0)    {    if(v  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
46	[BUG]  [BUGGY]  if(v  ==  0)  {  if(v  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  ==  0)  {  if(v  >=  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    ==    0)    {    if(v  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
47	[BUG]  [BUGGY]  if(v  ==  0)  {  if(v!=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  ==  0)  {  if(v!=  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    ==    0)    {    if(v!=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
48	[BUG]  [BUGGY]  if(v  ==  0)  {  if(v  >>  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  ==  0)  {  if(v  >>  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    ==    0)    {    if(v  >>  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
49	[BUG]  [BUGGY]  if(t!=  0)  {  if(t!=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t!=  0)  {  if(t!=  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t!=    0)    {    if(t!=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	22	None	add
50	[BUG]  [BUGGY]  if(t!=  0)  {  if(t  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t!=  0)  {  if(t  >=  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t!=    0)    {    if(t  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	22	None	add
51	[BUG]  [BUGGY]  if(t!=  0)  {  if(t  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t!=  0)  {  if(t  ==  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t!=    0)    {    if(t  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	22	None	add
52	[BUG]  [BUGGY]  if(t!=  0)  {  if(t  >>  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t!=  0)  {  if(t  >>  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t!=    0)    {    if(t  >>  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	22	None	add
53	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  2;  [CE]  while  expected  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  2;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    2;    	non-compiled	[CE]  while  expected	15	None	replace
54	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/  B3;  [CE]  while  expected  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/  B3;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/  B3;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    2;    	non-compiled	[CE]  while  expected	15	None	replace
55	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  2;  [CE]  while  expected  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  2;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    2;    	non-compiled	[CE]  while  expected	15	None	replace
56	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  1;  [CE]  while  expected  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  1;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/  1;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    1;    	non-compiled	[CE]  while  expected	17	None	replace
57	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  1;  [CE]  while  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  1;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/  1;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    1;    	non-compiled	[CE]  while  expected	17	None	replace
58	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(a1&2)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(a1&2)/*B3*/);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(a1&2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	30	None	replace
59	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	30	None	replace
60	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(u/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  u  :  -(u/2)/*B3*/;	      int    k    =(v    <    <    1)?    u    :    -(v/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
61	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  v  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =(u  <  <  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  v  :  -(u/2)/*B3*/;	      int    k    =(v    <    <    1)?    u    :    -(v/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
62	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  u  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =(u  <  <  1)?  u  :  -(u/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  u  :  -(u/2)/*B3*/;	      int    k    =(v    <    <    1)?    u    :    -(v/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
63	[BUG]  [BUGGY]  int  k  =(v  >=  1)?  u  :  -(v/2)/*B3*/;  [CE]  while  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =(v  >=  1)?  u  :  -(v/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  >=  1)?  u  :  -(v/2)/*B3*/;	      int    k    =(v    <    <    1)?    u    :    -(v/2)/*B3*/;    	non-compiled	[CE]  while  expected	16	None	replace
64	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	10	None	replace
65	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	      int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	9	None	replace
66	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [CE]  while  expected  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(u/2)/*B3*/;	      int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/;    	non-compiled	[CE]  while  expected	29	None	replace
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	        t    =(v    -    u)/2;    t  =(v  -  u)/2;	  	compilable	  [FE]  AssertionFailedError  	24	8	add
68	[BUG]  [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	        t    =(v    -    u)/2;    t  =(v  -  u)/2;	  	compilable	  [FE]  AssertionFailedError  	24	8	add
69	[BUG]  [BUGGY]      t  =(v  -  u)/2;  int  t  =(v  -  u)/2;  [CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)  [FE]      AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =(v  -  u)/2;  int  t  =(v  -  u)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	        t    =(v    -    u)/2;    int  t  =(v  -  u)/2;	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  greatestCommonDivisor(int,int)	24	None	add
70	[BUG]  [BUGGY]      t  =(v  -  u)/2;  (v  -  u)/2;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =(v  -  u)/2;  (v  -  u)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	        t    =(v    -    u)/2;    (v  -  u)/2;	  	non-compiled	[CE]  not  a  statement	24	None	add
71	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	28	None	replace
72	[BUG]  [BUGGY]  if(t  >=  0)  {  if(t  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t  >=  0)  {  if(t  >=  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    >=    0)    {    if(t  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
73	[BUG]  [BUGGY]  if(t  >=  0)  {  if(t!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t  >=  0)  {  if(t!=  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    >=    0)    {    if(t!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
74	[BUG]  [BUGGY]  if(t  >=  0)  {  if(t  >>  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t  >=  0)  {  if(t  >>  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    >=    0)    {    if(t  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
75	[BUG]  [BUGGY]  if(t  >=  0)  {  if(t  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(t  >=  0)  {  if(t  ==  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(t    >=    0)    {    if(t  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
76	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	9	None	replace
77	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	        t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;	  timeout    	compilable	timeout	26	1	add
78	[BUG]  [BUGGY]      t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  timeout  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =  -(v  -  u)/2;  t  =  -(v  -  u)/3;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	        t    =    -(v    -    u)/2;    t  =  -(v  -  u)/3;	  timeout    	compilable	timeout	26	1	add
79	[BUG]  [BUGGY]  t  =(v  -  u)/2  +  1;  [CE]  while  expected  [FE]    AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  t  =(v  -  u)/2  +  1;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(v  -  u)/2  +  1;	      t    =(v    -    u)/2;    	non-compiled	[CE]  while  expected	25	None	replace
80	[BUG]  [BUGGY]      t  =(v  -  u)/2;  T  =(v  -  u)/2;  [CE]  cannot  find  symbol  T  [FE]    AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =(v  -  u)/2;  T  =(v  -  u)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	        t    =(v    -    u)/2;    T  =(v  -  u)/2;	  	non-compiled	[CE]  cannot  find  symbol  T	24	None	add
81	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/3;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	        t    =(v    -    u)/2;    t  =(v  -  u)/3;	  	compilable	timeout	24	1	add
82	[BUG]  [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/3;  timeout  [FE]      AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/3;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	        t    =(v    -    u)/2;    t  =(v  -  u)/3;	  	compilable	timeout	24	1	add
83	[BUG]  [BUGGY]  if(u  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(u  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(u  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  int  k  =(u  <  <  1)?  v  :  -(v/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =(u  <  <  1)?  v  :  -(v/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(u  <  <  1)?  v  :  -(v/2)/*B3*/;	      int    k    =(v    <    <    1)?    u    :    -(v/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
85	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  v  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =(v  <  <  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  v  :  -(u/2)/*B3*/;	      int    k    =(v    <    <    1)?    u    :    -(v/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
86	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	10	None	replace
87	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/  4;  [CE]  while  expected  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/  4;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/  4;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    2;    	non-compiled	[CE]  while  expected	15	None	replace
88	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/  3;  [CE]  while  expected  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/  3;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/  3;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    2;    	non-compiled	[CE]  while  expected	15	None	replace
89	[BUG]  [BUGGY]  if(v  ==  0)  {  If(v  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  if(v  ==  0)  {  If(v  ==  0)  {  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	if(v    ==    0)    {    If(v  ==  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
90	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	12	None	replace
91	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B4*/;  [CE]  while  expected  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B4*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B4*/;	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	11	None	replace
92	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/;  [CE]  while  expected  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/;	      int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/;    	non-compiled	[CE]  while  expected	29	None	replace
93	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator;  [CE]  while  expected  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator;	      int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/;    	non-compiled	[CE]  while  expected	29	None	replace
94	[BUG]  [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =(1  <  <  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(1  <  <  1)?  0  :  -(u/2)/*B3*/;	      int    k    =(v    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
95	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/,  denominator);	      int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	28	None	replace
96	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B2*/);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B2*/);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B2*/);	      int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	28	None	replace
97	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B2*/;  [CE]  while  expected  [FE]        AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B2*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B2*/;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	13	None	replace
98	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B4*/;  [CE]  while  expected  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B4*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B4*/;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	13	None	replace
99	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1/2)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1/2)/*B3*/);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(a1/2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	30	None	replace
100	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/*B3*/,  denominator);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/*B3*/,  denominator);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/*B3*/,  denominator);	      int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	30	None	replace
101	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  1;  [CE]  while  expected  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  1;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  1;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    1;    	non-compiled	[CE]  while  expected	17	None	replace
102	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  1;  [CE]  while  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  1;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  1;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    1;    	non-compiled	[CE]  while  expected	17	None	replace
103	[BUG]  [BUGGY]  t  =(v  -  wholeNumber)/2;  [CE]  while  expected  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  t  =(v  -  wholeNumber)/2;  [BUGGY]    u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(v  -  wholeNumber)/2;	      	non-compiled	[CE]  while  expected	7	None	replace
104	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  2;  [CE]  while  expected  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/  2;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    2;    	non-compiled	[CE]  while  expected	15	None	replace
105	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  2;  [CE]  while  expected  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/  2;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    2;    	non-compiled	[CE]  while  expected	15	None	replace
106	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/  2;  [CE]  while  expected  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/  2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/  2;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/    2;    	non-compiled	[CE]  while  expected	15	None	replace
107	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(v&1)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =(v  <  <  1)?  u  :  -(v&1)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  u  :  -(v&1)/*B3*/;	      int    k    =(v    <    <    1)?    u    :    -(v/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
108	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  v  :  -(v/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =(v  <  <  1)?  v  :  -(v/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  v  :  -(v/2)/*B3*/;	      int    k    =(v    <    <    1)?    u    :    -(v/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
109	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [CE]  while  expected  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	11	None	replace
110	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/;  [CE]  while  expected  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/;	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	11	None	replace
111	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/;  [CE]  while  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/;	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	11	None	replace
112	[BUG]  [BUGGY]  t  =  ((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  t  =  ((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =  ((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);	      t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	8	None	replace
113	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	12	None	replace
114	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	12	None	replace
115	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	        t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;	  timeout    	compilable	timeout	26	1	add
116	[BUG]  [BUGGY]      t  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  timeout  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =  -(v  -  u)/2;  u  =  -(v  -  u)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	        t    =    -(v    -    u)/2;    u  =  -(v  -  u)/2;	  timeout    	compilable	timeout	26	1	add
117	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/1;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	add	        t    =(v    -    u)/2;    t  =(v  -  u)/1;	  	compilable	timeout	24	1	add
118	[BUG]  [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/1;  timeout  [FE]    AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]      t  =(v  -  u)/2;  t  =(v  -  u)/1;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	        t    =(v    -    u)/2;    t  =(v  -  u)/1;	  	compilable	timeout	24	1	add
119	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	10	None	replace
120	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/;  [CE]  while  expected  [FE]        AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	13	None	replace
121	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/*B3*/;  [CE]  while  expected  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(a1&2)/*B3*/;	      int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  while  expected	13	None	replace
122	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/);    	non-compiled	[CE]  ';'  expected	28	None	replace
123	[BUG]  [BUGGY]  t  =(v  -  u  +  1)/2;  [CE]  while  expected  [FE]    AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  t  =(v  -  u  +  1)/2;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	t  =(v  -  u  +  1)/2;	      t    =(v    -    u)/2;    	non-compiled	[CE]  while  expected	25	None	replace
124	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/;  [CE]  while  expected  [FE]              AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/;	      int    k    =((    u&1)    ==    1)?    -1    :    -(v/2)/*B3*/;    	non-compiled	[CE]  while  expected	29	None	replace
125	[BUG]  [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(a1&2)/*B3*/);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  a&1)  ==  1)?  -1  :  -(a1&2)/*B3*/);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  a&1)  ==  1)?  -1  :  -(a1&2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	30	None	replace
126	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(a1&2)/*B3*/);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(a1&2)/*B3*/);  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(a1&2)/*B3*/);	      int    k    =((    u&1)    ==    1)?    -1    :    -(a1&2)/*B3*/);    	non-compiled	[CE]  ';'  expected	30	None	replace
127	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  1  :  -(u/2)/*B3*/;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }      [BUGGY]  int  k  =(v  <  <  1)?  1  :  -(u/2)/*B3*/;  [BUGGY]    if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;    }  while  (t!=0);  return  -u*(1<<k);  //  gcd  is  u*2^k  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang49/src/java/org/apache/commons/lang/math/Fraction.java	0.3333333333333333	600	600	1	replace	int  k  =(v  <  <  1)?  1  :  -(u/2)/*B3*/;	      int    k    =(v    <    <    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
